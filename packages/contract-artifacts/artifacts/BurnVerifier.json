{
  "contractName": "BurnVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2]"
        },
        {
          "name": "bTransfer",
          "type": "uint256"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyBurn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2]\"},{\"name\":\"bTransfer\",\"type\":\"uint256\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":\"BurnVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":{\"keccak256\":\"0x0bb62f7966acd8b633e82323b0d33f0029921b3e3bfd2d94fbcef0cddee84d7e\",\"urls\":[\"bzzr://972d7741e2ab8fff1724dac77fd5a0c5cb9a3146e272bbfda35cc7997e3b707b\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x3b410db08d55d9540e8e795474410304be456ca3a36beb8c209019344593b267\",\"urls\":[\"bzzr://f5eaba23ec02eb7c30ce30f795aa0d7b1ae29d61d8111e2955a0f505bd1b328a\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000616040805190810160405280600181526020017f4700000000000000000000000000000000000000000000000000000000000000815250620001fd640100000000026401000000009004565b60806000820151816000015560208201518160010155905050620000c96040805190810160405280600181526020017f5600000000000000000000000000000000000000000000000000000000000000815250620001fd640100000000026401000000009004565b6082600082015181600001556020820151816001015590505060008090505b6020811015620001f657620001426040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508262000280640100000000026401000000009004565b6000826020811015156200015257fe5b600202016000820151816000015560208201518160010155905050620001bd6040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508262000280640100000000026401000000009004565b604082602081101515620001cd57fe5b6002020160008201518160000155602082015181600101559050508080600101915050620000e8565b506200055f565b620002076200044e565b620002797f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47836040516020016200023f9190620004ba565b60405160208183030381529060405280519060200120600190048115156200026357fe5b0662000306640100000000026401000000009004565b9050919050565b6200028a6200044e565b620002fe7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001620002c4929190620004d3565b6040516020818303038152906040528051906020012060019004811515620002e857fe5b0662000306640100000000026401000000009004565b905092915050565b620003106200044e565b60005b600115620003c357600060036200033b856003620003e0640100000000026401000000009004565b0190506200038981600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156200037357fe5b04620003e0640100000000026401000000009004565b915080620003a8836002620003e0640100000000026401000000009004565b1415620003b65750620003c3565b6001840193505062000313565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156200044257600080fd5b80519250505092915050565b604080519081016040528060008152602001600081525090565b60006200047582620004ff565b6200048181856200050a565b9350620004938185602086016200051f565b80840191505092915050565b620004b4620004ae8262000515565b62000555565b82525050565b6000620004c8828462000468565b915081905092915050565b6000620004e1828562000468565b9150620004ef82846200049f565b6020820191508190509392505050565b600081519050919050565b600081905092915050565b6000819050919050565b60005b838110156200053f57808201518184015260208101905062000522565b838111156200054f576000848401525b50505050565b6000819050919050565b6126a1806200056f6000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c0100000000000000000000000000000000000000000000000000000000900480636e1a999e1461004d575b600080fd5b61006760048036036100629190810190611fc0565b61007d565b60405161007491906122ce565b60405180910390f35b6000610087611a72565b60408051908101604052808b60006002811015156100a157fe5b60200201516001900481526020018b60016002811015156100be57fe5b602002015160019004815250816000018190525060408051908101604052808a60006002811015156100ec57fe5b60200201516001900481526020018a600160028110151561010957fe5b6020020151600190048152508160200181905250604080519081016040528089600060028110151561013757fe5b602002015160019004815260200189600160028110151561015457fe5b60200201516001900481525081604001819052508681606001818152505085816080018181525050604080519081016040528086600060028110151561019657fe5b60200201516001900481526020018660016002811015156101b357fe5b6020020151600190048152508160c00181905250838160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610207611adf565b6102108461022c565b905061021c8282610512565b9250505098975050505050505050565b610234611adf565b604080519081016040528061024a84600061131d565b815260200161025a84602061131d565b8152508160000181905250604080519081016040528061027b84604061131d565b815260200161028b84606061131d565b815250816020018190525060408051908101604052806102ac84608061131d565b81526020016102bc8460a061131d565b815250816040018190525060408051908101604052806102dd8460c061131d565b81526020016102ed8460e061131d565b81525081606001819052506040805190810160405280604080519081016040528061031a8661010061131d565b815260200161032b8661012061131d565b8152508152602001604080519081016040528061034a8661014061131d565b815260200161035b8661016061131d565b81525081525081608001819052506103758261018061131d565b8160a001818152505061038a826101a061131d565b8160c001818152505061039f826101c061131d565b8160e00181815250506103b4826101e061131d565b816101000181815250506103ca8261020061131d565b816101200181815250506103e08261022061131d565b816101400181815250506103f68261024061131d565b81610160018181525050610408611b6c565b60008090505b60058110156104c857604080519081016040528061043386604085026102600161131d565b815260200161044986604085026102800161131d565b81525082600001518260058110151561045e57fe5b6020020181905250604080519081016040528061048586604085600501026102600161131d565b815260200161049e86604085600501026102800161131d565b8152508260200151826005811015156104b357fe5b6020020181905250808060010191505061040e565b506104db8360806005026102600161131d565b8160400181815250506104f68360806005026102800161131d565b8160600181815250508082610180018190525081915050919050565b60008061056a846000015185602001518660400151876060015188608001518960a0015160405160200161054b96959493929190612329565b6040516020818303038152906040528051906020012060019004611336565b9050610574611ba2565b6105bf8285600001518660200151876040015188606001516040516020016105a0959493929190612407565b6040516020818303038152906040528051906020012060019004611336565b8160000181815250506105d5816000015161136b565b816020018190525061061481600001516040516020016105f5919061238c565b6040516020818303038152906040528051906020012060019004611336565b8160400181815250506020604051908101604052806106416002846040015161140890919063ffffffff16565b815250816060018190525061067a81604001518260600151600060018110151561066757fe5b602002015161147590919063ffffffff16565b8160800181815250506107116106b782608001516106a9602060020a856080015161147590919063ffffffff16565b6114ac90919063ffffffff16565b6107036106e8846060015160006001811015156106d057fe5b602002015185604001516114ac90919063ffffffff16565b6106f585602001516114ec565b61147590919063ffffffff16565b6114ac90919063ffffffff16565b816101000181815250506107378161010001518560a001516114ac90919063ffffffff16565b8160e001818152505060008090505b60208110156107a45761077c8160020a8360600151600060018110151561076957fe5b602002015161147590919063ffffffff16565b8260a001518260208110151561078e57fe5b6020020181815250508080600101915050610746565b506107e2816040015185608001516040516020016107c39291906123a7565b6040516020818303038152906040528051906020012060019004611336565b8160c00181815250506108536108138560800151600060028110151561080457fe5b60200201518360c00151611537565b61084e8660800151600160028110151561082957fe5b60200201516108498560c001518660c0015161147590919063ffffffff16565b611537565b611572565b816101200181905250610864611c0e565b6108b6610896608060408051908101604052908160008201548152602001600182015481525050876101200151611537565b6108b188604001516108ac8961010001516115b8565b611537565b611572565b81602001819052506109016040805190810160405280600681526020017f5a6574686572000000000000000000000000000000000000000000000000000081525087608001516115e4565b816040018190525061093f61091f8260400151876101200151611537565b61093a8860c001516109358961010001516115b8565b611537565b611572565b81606001819052506109b761099a61096d61096289602001518960600151611572565b886101200151611537565b6109956109828a600001518a60400151611572565b6109908a61010001516115b8565b611537565b611572565b836060015160006001811015156109ad57fe5b6020020151611537565b8160800181905250610a54610a4a610a3f610a2c6109f96080604080519081016040529081600082015481526020016001820154815250508760e00151611537565b610a276082604080519081016040529081600082015481526020016001820154815250508b60c00151611537565b611572565b610a3a866101200151611654565b611572565b876101000151611537565b8260800151611572565b8160a00181905250610ac9610a8e608060408051908101604052908160008201548152602001600182015481525050876101400151611537565b610ac4610aa48960200151896101200151611537565b610abf8a60000151610aba8b61010001516115b8565b611537565b611572565b611572565b8160c00181905250610b3e610b03608260408051908101604052908160008201548152602001600182015481525050876101600151611537565b610b39610b198860600151896101200151611537565b610b348960400151610b2f8b61010001516115b8565b611537565b611572565b611572565b8160e00181905250610b9b8260c00151826020015183606001518460a001518560c001518660e00151604051602001610b7c9695949392919061245b565b6040516020818303038152906040528051906020012060019004611336565b8160000181815250508461010001518160000151141515610bf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be8906122e9565b60405180910390fd5b610bf9611c7e565b610c308260000151604051602001610c11919061238c565b6040516020818303038152906040528051906020012060019004611336565b816080018181525050610c676080604080519081016040529081600082015481526020016001820154815250508260800151611537565b8160000181905250610cd56040602080602002604051908101604052809291906000905b82821015610cc7578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610c8b565b5050505084602001516116cd565b8160200181905250610cfc610cf284602001518560400151611744565b8460a001516117ab565b8160400181905250610dbb610da4610d298860000151610d248a602001518860c00151611537565b611572565b610d9f610d8d6000602080602002604051908101604052809291906000905b82821015610d84578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610d48565b50505050611824565b610d9a88604001516115b8565b611537565b611572565b610db68360200151846040015161186c565b611572565b8160600181905250610e068160600151610e01608260408051908101604052908160008201548152602001600182015481525050610dfc8a60e001516115b8565b611537565b611572565b8160600181905250610e2d8160600151610e2883600001518960a00151611537565b611572565b8160600181905250610e3d611b6c565b866101800151905060008090505b6005811015610f8a57610ebb8360800151836000015183600581101515610e6e57fe5b6020020151846020015184600581101515610e8557fe5b6020020151604051602001610e9c939291906123d0565b6040516020818303038152906040528051906020012060019004611336565b83608001818152505082608001518360a0015182600581101515610edb57fe5b6020020181815250506000610ef384608001516118d0565b9050610f748460600151610f6f610f37866000015186600581101515610f1557fe5b6020020151610f3260028a6080015161140890919063ffffffff16565b611537565b610f6a876020015187600581101515610f4c57fe5b6020020151610f6560028861140890919063ffffffff16565b611537565b611572565b611572565b8460600181905250508080600101915050610e4b565b5060018260c001516000602081101515610fa057fe5b60200201818152505060008090505b600581101561102157610ff88360a0015182600581101515610fcd57fe5b60200201518460c001516000602081101515610fe557fe5b602002015161147590919063ffffffff16565b8360c00151600060208110151561100b57fe5b6020020181815250508080600101915050610faf565b5061102a611ce1565b61104a8360c00151600060208110151561104057fe5b60200201516118d0565b8360c00151600060208110151561105d57fe5b60200201818152505060008090505b6002602081151561107957fe5b0481101561118c5760008090505b6020828260019060020a020110156111805760008160019060020a028301905083816020811015156110b557fe5b6020020151151561117457600061110d8760a00151846001600503036005811015156110dd57fe5b60200201518860a00151856001600503036005811015156110fa57fe5b602002015161147590919063ffffffff16565b9050611138818860c001518660208110151561112557fe5b602002015161147590919063ffffffff16565b8760c001518360208110151561114a57fe5b6020020181815250506001858360208110151561116357fe5b602002019015159081151581525050505b50806001019050611087565b5080600101905061106c565b50611195611d05565b61119d611d05565b60008090505b602081101561125c57611206836112016000846020811015156111c257fe5b60020201604080519081016040529081600082015481526020016001820154815250508960c00151856020811015156111f757fe5b6020020151611537565b611572565b925061124d8261124888602001518460208110151561122157fe5b60200201518960c001518560016020030360208110151561123e57fe5b6020020151611537565b611572565b915080806001019150506111a3565b50611265611d05565b6112b961128c611279858860400151611537565b611287858960600151611537565b611572565b6112b488600001516112af89606001518a6040015161147590919063ffffffff16565b611537565b611572565b90506112c9866060015182611906565b151561130a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130190612309565b60405180910390fd5b6001995050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018281151561136357fe5b069050919050565b611373611d1f565b600181600060208110151561138457fe5b6020020181815250508181600160208110151561139d57fe5b6020020181815250506000600290505b6020811015611402576113de8383600184036020811015156113cb57fe5b602002015161147590919063ffffffff16565b82826020811015156113ec57fe5b60200201818152505080806001019150506113ad565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561146957600080fd5b80519250505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156114a157fe5b828409905092915050565b6000818310156114e05782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103016114e4565b8183035b905092915050565b600080600090505b602081101561153157611522838260208110151561150e57fe5b60200201518361192e90919063ffffffff16565b915080806001019150506114f4565b50919050565b61153f611d05565b604051835181526020840151602082015282604082015260408260608360075afa151561156b57600080fd5b5092915050565b61157a611d05565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa15156115b157600080fd5b5092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6115ec611d05565b61164c7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016116239291906122a6565b604051602081830303815290604052805190602001206001900481151561164657fe5b06611965565b905092915050565b61165c611d05565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156116a057fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6116d5611d43565b60008090505b602081101561173d5761171a84826020811015156116f557fe5b6020020151611715858460208110151561170b57fe5b60200201516118d0565b611537565b828260208110151561172857fe5b602002018190525080806001019150506116db565b5092915050565b61174c611d1f565b60008090505b60208110156117a45761178083858360208110151561176d57fe5b602002015161147590919063ffffffff16565b828260208110151561178e57fe5b6020020181815250508080600101915050611752565b5092915050565b6117b3611d1f565b60008090505b602081101561181d576117f983826020811015156117d357fe5b602002015185836020811015156117e657fe5b602002015161192e90919063ffffffff16565b828260208110151561180757fe5b60200201818152505080806001019150506117b9565b5092915050565b61182c611d05565b60008090505b60208110156118665761185782848360208110151561184d57fe5b6020020151611572565b91508080600101915050611832565b50919050565b611874611d05565b60008090505b60208110156118c9576118ba826118b5868460208110151561189857fe5b602002015186856020811015156118ab57fe5b6020020151611537565b611572565b9150808060010191505061187a565b5092915050565b60006118ff8260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103611408565b9050919050565b600081600001518360000151148015611926575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561195a57fe5b828408905092915050565b61196d611d05565b60005b6001156119e85760006003611986856003611a05565b0190506119c281600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156119bc57fe5b04611a05565b9150806119d0836002611a05565b14156119dc57506119e8565b60018401935050611970565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515611a6657600080fd5b80519250505092915050565b61016060405190810160405280611a87611d72565b8152602001611a94611d72565b8152602001611aa1611d72565b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001611ad9611d72565b81525090565b61052060405190810160405280611af4611d72565b8152602001611b01611d72565b8152602001611b0e611d72565b8152602001611b1b611d72565b8152602001611b28611d8c565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611b66611dba565b81525090565b6102c060405190810160405280611b81611df0565b8152602001611b8e611df0565b815260200160008152602001600081525090565b6109206040519081016040528060008152602001611bbe611e1f565b815260200160008152602001611bd2611e43565b815260200160008152602001611be6611e1f565b8152602001600081526020016000815260200160008152602001611c08611d72565b81525090565b6101e06040519081016040528060008152602001611c2a611d72565b8152602001611c37611d72565b8152602001611c44611d72565b8152602001611c51611d72565b8152602001611c5e611d72565b8152602001611c6b611d72565b8152602001611c78611d72565b81525090565b61114060405190810160405280611c93611d72565b8152602001611ca0611e66565b8152602001611cad611e1f565b8152602001611cba611d72565b815260200160008152602001611cce611e95565b8152602001611cdb611e1f565b81525090565b61040060405190810160405280602090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b61040060405190810160405280602090602082028038833980820191505090505090565b610800604051908101604052806020905b611d5c611d72565b815260200190600190039081611d545790505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b611da4611d72565b815260200190600190039081611d9c5790505090565b6102c060405190810160405280611dcf611df0565b8152602001611ddc611df0565b815260200160008152602001600081525090565b610140604051908101604052806005905b611e09611d72565b815260200190600190039081611e015790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b602060405190810160405280600190602082028038833980820191505090505090565b610800604051908101604052806020905b611e7f611d72565b815260200190600190039081611e775790505090565b60a060405190810160405280600590602082028038833980820191505090505090565b6000611ec482356125d5565b905092915050565b600082601f8301121515611edf57600080fd5b6002611ef2611eed826124eb565b6124be565b91508183856020840282011115611f0857600080fd5b60005b83811015611f385781611f1e8882611f42565b845260208401935060208301925050600181019050611f0b565b5050505092915050565b6000611f4e82356125e7565b905092915050565b600082601f8301121515611f6957600080fd5b8135611f7c611f778261250d565b6124be565b91508082526020830160208301858383011115611f9857600080fd5b611fa383828461261b565b50505092915050565b6000611fb88235612611565b905092915050565b600080600080600080600080610180898b031215611fdd57600080fd5b6000611feb8b828c01611ecc565b9850506040611ffc8b828c01611ecc565b975050608061200d8b828c01611ecc565b96505060c061201e8b828c01611fac565b95505060e061202f8b828c01611fac565b9450506101006120418b828c01611ecc565b9350506101406120538b828c01611eb8565b92505061016089013567ffffffffffffffff81111561207157600080fd5b61207d8b828c01611f56565b9150509295985092959890939650565b60006120998383612213565b60408301905092915050565b6120ae8161258d565b82525050565b6120bd81612543565b6120c78184612566565b92506120d282612539565b60005b82811015612100576120e885835161208d565b94506120f382612559565b91506001810190506120d5565b5050505050565b6121108161259f565b82525050565b60006121218261254e565b61212b8185612582565b935061213b81856020860161262a565b80840191505092915050565b6000612154602a83612571565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b60006121ba602583612571565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516122296000850182612271565b50602082015161223c6020850182612271565b50505050565b6040820160008201516122586000850182612271565b50602082015161226b6020850182612271565b50505050565b61227a816125cb565b82525050565b612289816125cb565b82525050565b6122a061229b826125cb565b61265d565b82525050565b60006122b28285612116565b91506122be828461228f565b6020820191508190509392505050565b60006020820190506122e36000830184612107565b92915050565b6000602082019050818103600083015261230281612147565b9050919050565b60006020820190508181036000830152612322816121ad565b9050919050565b60006101208201905061233f6000830189612242565b61234c6040830188612242565b6123596080830187612242565b61236660c0830186612280565b61237360e0830185612280565b6123816101008301846120a5565b979650505050505050565b60006020820190506123a16000830184612280565b92915050565b600060a0820190506123bc6000830185612280565b6123c960208301846120b4565b9392505050565b600060a0820190506123e56000830186612280565b6123f26020830185612242565b6123ff6060830184612242565b949350505050565b60006101208201905061241d6000830188612280565b61242a6020830187612242565b6124376060830186612242565b61244460a0830185612242565b61245160e0830184612242565b9695505050505050565b6000610160820190506124716000830189612280565b61247e6020830188612242565b61248b6060830187612242565b61249860a0830186612242565b6124a560e0830185612242565b6124b3610120830184612242565b979650505050505050565b6000604051905081810181811067ffffffffffffffff821117156124e157600080fd5b8060405250919050565b600067ffffffffffffffff82111561250257600080fd5b602082029050919050565b600067ffffffffffffffff82111561252457600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612598826125ab565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125e0826125f1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561264857808201518184015260208101905061262d565b83811115612657576000848401525b50505050565b600081905091905056fea265627a7a723058207be08f1fb75092e2bf18ebdffa118e8d1d3264492c2103bfd7834e929d492c236c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610048576000357c0100000000000000000000000000000000000000000000000000000000900480636e1a999e1461004d575b600080fd5b61006760048036036100629190810190611fc0565b61007d565b60405161007491906122ce565b60405180910390f35b6000610087611a72565b60408051908101604052808b60006002811015156100a157fe5b60200201516001900481526020018b60016002811015156100be57fe5b602002015160019004815250816000018190525060408051908101604052808a60006002811015156100ec57fe5b60200201516001900481526020018a600160028110151561010957fe5b6020020151600190048152508160200181905250604080519081016040528089600060028110151561013757fe5b602002015160019004815260200189600160028110151561015457fe5b60200201516001900481525081604001819052508681606001818152505085816080018181525050604080519081016040528086600060028110151561019657fe5b60200201516001900481526020018660016002811015156101b357fe5b6020020151600190048152508160c00181905250838160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610207611adf565b6102108461022c565b905061021c8282610512565b9250505098975050505050505050565b610234611adf565b604080519081016040528061024a84600061131d565b815260200161025a84602061131d565b8152508160000181905250604080519081016040528061027b84604061131d565b815260200161028b84606061131d565b815250816020018190525060408051908101604052806102ac84608061131d565b81526020016102bc8460a061131d565b815250816040018190525060408051908101604052806102dd8460c061131d565b81526020016102ed8460e061131d565b81525081606001819052506040805190810160405280604080519081016040528061031a8661010061131d565b815260200161032b8661012061131d565b8152508152602001604080519081016040528061034a8661014061131d565b815260200161035b8661016061131d565b81525081525081608001819052506103758261018061131d565b8160a001818152505061038a826101a061131d565b8160c001818152505061039f826101c061131d565b8160e00181815250506103b4826101e061131d565b816101000181815250506103ca8261020061131d565b816101200181815250506103e08261022061131d565b816101400181815250506103f68261024061131d565b81610160018181525050610408611b6c565b60008090505b60058110156104c857604080519081016040528061043386604085026102600161131d565b815260200161044986604085026102800161131d565b81525082600001518260058110151561045e57fe5b6020020181905250604080519081016040528061048586604085600501026102600161131d565b815260200161049e86604085600501026102800161131d565b8152508260200151826005811015156104b357fe5b6020020181905250808060010191505061040e565b506104db8360806005026102600161131d565b8160400181815250506104f68360806005026102800161131d565b8160600181815250508082610180018190525081915050919050565b60008061056a846000015185602001518660400151876060015188608001518960a0015160405160200161054b96959493929190612329565b6040516020818303038152906040528051906020012060019004611336565b9050610574611ba2565b6105bf8285600001518660200151876040015188606001516040516020016105a0959493929190612407565b6040516020818303038152906040528051906020012060019004611336565b8160000181815250506105d5816000015161136b565b816020018190525061061481600001516040516020016105f5919061238c565b6040516020818303038152906040528051906020012060019004611336565b8160400181815250506020604051908101604052806106416002846040015161140890919063ffffffff16565b815250816060018190525061067a81604001518260600151600060018110151561066757fe5b602002015161147590919063ffffffff16565b8160800181815250506107116106b782608001516106a9602060020a856080015161147590919063ffffffff16565b6114ac90919063ffffffff16565b6107036106e8846060015160006001811015156106d057fe5b602002015185604001516114ac90919063ffffffff16565b6106f585602001516114ec565b61147590919063ffffffff16565b6114ac90919063ffffffff16565b816101000181815250506107378161010001518560a001516114ac90919063ffffffff16565b8160e001818152505060008090505b60208110156107a45761077c8160020a8360600151600060018110151561076957fe5b602002015161147590919063ffffffff16565b8260a001518260208110151561078e57fe5b6020020181815250508080600101915050610746565b506107e2816040015185608001516040516020016107c39291906123a7565b6040516020818303038152906040528051906020012060019004611336565b8160c00181815250506108536108138560800151600060028110151561080457fe5b60200201518360c00151611537565b61084e8660800151600160028110151561082957fe5b60200201516108498560c001518660c0015161147590919063ffffffff16565b611537565b611572565b816101200181905250610864611c0e565b6108b6610896608060408051908101604052908160008201548152602001600182015481525050876101200151611537565b6108b188604001516108ac8961010001516115b8565b611537565b611572565b81602001819052506109016040805190810160405280600681526020017f5a6574686572000000000000000000000000000000000000000000000000000081525087608001516115e4565b816040018190525061093f61091f8260400151876101200151611537565b61093a8860c001516109358961010001516115b8565b611537565b611572565b81606001819052506109b761099a61096d61096289602001518960600151611572565b886101200151611537565b6109956109828a600001518a60400151611572565b6109908a61010001516115b8565b611537565b611572565b836060015160006001811015156109ad57fe5b6020020151611537565b8160800181905250610a54610a4a610a3f610a2c6109f96080604080519081016040529081600082015481526020016001820154815250508760e00151611537565b610a276082604080519081016040529081600082015481526020016001820154815250508b60c00151611537565b611572565b610a3a866101200151611654565b611572565b876101000151611537565b8260800151611572565b8160a00181905250610ac9610a8e608060408051908101604052908160008201548152602001600182015481525050876101400151611537565b610ac4610aa48960200151896101200151611537565b610abf8a60000151610aba8b61010001516115b8565b611537565b611572565b611572565b8160c00181905250610b3e610b03608260408051908101604052908160008201548152602001600182015481525050876101600151611537565b610b39610b198860600151896101200151611537565b610b348960400151610b2f8b61010001516115b8565b611537565b611572565b611572565b8160e00181905250610b9b8260c00151826020015183606001518460a001518560c001518660e00151604051602001610b7c9695949392919061245b565b6040516020818303038152906040528051906020012060019004611336565b8160000181815250508461010001518160000151141515610bf1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be8906122e9565b60405180910390fd5b610bf9611c7e565b610c308260000151604051602001610c11919061238c565b6040516020818303038152906040528051906020012060019004611336565b816080018181525050610c676080604080519081016040529081600082015481526020016001820154815250508260800151611537565b8160000181905250610cd56040602080602002604051908101604052809291906000905b82821015610cc7578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610c8b565b5050505084602001516116cd565b8160200181905250610cfc610cf284602001518560400151611744565b8460a001516117ab565b8160400181905250610dbb610da4610d298860000151610d248a602001518860c00151611537565b611572565b610d9f610d8d6000602080602002604051908101604052809291906000905b82821015610d84578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610d48565b50505050611824565b610d9a88604001516115b8565b611537565b611572565b610db68360200151846040015161186c565b611572565b8160600181905250610e068160600151610e01608260408051908101604052908160008201548152602001600182015481525050610dfc8a60e001516115b8565b611537565b611572565b8160600181905250610e2d8160600151610e2883600001518960a00151611537565b611572565b8160600181905250610e3d611b6c565b866101800151905060008090505b6005811015610f8a57610ebb8360800151836000015183600581101515610e6e57fe5b6020020151846020015184600581101515610e8557fe5b6020020151604051602001610e9c939291906123d0565b6040516020818303038152906040528051906020012060019004611336565b83608001818152505082608001518360a0015182600581101515610edb57fe5b6020020181815250506000610ef384608001516118d0565b9050610f748460600151610f6f610f37866000015186600581101515610f1557fe5b6020020151610f3260028a6080015161140890919063ffffffff16565b611537565b610f6a876020015187600581101515610f4c57fe5b6020020151610f6560028861140890919063ffffffff16565b611537565b611572565b611572565b8460600181905250508080600101915050610e4b565b5060018260c001516000602081101515610fa057fe5b60200201818152505060008090505b600581101561102157610ff88360a0015182600581101515610fcd57fe5b60200201518460c001516000602081101515610fe557fe5b602002015161147590919063ffffffff16565b8360c00151600060208110151561100b57fe5b6020020181815250508080600101915050610faf565b5061102a611ce1565b61104a8360c00151600060208110151561104057fe5b60200201516118d0565b8360c00151600060208110151561105d57fe5b60200201818152505060008090505b6002602081151561107957fe5b0481101561118c5760008090505b6020828260019060020a020110156111805760008160019060020a028301905083816020811015156110b557fe5b6020020151151561117457600061110d8760a00151846001600503036005811015156110dd57fe5b60200201518860a00151856001600503036005811015156110fa57fe5b602002015161147590919063ffffffff16565b9050611138818860c001518660208110151561112557fe5b602002015161147590919063ffffffff16565b8760c001518360208110151561114a57fe5b6020020181815250506001858360208110151561116357fe5b602002019015159081151581525050505b50806001019050611087565b5080600101905061106c565b50611195611d05565b61119d611d05565b60008090505b602081101561125c57611206836112016000846020811015156111c257fe5b60020201604080519081016040529081600082015481526020016001820154815250508960c00151856020811015156111f757fe5b6020020151611537565b611572565b925061124d8261124888602001518460208110151561122157fe5b60200201518960c001518560016020030360208110151561123e57fe5b6020020151611537565b611572565b915080806001019150506111a3565b50611265611d05565b6112b961128c611279858860400151611537565b611287858960600151611537565b611572565b6112b488600001516112af89606001518a6040015161147590919063ffffffff16565b611537565b611572565b90506112c9866060015182611906565b151561130a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130190612309565b60405180910390fd5b6001995050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018281151561136357fe5b069050919050565b611373611d1f565b600181600060208110151561138457fe5b6020020181815250508181600160208110151561139d57fe5b6020020181815250506000600290505b6020811015611402576113de8383600184036020811015156113cb57fe5b602002015161147590919063ffffffff16565b82826020811015156113ec57fe5b60200201818152505080806001019150506113ad565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561146957600080fd5b80519250505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156114a157fe5b828409905092915050565b6000818310156114e05782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103016114e4565b8183035b905092915050565b600080600090505b602081101561153157611522838260208110151561150e57fe5b60200201518361192e90919063ffffffff16565b915080806001019150506114f4565b50919050565b61153f611d05565b604051835181526020840151602082015282604082015260408260608360075afa151561156b57600080fd5b5092915050565b61157a611d05565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa15156115b157600080fd5b5092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6115ec611d05565b61164c7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016116239291906122a6565b604051602081830303815290604052805190602001206001900481151561164657fe5b06611965565b905092915050565b61165c611d05565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156116a057fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6116d5611d43565b60008090505b602081101561173d5761171a84826020811015156116f557fe5b6020020151611715858460208110151561170b57fe5b60200201516118d0565b611537565b828260208110151561172857fe5b602002018190525080806001019150506116db565b5092915050565b61174c611d1f565b60008090505b60208110156117a45761178083858360208110151561176d57fe5b602002015161147590919063ffffffff16565b828260208110151561178e57fe5b6020020181815250508080600101915050611752565b5092915050565b6117b3611d1f565b60008090505b602081101561181d576117f983826020811015156117d357fe5b602002015185836020811015156117e657fe5b602002015161192e90919063ffffffff16565b828260208110151561180757fe5b60200201818152505080806001019150506117b9565b5092915050565b61182c611d05565b60008090505b60208110156118665761185782848360208110151561184d57fe5b6020020151611572565b91508080600101915050611832565b50919050565b611874611d05565b60008090505b60208110156118c9576118ba826118b5868460208110151561189857fe5b602002015186856020811015156118ab57fe5b6020020151611537565b611572565b9150808060010191505061187a565b5092915050565b60006118ff8260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103611408565b9050919050565b600081600001518360000151148015611926575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561195a57fe5b828408905092915050565b61196d611d05565b60005b6001156119e85760006003611986856003611a05565b0190506119c281600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156119bc57fe5b04611a05565b9150806119d0836002611a05565b14156119dc57506119e8565b60018401935050611970565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515611a6657600080fd5b80519250505092915050565b61016060405190810160405280611a87611d72565b8152602001611a94611d72565b8152602001611aa1611d72565b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001611ad9611d72565b81525090565b61052060405190810160405280611af4611d72565b8152602001611b01611d72565b8152602001611b0e611d72565b8152602001611b1b611d72565b8152602001611b28611d8c565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611b66611dba565b81525090565b6102c060405190810160405280611b81611df0565b8152602001611b8e611df0565b815260200160008152602001600081525090565b6109206040519081016040528060008152602001611bbe611e1f565b815260200160008152602001611bd2611e43565b815260200160008152602001611be6611e1f565b8152602001600081526020016000815260200160008152602001611c08611d72565b81525090565b6101e06040519081016040528060008152602001611c2a611d72565b8152602001611c37611d72565b8152602001611c44611d72565b8152602001611c51611d72565b8152602001611c5e611d72565b8152602001611c6b611d72565b8152602001611c78611d72565b81525090565b61114060405190810160405280611c93611d72565b8152602001611ca0611e66565b8152602001611cad611e1f565b8152602001611cba611d72565b815260200160008152602001611cce611e95565b8152602001611cdb611e1f565b81525090565b61040060405190810160405280602090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b61040060405190810160405280602090602082028038833980820191505090505090565b610800604051908101604052806020905b611d5c611d72565b815260200190600190039081611d545790505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b611da4611d72565b815260200190600190039081611d9c5790505090565b6102c060405190810160405280611dcf611df0565b8152602001611ddc611df0565b815260200160008152602001600081525090565b610140604051908101604052806005905b611e09611d72565b815260200190600190039081611e015790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b602060405190810160405280600190602082028038833980820191505090505090565b610800604051908101604052806020905b611e7f611d72565b815260200190600190039081611e775790505090565b60a060405190810160405280600590602082028038833980820191505090505090565b6000611ec482356125d5565b905092915050565b600082601f8301121515611edf57600080fd5b6002611ef2611eed826124eb565b6124be565b91508183856020840282011115611f0857600080fd5b60005b83811015611f385781611f1e8882611f42565b845260208401935060208301925050600181019050611f0b565b5050505092915050565b6000611f4e82356125e7565b905092915050565b600082601f8301121515611f6957600080fd5b8135611f7c611f778261250d565b6124be565b91508082526020830160208301858383011115611f9857600080fd5b611fa383828461261b565b50505092915050565b6000611fb88235612611565b905092915050565b600080600080600080600080610180898b031215611fdd57600080fd5b6000611feb8b828c01611ecc565b9850506040611ffc8b828c01611ecc565b975050608061200d8b828c01611ecc565b96505060c061201e8b828c01611fac565b95505060e061202f8b828c01611fac565b9450506101006120418b828c01611ecc565b9350506101406120538b828c01611eb8565b92505061016089013567ffffffffffffffff81111561207157600080fd5b61207d8b828c01611f56565b9150509295985092959890939650565b60006120998383612213565b60408301905092915050565b6120ae8161258d565b82525050565b6120bd81612543565b6120c78184612566565b92506120d282612539565b60005b82811015612100576120e885835161208d565b94506120f382612559565b91506001810190506120d5565b5050505050565b6121108161259f565b82525050565b60006121218261254e565b61212b8185612582565b935061213b81856020860161262a565b80840191505092915050565b6000612154602a83612571565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b60006121ba602583612571565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516122296000850182612271565b50602082015161223c6020850182612271565b50505050565b6040820160008201516122586000850182612271565b50602082015161226b6020850182612271565b50505050565b61227a816125cb565b82525050565b612289816125cb565b82525050565b6122a061229b826125cb565b61265d565b82525050565b60006122b28285612116565b91506122be828461228f565b6020820191508190509392505050565b60006020820190506122e36000830184612107565b92915050565b6000602082019050818103600083015261230281612147565b9050919050565b60006020820190508181036000830152612322816121ad565b9050919050565b60006101208201905061233f6000830189612242565b61234c6040830188612242565b6123596080830187612242565b61236660c0830186612280565b61237360e0830185612280565b6123816101008301846120a5565b979650505050505050565b60006020820190506123a16000830184612280565b92915050565b600060a0820190506123bc6000830185612280565b6123c960208301846120b4565b9392505050565b600060a0820190506123e56000830186612280565b6123f26020830185612242565b6123ff6060830184612242565b949350505050565b60006101208201905061241d6000830188612280565b61242a6020830187612242565b6124376060830186612242565b61244460a0830185612242565b61245160e0830184612242565b9695505050505050565b6000610160820190506124716000830189612280565b61247e6020830188612242565b61248b6060830187612242565b61249860a0830186612242565b6124a560e0830185612242565b6124b3610120830184612242565b979650505050505050565b6000604051905081810181811067ffffffffffffffff821117156124e157600080fd5b8060405250919050565b600067ffffffffffffffff82111561250257600080fd5b602082029050919050565b600067ffffffffffffffff82111561252457600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000612598826125ab565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125e0826125f1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561264857808201518184015260208101905061262d565b83811115612657576000848401525b50505050565b600081905091905056fea265627a7a723058207be08f1fb75092e2bf18ebdffa118e8d1d3264492c2103bfd7834e929d492c236c6578706572696d656e74616cf50037",
  "sourceMap": "81:14294:0:-;;;1049:206;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:206:0;1084:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1080:1;:16;;;;;;;;;;;;;;;;;;;1110:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1106:1;:16;;;;;;;;;;;;;;;;;;;1137:9;1149:1;1137:13;;1132:117;160:2;1152:1;:5;1132:117;;;1186:15;;;;;;;;;;;;;;;;;;;1199:1;1186:7;;;:15;;;:::i;:::-;1178:2;1181:1;1178:5;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;1223:15;;;;;;;;;;;;;;;;;;;1236:1;1223:7;;;:15;;;:::i;:::-;1215:2;1218:1;1215:5;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;1159:3;;;;;;;1132:117;;;;81:14294;;14019:167;14080:14;;:::i;:::-;14113:66;227:77;14156:5;14139:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14139:23:0;;;14129:34;;;;;;14121:43;;;:57;;;;;;;;14113:7;;;:66;;;:::i;:::-;14106:73;;14019:167;;;:::o;14192:181::-;14264:14;;:::i;:::-;14297:69;227:77;14340:5;14347:1;14323:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14323:26:0;;;14313:37;;;;;;14305:46;;;:60;;;;;;;;14297:7;;;:69;;;:::i;:::-;14290:76;;14192:181;;;;:::o;13564:449::-;13618:14;;:::i;:::-;13644:9;13663:311;13670:4;13663:311;;;13690:16;13729:1;13709:17;13718:4;13724:1;13709:8;;;:17;;;:::i;:::-;:21;13690:40;;13816:41;13825:8;13855:1;13850;227:77;13836:15;13835:21;;;;;;;;13816:8;;;:41;;;:::i;:::-;13812:45;;13893:8;13875:14;13884:1;13887;13875:8;;;:14;;;:::i;:::-;:26;13871:70;;;13921:5;;;13871:70;13962:1;13954:9;;;;13663:311;;;;13990:16;;;;;;;;;13998:4;13990:16;;;;14004:1;13990:16;;;13983:23;;;13564:449;;;:::o;12948:610::-;13021:14;13072:13;227:77;13072:27;;13147:4;13141:11;13175:4;13172:1;13165:15;13214:4;13207;13204:1;13200:12;13193:26;13253:4;13246;13243:1;13239:12;13232:26;13292:4;13285;13282:1;13278:12;13271:26;13331:8;13324:4;13321:1;13317:12;13310:30;13374:5;13367:4;13364:1;13360:12;13353:27;13437:4;13434:1;13428:4;13425:1;13419:4;13414:3;13403:39;13396:47;13393:2;;;13495:1;13492;13485:12;13393:2;13540:1;13534:8;13524:18;;13118:434;;;;;;:::o;81:14294::-;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:14294:0;;;;;;;",
  "deployedSourceMap": "81:14294:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:14294:0;;;;;;;;;;;;;;;;;;;;1338:1008;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1537:4;1553:30;;:::i;:::-;1898:41;;;;;;;;;1914:3;1918:1;1914:6;;;;;;;;;;;;;1906:15;;;1898:41;;;;1931:3;1935:1;1931:6;;;;;;;;;;;;;1923:15;;;1898:41;;;1882:9;:13;;:57;;;;1965:41;;;;;;;;;1981:3;1985:1;1981:6;;;;;;;;;;;;;1973:15;;;1965:41;;;;1998:3;2002:1;1998:6;;;;;;;;;;;;;1990:15;;;1965:41;;;1949:9;:13;;:57;;;;2030:37;;;;;;;;;2046:1;2048;2046:4;;;;;;;;;;;;;2038:13;;;2030:37;;;;2061:1;2063;2061:4;;;;;;;;;;;;;2053:13;;;2030:37;;;2016:9;:11;;:51;;;;2099:9;2077;:19;;:31;;;;;2136:5;2118:9;:15;;:23;;;;;2165:37;;;;;;;;;2181:1;2183;2181:4;;;;;;;;;;;;;2173:13;;;2165:37;;;;2196:1;2198;2196:4;;;;;;;;;;;;;2188:13;;;2165:37;;;2151:9;:11;;:51;;;;2231:6;2212:9;:16;;:25;;;;;;;;;;;2247:26;;:::i;:::-;2276:18;2288:5;2276:11;:18::i;:::-;2247:47;;2311:28;2318:9;2329;2311:6;:28::i;:::-;2304:35;;;;1338:1008;;;;;;;;;;:::o;8756:1167::-;8818:22;;:::i;:::-;8863:38;;;;;;;;;8871:13;8877:3;8882:1;8871:5;:13::i;:::-;8863:38;;;;8886:14;8892:3;8897:2;8886:5;:14::i;:::-;8863:38;;;8852:5;:8;;:49;;;;8922:39;;;;;;;;;8930:14;8936:3;8941:2;8930:5;:14::i;:::-;8922:39;;;;8946:14;8952:3;8957:2;8946:5;:14::i;:::-;8922:39;;;8911:5;:8;;:50;;;;8989:41;;;;;;;;;8997:15;9003:3;9008;8997:5;:15::i;:::-;8989:41;;;;9014:15;9020:3;9025;9014:5;:15::i;:::-;8989:41;;;8972:5;:14;;:58;;;;9057:41;;;;;;;;;9065:15;9071:3;9076;9065:5;:15::i;:::-;9057:41;;;;9082:15;9088:3;9093;9082:5;:15::i;:::-;9057:41;;;9040:5;:14;;:58;;;;9109:103;;;;;;;;;9127:41;;;;;;;;;9135:15;9141:3;9146;9135:5;:15::i;:::-;9127:41;;;;9152:15;9158:3;9163;9152:5;:15::i;:::-;9127:41;;;9109:103;;;;9170:41;;;;;;;;;9178:15;9184:3;9189;9178:5;:15::i;:::-;9170:41;;;;9195:15;9201:3;9206;9195:5;:15::i;:::-;9170:41;;;9109:103;;;:5;:14;;:103;;;;9235:15;9241:3;9246;9235:5;:15::i;:::-;9222:5;:10;;:28;;;;;9273:15;9279:3;9284;9273:5;:15::i;:::-;9260:5;:10;;:28;;;;;9309:15;9315:3;9320;9309:5;:15::i;:::-;9298:5;:8;;:26;;;;;9345:15;9351:3;9356;9345:5;:15::i;:::-;9335:5;:7;;:25;;;;;9383:15;9389:3;9394;9383:5;:15::i;:::-;9370:5;:10;;:28;;;;;9424:15;9430:3;9435;9424:5;:15::i;:::-;9408:5;:13;;:31;;;;;9466:15;9472:3;9477;9466:5;:15::i;:::-;9449:5;:14;;:32;;;;;9492;;:::i;:::-;9539:9;9551:1;9539:13;;9534:233;189:1;9554;:5;9534:233;;;9596:59;;;;;;;;;9604:24;9610:3;9625:2;9621:1;:6;9615:3;:12;9604:5;:24::i;:::-;9596:59;;;;9630:24;9636:3;9651:2;9647:1;:6;9641:3;:12;9630:5;:24::i;:::-;9596:59;;;9580:7;:10;;;9591:1;9580:13;;;;;;;;;;;;:75;;;;9685:71;;;;;;;;;9693:30;9699:3;9720:2;9715:1;189;9711:5;9710:12;9704:3;:18;9693:5;:30::i;:::-;9685:71;;;;9725:30;9731:3;9752:2;9747:1;189;9743:5;9742:12;9736:3;:18;9725:5;:30::i;:::-;9685:71;;;9669:7;:10;;;9680:1;9669:13;;;;;;;;;;;;:87;;;;9561:3;;;;;;;9534:233;;;;9788:25;9794:3;9809;189:1;9805:7;9799:3;:13;9788:5;:25::i;:::-;9776:7;:9;;:37;;;;;9835:25;9841:3;9856;189:1;9852:7;9846:3;:13;9835:5;:25::i;:::-;9823:7;:9;;:37;;;;;9886:7;9870:5;:13;;:23;;;;9911:5;9904:12;;;8756:1167;;;:::o;3075:5225::-;3170:4;3186:21;3210:135;3239:9;:13;;;3254:9;:13;;;3269:9;:11;;;3282:9;:19;;;3303:9;:15;;;3320:9;:16;;;3228:109;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3228:109:0;;;3218:120;;;;;;3210:129;;;:133;:135::i;:::-;3186:159;;3373:38;;:::i;:::-;3441:103;3470:13;3485:5;:8;;;3495:5;:8;;;3505:5;:14;;;3521:5;:14;;;3459:77;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3459:77:0;;;3449:88;;;;;;3441:97;;;:101;:103::i;:::-;3421:15;:17;;:123;;;;;3575:25;3582:15;:17;;;3575:6;:25::i;:::-;3554:15;:18;;:46;;;;3630:55;3659:15;:17;;;3648:29;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3648:29:0;;;3638:40;;;;;;3630:49;;;:53;:55::i;:::-;3610:15;:17;;:75;;;;;3695:47;;;;;;;;;3717:24;3739:1;3717:15;:17;;;:21;;:24;;;;:::i;:::-;3695:47;;;:15;:18;;:47;;;;3775:44;3801:15;:17;;;3775:15;:18;;;3794:1;3775:21;;;;;;;;;;;;;:25;;:44;;;;:::i;:::-;3752:15;:20;;:67;;;;;3864:144;3949:58;3986:15;:20;;;3949:32;160:2;3974:1;:6;3949:15;:20;;;:24;;:32;;;;:::i;:::-;:36;;:58;;;;:::i;:::-;3864:80;3899:44;3921:15;:18;;;3940:1;3921:21;;;;;;;;;;;;;3899:15;:17;;;:21;;:44;;;;:::i;:::-;3864:30;3875:15;:18;;;3864:10;:30::i;:::-;:34;;:80;;;;:::i;:::-;:84;;:144;;;;:::i;:::-;3844:15;:17;;:164;;;;;4038:33;4053:15;:17;;;4038:5;:10;;;:14;;:33;;;;:::i;:::-;4018:15;:17;;:53;;;;;4086:9;4098:1;4086:13;;4081:128;160:2;4101:1;:5;4081:128;;;4165:33;4196:1;4191;:6;4165:15;:18;;;4184:1;4165:21;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;4127:15;:32;;;4160:1;4127:35;;;;;;;;;;;;:71;;;;;4108:3;;;;;;;4081:128;;;;4239:71;4268:15;:17;;;4287:5;:14;;;4257:45;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4257:45:0;;;4247:56;;;;;;4239:65;;;:69;:71::i;:::-;4219:15;:17;;:91;;;;;4344:112;4348:41;4352:5;:14;;;4367:1;4352:17;;;;;;;;;;;;;4371:15;:17;;;4348:3;:41::i;:::-;4391:64;4395:5;:14;;;4410:1;4395:17;;;;;;;;;;;;;4414:40;4436:15;:17;;;4414:15;:17;;;:21;;:40;;;;:::i;:::-;4391:3;:64::i;:::-;4344:3;:112::i;:::-;4320:15;:21;;:136;;;;4493:40;;:::i;:::-;4566:56;4570:18;4574:1;4570:18;;;;;;;;;;;;;;;;;;;;;;;;;;4577:5;:10;;;4570:3;:18::i;:::-;4590:31;4594:9;:11;;;4607:13;:5;:7;;;:11;:13::i;:::-;4590:3;:31::i;:::-;4566:3;:56::i;:::-;4543:16;:20;;:79;;;;4658:34;;;;;;;;;;;;;;;;;;;4676:9;:15;;;4658:7;:34::i;:::-;4632:16;:23;;:60;;;;4725:78;4729:40;4733:16;:23;;;4758:5;:10;;;4729:3;:40::i;:::-;4771:31;4775:9;:11;;;4788:13;:5;:7;;;:11;:13::i;:::-;4771:3;:31::i;:::-;4725:3;:78::i;:::-;4702:16;:20;;:101;;;;4841:140;4845:112;4849:51;4853:34;4857:9;:13;;;4872:5;:14;;;4853:3;:34::i;:::-;4889:5;:10;;;4849:3;:51::i;:::-;4902:54;4906:34;4910:9;:13;;;4925:5;:14;;;4906:3;:34::i;:::-;4942:13;:5;:7;;;:11;:13::i;:::-;4902:3;:54::i;:::-;4845:3;:112::i;:::-;4959:15;:18;;;4978:1;4959:21;;;;;;;;;;;;;4841:3;:140::i;:::-;4813:16;:25;;:168;;;;5014:129;5018:97;5022:83;5026:50;5030:25;5034:1;5030:25;;;;;;;;;;;;;;;;;;;;;;;;;;5037:15;:17;;;5030:3;:25::i;:::-;5057:18;5061:1;5057:18;;;;;;;;;;;;;;;;;;;;;;;;;;5064:5;:10;;;5057:3;:18::i;:::-;5026:3;:50::i;:::-;5078:26;5082:15;:21;;;5078:3;:26::i;:::-;5022:3;:83::i;:::-;5107:5;:7;;;5018:3;:97::i;:::-;5117:16;:25;;;5014:3;:129::i;:::-;4991:16;:20;;:152;;;;5178:98;5182:21;5186:1;5182:21;;;;;;;;;;;;;;;;;;;;;;;;;;5189:5;:13;;;5182:3;:21::i;:::-;5205:70;5209:30;5213:9;:13;;;5228:5;:10;;;5209:3;:30::i;:::-;5241:33;5245:9;:13;;;5260;:5;:7;;;:11;:13::i;:::-;5241:3;:33::i;:::-;5205:3;:70::i;:::-;5178:3;:98::i;:::-;5153:16;:22;;:123;;;;5316:101;5320:22;5324:1;5320:22;;;;;;;;;;;;;;;;;;;;;;;;;;5327:5;:14;;;5320:3;:22::i;:::-;5344:72;5348:31;5352:5;:14;;;5368:5;:10;;;5348:3;:31::i;:::-;5381:34;5385:5;:14;;;5401:13;:5;:7;;;:11;:13::i;:::-;5381:3;:34::i;:::-;5344:3;:72::i;:::-;5316:3;:101::i;:::-;5286:16;:27;;:131;;;;5449:174;5478:15;:17;;;5497:16;:20;;;5519:16;:20;;;5541:16;:20;;;5563:16;:22;;;5587:16;:27;;;5467:148;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5467:148:0;;;5457:159;;;;;;5449:168;;;:172;:174::i;:::-;5428:16;:18;;:195;;;;;5663:5;:7;;;5641:16;:18;;;:29;5633:84;;;;;;;;;;;;;;;;;;;;;;;;5728:34;;:::i;:::-;5790:56;5819:16;:18;;;5808:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5808:30:0;;;5798:41;;;;;;5790:50;;;:54;:56::i;:::-;5772:13;:15;;:74;;;;;5876:23;5880:1;5876:23;;;;;;;;;;;;;;;;;;;;;;;;;;5883:13;:15;;;5876:3;:23::i;:::-;5856:13;:17;;:43;;;;5933:35;5945:2;5933:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5949:15;:18;;;5933:11;:35::i;:::-;5909:13;:21;;:59;;;;5999:90;6010:44;6016:15;:18;;;6036:15;:17;;;6010:5;:44::i;:::-;6056:15;:32;;;5999:10;:90::i;:::-;5978:13;:18;;:111;;;;6117:153;6121:97;6125:47;6129:5;:8;;;6139:32;6143:5;:8;;;6153:15;:17;;;6139:3;:32::i;:::-;6125:3;:47::i;:::-;6174:43;6178:13;6188:2;6178:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;6193:23;:15;:17;;;:21;:23::i;:::-;6174:3;:43::i;:::-;6121:3;:97::i;:::-;6220:49;6227:13;:21;;;6250:13;:18;;;6220:6;:49::i;:::-;6117:3;:153::i;:::-;6099:13;:15;;:171;;;;6298:44;6302:13;:15;;;6319:22;6323:1;6319:22;;;;;;;;;;;;;;;;;;;;;;;;;;6326:14;:5;:8;;;:12;:14::i;:::-;6319:3;:22::i;:::-;6298:3;:44::i;:::-;6280:13;:15;;:62;;;;6370:56;6374:13;:15;;;6391:34;6395:13;:17;;;6414:5;:10;;;6391:3;:34::i;:::-;6370:3;:56::i;:::-;6352:13;:15;;:74;;;;6481:32;;:::i;:::-;6516:5;:13;;;6481:48;;6544:9;6556:1;6544:13;;6539:421;189:1;6559;:5;6539:421;;;6603:83;6632:13;:15;;;6649:7;:10;;;6660:1;6649:13;;;;;;;;;;;;;6664:7;:10;;;6675:1;6664:13;;;;;;;;;;;;;6621:57;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6621:57:0;;;6611:68;;;;;;6603:77;;;:81;:83::i;:::-;6585:13;:15;;:101;;;;;6730:13;:15;;;6700:13;:24;;;6725:1;6700:27;;;;;;;;;;;;:45;;;;;6779:12;6794:21;:13;:15;;;:19;:21::i;:::-;6779:36;;6847:102;6851:13;:15;;;6868:80;6872:42;6876:7;:10;;;6887:1;6876:13;;;;;;;;;;;;;6891:22;6911:1;6891:13;:15;;;:19;;:22;;;;:::i;:::-;6872:3;:42::i;:::-;6916:31;6920:7;:10;;;6931:1;6920:13;;;;;;;;;;;;;6935:11;6944:1;6935:4;:8;;:11;;;;:::i;:::-;6916:3;:31::i;:::-;6868:3;:80::i;:::-;6847:3;:102::i;:::-;6829:13;:15;;:120;;;;6539:421;6566:3;;;;;;;6539:421;;;;7004:1;6970:13;:28;;;6999:1;6970:31;;;;;;;;;;;;:35;;;;;7020:9;7032:1;7020:13;;7015:155;189:1;7035;:5;7015:155;;;7095:64;7131:13;:24;;;7156:1;7131:27;;;;;;;;;;;;;7095:13;:28;;;7124:1;7095:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;7061:13;:28;;;7090:1;7061:31;;;;;;;;;;;;:98;;;;;7042:3;;;;;;;7015:155;;;;7179:21;;:::i;:::-;7244:37;:13;:28;;;7273:1;7244:31;;;;;;;;;;;;;:35;:37::i;:::-;7210:13;:28;;;7239:1;7210:31;;;;;;;;;;;;:71;;;;;7296:9;7308:1;7296:13;;7291:462;7317:1;160:2;7315:3;;;;;;;;7311:1;:7;7291:462;;;7344:9;7356:1;7344:13;;7339:404;160:2;7370:1;7365;7360;:6;;;;7359:12;:16;7339:404;;;7400:10;7423:1;7418;:6;;;;7413:1;:12;7400:25;;7448:6;7455:2;7448:10;;;;;;;;;;;;;7447:11;7443:286;;;7482:12;7497:76;7537:13;:24;;;7570:1;7566;189;7562:5;:9;7537:35;;;;;;;;;;;;;7497:13;:24;;;7530:1;7526;189;7522:5;:9;7497:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;7482:91;;7630:41;7666:4;7630:13;:28;;;7659:1;7630:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;7595:13;:28;;;7624:2;7595:32;;;;;;;;;;;;:76;;;;;7706:4;7693:6;7700:2;7693:10;;;;;;;;;;;;:17;;;;;;;;;;;7443:286;;7339:404;7377:3;;;;;7339:404;;;;7320:3;;;;;7291:462;;;;7763:20;;:::i;:::-;7793;;:::i;:::-;7828:9;7840:1;7828:13;;7823:224;160:2;7843:1;:5;7823:224;;;7877:55;7881:5;7888:43;7892:2;7895:1;7892:5;;;;;;;;;;;;7888:43;;;;;;;;;;;;;;;;;;;;;;;;;;7899:13;:28;;;7928:1;7899:31;;;;;;;;;;;;;7888:3;:43::i;:::-;7877:3;:55::i;:::-;7869:63;;7954:82;7958:5;7965:70;7969:13;:21;;;7991:1;7969:24;;;;;;;;;;;;;7995:13;:28;;;8032:1;8028;160:2;8024:5;:9;7995:39;;;;;;;;;;;;;7965:3;:70::i;:::-;7954:3;:82::i;:::-;7946:90;;7850:3;;;;;;;7823:224;;;;8056:21;;:::i;:::-;8080:104;8084:49;8088:21;8092:5;8099:7;:9;;;8088:3;:21::i;:::-;8111;8115:5;8122:7;:9;;;8111:3;:21::i;:::-;8084:3;:49::i;:::-;8135:48;8139:13;:17;;;8158:24;8172:7;:9;;;8158:7;:9;;;:13;;:24;;;;:::i;:::-;8135:3;:48::i;:::-;8080:3;:104::i;:::-;8056:128;;8202:27;8205:13;:15;;;8222:6;8202:2;:27::i;:::-;8194:77;;;;;;;;;;;;;;;;;;;;;;;;8289:4;8282:11;;;;;;;;;;;3075:5225;;;;:::o;11407:295::-;11480:14;11573:4;11567:11;11629:5;11622:4;11615:5;11611:16;11607:28;11601:35;11598:1;11591:46;11684:1;11678:8;11668:18;;11544:152;;;;;:::o;720:95:3:-;767:7;110:77;793:1;:15;;;;;;;;786:22;;720:95;;;:::o;10967:236:0:-;11020:24;;:::i;:::-;11068:1;11056:6;11063:1;11056:9;;;;;;;;;;;;:13;;;;;11091:4;11079:6;11086:1;11079:9;;;;;;;;;;;;:16;;;;;11110:9;11122:1;11110:13;;11105:92;160:2;11125:1;:5;11105:92;;;11163:23;11181:4;11163:6;11174:1;11170;:5;11163:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;11151:6;11158:1;11151:9;;;;;;;;;;;;:35;;;;;11132:3;;;;;;;11105:92;;;;10967:236;;;:::o;1055:580:3:-;1123:14;1149:13;110:77;1149:27;;1224:4;1218:11;1252:4;1249:1;1242:15;1291:4;1284;1281:1;1277:12;1270:26;1330:4;1323;1320:1;1316:12;1309:26;1369:4;1362;1359:1;1355:12;1348:26;1408:8;1401:4;1398:1;1394:12;1387:30;1451:5;1444:4;1441:1;1437:12;1430:27;1514:4;1511:1;1505:4;1502:1;1496:4;1491:3;1480:39;1473:47;1470:2;;;1572:1;1569;1562:12;1470:2;1617:1;1611:8;1601:18;;1195:434;;;;;;:::o;489:116::-;547:7;110:77;573:25;;;;;;;583:1;580;573:25;566:32;;489:116;;;;:::o;821:127::-;879:7;910:1;905;:6;;:36;;940:1;936;110:77;922:15;:19;905:36;;;918:1;914;:5;905:36;898:43;;821:127;;;;:::o;10373:180:0:-;10438:14;10469:9;10481:1;10469:13;;10464:83;160:2;10484:1;:5;10464:83;;;10519:17;10530:2;10533:1;10530:5;;;;;;;;;;;;;10519:6;:10;;:17;;;;:::i;:::-;10510:26;;10491:3;;;;;;;10464:83;;;;10373:180;;;:::o;12236:382::-;12301:16;;:::i;:::-;12367:4;12361:11;12401:1;12395:8;12392:1;12385:19;12451:4;12448:1;12444:12;12438:19;12431:4;12428:1;12424:12;12417:41;12492:1;12485:4;12482:1;12478:12;12471:23;12551:4;12548:1;12542:4;12539:1;12533:4;12528:3;12517:39;12510:47;12507:2;;;12586:1;12583;12576:12;12507:2;12338:274;;;;;:::o;11774:456::-;11848:16;;:::i;:::-;11914:4;11908:11;11948:2;11942:9;11939:1;11932:20;12000:4;11996:2;11992:13;11986:20;11979:4;11976:1;11972:12;11965:42;12047:2;12041:9;12034:4;12031:1;12027:12;12020:31;12099:4;12095:2;12091:13;12085:20;12078:4;12075:1;12071:12;12064:42;12163:4;12160:1;12154:4;12151:1;12145:4;12140:3;12129:39;12122:47;12119:2;;;12198:1;12195;12188:12;12119:2;11885:339;;;;;:::o;954:95:3:-;1001:7;1041:1;110:77;1027:15;1020:22;;954:95;;;:::o;14192:181:0:-;14264:14;;:::i;:::-;14297:69;227:77;14340:5;14347:1;14323:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14323:26:0;;;14313:37;;;;;;14305:46;;;:60;;;;;;;;14297:7;:69::i;:::-;14290:76;;14192:181;;;;:::o;12624:::-;12678:14;;:::i;:::-;12711:47;;;;;;;;;12719:1;:3;;;12711:47;;;;227:77;12739:1;:3;;;:17;;;;;;;;227:77;12724:33;12711:47;;;12704:54;;12624:181;;;:::o;10145:222::-;10233:24;;:::i;:::-;10274:9;10286:1;10274:13;;10269:92;160:2;10289:1;:5;10269:92;;;10327:23;10331:2;10334:1;10331:5;;;;;;;;;;;;;10338:11;:2;10341:1;10338:5;;;;;;;;;;;;;:9;:11::i;:::-;10327:3;:23::i;:::-;10315:6;10322:1;10315:9;;;;;;;;;;;;:35;;;;10296:3;;;;;;;10269:92;;;;10145:222;;;;:::o;11209:192::-;11279:24;;:::i;:::-;11320:9;11332:1;11320:13;;11315:80;160:2;11335:1;:5;11315:80;;;11373:11;11382:1;11373;11375;11373:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;11361:6;11368:1;11361:9;;;;;;;;;;;;:23;;;;;11342:3;;;;;;;11315:80;;;;11209:192;;;;:::o;9929:210::-;10014:24;;:::i;:::-;10055:9;10067:1;10055:13;;10050:83;160:2;10070:1;:5;10050:83;;;10108:14;10117:1;10119;10117:4;;;;;;;;;;;;;10108:1;10110;10108:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;10096:6;10103:1;10096:9;;;;;;;;;;;;:26;;;;;10077:3;;;;;;;10050:83;;;;9929:210;;;;:::o;10559:178::-;10623:18;;:::i;:::-;10658:9;10670:1;10658:13;;10653:78;160:2;10673:1;:5;10653:78;;;10705:15;10709:3;10714:2;10717:1;10714:5;;;;;;;;;;;;;10705:3;:15::i;:::-;10699:21;;10680:3;;;;;;;10653:78;;;;10559:178;;;:::o;10743:218::-;10826:21;;:::i;:::-;10864:9;10876:1;10864:13;;10859:96;160:2;10879:1;:5;10859:96;;;10914:30;10918:6;10926:17;10930:2;10933:1;10930:5;;;;;;;;;;;;;10937:2;10940:1;10937:5;;;;;;;;;;;;;10926:3;:17::i;:::-;10914:3;:30::i;:::-;10905:39;;10886:3;;;;;;;10859:96;;;;10743:218;;;;:::o;611:103:3:-;658:7;684:23;688:1;705;110:77;691:15;684:3;:23::i;:::-;677:30;;611:103;;;:::o;12811:131:0:-;12884:4;12915:2;:4;;;12907:2;:4;;;:12;:28;;;;;12931:2;:4;;;12923:2;:4;;;:12;12907:28;12900:35;;12811:131;;;;:::o;367:116:3:-;425:7;110:77;451:25;;;;;;;461:1;458;451:25;444:32;;367:116;;;;:::o;13564:449:0:-;13618:14;;:::i;:::-;13644:9;13663:311;13670:4;13663:311;;;13690:16;13729:1;13709:17;13718:4;13724:1;13709:8;:17::i;:::-;:21;13690:40;;13816:41;13825:8;13855:1;13850;227:77;13836:15;13835:21;;;;;;;;13816:8;:41::i;:::-;13812:45;;13893:8;13875:14;13884:1;13887;13875:8;:14::i;:::-;:26;13871:70;;;13921:5;;;13871:70;13962:1;13954:9;;;;13663:311;;;;13990:16;;;;;;;;;13998:4;13990:16;;;;14004:1;13990:16;;;13983:23;;;13564:449;;;:::o;12948:610::-;13021:14;13072:13;227:77;13072:27;;13147:4;13141:11;13175:4;13172:1;13165:15;13214:4;13207;13204:1;13200:12;13193:26;13253:4;13246;13243:1;13239:12;13232:26;13292:4;13285;13282:1;13278:12;13271:26;13331:8;13324:4;13321:1;13317:12;13310:30;13374:5;13367:4;13364:1;13360:12;13353:27;13437:4;13434:1;13428:4;13425:1;13419:4;13414:3;13403:39;13396:47;13393:2;;;13495:1;13492;13485:12;13393:2;13540:1;13534:8;13524:18;;13118:434;;;;;;:::o;81:14294::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14294:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14294:0;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14294:0;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14294:0;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14294:0;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:615;;264:3;257:4;249:6;245:17;241:27;234:35;231:2;;;282:1;279;272:12;231:2;306:3;324:78;339:62;394:6;339:62;;;324:78;;;315:87;;419:5;478:6;525:3;517:4;509:6;505:17;500:3;496:27;493:36;490:2;;;542:1;539;532:12;490:2;567:1;552:206;577:6;574:1;571:13;552:206;;;635:3;657:37;690:3;678:10;657:37;;;652:3;645:50;718:4;713:3;709:14;702:21;;746:4;741:3;737:14;730:21;;609:149;599:1;596;592:9;587:14;;552:206;;;556:14;224:540;;;;;;;;772:118;;839:46;877:6;864:20;839:46;;;830:55;;824:66;;;;;898:440;;999:3;992:4;984:6;980:17;976:27;969:35;966:2;;;1017:1;1014;1007:12;966:2;1054:6;1041:20;1076:64;1091:48;1132:6;1091:48;;;1076:64;;;1067:73;;1160:6;1153:5;1146:21;1196:4;1188:6;1184:17;1229:4;1222:5;1218:16;1264:3;1255:6;1250:3;1246:16;1243:25;1240:2;;;1281:1;1278;1271:12;1240:2;1291:41;1325:6;1320:3;1315;1291:41;;;959:379;;;;;;;;1346:118;;1413:46;1451:6;1438:20;1413:46;;;1404:55;;1398:66;;;;;1471:1411;;;;;;;;;1795:3;1783:9;1774:7;1770:23;1766:33;1763:2;;;1812:1;1809;1802:12;1763:2;1847:1;1864:76;1932:7;1923:6;1912:9;1908:22;1864:76;;;1854:86;;1826:120;1977:2;1995:76;2063:7;2054:6;2043:9;2039:22;1995:76;;;1985:86;;1956:121;2108:3;2127:76;2195:7;2186:6;2175:9;2171:22;2127:76;;;2117:86;;2087:122;2240:3;2259:53;2304:7;2295:6;2284:9;2280:22;2259:53;;;2249:63;;2219:99;2349:3;2368:53;2413:7;2404:6;2393:9;2389:22;2368:53;;;2358:63;;2328:99;2458:3;2477:76;2545:7;2536:6;2525:9;2521:22;2477:76;;;2467:86;;2437:122;2590:3;2609:53;2654:7;2645:6;2634:9;2630:22;2609:53;;;2599:63;;2569:99;2727:3;2716:9;2712:19;2699:33;2752:18;2744:6;2741:30;2738:2;;;2784:1;2781;2774:12;2738:2;2804:62;2858:7;2849:6;2838:9;2834:22;2804:62;;;2794:72;;2678:194;1757:1125;;;;;;;;;;;;2890:259;;3018:91;3105:3;3098:5;3018:91;;;3138:4;3133:3;3129:14;3115:28;;3011:138;;;;;3157:120;3240:31;3265:5;3240:31;;;3235:3;3228:44;3222:55;;;3357:743;3528:69;3591:5;3528:69;;;3610:105;3708:6;3703:3;3610:105;;;3603:112;;3735:71;3800:5;3735:71;;;3827:1;3812:276;3837:6;3834:1;3831:13;3812:276;;;3884:105;3985:3;3976:6;3970:13;3884:105;;;3877:112;;4006:75;4074:6;4006:75;;;3996:85;;3859:1;3856;3852:9;3847:14;;3812:276;;;3816:14;3507:593;;;;;4108:111;4185:28;4207:5;4185:28;;;4180:3;4173:41;4167:52;;;4226:360;;4356:39;4389:5;4356:39;;;4407:89;4489:6;4484:3;4407:89;;;4400:96;;4501:52;4546:6;4541:3;4534:4;4527:5;4523:16;4501:52;;;4574:6;4569:3;4565:16;4558:23;;4336:250;;;;;;4594:465;;4754:67;4818:2;4813:3;4754:67;;;4747:74;;4854:66;4850:1;4845:3;4841:11;4834:87;4955:66;4950:2;4945:3;4941:12;4934:88;5050:2;5045:3;5041:12;5034:19;;4740:319;;;;5068:465;;5228:67;5292:2;5287:3;5228:67;;;5221:74;;5328:66;5324:1;5319:3;5315:11;5308:87;5429:66;5424:2;5419:3;5415:12;5408:88;5524:2;5519:3;5515:12;5508:19;;5214:319;;;;5606:450;5735:4;5730:3;5726:14;5814:3;5807:5;5803:15;5797:22;5825:61;5881:3;5876;5872:13;5859:11;5825:61;;;5755:137;5961:4;5954:5;5950:16;5944:23;5973:62;6029:4;6024:3;6020:14;6007:11;5973:62;;;5902:139;5708:348;;;;6128:460;6267:4;6262:3;6258:14;6346:3;6339:5;6335:15;6329:22;6357:61;6413:3;6408;6404:13;6391:11;6357:61;;;6287:137;6493:4;6486:5;6482:16;6476:23;6505:62;6561:4;6556:3;6552:14;6539:11;6505:62;;;6434:139;6240:348;;;;6595:110;6668:31;6693:5;6668:31;;;6663:3;6656:44;6650:55;;;6712:120;6795:31;6820:5;6795:31;;;6790:3;6783:44;6777:55;;;6839:159;6940:52;6960:31;6985:5;6960:31;;;6940:52;;;6935:3;6928:65;6922:76;;;7005:405;;7179:95;7270:3;7261:6;7179:95;;;7172:102;;7285:75;7356:3;7347:6;7285:75;;;7382:2;7377:3;7373:12;7366:19;;7402:3;7395:10;;7160:250;;;;;;7417:201;;7529:2;7518:9;7514:18;7506:26;;7543:65;7605:1;7594:9;7590:17;7581:6;7543:65;;;7500:118;;;;;7625:407;;7816:2;7805:9;7801:18;7793:26;;7866:9;7860:4;7856:20;7852:1;7841:9;7837:17;7830:47;7891:131;8017:4;7891:131;;;7883:139;;7787:245;;;;8039:407;;8230:2;8219:9;8215:18;8207:26;;8280:9;8274:4;8270:20;8266:1;8255:9;8251:17;8244:47;8305:131;8431:4;8305:131;;;8297:139;;8201:245;;;;8453:1049;;8849:3;8838:9;8834:19;8826:27;;8864:117;8978:1;8967:9;8963:17;8954:6;8864:117;;;8992:118;9106:2;9095:9;9091:18;9082:6;8992:118;;;9121:119;9235:3;9224:9;9220:19;9211:6;9121:119;;;9251:73;9319:3;9308:9;9304:19;9295:6;9251:73;;;9335;9403:3;9392:9;9388:19;9379:6;9335:73;;;9419;9487:3;9476:9;9472:19;9463:6;9419:73;;;8820:682;;;;;;;;;;9509:213;;9627:2;9616:9;9612:18;9604:26;;9641:71;9709:1;9698:9;9694:17;9685:6;9641:71;;;9598:124;;;;;9729:493;;9959:3;9948:9;9944:19;9936:27;;9974:71;10042:1;10031:9;10027:17;10018:6;9974:71;;;10056:156;10208:2;10197:9;10193:18;10184:6;10056:156;;;9930:292;;;;;;10229:620;;10495:3;10484:9;10480:19;10472:27;;10510:71;10578:1;10567:9;10563:17;10554:6;10510:71;;;10592:118;10706:2;10695:9;10691:18;10682:6;10592:118;;;10721;10835:2;10824:9;10820:18;10811:6;10721:118;;;10466:383;;;;;;;10856:1028;;11270:3;11259:9;11255:19;11247:27;;11285:71;11353:1;11342:9;11338:17;11329:6;11285:71;;;11367:118;11481:2;11470:9;11466:18;11457:6;11367:118;;;11496;11610:2;11599:9;11595:18;11586:6;11496:118;;;11625:119;11739:3;11728:9;11724:19;11715:6;11625:119;;;11755;11869:3;11858:9;11854:19;11845:6;11755:119;;;11241:643;;;;;;;;;11891:1232;;12379:3;12368:9;12364:19;12356:27;;12394:71;12462:1;12451:9;12447:17;12438:6;12394:71;;;12476:118;12590:2;12579:9;12575:18;12566:6;12476:118;;;12605;12719:2;12708:9;12704:18;12695:6;12605:118;;;12734:119;12848:3;12837:9;12833:19;12824:6;12734:119;;;12864;12978:3;12967:9;12963:19;12954:6;12864:119;;;12994;13108:3;13097:9;13093:19;13084:6;12994:119;;;12350:773;;;;;;;;;;13130:256;;13192:2;13186:9;13176:19;;13230:4;13222:6;13218:17;13329:6;13317:10;13314:22;13293:18;13281:10;13278:34;13275:62;13272:2;;;13350:1;13347;13340:12;13272:2;13370:10;13366:2;13359:22;13170:216;;;;;13393:233;;13550:18;13542:6;13539:30;13536:2;;;13582:1;13579;13572:12;13536:2;13611:4;13603:6;13599:17;13591:25;;13473:153;;;;13633:258;;13776:18;13768:6;13765:30;13762:2;;;13808:1;13805;13798:12;13762:2;13852:4;13848:9;13841:4;13833:6;13829:17;13825:33;13817:41;;13881:4;13875;13871:15;13863:23;;13699:192;;;;13900:125;;14012:6;14001:17;;13993:32;;;;14034:113;;14139:3;14129:13;;14123:24;;;;14154:92;;14235:5;14229:12;14219:22;;14213:33;;;;14254:137;;14380:4;14372:6;14368:17;14357:28;;14350:41;;;;14400:161;;14552:3;14537:18;;14530:31;;;;;14570:163;;14685:6;14680:3;14673:19;14722:4;14717:3;14713:14;14698:29;;14666:67;;;;;14742:145;;14878:3;14863:18;;14856:31;;;;;14895:105;;14964:31;14989:5;14964:31;;;14953:42;;14947:53;;;;15007:92;;15087:5;15080:13;15073:21;15062:32;;15056:43;;;;15106:128;;15186:42;15179:5;15175:54;15164:65;;15158:76;;;;15241:79;;15310:5;15299:16;;15293:27;;;;15327:105;;15396:31;15421:5;15396:31;;;15385:42;;15379:53;;;;15439:79;;15508:5;15497:16;;15491:27;;;;15525:128;;15605:42;15598:5;15594:54;15583:65;;15577:76;;;;15660:79;;15729:5;15718:16;;15712:27;;;;15747:145;15828:6;15823:3;15818;15805:30;15884:1;15875:6;15870:3;15866:16;15859:27;15798:94;;;;15901:268;15966:1;15973:101;15987:6;15984:1;15981:13;15973:101;;;16063:1;16058:3;16054:11;16048:18;16044:1;16039:3;16035:11;16028:39;16009:2;16006:1;16002:10;15997:15;;15973:101;;;16089:6;16086:1;16083:13;16080:2;;;16154:1;16145:6;16140:3;16136:16;16129:27;16080:2;15950:219;;;;;16177:74;;16241:5;16230:16;;16224:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract BurnVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 32;\n    uint256 constant n = 5;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n\n    G1Point[m] gs;\n    G1Point[m] hs;\n    G1Point g;\n    G1Point h;\n\n    struct BurnStatement {\n        G1Point CLn;\n        G1Point CRn;\n        G1Point y;\n        uint256 bTransfer;\n        uint256 epoch; // or uint8?\n        address sender;\n        G1Point u;\n    }\n\n    struct BurnProof {\n        G1Point BA;\n        G1Point BS;\n\n        G1Point CLnPrime;\n        G1Point CRnPrime;\n\n        G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 tauX;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_vDiff;\n        uint256 s_nuDiff;\n\n        InnerProductProof ipProof;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs[i] = mapInto(\"G\", i);\n            hs[i] = mapInto(\"H\", i);\n        }\n    } // will it be more expensive later on to sload these than to recompute them?\n\n    function verifyBurn(bytes32[2] memory CLn, bytes32[2] memory CRn, bytes32[2] memory y, uint256 bTransfer, uint256 epoch, bytes32[2] memory u, address sender, bytes memory proof) view public returns (bool) {\n        BurnStatement memory statement; // WARNING: if this is called directly in the console,\n        // and your strings are less than 64 characters, they will be padded on the right, not the left. should hopefully not be an issue,\n        // as this will typically be called simply by the other contract. still though, beware\n        statement.CLn = G1Point(uint256(CLn[0]), uint256(CLn[1]));\n        statement.CRn = G1Point(uint256(CRn[0]), uint256(CRn[1]));\n        statement.y = G1Point(uint256(y[0]), uint256(y[1]));\n        statement.bTransfer = bTransfer;\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        statement.sender = sender;\n        BurnProof memory burnProof = unserialize(proof);\n        return verify(statement, burnProof);\n    }\n\n    struct BurnAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[1] zs; // silly. just to match zether.\n        uint256 zSum;\n        uint256[m] twoTimesZSquared;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        G1Point A_y;\n        G1Point gEpoch;\n        G1Point A_u;\n        G1Point c_commit;\n        G1Point A_t;\n        G1Point A_CLn;\n        G1Point A_CLnPrime;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u_x;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 o;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(BurnStatement memory statement, BurnProof memory proof) view internal returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.y, statement.bTransfer, statement.epoch, statement.sender))).mod(); // stacktoodeep?\n\n        BurnAuxiliaries memory burnAuxiliaries;\n        burnAuxiliaries.y = uint256(keccak256(abi.encode(statementHash, proof.BA, proof.BS, proof.CLnPrime, proof.CRnPrime))).mod();\n        burnAuxiliaries.ys = powers(burnAuxiliaries.y);\n        burnAuxiliaries.z = uint256(keccak256(abi.encode(burnAuxiliaries.y))).mod();\n        burnAuxiliaries.zs = [burnAuxiliaries.z.exp(2)];\n        burnAuxiliaries.zSum = burnAuxiliaries.zs[0].mul(burnAuxiliaries.z); // trivial sum\n        burnAuxiliaries.k = sumScalars(burnAuxiliaries.ys).mul(burnAuxiliaries.z.sub(burnAuxiliaries.zs[0])).sub(burnAuxiliaries.zSum.mul(2 ** m).sub(burnAuxiliaries.zSum));\n        burnAuxiliaries.t = proof.tHat.sub(burnAuxiliaries.k);\n        for (uint256 i = 0; i < m; i++) {\n            burnAuxiliaries.twoTimesZSquared[i] = burnAuxiliaries.zs[0].mul(2 ** i);\n        }\n\n        burnAuxiliaries.x = uint256(keccak256(abi.encode(burnAuxiliaries.z, proof.tCommits))).mod();\n        burnAuxiliaries.tEval = add(mul(proof.tCommits[0], burnAuxiliaries.x), mul(proof.tCommits[1], burnAuxiliaries.x.mul(burnAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = add(mul(g, proof.s_sk), mul(statement.y, proof.c.neg()));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = add(mul(sigmaAuxiliaries.gEpoch, proof.s_sk), mul(statement.u, proof.c.neg()));\n        sigmaAuxiliaries.c_commit = mul(add(mul(add(statement.CRn, proof.CRnPrime), proof.s_sk), mul(add(statement.CLn, proof.CLnPrime), proof.c.neg())), burnAuxiliaries.zs[0]);\n        sigmaAuxiliaries.A_t = add(mul(add(add(mul(g, burnAuxiliaries.t), mul(h, proof.tauX)), neg(burnAuxiliaries.tEval)), proof.c), sigmaAuxiliaries.c_commit);\n        sigmaAuxiliaries.A_CLn = add(mul(g, proof.s_vDiff), add(mul(statement.CRn, proof.s_sk), mul(statement.CLn, proof.c.neg())));\n        sigmaAuxiliaries.A_CLnPrime = add(mul(h, proof.s_nuDiff), add(mul(proof.CRnPrime, proof.s_sk), mul(proof.CLnPrime, proof.c.neg())));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(burnAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_u, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_CLn, sigmaAuxiliaries.A_CLnPrime))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = mul(g, ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = hadamardInv(hs, burnAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(burnAuxiliaries.ys, burnAuxiliaries.z), burnAuxiliaries.twoTimesZSquared);\n        ipAuxiliaries.P = add(add(add(proof.BA, mul(proof.BS, burnAuxiliaries.x)), mul(sumPoints(gs), burnAuxiliaries.z.neg())), commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(h, proof.mu.neg()));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u_x, proof.tHat));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.o = uint256(keccak256(abi.encode(ipAuxiliaries.o, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.o; // overwrites value\n            uint256 xInv = ipAuxiliaries.o.inv();\n            ipAuxiliaries.P = add(ipAuxiliaries.P, add(mul(ipProof.ls[i], ipAuxiliaries.o.exp(2)), mul(ipProof.rs[i], xInv.exp(2))));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u_x, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function multiExpGs(uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(gs[i], ss[i]));\n        }\n    }\n\n    function multiExpHsInversed(uint256[m] memory ss, G1Point[m] memory hs) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(hs[i], ss[m - 1 - i]));\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (BurnProof memory proof) {\n        proof.BA = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.BS = G1Point(slice(arr, 64), slice(arr, 96));\n\n        proof.CLnPrime = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.CRnPrime = G1Point(slice(arr, 192), slice(arr, 224));\n\n        proof.tCommits = [G1Point(slice(arr, 256), slice(arr, 288)), G1Point(slice(arr, 320), slice(arr, 352))];\n        proof.tHat = slice(arr, 384);\n        proof.tauX = slice(arr, 416);\n        proof.mu = slice(arr, 448);\n\n        proof.c = slice(arr, 480);\n        proof.s_sk = slice(arr, 512);\n        proof.s_vDiff = slice(arr, 544);\n        proof.s_nuDiff = slice(arr, 576);\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 608 + i * 64), slice(arr, 640 + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 608 + (n + i) * 64), slice(arr, 640 + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 608 + n * 128);\n        ipProof.b = slice(arr, 640 + n * 128);\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[m] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) {\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-26T18:28:14.437Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}