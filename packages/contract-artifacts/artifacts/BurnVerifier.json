{
  "contractName": "BurnVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2]"
        },
        {
          "name": "bTransfer",
          "type": "uint256"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyBurn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "x",
              "type": "uint256"
            },
            {
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "p1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "uint256"
            },
            {
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "p2",
          "type": "tuple"
        }
      ],
      "name": "add",
      "outputs": [
        {
          "components": [
            {
              "name": "x",
              "type": "uint256"
            },
            {
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "r",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2]\"},{\"name\":\"bTransfer\",\"type\":\"uint256\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"p1\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"p2\",\"type\":\"tuple\"}],\"name\":\"add\",\"outputs\":[{\"components\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"r\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":\"BurnVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":{\"keccak256\":\"0xa96ec34a905cdc3d21b60f7a1aced70de23d6ff83671a804b1958f21d0c6854b\",\"urls\":[\"bzzr://2b804476f3448987bc09374bc22ec64518bed3d953eb7af31e9a25caf79f9305\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x0a8fcd9f60c29d4e0114dd2f632688845d0e505943b3bc514698fd91da377ee6\",\"urls\":[\"bzzr://84371071fa5f1d7eba148701bb8d49c9e2de726fd0feb8669bf4754da418e44b\"]}},\"version\":1}",
  "bytecode": "0x60806040526200001f60026200022b640100000000026401000000009004565b60849060206200003192919062000569565b503480156200003f57600080fd5b506200008f6040805190810160405280600181526020017f4700000000000000000000000000000000000000000000000000000000000000815250620002e0640100000000026401000000009004565b60806000820151816000015560208201518160010155905050620000f76040805190810160405280600181526020017f5600000000000000000000000000000000000000000000000000000000000000815250620002e0640100000000026401000000009004565b6082600082015181600001556020820151816001015590505060008090505b60208110156200022457620001706040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508262000363640100000000026401000000009004565b6000826020811015156200018057fe5b600202016000820151816000015560208201518160010155905050620001eb6040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508262000363640100000000026401000000009004565b604082602081101515620001fb57fe5b600202016000820151816000015560208201518160010155905050808060010191505062000116565b506200070b565b62000235620005ae565b60018160006020811015156200024757fe5b602002018181525050818160016020811015156200026157fe5b6020020181815250506000600290505b6020811015620002da57620002b48383600184036020811015156200029257fe5b6020020151620003e96401000000000262001377179091906401000000009004565b8282602081101515620002c357fe5b602002018181525050808060010191505062000271565b50919050565b620002ea620005d2565b6200035c7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360405160200162000322919062000666565b60405160208183030381529060405280519060200120600190048115156200034657fe5b0662000421640100000000026401000000009004565b9050919050565b6200036d620005d2565b620003e17f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001620003a79291906200067f565b6040516020818303038152906040528051906020012060019004811515620003cb57fe5b0662000421640100000000026401000000009004565b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156200041657fe5b828409905092915050565b6200042b620005d2565b60005b600115620004de576000600362000456856003620004fb640100000000026401000000009004565b019050620004a481600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156200048e57fe5b04620004fb640100000000026401000000009004565b915080620004c3836002620004fb640100000000026401000000009004565b1415620004d15750620004de565b600184019350506200042e565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156200055d57600080fd5b80519250505092915050565b82602081019282156200059b579160200282015b828111156200059a5782518255916020019190600101906200057d565b5b509050620005aa9190620005ec565b5090565b61040060405190810160405280602090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6200061191905b808211156200060d576000816000905550600101620005f3565b5090565b90565b60006200062182620006ab565b6200062d8185620006b6565b93506200063f818560208601620006cb565b80840191505092915050565b620006606200065a82620006c1565b62000701565b82525050565b600062000674828462000614565b915081905092915050565b60006200068d828562000614565b91506200069b82846200064b565b6020820191508190509392505050565b600081519050919050565b600081905092915050565b6000819050919050565b60005b83811015620006eb578082015181840152602081019050620006ce565b83811115620006fb576000848401525b50505050565b6000819050919050565b612720806200071b6000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480636e1a999e1461005857806382d23b8a14610088575b600080fd5b610072600480360361006d9190810190611f92565b6100b8565b60405161007f919061230b565b60405180910390f35b6100a2600480360361009d919081019061205f565b610267565b6040516100af9190612366565b60405180910390f35b60006100c2611a87565b60408051908101604052808b60006002811015156100dc57fe5b60200201516001900481526020018b60016002811015156100f957fe5b602002015160019004815250816000018190525060408051908101604052808a600060028110151561012757fe5b60200201516001900481526020018a600160028110151561014457fe5b6020020151600190048152508160200181905250604080519081016040528089600060028110151561017257fe5b602002015160019004815260200189600160028110151561018f57fe5b6020020151600190048152508160400181905250868160600181815250508581608001818152505060408051908101604052808660006002811015156101d157fe5b60200201516001900481526020018660016002811015156101ee57fe5b6020020151600190048152508160c00181905250838160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610242611af4565b61024b846102ad565b90506102578282610578565b9250505098975050505050505050565b61026f611b72565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa15156102a657600080fd5b5092915050565b6102b5611af4565b60408051908101604052806102cb84600061128c565b81526020016102db84602061128c565b815250816000018190525060408051908101604052806102fc84604061128c565b815260200161030c84606061128c565b8152508160200181905250604080519081016040528061032d84608061128c565b815260200161033d8460a061128c565b8152508160400181905250604080519081016040528061035e8460c061128c565b815260200161036e8460e061128c565b81525081606001819052506040805190810160405280604080519081016040528061039b8661010061128c565b81526020016103ac8661012061128c565b815250815260200160408051908101604052806103cb8661014061128c565b81526020016103dc8661016061128c565b81525081525081608001819052506103f68261018061128c565b8160e001818152505061040b826101a061128c565b8160a0018181525050610420826101c061128c565b8160c0018181525050610431611b8c565b61043d836101e061128c565b8160000181815250506104528361020061128c565b8160200181815250508082610100018190525061046d611ba6565b60008090505b600581101561052d57604080519081016040528061049887604085026102200161128c565b81526020016104ae87604085026102400161128c565b8152508260000151826005811015156104c357fe5b602002018190525060408051908101604052806104ea87604085600501026102200161128c565b815260200161050387604085600501026102400161128c565b81525082602001518260058110151561051857fe5b60200201819052508080600101915050610473565b506105408460806005026102200161128c565b81604001818152505061055b8460806005026102400161128c565b816060018181525050808361012001819052508292505050919050565b6000610582611bdc565b61061b6105d4856000015186602001518760400151886060015189608001516040516020016105b5959493929190612381565b60405160208183030381529060405280519060200120600190046112a5565b84600001518560200151866040015187606001516040516020016105fc9594939291906124a4565b60405160208183030381529060405280519060200120600190046112a5565b81600001818152505061063181600001516112da565b8160200181905250610670816000015160405160200161065191906123d5565b60405160208183030381529060405280519060200120600190046112a5565b8160400181815250506106948160400151826040015161137790919063ffffffff16565b816060015160006002811015156106a757fe5b6020020181815250506000600190505b6002811015610718576106f082604001518360600151600184036002811015156106dd57fe5b602002015161137790919063ffffffff16565b82606001518260028110151561070257fe5b60200201818152505080806001019150506106b7565b506107776084602080602002604051908101604052809291908260208015610755576020028201915b815481526020019060010190808311610741575b50505050508260600151600060028110151561076d57fe5b60200201516113ae565b81608001819052506107bc8160400151846080015160405160200161079d9291906123f0565b60405160208183030381529060405280519060200120600190046112a5565b8161010001818152505061087a610820826060015160016002811015156107df57fe5b6020020151610812602060020a856060015160016002811015156107ff57fe5b602002015161137790919063ffffffff16565b61141590919063ffffffff16565b61086c6108518460600151600060028110151561083957fe5b6020020151856040015161141590919063ffffffff16565b61085e8560200151611455565b61137790919063ffffffff16565b61141590919063ffffffff16565b8160a00181815250506108ee6108ac8460800151600060028110151561089c57fe5b60200201518361010001516114a0565b6108e9856080015160016002811015156108c257fe5b60200201516108e485610100015186610100015161137790919063ffffffff16565b6114a0565b610267565b8160c001819052506109118160a001518460e0015161141590919063ffffffff16565b8160e0018181525050610922611c41565b610934846101000151600001516114db565b81600001818152505061098a610973608060408051908101604052908160008201548152602001600182015481525050866101000151602001516114a0565b610985876040015184600001516114a0565b610267565b81602001819052506109d56040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508660800151611507565b8160400181905250610a0e6109f78260400151866101000151602001516114a0565b610a098760c0015184600001516114a0565b610267565b8160600181905250610ada610a77610a5a610a368860000151886101000151600001516114a0565b610a558960200151610a508a6101000151602001516114db565b6114a0565b610267565b84606001516000600281101515610a6d57fe5b60200201516114a0565b610ad5610ab8610a948860400151896101000151600001516114a0565b610ab38960600151610aae8b6101000151602001516114db565b6114a0565b610267565b85606001516001600281101515610acb57fe5b60200201516114a0565b610267565b8160800181905250610bb0610b7f610b31608060408051908101604052908160008201548152602001600182015481525050610b2c886101000151600001518760e0015161137790919063ffffffff16565b6114a0565b610b7a608260408051908101604052908160008201548152602001600182015481525050610b75896101000151600001518a60a0015161137790919063ffffffff16565b6114a0565b610267565b610bab610ba68460800151610ba18760c001518a6101000151600001516114a0565b610267565b611577565b610267565b8160a001819052506000610c0a836101000151836020015184606001518560a001518a60a00151604051602001610beb959493929190612450565b60405160208183030381529060405280519060200120600190046112a5565b90508461010001516000015181141515610c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5090612326565b60405180910390fd5b6000610ca9866101000151600001518760e001518860a001518960c00151604051602001610c8a94939291906124f8565b60405160208183030381529060405280519060200120600190046112a5565b9050610cb3611b72565b610cdd608060408051908101604052908160008201548152602001600182015481525050836114a0565b9050610ce7611c97565b610d4d6040602080602002604051908101604052809291906000905b82821015610d3f578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610d03565b5050505087602001516115f0565b9050610d57611cc6565b610d76610d6c886020015189604001516113ae565b8860800151611667565b9050610d80611b72565b610e1e610da38b60000151610d9e8d602001518c61010001516114a0565b610267565b610e19610e076000602080602002604051908101604052809291906000905b82821015610dfe578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610dc2565b505050506116e0565b610e148c604001516114db565b6114a0565b610267565b9050610e71610e59610e546082604080519081016040529081600082015481526020016001820154815250508d60c001516114a0565b611577565b610e6c83610e678787611728565b610267565b610267565b9050610e8a81610e85868d60e001516114a0565b610267565b9050610e94611ba6565b8a61012001519050610ea4611cea565b60008090505b6005811015610fc457610f1688846000015183600581101515610ec957fe5b6020020151856020015184600581101515610ee057fe5b6020020151604051602001610ef793929190612419565b60405160208183030381529060405280519060200120600190046112a5565b9750878282600581101515610f2757fe5b6020020181815250506000610f3b8961178c565b9050610fb4610fae610f76866000015185600581101515610f5857fe5b6020020151610f7160028e6117c290919063ffffffff16565b6114a0565b610fa9876020015186600581101515610f8b57fe5b6020020151610fa46002876117c290919063ffffffff16565b6114a0565b610267565b86610267565b9450508080600101915050610eaa565b50610fcd611cc6565b6001816000602081101515610fde57fe5b60200201818152505060008090505b60058110156110535761102e838260058110151561100757fe5b602002015183600060208110151561101b57fe5b602002015161137790919063ffffffff16565b82600060208110151561103d57fe5b6020020181815250508080600101915050610fed565b5061105c611d0d565b61107882600060208110151561106e57fe5b602002015161178c565b82600060208110151561108757fe5b60200201818152505060008090505b600260208115156110a357fe5b048110156111a65760008090505b6020828260019060020a0201101561119a5760008160019060020a028301905083816020811015156110df57fe5b6020020151151561118e57600061112f878460016005030360058110151561110357fe5b6020020151888560016005030360058110151561111c57fe5b602002015161137790919063ffffffff16565b905061115681878660208110151561114357fe5b602002015161137790919063ffffffff16565b868360208110151561116457fe5b6020020181815250506001858360208110151561117d57fe5b602002019015159081151581525050505b508060010190506110b1565b50806001019050611096565b506111af611b72565b6111b88361182f565b90506111c2611b72565b6111cc848a6118b1565b90506111d6611b72565b6112266111fd6111ea858a604001516114a0565b6111f8858b606001516114a0565b610267565b6112218d61121c8b606001518c6040015161137790919063ffffffff16565b6114a0565b610267565b9050611232888261191b565b1515611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126a90612346565b60405180910390fd5b60019f5050505050505050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001828115156112d257fe5b069050919050565b6112e2611cc6565b60018160006020811015156112f357fe5b6020020181815250508181600160208110151561130c57fe5b6020020181815250506000600290505b60208110156113715761134d83836001840360208110151561133a57fe5b602002015161137790919063ffffffff16565b828260208110151561135b57fe5b602002018181525050808060010191505061131c565b50919050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156113a357fe5b828409905092915050565b6113b6611cc6565b60008090505b602081101561140e576113ea8385836020811015156113d757fe5b602002015161137790919063ffffffff16565b82826020811015156113f857fe5b60200201818152505080806001019150506113bc565b5092915050565b6000818310156114495782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001030161144d565b8183035b905092915050565b600080600090505b602081101561149a5761148b838260208110151561147757fe5b60200201518361194390919063ffffffff16565b9150808060010191505061145d565b50919050565b6114a8611b72565b604051835181526020840151602082015282604082015260408260608360075afa15156114d457600080fd5b5092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b61150f611b72565b61156f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016115469291906122e3565b604051602081830303815290604052805190602001206001900481151561156957fe5b0661197a565b905092915050565b61157f611b72565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156115c357fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6115f8611c97565b60008090505b60208110156116605761163d848260208110151561161857fe5b6020020151611638858460208110151561162e57fe5b602002015161178c565b6114a0565b828260208110151561164b57fe5b602002018190525080806001019150506115fe565b5092915050565b61166f611cc6565b60008090505b60208110156116d9576116b5838260208110151561168f57fe5b602002015185836020811015156116a257fe5b602002015161194390919063ffffffff16565b82826020811015156116c357fe5b6020020181815250508080600101915050611675565b5092915050565b6116e8611b72565b60008090505b60208110156117225761171382848360208110151561170957fe5b6020020151610267565b915080806001019150506116ee565b50919050565b611730611b72565b60008090505b60208110156117855761177682611771868460208110151561175457fe5b6020020151868560208110151561176757fe5b60200201516114a0565b610267565b91508080600101915050611736565b5092915050565b60006117bb8260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001036117c2565b9050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561182357600080fd5b80519250505092915050565b611837611b72565b60008090505b60208110156118ab5761189c8261189760008460208110151561185c57fe5b6002020160408051908101604052908160008201548152602001600182015481525050868560208110151561188d57fe5b60200201516114a0565b610267565b9150808060010191505061183d565b50919050565b6118b9611b72565b60008090505b6020811015611914576119058261190085846020811015156118dd57fe5b602002015187856001602003036020811015156118f657fe5b60200201516114a0565b610267565b915080806001019150506118bf565b5092915050565b60008160000151836000015114801561193b575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561196f57fe5b828408905092915050565b611982611b72565b60005b6001156119fd576000600361199b856003611a1a565b0190506119d781600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156119d157fe5b04611a1a565b9150806119e5836002611a1a565b14156119f157506119fd565b60018401935050611985565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515611a7b57600080fd5b80519250505092915050565b61016060405190810160405280611a9c611d31565b8152602001611aa9611d31565b8152602001611ab6611d31565b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001611aee611d31565b81525090565b6104e060405190810160405280611b09611d31565b8152602001611b16611d31565b8152602001611b23611d31565b8152602001611b30611d31565b8152602001611b3d611d4b565b8152602001600081526020016000815260200160008152602001611b5f611d79565b8152602001611b6c611d93565b81525090565b604080519081016040528060008152602001600081525090565b604080519081016040528060008152602001600081525090565b6102c060405190810160405280611bbb611dc9565b8152602001611bc8611dc9565b815260200160008152602001600081525090565b6109206040519081016040528060008152602001611bf8611df8565b815260200160008152602001611c0c611e1c565b8152602001611c19611df8565b815260200160008152602001611c2d611d31565b815260200160008152602001600081525090565b6101606040519081016040528060008152602001611c5d611d31565b8152602001611c6a611d31565b8152602001611c77611d31565b8152602001611c84611d31565b8152602001611c91611d31565b81525090565b610800604051908101604052806020905b611cb0611d31565b815260200190600190039081611ca85790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61040060405190810160405280602090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b611d63611d31565b815260200190600190039081611d5b5790505090565b604080519081016040528060008152602001600081525090565b6102c060405190810160405280611da8611dc9565b8152602001611db5611dc9565b815260200160008152602001600081525090565b610140604051908101604052806005905b611de2611d31565b815260200190600190039081611dda5790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b6040805190810160405280600290602082028038833980820191505090505090565b6000611e4a8235612654565b905092915050565b600082601f8301121515611e6557600080fd5b6002611e78611e738261256a565b61253d565b91508183856020840282011115611e8e57600080fd5b60005b83811015611ebe5781611ea48882611ec8565b845260208401935060208301925050600181019050611e91565b5050505092915050565b6000611ed48235612666565b905092915050565b600082601f8301121515611eef57600080fd5b8135611f02611efd8261258c565b61253d565b91508082526020830160208301858383011115611f1e57600080fd5b611f2983828461269a565b50505092915050565b600060408284031215611f4457600080fd5b611f4e604061253d565b90506000611f5e84828501611f7e565b6000830152506020611f7284828501611f7e565b60208301525092915050565b6000611f8a8235612690565b905092915050565b600080600080600080600080610180898b031215611faf57600080fd5b6000611fbd8b828c01611e52565b9850506040611fce8b828c01611e52565b9750506080611fdf8b828c01611e52565b96505060c0611ff08b828c01611f7e565b95505060e06120018b828c01611f7e565b9450506101006120138b828c01611e52565b9350506101406120258b828c01611e3e565b92505061016089013567ffffffffffffffff81111561204357600080fd5b61204f8b828c01611edc565b9150509295985092959890939650565b6000806080838503121561207257600080fd5b600061208085828601611f32565b925050604061209185828601611f32565b9150509250929050565b60006120a78383612250565b60408301905092915050565b6120bc8161260c565b82525050565b6120cb816125c2565b6120d581846125e5565b92506120e0826125b8565b60005b8281101561210e576120f685835161209b565b9450612101826125d8565b91506001810190506120e3565b5050505050565b61211e8161261e565b82525050565b600061212f826125cd565b6121398185612601565b93506121498185602086016126a9565b80840191505092915050565b6000612162602a836125f0565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b60006121c86025836125f0565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600082015161223760008501826122ae565b50602082015161224a60208501826122ae565b50505050565b60408201600082015161226660008501826122ae565b50602082015161227960208501826122ae565b50505050565b60408201600082015161229560008501826122ae565b5060208201516122a860208501826122ae565b50505050565b6122b78161264a565b82525050565b6122c68161264a565b82525050565b6122dd6122d88261264a565b6126dc565b82525050565b60006122ef8285612124565b91506122fb82846122cc565b6020820191508190509392505050565b60006020820190506123206000830184612115565b92915050565b6000602082019050818103600083015261233f81612155565b9050919050565b6000602082019050818103600083015261235f816121bb565b9050919050565b600060408201905061237b6000830184612221565b92915050565b600061010082019050612397600083018861227f565b6123a4604083018761227f565b6123b1608083018661227f565b6123be60c08301856122bd565b6123cb60e08301846122bd565b9695505050505050565b60006020820190506123ea60008301846122bd565b92915050565b600060a08201905061240560008301856122bd565b61241260208301846120c2565b9392505050565b600060a08201905061242e60008301866122bd565b61243b602083018561227f565b612448606083018461227f565b949350505050565b60006101008201905061246660008301886122bd565b612473602083018761227f565b612480606083018661227f565b61248d60a083018561227f565b61249a60e08301846120b3565b9695505050505050565b6000610120820190506124ba60008301886122bd565b6124c7602083018761227f565b6124d4606083018661227f565b6124e160a083018561227f565b6124ee60e083018461227f565b9695505050505050565b600060808201905061250d60008301876122bd565b61251a60208301866122bd565b61252760408301856122bd565b61253460608301846122bd565b95945050505050565b6000604051905081810181811067ffffffffffffffff8211171561256057600080fd5b8060405250919050565b600067ffffffffffffffff82111561258157600080fd5b602082029050919050565b600067ffffffffffffffff8211156125a357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006126178261262a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061265f82612670565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156126c75780820151818401526020810190506126ac565b838111156126d6576000848401525b50505050565b600081905091905056fea265627a7a7230582031ec6c424a97610d6253cdd52ce773d4136815170f8e22c6bb4c1080e47b35496c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480636e1a999e1461005857806382d23b8a14610088575b600080fd5b610072600480360361006d9190810190611f92565b6100b8565b60405161007f919061230b565b60405180910390f35b6100a2600480360361009d919081019061205f565b610267565b6040516100af9190612366565b60405180910390f35b60006100c2611a87565b60408051908101604052808b60006002811015156100dc57fe5b60200201516001900481526020018b60016002811015156100f957fe5b602002015160019004815250816000018190525060408051908101604052808a600060028110151561012757fe5b60200201516001900481526020018a600160028110151561014457fe5b6020020151600190048152508160200181905250604080519081016040528089600060028110151561017257fe5b602002015160019004815260200189600160028110151561018f57fe5b6020020151600190048152508160400181905250868160600181815250508581608001818152505060408051908101604052808660006002811015156101d157fe5b60200201516001900481526020018660016002811015156101ee57fe5b6020020151600190048152508160c00181905250838160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610242611af4565b61024b846102ad565b90506102578282610578565b9250505098975050505050505050565b61026f611b72565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa15156102a657600080fd5b5092915050565b6102b5611af4565b60408051908101604052806102cb84600061128c565b81526020016102db84602061128c565b815250816000018190525060408051908101604052806102fc84604061128c565b815260200161030c84606061128c565b8152508160200181905250604080519081016040528061032d84608061128c565b815260200161033d8460a061128c565b8152508160400181905250604080519081016040528061035e8460c061128c565b815260200161036e8460e061128c565b81525081606001819052506040805190810160405280604080519081016040528061039b8661010061128c565b81526020016103ac8661012061128c565b815250815260200160408051908101604052806103cb8661014061128c565b81526020016103dc8661016061128c565b81525081525081608001819052506103f68261018061128c565b8160e001818152505061040b826101a061128c565b8160a0018181525050610420826101c061128c565b8160c0018181525050610431611b8c565b61043d836101e061128c565b8160000181815250506104528361020061128c565b8160200181815250508082610100018190525061046d611ba6565b60008090505b600581101561052d57604080519081016040528061049887604085026102200161128c565b81526020016104ae87604085026102400161128c565b8152508260000151826005811015156104c357fe5b602002018190525060408051908101604052806104ea87604085600501026102200161128c565b815260200161050387604085600501026102400161128c565b81525082602001518260058110151561051857fe5b60200201819052508080600101915050610473565b506105408460806005026102200161128c565b81604001818152505061055b8460806005026102400161128c565b816060018181525050808361012001819052508292505050919050565b6000610582611bdc565b61061b6105d4856000015186602001518760400151886060015189608001516040516020016105b5959493929190612381565b60405160208183030381529060405280519060200120600190046112a5565b84600001518560200151866040015187606001516040516020016105fc9594939291906124a4565b60405160208183030381529060405280519060200120600190046112a5565b81600001818152505061063181600001516112da565b8160200181905250610670816000015160405160200161065191906123d5565b60405160208183030381529060405280519060200120600190046112a5565b8160400181815250506106948160400151826040015161137790919063ffffffff16565b816060015160006002811015156106a757fe5b6020020181815250506000600190505b6002811015610718576106f082604001518360600151600184036002811015156106dd57fe5b602002015161137790919063ffffffff16565b82606001518260028110151561070257fe5b60200201818152505080806001019150506106b7565b506107776084602080602002604051908101604052809291908260208015610755576020028201915b815481526020019060010190808311610741575b50505050508260600151600060028110151561076d57fe5b60200201516113ae565b81608001819052506107bc8160400151846080015160405160200161079d9291906123f0565b60405160208183030381529060405280519060200120600190046112a5565b8161010001818152505061087a610820826060015160016002811015156107df57fe5b6020020151610812602060020a856060015160016002811015156107ff57fe5b602002015161137790919063ffffffff16565b61141590919063ffffffff16565b61086c6108518460600151600060028110151561083957fe5b6020020151856040015161141590919063ffffffff16565b61085e8560200151611455565b61137790919063ffffffff16565b61141590919063ffffffff16565b8160a00181815250506108ee6108ac8460800151600060028110151561089c57fe5b60200201518361010001516114a0565b6108e9856080015160016002811015156108c257fe5b60200201516108e485610100015186610100015161137790919063ffffffff16565b6114a0565b610267565b8160c001819052506109118160a001518460e0015161141590919063ffffffff16565b8160e0018181525050610922611c41565b610934846101000151600001516114db565b81600001818152505061098a610973608060408051908101604052908160008201548152602001600182015481525050866101000151602001516114a0565b610985876040015184600001516114a0565b610267565b81602001819052506109d56040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508660800151611507565b8160400181905250610a0e6109f78260400151866101000151602001516114a0565b610a098760c0015184600001516114a0565b610267565b8160600181905250610ada610a77610a5a610a368860000151886101000151600001516114a0565b610a558960200151610a508a6101000151602001516114db565b6114a0565b610267565b84606001516000600281101515610a6d57fe5b60200201516114a0565b610ad5610ab8610a948860400151896101000151600001516114a0565b610ab38960600151610aae8b6101000151602001516114db565b6114a0565b610267565b85606001516001600281101515610acb57fe5b60200201516114a0565b610267565b8160800181905250610bb0610b7f610b31608060408051908101604052908160008201548152602001600182015481525050610b2c886101000151600001518760e0015161137790919063ffffffff16565b6114a0565b610b7a608260408051908101604052908160008201548152602001600182015481525050610b75896101000151600001518a60a0015161137790919063ffffffff16565b6114a0565b610267565b610bab610ba68460800151610ba18760c001518a6101000151600001516114a0565b610267565b611577565b610267565b8160a001819052506000610c0a836101000151836020015184606001518560a001518a60a00151604051602001610beb959493929190612450565b60405160208183030381529060405280519060200120600190046112a5565b90508461010001516000015181141515610c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5090612326565b60405180910390fd5b6000610ca9866101000151600001518760e001518860a001518960c00151604051602001610c8a94939291906124f8565b60405160208183030381529060405280519060200120600190046112a5565b9050610cb3611b72565b610cdd608060408051908101604052908160008201548152602001600182015481525050836114a0565b9050610ce7611c97565b610d4d6040602080602002604051908101604052809291906000905b82821015610d3f578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610d03565b5050505087602001516115f0565b9050610d57611cc6565b610d76610d6c886020015189604001516113ae565b8860800151611667565b9050610d80611b72565b610e1e610da38b60000151610d9e8d602001518c61010001516114a0565b610267565b610e19610e076000602080602002604051908101604052809291906000905b82821015610dfe578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610dc2565b505050506116e0565b610e148c604001516114db565b6114a0565b610267565b9050610e71610e59610e546082604080519081016040529081600082015481526020016001820154815250508d60c001516114a0565b611577565b610e6c83610e678787611728565b610267565b610267565b9050610e8a81610e85868d60e001516114a0565b610267565b9050610e94611ba6565b8a61012001519050610ea4611cea565b60008090505b6005811015610fc457610f1688846000015183600581101515610ec957fe5b6020020151856020015184600581101515610ee057fe5b6020020151604051602001610ef793929190612419565b60405160208183030381529060405280519060200120600190046112a5565b9750878282600581101515610f2757fe5b6020020181815250506000610f3b8961178c565b9050610fb4610fae610f76866000015185600581101515610f5857fe5b6020020151610f7160028e6117c290919063ffffffff16565b6114a0565b610fa9876020015186600581101515610f8b57fe5b6020020151610fa46002876117c290919063ffffffff16565b6114a0565b610267565b86610267565b9450508080600101915050610eaa565b50610fcd611cc6565b6001816000602081101515610fde57fe5b60200201818152505060008090505b60058110156110535761102e838260058110151561100757fe5b602002015183600060208110151561101b57fe5b602002015161137790919063ffffffff16565b82600060208110151561103d57fe5b6020020181815250508080600101915050610fed565b5061105c611d0d565b61107882600060208110151561106e57fe5b602002015161178c565b82600060208110151561108757fe5b60200201818152505060008090505b600260208115156110a357fe5b048110156111a65760008090505b6020828260019060020a0201101561119a5760008160019060020a028301905083816020811015156110df57fe5b6020020151151561118e57600061112f878460016005030360058110151561110357fe5b6020020151888560016005030360058110151561111c57fe5b602002015161137790919063ffffffff16565b905061115681878660208110151561114357fe5b602002015161137790919063ffffffff16565b868360208110151561116457fe5b6020020181815250506001858360208110151561117d57fe5b602002019015159081151581525050505b508060010190506110b1565b50806001019050611096565b506111af611b72565b6111b88361182f565b90506111c2611b72565b6111cc848a6118b1565b90506111d6611b72565b6112266111fd6111ea858a604001516114a0565b6111f8858b606001516114a0565b610267565b6112218d61121c8b606001518c6040015161137790919063ffffffff16565b6114a0565b610267565b9050611232888261191b565b1515611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126a90612346565b60405180910390fd5b60019f5050505050505050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001828115156112d257fe5b069050919050565b6112e2611cc6565b60018160006020811015156112f357fe5b6020020181815250508181600160208110151561130c57fe5b6020020181815250506000600290505b60208110156113715761134d83836001840360208110151561133a57fe5b602002015161137790919063ffffffff16565b828260208110151561135b57fe5b602002018181525050808060010191505061131c565b50919050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156113a357fe5b828409905092915050565b6113b6611cc6565b60008090505b602081101561140e576113ea8385836020811015156113d757fe5b602002015161137790919063ffffffff16565b82826020811015156113f857fe5b60200201818152505080806001019150506113bc565b5092915050565b6000818310156114495782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001030161144d565b8183035b905092915050565b600080600090505b602081101561149a5761148b838260208110151561147757fe5b60200201518361194390919063ffffffff16565b9150808060010191505061145d565b50919050565b6114a8611b72565b604051835181526020840151602082015282604082015260408260608360075afa15156114d457600080fd5b5092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b61150f611b72565b61156f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016115469291906122e3565b604051602081830303815290604052805190602001206001900481151561156957fe5b0661197a565b905092915050565b61157f611b72565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156115c357fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6115f8611c97565b60008090505b60208110156116605761163d848260208110151561161857fe5b6020020151611638858460208110151561162e57fe5b602002015161178c565b6114a0565b828260208110151561164b57fe5b602002018190525080806001019150506115fe565b5092915050565b61166f611cc6565b60008090505b60208110156116d9576116b5838260208110151561168f57fe5b602002015185836020811015156116a257fe5b602002015161194390919063ffffffff16565b82826020811015156116c357fe5b6020020181815250508080600101915050611675565b5092915050565b6116e8611b72565b60008090505b60208110156117225761171382848360208110151561170957fe5b6020020151610267565b915080806001019150506116ee565b50919050565b611730611b72565b60008090505b60208110156117855761177682611771868460208110151561175457fe5b6020020151868560208110151561176757fe5b60200201516114a0565b610267565b91508080600101915050611736565b5092915050565b60006117bb8260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001036117c2565b9050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561182357600080fd5b80519250505092915050565b611837611b72565b60008090505b60208110156118ab5761189c8261189760008460208110151561185c57fe5b6002020160408051908101604052908160008201548152602001600182015481525050868560208110151561188d57fe5b60200201516114a0565b610267565b9150808060010191505061183d565b50919050565b6118b9611b72565b60008090505b6020811015611914576119058261190085846020811015156118dd57fe5b602002015187856001602003036020811015156118f657fe5b60200201516114a0565b610267565b915080806001019150506118bf565b5092915050565b60008160000151836000015114801561193b575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561196f57fe5b828408905092915050565b611982611b72565b60005b6001156119fd576000600361199b856003611a1a565b0190506119d781600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156119d157fe5b04611a1a565b9150806119e5836002611a1a565b14156119f157506119fd565b60018401935050611985565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515611a7b57600080fd5b80519250505092915050565b61016060405190810160405280611a9c611d31565b8152602001611aa9611d31565b8152602001611ab6611d31565b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001611aee611d31565b81525090565b6104e060405190810160405280611b09611d31565b8152602001611b16611d31565b8152602001611b23611d31565b8152602001611b30611d31565b8152602001611b3d611d4b565b8152602001600081526020016000815260200160008152602001611b5f611d79565b8152602001611b6c611d93565b81525090565b604080519081016040528060008152602001600081525090565b604080519081016040528060008152602001600081525090565b6102c060405190810160405280611bbb611dc9565b8152602001611bc8611dc9565b815260200160008152602001600081525090565b6109206040519081016040528060008152602001611bf8611df8565b815260200160008152602001611c0c611e1c565b8152602001611c19611df8565b815260200160008152602001611c2d611d31565b815260200160008152602001600081525090565b6101606040519081016040528060008152602001611c5d611d31565b8152602001611c6a611d31565b8152602001611c77611d31565b8152602001611c84611d31565b8152602001611c91611d31565b81525090565b610800604051908101604052806020905b611cb0611d31565b815260200190600190039081611ca85790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b60a060405190810160405280600590602082028038833980820191505090505090565b61040060405190810160405280602090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b611d63611d31565b815260200190600190039081611d5b5790505090565b604080519081016040528060008152602001600081525090565b6102c060405190810160405280611da8611dc9565b8152602001611db5611dc9565b815260200160008152602001600081525090565b610140604051908101604052806005905b611de2611d31565b815260200190600190039081611dda5790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b6040805190810160405280600290602082028038833980820191505090505090565b6000611e4a8235612654565b905092915050565b600082601f8301121515611e6557600080fd5b6002611e78611e738261256a565b61253d565b91508183856020840282011115611e8e57600080fd5b60005b83811015611ebe5781611ea48882611ec8565b845260208401935060208301925050600181019050611e91565b5050505092915050565b6000611ed48235612666565b905092915050565b600082601f8301121515611eef57600080fd5b8135611f02611efd8261258c565b61253d565b91508082526020830160208301858383011115611f1e57600080fd5b611f2983828461269a565b50505092915050565b600060408284031215611f4457600080fd5b611f4e604061253d565b90506000611f5e84828501611f7e565b6000830152506020611f7284828501611f7e565b60208301525092915050565b6000611f8a8235612690565b905092915050565b600080600080600080600080610180898b031215611faf57600080fd5b6000611fbd8b828c01611e52565b9850506040611fce8b828c01611e52565b9750506080611fdf8b828c01611e52565b96505060c0611ff08b828c01611f7e565b95505060e06120018b828c01611f7e565b9450506101006120138b828c01611e52565b9350506101406120258b828c01611e3e565b92505061016089013567ffffffffffffffff81111561204357600080fd5b61204f8b828c01611edc565b9150509295985092959890939650565b6000806080838503121561207257600080fd5b600061208085828601611f32565b925050604061209185828601611f32565b9150509250929050565b60006120a78383612250565b60408301905092915050565b6120bc8161260c565b82525050565b6120cb816125c2565b6120d581846125e5565b92506120e0826125b8565b60005b8281101561210e576120f685835161209b565b9450612101826125d8565b91506001810190506120e3565b5050505050565b61211e8161261e565b82525050565b600061212f826125cd565b6121398185612601565b93506121498185602086016126a9565b80840191505092915050565b6000612162602a836125f0565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b60006121c86025836125f0565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600082015161223760008501826122ae565b50602082015161224a60208501826122ae565b50505050565b60408201600082015161226660008501826122ae565b50602082015161227960208501826122ae565b50505050565b60408201600082015161229560008501826122ae565b5060208201516122a860208501826122ae565b50505050565b6122b78161264a565b82525050565b6122c68161264a565b82525050565b6122dd6122d88261264a565b6126dc565b82525050565b60006122ef8285612124565b91506122fb82846122cc565b6020820191508190509392505050565b60006020820190506123206000830184612115565b92915050565b6000602082019050818103600083015261233f81612155565b9050919050565b6000602082019050818103600083015261235f816121bb565b9050919050565b600060408201905061237b6000830184612221565b92915050565b600061010082019050612397600083018861227f565b6123a4604083018761227f565b6123b1608083018661227f565b6123be60c08301856122bd565b6123cb60e08301846122bd565b9695505050505050565b60006020820190506123ea60008301846122bd565b92915050565b600060a08201905061240560008301856122bd565b61241260208301846120c2565b9392505050565b600060a08201905061242e60008301866122bd565b61243b602083018561227f565b612448606083018461227f565b949350505050565b60006101008201905061246660008301886122bd565b612473602083018761227f565b612480606083018661227f565b61248d60a083018561227f565b61249a60e08301846120b3565b9695505050505050565b6000610120820190506124ba60008301886122bd565b6124c7602083018761227f565b6124d4606083018661227f565b6124e160a083018561227f565b6124ee60e083018461227f565b9695505050505050565b600060808201905061250d60008301876122bd565b61251a60208301866122bd565b61252760408301856122bd565b61253460608301846122bd565b95945050505050565b6000604051905081810181811067ffffffffffffffff8211171561256057600080fd5b8060405250919050565b600067ffffffffffffffff82111561258157600080fd5b602082029050919050565b600067ffffffffffffffff8211156125a357600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006126178261262a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061265f82612670565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156126c75780820151818401526020810190506126ac565b838111156126d6576000848401525b50505050565b600081905091905056fea265627a7a7230582031ec6c424a97610d6253cdd52ce773d4136815170f8e22c6bb4c1080e47b35496c6578706572696d656e74616cf50037",
  "sourceMap": "81:13933:0:-;;;398:9;405:1;398:6;;;:9;;;:::i;:::-;380:27;;;;;;;;:::i;:::-;;1133:206;8:9:-1;5:2;;;30:1;27;20:12;5:2;1133:206:0;1168:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1164:1;:16;;;;;;;;;;;;;;;;;;;1194:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1190:1;:16;;;;;;;;;;;;;;;;;;;1221:9;1233:1;1221:13;;1216:117;160:2;1236:1;:5;1216:117;;;1270:15;;;;;;;;;;;;;;;;;;;1283:1;1270:7;;;:15;;;:::i;:::-;1262:2;1265:1;1262:5;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;1307:15;;;;;;;;;;;;;;;;;;;1320:1;1307:7;;;:15;;;:::i;:::-;1299:2;1302:1;1299:5;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;1243:3;;;;;;;1216:117;;;;81:13933;;10356:236;10409:24;;:::i;:::-;10457:1;10445:6;10452:1;10445:9;;;;;;;;;;;;:13;;;;;10480:4;10468:6;10475:1;10468:9;;;;;;;;;;;;:16;;;;;10499:9;10511:1;10499:13;;10494:92;160:2;10514:1;:5;10494:92;;;10552:23;10570:4;10552:6;10563:1;10559;:5;10552:13;;;;;;;;;;;;;:17;;;;;;:23;;;;;:::i;:::-;10540:6;10547:1;10540:9;;;;;;;;;;;;:35;;;;;10521:3;;;;;;;10494:92;;;;10356:236;;;:::o;13445:206::-;13506:14;;:::i;:::-;13578:66;227:77;13621:5;13604:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13604:23:0;;;13594:34;;;;;;13586:43;;;:57;;;;;;;;13578:7;;;:66;;;:::i;:::-;13571:73;;13445:206;;;:::o;13657:355::-;13729:14;;:::i;:::-;13801:69;227:77;13844:5;13851:1;13827:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13827:26:0;;;13817:37;;;;;;13809:46;;;:60;;;;;;;;13801:7;;;:69;;;:::i;:::-;13794:76;;13657:355;;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;12951:488:0:-;13005:14;;:::i;:::-;13070:9;13089:311;13096:4;13089:311;;;13116:16;13155:1;13135:17;13144:4;13150:1;13135:8;;;:17;;;:::i;:::-;:21;13116:40;;13242:41;13251:8;13281:1;13276;227:77;13262:15;13261:21;;;;;;;;13242:8;;;:41;;;:::i;:::-;13238:45;;13319:8;13301:14;13310:1;13313;13301:8;;;:14;;;:::i;:::-;:26;13297:70;;;13347:5;;;13297:70;13388:1;13380:9;;;;13089:311;;;;13416:16;;;;;;;;;13424:4;13416:16;;;;13430:1;13416:16;;;13409:23;;;12951:488;;;:::o;12335:610::-;12408:14;12459:13;227:77;12459:27;;12534:4;12528:11;12562:4;12559:1;12552:15;12601:4;12594;12591:1;12587:12;12580:26;12640:4;12633;12630:1;12626:12;12619:26;12679:4;12672;12669:1;12665:12;12658:26;12718:8;12711:4;12708:1;12704:12;12697:30;12761:5;12754:4;12751:1;12747:12;12740:27;12824:4;12821:1;12815:4;12812:1;12806:4;12801:3;12790:39;12783:47;12780:2;;;12882:1;12879;12872:12;12780:2;12927:1;12921:8;12911:18;;12505:434;;;;;;:::o;81:13933::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:13933:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:13933:0;;;;;;;",
  "deployedSourceMap": "81:13933:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:13933:0;;;;;;;;;;;;;;;;;;;;;;;;;1422:1036;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11163:454;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1422:1036;1621:4;1637:30;;:::i;:::-;1996:41;;;;;;;;;2012:3;2016:1;2012:6;;;;;;;;;;;;;2004:15;;;1996:41;;;;2029:3;2033:1;2029:6;;;;;;;;;;;;;2021:15;;;1996:41;;;1966:9;:27;;:71;;;;2077:41;;;;;;;;;2093:3;2097:1;2093:6;;;;;;;;;;;;;2085:15;;;2077:41;;;;2110:3;2114:1;2110:6;;;;;;;;;;;;;2102:15;;;2077:41;;;2047:9;:27;;:71;;;;2142:37;;;;;;;;;2158:1;2160;2158:4;;;;;;;;;;;;;2150:13;;;2142:37;;;;2173:1;2175;2173:4;;;;;;;;;;;;;2165:13;;;2142:37;;;2128:9;:11;;:51;;;;2211:9;2189;:19;;:31;;;;;2248:5;2230:9;:15;;:23;;;;;2277:37;;;;;;;;;2293:1;2295;2293:4;;;;;;;;;;;;;2285:13;;;2277:37;;;;2308:1;2310;2308:4;;;;;;;;;;;;;2300:13;;;2277:37;;;2263:9;:11;;:51;;;;2343:6;2324:9;:16;;:25;;;;;;;;;;;2359:26;;:::i;:::-;2388:18;2400:5;2388:11;:18::i;:::-;2359:47;;2423:28;2430:9;2441;2423:6;:28::i;:::-;2416:35;;;;1422:1036;;;;;;;;;;:::o;11163:454::-;11235:16;;:::i;:::-;11301:4;11295:11;11335:2;11329:9;11326:1;11319:20;11387:4;11383:2;11379:13;11373:20;11366:4;11363:1;11359:12;11352:42;11434:2;11428:9;11421:4;11418:1;11414:12;11407:31;11486:4;11482:2;11478:13;11472:20;11465:4;11462:1;11458:12;11451:42;11550:4;11547:1;11541:4;11538:1;11532:4;11527:3;11516:39;11509:47;11506:2;;;11585:1;11582;11575:12;11506:2;11272:339;;;;;:::o;8164:1148::-;8226:22;;:::i;:::-;8270:38;;;;;;;;;8278:13;8284:3;8289:1;8278:5;:13::i;:::-;8270:38;;;;8293:14;8299:3;8304:2;8293:5;:14::i;:::-;8270:38;;;8260:5;:7;;:48;;;;8328:39;;;;;;;;;8336:14;8342:3;8347:2;8336:5;:14::i;:::-;8328:39;;;;8352:14;8358:3;8363:2;8352:5;:14::i;:::-;8328:39;;;8318:5;:7;;:49;;;;8388:41;;;;;;;;;8396:15;8402:3;8407;8396:5;:15::i;:::-;8388:41;;;;8413:15;8419:3;8424;8413:5;:15::i;:::-;8388:41;;;8377:5;:8;;:52;;;;8450:41;;;;;;;;;8458:15;8464:3;8469;8458:5;:15::i;:::-;8450:41;;;;8475:15;8481:3;8486;8475:5;:15::i;:::-;8450:41;;;8439:5;:8;;:52;;;;8501:102;;;;;;;;;8518:41;;;;;;;;;8526:15;8532:3;8537;8526:5;:15::i;:::-;8518:41;;;;8543:15;8549:3;8554;8543:5;:15::i;:::-;8518:41;;;8501:102;;;;8561:41;;;;;;;;;8569:15;8575:3;8580;8569:5;:15::i;:::-;8561:41;;;;8586:15;8592:3;8597;8586:5;:15::i;:::-;8561:41;;;8501:102;;;:5;:13;;:102;;;;8623:15;8629:3;8634;8623:5;:15::i;:::-;8613:5;:7;;:25;;;;;8661:15;8667:3;8672;8661:5;:15::i;:::-;8648:5;:10;;:28;;;;;8697:15;8703:3;8708;8697:5;:15::i;:::-;8686:5;:8;;:26;;;;;8723:28;;:::i;:::-;8776:15;8782:3;8787;8776:5;:15::i;:::-;8761:10;:12;;:30;;;;;8817:15;8823:3;8828;8817:5;:15::i;:::-;8801:10;:13;;:31;;;;;8861:10;8842:5;:16;;:29;;;;8882:32;;:::i;:::-;8929:9;8941:1;8929:13;;8924:233;189:1;8944;:5;8924:233;;;8986:59;;;;;;;;;8994:24;9000:3;9015:2;9011:1;:6;9005:3;:12;8994:5;:24::i;:::-;8986:59;;;;9020:24;9026:3;9041:2;9037:1;:6;9031:3;:12;9020:5;:24::i;:::-;8986:59;;;8970:7;:10;;;8981:1;8970:13;;;;;;;;;;;;:75;;;;9075:71;;;;;;;;;9083:30;9089:3;9110:2;9105:1;189;9101:5;9100:12;9094:3;:18;9083:5;:30::i;:::-;9075:71;;;;9115:30;9121:3;9142:2;9137:1;189;9133:5;9132:12;9126:3;:18;9115:5;:30::i;:::-;9075:71;;;9059:7;:10;;;9070:1;9059:13;;;;;;;;;;;;:87;;;;8951:3;;;;;;;8924:233;;;;9178:25;9184:3;9199;189:1;9195:7;9189:3;:13;9178:5;:25::i;:::-;9166:7;:9;;:37;;;;;9225:25;9231:3;9246;189:1;9242:7;9236:3;:13;9225:5;:25::i;:::-;9213:7;:9;;:37;;;;;9276:7;9260:5;:13;;:23;;;;9300:5;9293:12;;;;8164:1148;;;:::o;2885:4795::-;2980:4;2996:38;;:::i;:::-;3064:221;3093:145;3122:9;:27;;;3151:9;:27;;;3180:9;:11;;;3193:9;:19;;;3214:9;:15;;;3111:119;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3111:119:0;;;3101:130;;;;;;3093:139;;;:143;:145::i;:::-;3240:5;:7;;;3249:5;:7;;;3258:5;:8;;;3268:5;:8;;;3082:195;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3082:195:0;;;3072:206;;;;;;3064:215;;;:219;:221::i;:::-;3044:15;:17;;:241;;;;;3316:25;3323:15;:17;;;3316:6;:25::i;:::-;3295:15;:18;;:46;;;;3371:55;3400:15;:17;;;3389:29;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3389:29:0;;;3379:40;;;;;;3371:49;;;:53;:55::i;:::-;3351:15;:17;;:75;;;;;3460:40;3482:15;:17;;;3460:15;:17;;;:21;;:40;;;;:::i;:::-;3436:15;:18;;;3455:1;3436:21;;;;;;;;;;;;:64;;;;;3515:9;3527:1;3515:13;;3510:138;3534:1;3530;:5;3510:138;;;3589:48;3619:15;:17;;;3589:15;:18;;;3612:1;3608;:5;3589:25;;;;;;;;;;;;;:29;;:48;;;;:::i;:::-;3565:15;:18;;;3584:1;3565:21;;;;;;;;;;;;:72;;;;;3537:3;;;;;;;3510:138;;;;3692:34;3698:4;3692:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3704:15;:18;;;3723:1;3704:21;;;;;;;;;;;;;3692:5;:34::i;:::-;3657:15;:32;;:69;;;;3756:70;3785:15;:17;;;3804:5;:13;;;3774:44;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3774:44:0;;;3764:55;;;;;;3756:64;;;:68;:70::i;:::-;3736:15;:17;;:90;;;;;3946:146;4031:60;4069:15;:18;;;4088:1;4069:21;;;;;;;;;;;;;4031:33;160:2;4057:1;:6;4031:15;:18;;;4050:1;4031:21;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;:37;;:60;;;;:::i;:::-;3946:80;3981:44;4003:15;:18;;;4022:1;4003:21;;;;;;;;;;;;;3981:15;:17;;;:21;;:44;;;;:::i;:::-;3946:30;3957:15;:18;;;3946:10;:30::i;:::-;:34;;:80;;;;:::i;:::-;:84;;:146;;;;:::i;:::-;3926:15;:17;;:166;;;;;4153:110;4157:40;4161:5;:13;;;4175:1;4161:16;;;;;;;;;;;;;4179:15;:17;;;4157:3;:40::i;:::-;4199:63;4203:5;:13;;;4217:1;4203:16;;;;;;;;;;;;;4221:40;4243:15;:17;;;4221:15;:17;;;:21;;:40;;;;:::i;:::-;4199:3;:63::i;:::-;4153:3;:110::i;:::-;4129:15;:21;;:134;;;;4319:30;4331:15;:17;;;4319:5;:7;;;:11;;:30;;;;:::i;:::-;4299:15;:17;;:50;;;;;4360:40;;:::i;:::-;4436:24;:5;:16;;;:18;;;:22;:24::i;:::-;4410:16;:23;;:50;;;;;4492:75;4496:27;4500:1;4496:27;;;;;;;;;;;;;;;;;;;;;;;;;;4503:5;:16;;;:19;;;4496:3;:27::i;:::-;4525:41;4529:9;:11;;;4542:16;:23;;;4525:3;:41::i;:::-;4492:3;:75::i;:::-;4470:16;:19;;:97;;;;4603:34;;;;;;;;;;;;;;;;;;;4621:9;:15;;;4603:7;:34::i;:::-;4577:16;:23;;:60;;;;4669:97;4673:49;4677:16;:23;;;4702:5;:16;;;:19;;;4673:3;:49::i;:::-;4724:41;4728:9;:11;;;4741:16;:23;;;4724:3;:41::i;:::-;4669:3;:97::i;:::-;4647:16;:19;;:119;;;;4803:261;4807:146;4811:118;4815:52;4819:9;:27;;;4848:5;:16;;;:18;;;4815:3;:52::i;:::-;4869:59;4873:9;:27;;;4902:25;:5;:16;;;:19;;;:23;:25::i;:::-;4869:3;:59::i;:::-;4811:3;:118::i;:::-;4931:15;:18;;;4950:1;4931:21;;;;;;;;;;;;;4807:3;:146::i;:::-;4955:108;4959:80;4963:33;4967:5;:8;;;4977:5;:16;;;:18;;;4963:3;:33::i;:::-;4998:40;5002:5;:8;;;5012:25;:5;:16;;;:19;;;:23;:25::i;:::-;4998:3;:40::i;:::-;4959:3;:80::i;:::-;5041:15;:18;;;5060:1;5041:21;;;;;;;;;;;;;4955:3;:108::i;:::-;4803:3;:261::i;:::-;4776:16;:24;;:288;;;;5096:187;5100:98;5104:49;5108:1;5104:49;;;;;;;;;;;;;;;;;;;;;;;;;;5111:41;5133:5;:16;;;:18;;;5111:15;:17;;;:21;;:41;;;;:::i;:::-;5104:3;:49::i;:::-;5155:42;5159:1;5155:42;;;;;;;;;;;;;;;;;;;;;;;;;;5162:34;5177:5;:16;;;:18;;;5162:5;:10;;;:14;;:34;;;;:::i;:::-;5155:3;:42::i;:::-;5100:3;:98::i;:::-;5200:82;5204:77;5208:16;:24;;;5234:46;5238:15;:21;;;5261:5;:16;;;:18;;;5234:3;:46::i;:::-;5204:3;:77::i;:::-;5200:3;:82::i;:::-;5096:3;:187::i;:::-;5074:16;:19;;:209;;;;5294:17;5314:136;5343:15;:17;;;5362:16;:19;;;5383:16;:19;;;5404:16;:19;;;5425:9;:16;;;5332:110;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5332:110:0;;;5322:121;;;;;;5314:130;;;:134;:136::i;:::-;5294:156;;5481:5;:16;;;:18;;;5468:9;:31;5460:86;;;;;;;;;;;;;;;;;;;;;;;;5557:18;5578:87;5607:5;:16;;;:18;;;5627:5;:7;;;5636:5;:10;;;5648:5;:8;;;5596:61;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5596:61:0;;;5586:72;;;;;;5578:81;;;:85;:87::i;:::-;5557:108;;5675:16;;:::i;:::-;5694:18;5698:1;5694:18;;;;;;;;;;;;;;;;;;;;;;;;;;5701:10;5694:3;:18::i;:::-;5675:37;;5722:25;;:::i;:::-;5750:35;5762:2;5750:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5766:15;:18;;;5750:11;:35::i;:::-;5722:63;;5795:22;;:::i;:::-;5820:90;5831:44;5837:15;:18;;;5857:15;:17;;;5831:5;:44::i;:::-;5877:15;:32;;;5820:10;:90::i;:::-;5795:115;;5920:16;;:::i;:::-;5939:95;5943:45;5947:5;:7;;;5956:31;5960:5;:7;;;5969:15;:17;;;5956:3;:31::i;:::-;5943:3;:45::i;:::-;5990:43;5994:13;6004:2;5994:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;6009:23;:15;:17;;;:21;:23::i;:::-;5990:3;:43::i;:::-;5939:3;:95::i;:::-;5920:114;;6048:57;6052:21;6056:16;6060:1;6056:16;;;;;;;;;;;;;;;;;;;;;;;;;;6063:5;:8;;;6056:3;:16::i;:::-;6052:3;:21::i;:::-;6075:29;6079:1;6082:21;6089:7;6098:4;6082:6;:21::i;:::-;6075:3;:29::i;:::-;6048:3;:57::i;:::-;6044:61;;6119:23;6123:1;6126:15;6130:1;6133:5;:7;;;6126:3;:15::i;:::-;6119:3;:23::i;:::-;6115:27;;6197:32;;:::i;:::-;6232:5;:13;;;6197:48;;6255:28;;:::i;:::-;6298:9;6310:1;6298:13;;6293:334;189:1;6313;:5;6293:334;;;6352:78;6381:10;6393:7;:10;;;6404:1;6393:13;;;;;;;;;;;;;6408:7;:10;;;6419:1;6408:13;;;;;;;;;;;;;6370:52;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6370:52:0;;;6360:63;;;;;;6352:72;;;:76;:78::i;:::-;6339:91;;6460:10;6444;6455:1;6444:13;;;;;;;;;;;;:26;;;;;6484:12;6499:16;:10;:14;:16::i;:::-;6484:31;;6533:83;6537:75;6541:37;6545:7;:10;;;6556:1;6545:13;;;;;;;;;;;;;6560:17;6575:1;6560:10;:14;;:17;;;;:::i;:::-;6541:3;:37::i;:::-;6580:31;6584:7;:10;;;6595:1;6584:13;;;;;;;;;;;;;6599:11;6608:1;6599:4;:8;;:11;;;;:::i;:::-;6580:3;:31::i;:::-;6537:3;:75::i;:::-;6614:1;6533:3;:83::i;:::-;6529:87;;6293:334;6320:3;;;;;;;6293:334;;;;6637:32;;:::i;:::-;6699:1;6679:14;6694:1;6679:17;;;;;;;;;;;;:21;;;;;6715:9;6727:1;6715:13;;6710:113;189:1;6730;:5;6710:113;;;6776:36;6798:10;6809:1;6798:13;;;;;;;;;;;;;6776:14;6791:1;6776:17;;;;;;;;;;;;;:21;;:36;;;;:::i;:::-;6756:14;6771:1;6756:17;;;;;;;;;;;;:56;;;;;6737:3;;;;;;;6710:113;;;;6832:21;;:::i;:::-;6883:23;:14;6898:1;6883:17;;;;;;;;;;;;;:21;:23::i;:::-;6863:14;6878:1;6863:17;;;;;;;;;;;;:43;;;;;6921:9;6933:1;6921:13;;6916:406;6942:1;160:2;6940:3;;;;;;;;6936:1;:7;6916:406;;;6969:9;6981:1;6969:13;;6964:348;160:2;6995:1;6990;6985;:6;;;;6984:12;:16;6964:348;;;7025:10;7048:1;7043;:6;;;;7038:1;:12;7025:25;;7073:6;7080:2;7073:10;;;;;;;;;;;;;7072:11;7068:230;;;7107:12;7122:48;7148:10;7167:1;7163;189;7159:5;:9;7148:21;;;;;;;;;;;;;7122:10;7141:1;7137;189;7133:5;:9;7122:21;;;;;;;;;;;;;:25;;:48;;;;:::i;:::-;7107:63;;7213:27;7235:4;7213:14;7228:1;7213:17;;;;;;;;;;;;;:21;;:27;;;;:::i;:::-;7192:14;7207:2;7192:18;;;;;;;;;;;;:48;;;;;7275:4;7262:6;7269:2;7262:10;;;;;;;;;;;;:17;;;;;;;;;;;7068:230;;6964:348;7002:3;;;;;6964:348;;;;6945:3;;;;;6916:406;;;;7332:20;;:::i;:::-;7355:26;7366:14;7355:10;:26::i;:::-;7332:49;;7391:20;;:::i;:::-;7414:43;7433:14;7449:7;7414:18;:43::i;:::-;7391:66;;7467:21;;:::i;:::-;7491:88;7495:49;7499:21;7503:5;7510:7;:9;;;7499:3;:21::i;:::-;7522;7526:5;7533:7;:9;;;7522:3;:21::i;:::-;7495:3;:49::i;:::-;7546:32;7550:1;7553:24;7567:7;:9;;;7553:7;:9;;;:13;;:24;;;;:::i;:::-;7546:3;:32::i;:::-;7491:3;:88::i;:::-;7467:112;;7597:13;7600:1;7603:6;7597:2;:13::i;:::-;7589:63;;;;;;;;;;;;;;;;;;;;;;;;7669:4;7662:11;;;;;;;;;;;;;;;;;2885:4795;;;;:::o;10796:295::-;10869:14;10962:4;10956:11;11018:5;11011:4;11004:5;11000:16;10996:28;10990:35;10987:1;10980:46;11073:1;11067:8;11057:18;;10933:152;;;;;:::o;727:95:3:-;774:7;117:77;800:1;:15;;;;;;;;793:22;;727:95;;;:::o;10356:236:0:-;10409:24;;:::i;:::-;10457:1;10445:6;10452:1;10445:9;;;;;;;;;;;;:13;;;;;10480:4;10468:6;10475:1;10468:9;;;;;;;;;;;;:16;;;;;10499:9;10511:1;10499:13;;10494:92;160:2;10514:1;:5;10494:92;;;10552:23;10570:4;10552:6;10563:1;10559;:5;10552:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;10540:6;10547:1;10540:9;;;;;;;;;;;;:35;;;;;10521:3;;;;;;;10494:92;;;;10356:236;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;10598:192:0:-;10668:24;;:::i;:::-;10709:9;10721:1;10709:13;;10704:80;160:2;10724:1;:5;10704:80;;;10762:11;10771:1;10762;10764;10762:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;10750:6;10757:1;10750:9;;;;;;;;;;;;:23;;;;;10731:3;;;;;;;10704:80;;;;10598:192;;;;:::o;828:127:3:-;886:7;917:1;912;:6;;:36;;947:1;943;117:77;929:15;:19;912:36;;;925:1;921;:5;912:36;905:43;;828:127;;;;:::o;9762:180:0:-;9827:14;9858:9;9870:1;9858:13;;9853:83;160:2;9873:1;:5;9853:83;;;9908:17;9919:2;9922:1;9919:5;;;;;;;;;;;;;9908:6;:10;;:17;;;;:::i;:::-;9899:26;;9880:3;;;;;;;9853:83;;;;9762:180;;;:::o;11623:382::-;11688:16;;:::i;:::-;11754:4;11748:11;11788:1;11782:8;11779:1;11772:19;11838:4;11835:1;11831:12;11825:19;11818:4;11815:1;11811:12;11804:41;11879:1;11872:4;11869:1;11865:12;11858:23;11938:4;11935:1;11929:4;11926:1;11920:4;11915:3;11904:39;11897:47;11894:2;;;11973:1;11970;11963:12;11894:2;11725:274;;;;;:::o;961:95:3:-;1008:7;1048:1;117:77;1034:15;1027:22;;961:95;;;:::o;13657:355:0:-;13729:14;;:::i;:::-;13801:69;227:77;13844:5;13851:1;13827:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13827:26:0;;;13817:37;;;;;;13809:46;;;:60;;;;;;;;13801:7;:69::i;:::-;13794:76;;13657:355;;;;:::o;12011:181::-;12065:14;;:::i;:::-;12098:47;;;;;;;;;12106:1;:3;;;12098:47;;;;227:77;12126:1;:3;;;:17;;;;;;;;227:77;12111:33;12098:47;;;12091:54;;12011:181;;;:::o;9534:222::-;9622:24;;:::i;:::-;9663:9;9675:1;9663:13;;9658:92;160:2;9678:1;:5;9658:92;;;9716:23;9720:2;9723:1;9720:5;;;;;;;;;;;;;9727:11;:2;9730:1;9727:5;;;;;;;;;;;;;:9;:11::i;:::-;9716:3;:23::i;:::-;9704:6;9711:1;9704:9;;;;;;;;;;;;:35;;;;9685:3;;;;;;;9658:92;;;;9534:222;;;;:::o;9318:210::-;9403:24;;:::i;:::-;9444:9;9456:1;9444:13;;9439:83;160:2;9459:1;:5;9439:83;;;9497:14;9506:1;9508;9506:4;;;;;;;;;;;;;9497:1;9499;9497:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;9485:6;9492:1;9485:9;;;;;;;;;;;;:26;;;;;9466:3;;;;;;;9439:83;;;;9318:210;;;;:::o;9948:178::-;10012:18;;:::i;:::-;10047:9;10059:1;10047:13;;10042:78;160:2;10062:1;:5;10042:78;;;10094:15;10098:3;10103:2;10106:1;10103:5;;;;;;;;;;;;;10094:3;:15::i;:::-;10088:21;;10069:3;;;;;;;10042:78;;;;9948:178;;;:::o;10132:218::-;10215:21;;:::i;:::-;10253:9;10265:1;10253:13;;10248:96;160:2;10268:1;:5;10248:96;;;10303:30;10307:6;10315:17;10319:2;10322:1;10319:5;;;;;;;;;;;;;10326:2;10329:1;10326:5;;;;;;;;;;;;;10315:3;:17::i;:::-;10303:3;:30::i;:::-;10294:39;;10275:3;;;;;;;10248:96;;;;10132:218;;;;:::o;618:103:3:-;665:7;691:23;695:1;712;117:77;698:15;691:3;:23::i;:::-;684:30;;618:103;;;:::o;1062:580::-;1130:14;1156:13;117:77;1156:27;;1231:4;1225:11;1259:4;1256:1;1249:15;1298:4;1291;1288:1;1284:12;1277:26;1337:4;1330;1327:1;1323:12;1316:26;1376:4;1369;1366:1;1362:12;1355:26;1415:8;1408:4;1405:1;1401:12;1394:30;1458:5;1451:4;1448:1;1444:12;1437:27;1521:4;1518:1;1512:4;1509:1;1503:4;1498:3;1487:39;1480:47;1477:2;;;1579:1;1576;1569:12;1477:2;1624:1;1618:8;1608:18;;1202:434;;;;;;:::o;7686:200:0:-;7751:21;;:::i;:::-;7789:9;7801:1;7789:13;;7784:96;160:2;7804:1;:5;7784:96;;;7839:30;7843:6;7851:17;7855:2;7858:1;7855:5;;;;;;;;;;;;7851:17;;;;;;;;;;;;;;;;;;;;;;;;;;7862:2;7865:1;7862:5;;;;;;;;;;;;;7851:3;:17::i;:::-;7839:3;:30::i;:::-;7830:39;;7811:3;;;;;;;7784:96;;;;7686:200;;;:::o;7892:238::-;7987:21;;:::i;:::-;8025:9;8037:1;8025:13;;8020:104;160:2;8040:1;:5;8020:104;;;8075:38;8079:6;8087:25;8091:2;8094:1;8091:5;;;;;;;;;;;;;8098:2;8109:1;8105;160:2;8101:5;:9;8098:13;;;;;;;;;;;;;8087:3;:25::i;:::-;8075:3;:38::i;:::-;8066:47;;8047:3;;;;;;;8020:104;;;;7892:238;;;;:::o;12198:131::-;12271:4;12302:2;:4;;;12294:2;:4;;;:12;:28;;;;;12318:2;:4;;;12310:2;:4;;;:12;12294:28;12287:35;;12198:131;;;;:::o;374:116:3:-;432:7;117:77;458:25;;;;;;;468:1;465;458:25;451:32;;374:116;;;;:::o;12951:488:0:-;13005:14;;:::i;:::-;13070:9;13089:311;13096:4;13089:311;;;13116:16;13155:1;13135:17;13144:4;13150:1;13135:8;:17::i;:::-;:21;13116:40;;13242:41;13251:8;13281:1;13276;227:77;13262:15;13261:21;;;;;;;;13242:8;:41::i;:::-;13238:45;;13319:8;13301:14;13310:1;13313;13301:8;:14::i;:::-;:26;13297:70;;;13347:5;;;13297:70;13388:1;13380:9;;;;13089:311;;;;13416:16;;;;;;;;;13424:4;13416:16;;;;13430:1;13416:16;;;13409:23;;;12951:488;;;:::o;12335:610::-;12408:14;12459:13;227:77;12459:27;;12534:4;12528:11;12562:4;12559:1;12552:15;12601:4;12594;12591:1;12587:12;12580:26;12640:4;12633;12630:1;12626:12;12619:26;12679:4;12672;12669:1;12665:12;12658:26;12718:8;12711:4;12708:1;12704:12;12697:30;12761:5;12754:4;12751:1;12747:12;12740:27;12824:4;12821:1;12815:4;12812:1;12806:4;12801:3;12790:39;12783:47;12780:2;;;12882:1;12879;12872:12;12780:2;12927:1;12921:8;12911:18;;12505:434;;;;;;:::o;81:13933::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:13933:0;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:13933:0;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:13933:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:13933:0;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:13933:0;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:615;;264:3;257:4;249:6;245:17;241:27;234:35;231:2;;;282:1;279;272:12;231:2;306:3;324:78;339:62;394:6;339:62;;;324:78;;;315:87;;419:5;478:6;525:3;517:4;509:6;505:17;500:3;496:27;493:36;490:2;;;542:1;539;532:12;490:2;567:1;552:206;577:6;574:1;571:13;552:206;;;635:3;657:37;690:3;678:10;657:37;;;652:3;645:50;718:4;713:3;709:14;702:21;;746:4;741:3;737:14;730:21;;609:149;599:1;596;592:9;587:14;;552:206;;;556:14;224:540;;;;;;;;772:118;;839:46;877:6;864:20;839:46;;;830:55;;824:66;;;;;898:440;;999:3;992:4;984:6;980:17;976:27;969:35;966:2;;;1017:1;1014;1007:12;966:2;1054:6;1041:20;1076:64;1091:48;1132:6;1091:48;;;1076:64;;;1067:73;;1160:6;1153:5;1146:21;1196:4;1188:6;1184:17;1229:4;1222:5;1218:16;1264:3;1255:6;1250:3;1246:16;1243:25;1240:2;;;1281:1;1278;1271:12;1240:2;1291:41;1325:6;1320:3;1315;1291:41;;;959:379;;;;;;;;1380:460;;1494:4;1482:9;1477:3;1473:19;1469:30;1466:2;;;1512:1;1509;1502:12;1466:2;1530:20;1545:4;1530:20;;;1521:29;;1597:1;1628:49;1673:3;1664:6;1653:9;1649:22;1628:49;;;1622:3;1615:5;1611:15;1604:74;1560:129;1736:2;1769:49;1814:3;1805:6;1794:9;1790:22;1769:49;;;1762:4;1755:5;1751:16;1744:75;1699:131;1460:380;;;;;1847:118;;1914:46;1952:6;1939:20;1914:46;;;1905:55;;1899:66;;;;;1972:1411;;;;;;;;;2296:3;2284:9;2275:7;2271:23;2267:33;2264:2;;;2313:1;2310;2303:12;2264:2;2348:1;2365:76;2433:7;2424:6;2413:9;2409:22;2365:76;;;2355:86;;2327:120;2478:2;2496:76;2564:7;2555:6;2544:9;2540:22;2496:76;;;2486:86;;2457:121;2609:3;2628:76;2696:7;2687:6;2676:9;2672:22;2628:76;;;2618:86;;2588:122;2741:3;2760:53;2805:7;2796:6;2785:9;2781:22;2760:53;;;2750:63;;2720:99;2850:3;2869:53;2914:7;2905:6;2894:9;2890:22;2869:53;;;2859:63;;2829:99;2959:3;2978:76;3046:7;3037:6;3026:9;3022:22;2978:76;;;2968:86;;2938:122;3091:3;3110:53;3155:7;3146:6;3135:9;3131:22;3110:53;;;3100:63;;3070:99;3228:3;3217:9;3213:19;3200:33;3253:18;3245:6;3242:30;3239:2;;;3285:1;3282;3275:12;3239:2;3305:62;3359:7;3350:6;3339:9;3335:22;3305:62;;;3295:72;;3179:194;2258:1125;;;;;;;;;;;;3390:467;;;3561:3;3549:9;3540:7;3536:23;3532:33;3529:2;;;3578:1;3575;3568:12;3529:2;3613:1;3630:78;3700:7;3691:6;3680:9;3676:22;3630:78;;;3620:88;;3592:122;3745:2;3763:78;3833:7;3824:6;3813:9;3809:22;3763:78;;;3753:88;;3724:123;3523:334;;;;;;3865:259;;3993:91;4080:3;4073:5;3993:91;;;4113:4;4108:3;4104:14;4090:28;;3986:138;;;;;4132:120;4215:31;4240:5;4215:31;;;4210:3;4203:44;4197:55;;;4332:743;4503:69;4566:5;4503:69;;;4585:105;4683:6;4678:3;4585:105;;;4578:112;;4710:71;4775:5;4710:71;;;4802:1;4787:276;4812:6;4809:1;4806:13;4787:276;;;4859:105;4960:3;4951:6;4945:13;4859:105;;;4852:112;;4981:75;5049:6;4981:75;;;4971:85;;4834:1;4831;4827:9;4822:14;;4787:276;;;4791:14;4482:593;;;;;5083:111;5160:28;5182:5;5160:28;;;5155:3;5148:41;5142:52;;;5201:360;;5331:39;5364:5;5331:39;;;5382:89;5464:6;5459:3;5382:89;;;5375:96;;5476:52;5521:6;5516:3;5509:4;5502:5;5498:16;5476:52;;;5549:6;5544:3;5540:16;5533:23;;5311:250;;;;;;5569:465;;5729:67;5793:2;5788:3;5729:67;;;5722:74;;5829:66;5825:1;5820:3;5816:11;5809:87;5930:66;5925:2;5920:3;5916:12;5909:88;6025:2;6020:3;6016:12;6009:19;;5715:319;;;;6043:465;;6203:67;6267:2;6262:3;6203:67;;;6196:74;;6303:66;6299:1;6294:3;6290:11;6283:87;6404:66;6399:2;6394:3;6390:12;6383:88;6499:2;6494:3;6490:12;6483:19;;6189:319;;;;6581:464;6724:4;6719:3;6715:14;6803:3;6796:5;6792:15;6786:22;6814:61;6870:3;6865;6861:13;6848:11;6814:61;;;6744:137;6950:4;6943:5;6939:16;6933:23;6962:62;7018:4;7013:3;7009:14;6996:11;6962:62;;;6891:139;6697:348;;;;7117:450;7246:4;7241:3;7237:14;7325:3;7318:5;7314:15;7308:22;7336:61;7392:3;7387;7383:13;7370:11;7336:61;;;7266:137;7472:4;7465:5;7461:16;7455:23;7484:62;7540:4;7535:3;7531:14;7518:11;7484:62;;;7413:139;7219:348;;;;7639:460;7778:4;7773:3;7769:14;7857:3;7850:5;7846:15;7840:22;7868:61;7924:3;7919;7915:13;7902:11;7868:61;;;7798:137;8004:4;7997:5;7993:16;7987:23;8016:62;8072:4;8067:3;8063:14;8050:11;8016:62;;;7945:139;7751:348;;;;8106:110;8179:31;8204:5;8179:31;;;8174:3;8167:44;8161:55;;;8223:120;8306:31;8331:5;8306:31;;;8301:3;8294:44;8288:55;;;8350:159;8451:52;8471:31;8496:5;8471:31;;;8451:52;;;8446:3;8439:65;8433:76;;;8516:405;;8690:95;8781:3;8772:6;8690:95;;;8683:102;;8796:75;8867:3;8858:6;8796:75;;;8893:2;8888:3;8884:12;8877:19;;8913:3;8906:10;;8671:250;;;;;;8928:201;;9040:2;9029:9;9025:18;9017:26;;9054:65;9116:1;9105:9;9101:17;9092:6;9054:65;;;9011:118;;;;;9136:407;;9327:2;9316:9;9312:18;9304:26;;9377:9;9371:4;9367:20;9363:1;9352:9;9348:17;9341:47;9402:131;9528:4;9402:131;;;9394:139;;9298:245;;;;9550:407;;9741:2;9730:9;9726:18;9718:26;;9791:9;9785:4;9781:20;9777:1;9766:9;9762:17;9755:47;9816:131;9942:4;9816:131;;;9808:139;;9712:245;;;;9964:313;;10132:2;10121:9;10117:18;10109:26;;10146:121;10264:1;10253:9;10249:17;10240:6;10146:121;;;10103:174;;;;;10284:937;;10652:3;10641:9;10637:19;10629:27;;10667:117;10781:1;10770:9;10766:17;10757:6;10667:117;;;10795:118;10909:2;10898:9;10894:18;10885:6;10795:118;;;10924:119;11038:3;11027:9;11023:19;11014:6;10924:119;;;11054:73;11122:3;11111:9;11107:19;11098:6;11054:73;;;11138;11206:3;11195:9;11191:19;11182:6;11138:73;;;10623:598;;;;;;;;;11228:213;;11346:2;11335:9;11331:18;11323:26;;11360:71;11428:1;11417:9;11413:17;11404:6;11360:71;;;11317:124;;;;;11448:493;;11678:3;11667:9;11663:19;11655:27;;11693:71;11761:1;11750:9;11746:17;11737:6;11693:71;;;11775:156;11927:2;11916:9;11912:18;11903:6;11775:156;;;11649:292;;;;;;11948:620;;12214:3;12203:9;12199:19;12191:27;;12229:71;12297:1;12286:9;12282:17;12273:6;12229:71;;;12311:118;12425:2;12414:9;12410:18;12401:6;12311:118;;;12440;12554:2;12543:9;12539:18;12530:6;12440:118;;;12185:383;;;;;;;12575:936;;12943:3;12932:9;12928:19;12920:27;;12958:71;13026:1;13015:9;13011:17;13002:6;12958:71;;;13040:118;13154:2;13143:9;13139:18;13130:6;13040:118;;;13169;13283:2;13272:9;13268:18;13259:6;13169:118;;;13298:119;13412:3;13401:9;13397:19;13388:6;13298:119;;;13428:73;13496:3;13485:9;13481:19;13472:6;13428:73;;;12914:597;;;;;;;;;13518:1028;;13932:3;13921:9;13917:19;13909:27;;13947:71;14015:1;14004:9;14000:17;13991:6;13947:71;;;14029:118;14143:2;14132:9;14128:18;14119:6;14029:118;;;14158;14272:2;14261:9;14257:18;14248:6;14158:118;;;14287:119;14401:3;14390:9;14386:19;14377:6;14287:119;;;14417;14531:3;14520:9;14516:19;14507:6;14417:119;;;13903:643;;;;;;;;;14553:547;;14755:3;14744:9;14740:19;14732:27;;14770:71;14838:1;14827:9;14823:17;14814:6;14770:71;;;14852:72;14920:2;14909:9;14905:18;14896:6;14852:72;;;14935;15003:2;14992:9;14988:18;14979:6;14935:72;;;15018;15086:2;15075:9;15071:18;15062:6;15018:72;;;14726:374;;;;;;;;15107:256;;15169:2;15163:9;15153:19;;15207:4;15199:6;15195:17;15306:6;15294:10;15291:22;15270:18;15258:10;15255:34;15252:62;15249:2;;;15327:1;15324;15317:12;15249:2;15347:10;15343:2;15336:22;15147:216;;;;;15370:233;;15527:18;15519:6;15516:30;15513:2;;;15559:1;15556;15549:12;15513:2;15588:4;15580:6;15576:17;15568:25;;15450:153;;;;15610:258;;15753:18;15745:6;15742:30;15739:2;;;15785:1;15782;15775:12;15739:2;15829:4;15825:9;15818:4;15810:6;15806:17;15802:33;15794:41;;15858:4;15852;15848:15;15840:23;;15676:192;;;;15877:125;;15989:6;15978:17;;15970:32;;;;16011:113;;16116:3;16106:13;;16100:24;;;;16131:92;;16212:5;16206:12;16196:22;;16190:33;;;;16231:137;;16357:4;16349:6;16345:17;16334:28;;16327:41;;;;16377:161;;16529:3;16514:18;;16507:31;;;;;16547:163;;16662:6;16657:3;16650:19;16699:4;16694:3;16690:14;16675:29;;16643:67;;;;;16719:145;;16855:3;16840:18;;16833:31;;;;;16872:105;;16941:31;16966:5;16941:31;;;16930:42;;16924:53;;;;16984:92;;17064:5;17057:13;17050:21;17039:32;;17033:43;;;;17083:128;;17163:42;17156:5;17152:54;17141:65;;17135:76;;;;17218:79;;17287:5;17276:16;;17270:27;;;;17304:105;;17373:31;17398:5;17373:31;;;17362:42;;17356:53;;;;17416:79;;17485:5;17474:16;;17468:27;;;;17502:128;;17582:42;17575:5;17571:54;17560:65;;17554:76;;;;17637:79;;17706:5;17695:16;;17689:27;;;;17724:145;17805:6;17800:3;17795;17782:30;17861:1;17852:6;17847:3;17843:16;17836:27;17775:94;;;;17878:268;17943:1;17950:101;17964:6;17961:1;17958:13;17950:101;;;18040:1;18035:3;18031:11;18025:18;18021:1;18016:3;18012:11;18005:39;17986:2;17983:1;17979:10;17974:15;;17950:101;;;18066:6;18063:1;18060:13;18057:2;;;18131:1;18122:6;18117:3;18113:16;18106:27;18057:2;17927:219;;;;;18154:74;;18218:5;18207:16;;18201:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract BurnVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 32;\n    uint256 constant n = 5;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n\n    G1Point[m] gs;\n    G1Point[m] hs;\n    G1Point g;\n    G1Point h;\n\n    uint256[m] twos = powers(2); // how much is this actually used?\n\n    struct BurnStatement {\n        G1Point balanceCommitNewL;\n        G1Point balanceCommitNewR;\n        G1Point y;\n        uint256 bTransfer;\n        uint256 epoch; // or uint8?\n        address sender;\n        G1Point u;\n    }\n\n    struct BurnProof {\n        G1Point A;\n        G1Point S;\n        G1Point XL;\n        G1Point XR;\n        G1Point[2] commits;\n        uint256 tauX;\n        uint256 mu;\n        uint256 t;\n        SigmaProof sigmaProof;\n        InnerProductProof ipProof;\n    }\n\n    struct SigmaProof {\n        uint256 c;\n        uint256 sX;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs[i] = mapInto(\"G\", i);\n            hs[i] = mapInto(\"H\", i);\n        }\n    } // will it be more expensive later on to sload these than to recompute them?\n\n    function verifyBurn(bytes32[2] memory CLn, bytes32[2] memory CRn, bytes32[2] memory y, uint256 bTransfer, uint256 epoch, bytes32[2] memory u, address sender, bytes memory proof) view public returns (bool) {\n        BurnStatement memory statement; // WARNING: if this is called directly in the console,\n        // and your strings are less than 64 characters, they will be padded on the right, not the left. should hopefully not be an issue,\n        // as this will typically be called simply by the other contract. still though, beware\n        statement.balanceCommitNewL = G1Point(uint256(CLn[0]), uint256(CLn[1]));\n        statement.balanceCommitNewR = G1Point(uint256(CRn[0]), uint256(CRn[1]));\n        statement.y = G1Point(uint256(y[0]), uint256(y[1]));\n        statement.bTransfer = bTransfer;\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        statement.sender = sender;\n        BurnProof memory burnProof = unserialize(proof);\n        return verify(statement, burnProof);\n    }\n\n    struct BurnAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[2] zs; // [z^2, z^3]\n        uint256[m] twoTimesZSquared;\n        uint256 k;\n        G1Point tEval;\n        uint256 t;\n        uint256 x;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 minusC;\n        G1Point Ay;\n        G1Point gEpoch;\n        G1Point Au;\n        G1Point cCommit;\n        G1Point At;\n    }\n\n    function verify(BurnStatement memory statement, BurnProof memory proof) view internal returns (bool) {\n        BurnAuxiliaries memory burnAuxiliaries;\n        burnAuxiliaries.y = uint256(keccak256(abi.encode(uint256(keccak256(abi.encode(statement.balanceCommitNewL, statement.balanceCommitNewR, statement.y, statement.bTransfer, statement.epoch))).mod(), proof.A, proof.S, proof.XL, proof.XR))).mod();\n        burnAuxiliaries.ys = powers(burnAuxiliaries.y);\n        burnAuxiliaries.z = uint256(keccak256(abi.encode(burnAuxiliaries.y))).mod();\n        burnAuxiliaries.zs[0] = burnAuxiliaries.z.mul(burnAuxiliaries.z);\n        for (uint256 i = 1; i < 2; i++) { // silly\n            burnAuxiliaries.zs[i] = burnAuxiliaries.zs[i - 1].mul(burnAuxiliaries.z);\n        }\n        burnAuxiliaries.twoTimesZSquared = times(twos, burnAuxiliaries.zs[0]);\n        burnAuxiliaries.x = uint256(keccak256(abi.encode(burnAuxiliaries.z, proof.commits))).mod();\n\n        // begin verification of sigma proof. is it worth passing to a different method?\n        burnAuxiliaries.k = sumScalars(burnAuxiliaries.ys).mul(burnAuxiliaries.z.sub(burnAuxiliaries.zs[0])).sub(burnAuxiliaries.zs[1].mul(2 ** m).sub(burnAuxiliaries.zs[1])); // really care about t - k\n        burnAuxiliaries.tEval = add(mul(proof.commits[0], burnAuxiliaries.x), mul(proof.commits[1], burnAuxiliaries.x.mul(burnAuxiliaries.x))); // replace with \"commit\"?\n        burnAuxiliaries.t = proof.t.sub(burnAuxiliaries.k);\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.minusC = proof.sigmaProof.c.neg();\n        sigmaAuxiliaries.Ay = add(mul(g, proof.sigmaProof.sX), mul(statement.y, sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.Au = add(mul(sigmaAuxiliaries.gEpoch, proof.sigmaProof.sX), mul(statement.u, sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.cCommit = add(mul(add(mul(statement.balanceCommitNewL, proof.sigmaProof.c), mul(statement.balanceCommitNewR, proof.sigmaProof.sX.neg())), burnAuxiliaries.zs[0]), mul(add(mul(proof.XL, proof.sigmaProof.c), mul(proof.XR, proof.sigmaProof.sX.neg())), burnAuxiliaries.zs[1]));\n        sigmaAuxiliaries.At = add(add(mul(g, burnAuxiliaries.t.mul(proof.sigmaProof.c)), mul(h, proof.tauX.mul(proof.sigmaProof.c))), neg(add(sigmaAuxiliaries.cCommit, mul(burnAuxiliaries.tEval, proof.sigmaProof.c))));\n\n        uint256 challenge = uint256(keccak256(abi.encode(burnAuxiliaries.x, sigmaAuxiliaries.Ay, sigmaAuxiliaries.Au, sigmaAuxiliaries.At, statement.sender))).mod();\n        require(challenge == proof.sigmaProof.c, \"Sigma protocol challenge equality failure.\");\n\n        uint256 uChallenge = uint256(keccak256(abi.encode(proof.sigmaProof.c, proof.t, proof.tauX, proof.mu))).mod();\n        G1Point memory u = mul(g, uChallenge);\n        G1Point[m] memory hPrimes = hadamardInv(hs, burnAuxiliaries.ys);\n        uint256[m] memory hExp = addVectors(times(burnAuxiliaries.ys, burnAuxiliaries.z), burnAuxiliaries.twoTimesZSquared);\n        G1Point memory P = add(add(proof.A, mul(proof.S, burnAuxiliaries.x)), mul(sumPoints(gs), burnAuxiliaries.z.neg()));\n        P = add(neg(mul(h, proof.mu)), add(P, commit(hPrimes, hExp)));\n        P = add(P, mul(u, proof.t));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        uint256[n] memory challenges;\n        for (uint256 i = 0; i < n; i++) {\n            uChallenge = uint256(keccak256(abi.encode(uChallenge, ipProof.ls[i], ipProof.rs[i]))).mod();\n            challenges[i] = uChallenge;\n            uint256 xInv = uChallenge.inv();\n            P = add(add(mul(ipProof.ls[i], uChallenge.exp(2)), mul(ipProof.rs[i], xInv.exp(2))), P);\n        }\n\n        uint256[m] memory otherExponents;\n        otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            otherExponents[0] = otherExponents[0].mul(challenges[i]);\n        }\n        bool[m] memory bitSet;\n        otherExponents[0] = otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = challenges[n - 1 - j].mul(challenges[n - 1 - j]);\n                    otherExponents[i1] = otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp = multiExpGs(otherExponents);\n        G1Point memory hTemp = multiExpHsInversed(otherExponents, hPrimes);\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(u, ipProof.a.mul(ipProof.b)));\n        require(eq(P, cProof), \"Inner product equality check failure.\");\n        return true;\n    }\n\n    function multiExpGs(uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(gs[i], ss[i]));\n        }\n    }\n\n    function multiExpHsInversed(uint256[m] memory ss, G1Point[m] memory hs) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(hs[i], ss[m - 1 - i]));\n        }\n    }\n\n    // begin util functions\n    function unserialize(bytes memory arr) internal pure returns (BurnProof memory proof) {\n        proof.A = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.S = G1Point(slice(arr, 64), slice(arr, 96));\n        proof.XL = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.XR = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.commits = [G1Point(slice(arr, 256), slice(arr, 288)), G1Point(slice(arr, 320), slice(arr, 352))];\n        proof.t = slice(arr, 384);\n        proof.tauX = slice(arr, 416);\n        proof.mu = slice(arr, 448);\n\n        SigmaProof memory sigmaProof;\n        sigmaProof.c = slice(arr, 480);\n        sigmaProof.sX = slice(arr, 512);\n        proof.sigmaProof = sigmaProof;\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 544 + i * 64), slice(arr, 576 + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 544 + (n + i) * 64), slice(arr, 576 + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 544 + n * 128);\n        ipProof.b = slice(arr, 576 + n * 128);\n        proof.ipProof = ipProof;\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[m] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) public view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) { // warning: function totally untested!\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) { // warning: function totally untested!\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) { // warning: function totally untested!\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n        // ^^^ important: i haven't tested this, i.e. whether it agrees with ProofUtils.paddedHash(input, i) (cf. also the go version)\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {},
      "links": {},
      "address": "0xE10681CCf3452138a4B8226E583Bbc8919Dd2439",
      "transactionHash": "0x3717121c6d00551b5912444c5f19e643cd5e1b16ac70939eb1607e2ae9066948"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x208F985f55FABb91DA6a71ceE5BC0ef820202C7E",
      "transactionHash": "0xd4a5fa6f5fbb9e74de4abb39ba83d84397dd8771f0c9b179add7e10df97a91eb"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-10-26T15:26:51.336Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}