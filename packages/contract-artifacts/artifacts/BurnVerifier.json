{
  "contractName": "BurnVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2]"
        },
        {
          "name": "bTransfer",
          "type": "uint256"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyBurn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "x",
              "type": "uint256"
            },
            {
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "p1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "uint256"
            },
            {
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "p2",
          "type": "tuple"
        }
      ],
      "name": "add",
      "outputs": [
        {
          "components": [
            {
              "name": "x",
              "type": "uint256"
            },
            {
              "name": "y",
              "type": "uint256"
            }
          ],
          "name": "r",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2]\"},{\"name\":\"bTransfer\",\"type\":\"uint256\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"p1\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"p2\",\"type\":\"tuple\"}],\"name\":\"add\",\"outputs\":[{\"components\":[{\"name\":\"x\",\"type\":\"uint256\"},{\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"r\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":\"BurnVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":{\"keccak256\":\"0x480ac5b762d9c1ed1e6b775b020f8803903388c80164f1efb11f2d9514937e9a\",\"urls\":[\"bzzr://b691fc5835323b10b5cee0a07fb9088a2c376ca3e9dcdc3eedeb69a08eba5161\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x0a8fcd9f60c29d4e0114dd2f632688845d0e505943b3bc514698fd91da377ee6\",\"urls\":[\"bzzr://84371071fa5f1d7eba148701bb8d49c9e2de726fd0feb8669bf4754da418e44b\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480636e1a999e1461005857806382d23b8a14610088575b600080fd5b610072600480360361006d9190810190612048565b6100b8565b60405161007f91906123c1565b60405180910390f35b6100a2600480360361009d9190810190612115565b610267565b6040516100af919061241c565b60405180910390f35b60006100c2611aae565b60408051908101604052808b60006002811015156100dc57fe5b60200201516001900481526020018b60016002811015156100f957fe5b602002015160019004815250816000018190525060408051908101604052808a600060028110151561012757fe5b60200201516001900481526020018a600160028110151561014457fe5b6020020151600190048152508160200181905250604080519081016040528089600060028110151561017257fe5b602002015160019004815260200189600160028110151561018f57fe5b6020020151600190048152508160400181905250868160600181815250508581608001818152505060408051908101604052808660006002811015156101d157fe5b60200201516001900481526020018660016002811015156101ee57fe5b6020020151600190048152508160c00181905250838160a0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610242611b1b565b61024b846102ad565b90506102578282610593565b9250505098975050505050505050565b61026f611ba8565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa15156102a657600080fd5b5092915050565b6102b5611b1b565b60408051908101604052806102cb84600061139f565b81526020016102db84602061139f565b815250816000018190525060408051908101604052806102fc84604061139f565b815260200161030c84606061139f565b8152508160200181905250604080519081016040528061032d84608061139f565b815260200161033d8460a061139f565b8152508160400181905250604080519081016040528061035e8460c061139f565b815260200161036e8460e061139f565b81525081606001819052506040805190810160405280604080519081016040528061039b8661010061139f565b81526020016103ac8661012061139f565b815250815260200160408051908101604052806103cb8661014061139f565b81526020016103dc8661016061139f565b81525081525081608001819052506103f68261018061139f565b8160a001818152505061040b826101a061139f565b8160c0018181525050610420826101c061139f565b8160e0018181525050610435826101e061139f565b8161010001818152505061044b8261020061139f565b816101200181815250506104618261022061139f565b816101400181815250506104778261024061139f565b81610160018181525050610489611bc2565b60008090505b60058110156105495760408051908101604052806104b486604085026102600161139f565b81526020016104ca86604085026102800161139f565b8152508260000151826005811015156104df57fe5b6020020181905250604080519081016040528061050686604085600501026102600161139f565b815260200161051f86604085600501026102800161139f565b81525082602001518260058110151561053457fe5b6020020181905250808060010191505061048f565b5061055c8360806005026102600161139f565b8160400181815250506105778360806005026102800161139f565b8160600181815250508082610180018190525081915050919050565b6000806105eb846000015185602001518660400151876060015188608001518960a001516040516020016105cc96959493929190612437565b60405160208183030381529060405280519060200120600190046113b8565b90506105f5611bf8565b610640828560000151866020015187604001518860600151604051602001610621959493929190612515565b60405160208183030381529060405280519060200120600190046113b8565b81600001818152505061065681600001516113ed565b81602001819052506106958160000151604051602001610676919061249a565b60405160208183030381529060405280519060200120600190046113b8565b8160400181815250506020604051908101604052806106c26002846040015161148a90919063ffffffff16565b81525081606001819052506106fb8160400151826060015160006001811015156106e857fe5b60200201516114f790919063ffffffff16565b816080018181525050610792610738826080015161072a602060020a85608001516114f790919063ffffffff16565b61152e90919063ffffffff16565b6107846107698460600151600060018110151561075157fe5b6020020151856040015161152e90919063ffffffff16565b610776856020015161156e565b6114f790919063ffffffff16565b61152e90919063ffffffff16565b816101000181815250506107b88161010001518560a0015161152e90919063ffffffff16565b8160e001818152505061081f60846020806020026040519081016040528092919082602080156107fd576020028201915b8154815260200190600101908083116107e9575b50505050508260600151600060018110151561081557fe5b60200201516115b9565b8160a00181905250610864816040015185608001516040516020016108459291906124b5565b60405160208183030381529060405280519060200120600190046113b8565b8160c00181815250506108d56108958560800151600060028110151561088657fe5b60200201518360c00151611620565b6108d0866080015160016002811015156108ab57fe5b60200201516108cb8560c001518660c001516114f790919063ffffffff16565b611620565b610267565b8161012001819052506108e6611c64565b610938610918608060408051908101604052908160008201548152602001600182015481525050876101200151611620565b610933886040015161092e89610100015161165b565b611620565b610267565b81602001819052506109836040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508760800151611687565b81604001819052506109c16109a18260400151876101200151611620565b6109bc8860c001516109b789610100015161165b565b611620565b610267565b8160600181905250610a39610a1c6109ef6109e489602001518960600151610267565b886101200151611620565b610a17610a048a600001518a60400151610267565b610a128a610100015161165b565b611620565b610267565b83606001516000600181101515610a2f57fe5b6020020151611620565b8160800181905250610ad6610acc610ac1610aae610a7b6080604080519081016040529081600082015481526020016001820154815250508760e00151611620565b610aa96082604080519081016040529081600082015481526020016001820154815250508b60c00151611620565b610267565b610abc8661012001516116f7565b610267565b876101000151611620565b8260800151610267565b8160a00181905250610b4b610b10608060408051908101604052908160008201548152602001600182015481525050876101400151611620565b610b46610b268960200151896101200151611620565b610b418a60000151610b3c8b610100015161165b565b611620565b610267565b610267565b8160c00181905250610bc0610b85608260408051908101604052908160008201548152602001600182015481525050876101600151611620565b610bbb610b9b8860600151896101200151611620565b610bb68960400151610bb18b610100015161165b565b611620565b610267565b610267565b8160e00181905250610c1d8260c00151826020015183606001518460a001518560c001518660e00151604051602001610bfe96959493929190612569565b60405160208183030381529060405280519060200120600190046113b8565b8160000181815250508461010001518160000151141515610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a906123dc565b60405180910390fd5b610c7b611cd4565b610cb28260000151604051602001610c93919061249a565b60405160208183030381529060405280519060200120600190046113b8565b816080018181525050610ce96080604080519081016040529081600082015481526020016001820154815250508260800151611620565b8160000181905250610d576040602080602002604051908101604052809291906000905b82821015610d49578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610d0d565b505050508460200151611770565b8160200181905250610d7e610d74846020015185604001516115b9565b8460a001516117e7565b8160400181905250610e3d610e26610dab8860000151610da68a602001518860c00151611620565b610267565b610e21610e0f6000602080602002604051908101604052809291906000905b82821015610e06578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610dca565b50505050611860565b610e1c886040015161165b565b611620565b610267565b610e38836020015184604001516118a8565b610267565b8160600181905250610e888160600151610e83608260408051908101604052908160008201548152602001600182015481525050610e7e8a60e0015161165b565b611620565b610267565b8160600181905250610eaf8160600151610eaa83600001518960a00151611620565b610267565b8160600181905250610ebf611bc2565b866101800151905060008090505b600581101561100c57610f3d8360800151836000015183600581101515610ef057fe5b6020020151846020015184600581101515610f0757fe5b6020020151604051602001610f1e939291906124de565b60405160208183030381529060405280519060200120600190046113b8565b83608001818152505082608001518360a0015182600581101515610f5d57fe5b6020020181815250506000610f75846080015161190c565b9050610ff68460600151610ff1610fb9866000015186600581101515610f9757fe5b6020020151610fb460028a6080015161148a90919063ffffffff16565b611620565b610fec876020015187600581101515610fce57fe5b6020020151610fe760028861148a90919063ffffffff16565b611620565b610267565b610267565b8460600181905250508080600101915050610ecd565b5060018260c00151600060208110151561102257fe5b60200201818152505060008090505b60058110156110a35761107a8360a001518260058110151561104f57fe5b60200201518460c00151600060208110151561106757fe5b60200201516114f790919063ffffffff16565b8360c00151600060208110151561108d57fe5b6020020181815250508080600101915050611031565b506110ac611d37565b6110cc8360c0015160006020811015156110c257fe5b602002015161190c565b8360c0015160006020811015156110df57fe5b60200201818152505060008090505b600260208115156110fb57fe5b0481101561120e5760008090505b6020828260019060020a020110156112025760008160019060020a0283019050838160208110151561113757fe5b602002015115156111f657600061118f8760a001518460016005030360058110151561115f57fe5b60200201518860a001518560016005030360058110151561117c57fe5b60200201516114f790919063ffffffff16565b90506111ba818860c00151866020811015156111a757fe5b60200201516114f790919063ffffffff16565b8760c00151836020811015156111cc57fe5b602002018181525050600185836020811015156111e557fe5b602002019015159081151581525050505b50806001019050611109565b508060010190506110ee565b50611217611ba8565b61121f611ba8565b60008090505b60208110156112de576112888361128360008460208110151561124457fe5b60020201604080519081016040529081600082015481526020016001820154815250508960c001518560208110151561127957fe5b6020020151611620565b610267565b92506112cf826112ca8860200151846020811015156112a357fe5b60200201518960c00151856001602003036020811015156112c057fe5b6020020151611620565b610267565b91508080600101915050611225565b506112e7611ba8565b61133b61130e6112fb858860400151611620565b611309858960600151611620565b610267565b611336886000015161133189606001518a604001516114f790919063ffffffff16565b611620565b610267565b905061134b866060015182611942565b151561138c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611383906123fc565b60405180910390fd5b6001995050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001828115156113e557fe5b069050919050565b6113f5611d5b565b600181600060208110151561140657fe5b6020020181815250508181600160208110151561141f57fe5b6020020181815250506000600290505b60208110156114845761146083836001840360208110151561144d57fe5b60200201516114f790919063ffffffff16565b828260208110151561146e57fe5b602002018181525050808060010191505061142f565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156114eb57600080fd5b80519250505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561152357fe5b828409905092915050565b6000818310156115625782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010301611566565b8183035b905092915050565b600080600090505b60208110156115b3576115a4838260208110151561159057fe5b60200201518361196a90919063ffffffff16565b91508080600101915050611576565b50919050565b6115c1611d5b565b60008090505b6020811015611619576115f58385836020811015156115e257fe5b60200201516114f790919063ffffffff16565b828260208110151561160357fe5b60200201818152505080806001019150506115c7565b5092915050565b611628611ba8565b604051835181526020840151602082015282604082015260408260608360075afa151561165457600080fd5b5092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b61168f611ba8565b6116ef7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016116c6929190612399565b60405160208183030381529060405280519060200120600190048115156116e957fe5b066119a1565b905092915050565b6116ff611ba8565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47846020015181151561174357fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b611778611d7f565b60008090505b60208110156117e0576117bd848260208110151561179857fe5b60200201516117b885846020811015156117ae57fe5b602002015161190c565b611620565b82826020811015156117cb57fe5b6020020181905250808060010191505061177e565b5092915050565b6117ef611d5b565b60008090505b602081101561185957611835838260208110151561180f57fe5b6020020151858360208110151561182257fe5b602002015161196a90919063ffffffff16565b828260208110151561184357fe5b60200201818152505080806001019150506117f5565b5092915050565b611868611ba8565b60008090505b60208110156118a25761189382848360208110151561188957fe5b6020020151610267565b9150808060010191505061186e565b50919050565b6118b0611ba8565b60008090505b6020811015611905576118f6826118f186846020811015156118d457fe5b602002015186856020811015156118e757fe5b6020020151611620565b610267565b915080806001019150506118b6565b5092915050565b600061193b8260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010361148a565b9050919050565b600081600001518360000151148015611962575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561199657fe5b828408905092915050565b6119a9611ba8565b60005b600115611a2457600060036119c2856003611a41565b0190506119fe81600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47018115156119f857fe5b04611a41565b915080611a0c836002611a41565b1415611a185750611a24565b600184019350506119ac565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515611aa257600080fd5b80519250505092915050565b61016060405190810160405280611ac3611dae565b8152602001611ad0611dae565b8152602001611add611dae565b81526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001611b15611dae565b81525090565b61052060405190810160405280611b30611dae565b8152602001611b3d611dae565b8152602001611b4a611dae565b8152602001611b57611dae565b8152602001611b64611dc8565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611ba2611df6565b81525090565b604080519081016040528060008152602001600081525090565b6102c060405190810160405280611bd7611e2c565b8152602001611be4611e2c565b815260200160008152602001600081525090565b6109206040519081016040528060008152602001611c14611e5b565b815260200160008152602001611c28611e7f565b815260200160008152602001611c3c611e5b565b8152602001600081526020016000815260200160008152602001611c5e611dae565b81525090565b6101e06040519081016040528060008152602001611c80611dae565b8152602001611c8d611dae565b8152602001611c9a611dae565b8152602001611ca7611dae565b8152602001611cb4611dae565b8152602001611cc1611dae565b8152602001611cce611dae565b81525090565b61114060405190810160405280611ce9611dae565b8152602001611cf6611ea2565b8152602001611d03611e5b565b8152602001611d10611dae565b815260200160008152602001611d24611ed1565b8152602001611d31611e5b565b81525090565b61040060405190810160405280602090602082028038833980820191505090505090565b61040060405190810160405280602090602082028038833980820191505090505090565b610800604051908101604052806020905b611d98611dae565b815260200190600190039081611d905790505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b611de0611dae565b815260200190600190039081611dd85790505090565b6102c060405190810160405280611e0b611e2c565b8152602001611e18611e2c565b815260200160008152602001600081525090565b610140604051908101604052806005905b611e45611dae565b815260200190600190039081611e3d5790505090565b61040060405190810160405280602090602082028038833980820191505090505090565b602060405190810160405280600190602082028038833980820191505090505090565b610800604051908101604052806020905b611ebb611dae565b815260200190600190039081611eb35790505090565b60a060405190810160405280600590602082028038833980820191505090505090565b6000611f0082356126e3565b905092915050565b600082601f8301121515611f1b57600080fd5b6002611f2e611f29826125f9565b6125cc565b91508183856020840282011115611f4457600080fd5b60005b83811015611f745781611f5a8882611f7e565b845260208401935060208301925050600181019050611f47565b5050505092915050565b6000611f8a82356126f5565b905092915050565b600082601f8301121515611fa557600080fd5b8135611fb8611fb38261261b565b6125cc565b91508082526020830160208301858383011115611fd457600080fd5b611fdf838284612729565b50505092915050565b600060408284031215611ffa57600080fd5b61200460406125cc565b9050600061201484828501612034565b600083015250602061202884828501612034565b60208301525092915050565b6000612040823561271f565b905092915050565b600080600080600080600080610180898b03121561206557600080fd5b60006120738b828c01611f08565b98505060406120848b828c01611f08565b97505060806120958b828c01611f08565b96505060c06120a68b828c01612034565b95505060e06120b78b828c01612034565b9450506101006120c98b828c01611f08565b9350506101406120db8b828c01611ef4565b92505061016089013567ffffffffffffffff8111156120f957600080fd5b6121058b828c01611f92565b9150509295985092959890939650565b6000806080838503121561212857600080fd5b600061213685828601611fe8565b925050604061214785828601611fe8565b9150509250929050565b600061215d8383612306565b60408301905092915050565b6121728161269b565b82525050565b61218181612651565b61218b8184612674565b925061219682612647565b60005b828110156121c4576121ac858351612151565b94506121b782612667565b9150600181019050612199565b5050505050565b6121d4816126ad565b82525050565b60006121e58261265c565b6121ef8185612690565b93506121ff818560208601612738565b80840191505092915050565b6000612218602a8361267f565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b600061227e60258361267f565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516122ed6000850182612364565b5060208201516123006020850182612364565b50505050565b60408201600082015161231c6000850182612364565b50602082015161232f6020850182612364565b50505050565b60408201600082015161234b6000850182612364565b50602082015161235e6020850182612364565b50505050565b61236d816126d9565b82525050565b61237c816126d9565b82525050565b61239361238e826126d9565b61276b565b82525050565b60006123a582856121da565b91506123b18284612382565b6020820191508190509392505050565b60006020820190506123d660008301846121cb565b92915050565b600060208201905081810360008301526123f58161220b565b9050919050565b6000602082019050818103600083015261241581612271565b9050919050565b600060408201905061243160008301846122d7565b92915050565b60006101208201905061244d6000830189612335565b61245a6040830188612335565b6124676080830187612335565b61247460c0830186612373565b61248160e0830185612373565b61248f610100830184612169565b979650505050505050565b60006020820190506124af6000830184612373565b92915050565b600060a0820190506124ca6000830185612373565b6124d76020830184612178565b9392505050565b600060a0820190506124f36000830186612373565b6125006020830185612335565b61250d6060830184612335565b949350505050565b60006101208201905061252b6000830188612373565b6125386020830187612335565b6125456060830186612335565b61255260a0830185612335565b61255f60e0830184612335565b9695505050505050565b60006101608201905061257f6000830189612373565b61258c6020830188612335565b6125996060830187612335565b6125a660a0830186612335565b6125b360e0830185612335565b6125c1610120830184612335565b979650505050505050565b6000604051905081810181811067ffffffffffffffff821117156125ef57600080fd5b8060405250919050565b600067ffffffffffffffff82111561261057600080fd5b602082029050919050565b600067ffffffffffffffff82111561263257600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006126a6826126b9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006126ee826126ff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561275657808201518184015260208101905061273b565b83811115612765576000848401525b50505050565b600081905091905056fea265627a7a7230582019a752fcb4f5e72789fbfff4cf7097fdd99bc671775cb02fe4a813530d64f2306c6578706572696d656e74616cf50037",
  "sourceMap": "81:14295:0:-;;;398:9;405:1;398:6;;;:9;;;:::i;:::-;380:27;;;;;;;;:::i;:::-;;1116:206;8:9:-1;5:2;;;30:1;27;20:12;5:2;1116:206:0;1151:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1147:1;:16;;;;;;;;;;;;;;;;;;;1177:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1173:1;:16;;;;;;;;;;;;;;;;;;;1204:9;1216:1;1204:13;;1199:117;160:2;1219:1;:5;1199:117;;;1253:15;;;;;;;;;;;;;;;;;;;1266:1;1253:7;;;:15;;;:::i;:::-;1245:2;1248:1;1245:5;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;1290:15;;;;;;;;;;;;;;;;;;;1303:1;1290:7;;;:15;;;:::i;:::-;1282:2;1285:1;1282:5;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;1226:3;;;;;;;1199:117;;;;81:14295;;10970:236;11023:24;;:::i;:::-;11071:1;11059:6;11066:1;11059:9;;;;;;;;;;;;:13;;;;;11094:4;11082:6;11089:1;11082:9;;;;;;;;;;;;:16;;;;;11113:9;11125:1;11113:13;;11108:92;160:2;11128:1;:5;11108:92;;;11166:23;11184:4;11166:6;11177:1;11173;:5;11166:13;;;;;;;;;;;;;:17;;;;;;:23;;;;;:::i;:::-;11154:6;11161:1;11154:9;;;;;;;;;;;;:35;;;;;11135:3;;;;;;;11108:92;;;;10970:236;;;:::o;14020:167::-;14081:14;;:::i;:::-;14114:66;227:77;14157:5;14140:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14140:23:0;;;14130:34;;;;;;14122:43;;;:57;;;;;;;;14114:7;;;:66;;;:::i;:::-;14107:73;;14020:167;;;:::o;14193:181::-;14265:14;;:::i;:::-;14298:69;227:77;14341:5;14348:1;14324:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14324:26:0;;;14314:37;;;;;;14306:46;;;:60;;;;;;;;14298:7;;;:69;;;:::i;:::-;14291:76;;14193:181;;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;13565:449:0:-;13619:14;;:::i;:::-;13645:9;13664:311;13671:4;13664:311;;;13691:16;13730:1;13710:17;13719:4;13725:1;13710:8;;;:17;;;:::i;:::-;:21;13691:40;;13817:41;13826:8;13856:1;13851;227:77;13837:15;13836:21;;;;;;;;13817:8;;;:41;;;:::i;:::-;13813:45;;13894:8;13876:14;13885:1;13888;13876:8;;;:14;;;:::i;:::-;:26;13872:70;;;13922:5;;;13872:70;13963:1;13955:9;;;;13664:311;;;;13991:16;;;;;;;;;13999:4;13991:16;;;;14005:1;13991:16;;;13984:23;;;13565:449;;;:::o;12949:610::-;13022:14;13073:13;227:77;13073:27;;13148:4;13142:11;13176:4;13173:1;13166:15;13215:4;13208;13205:1;13201:12;13194:26;13254:4;13247;13244:1;13240:12;13233:26;13293:4;13286;13283:1;13279:12;13272:26;13332:8;13325:4;13322:1;13318:12;13311:30;13375:5;13368:4;13365:1;13361:12;13354:27;13438:4;13435:1;13429:4;13426:1;13420:4;13415:3;13404:39;13397:47;13394:2;;;13496:1;13493;13486:12;13394:2;13541:1;13535:8;13525:18;;13119:434;;;;;;:::o;81:14295::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14295:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:14295:0;;;;;;;",
  "deployedSourceMap": "81:14295:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:14295:0;;;;;;;;;;;;;;;;;;;;;;;;;1405:1008;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11777:454;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1405:1008;1604:4;1620:30;;:::i;:::-;1965:41;;;;;;;;;1981:3;1985:1;1981:6;;;;;;;;;;;;;1973:15;;;1965:41;;;;1998:3;2002:1;1998:6;;;;;;;;;;;;;1990:15;;;1965:41;;;1949:9;:13;;:57;;;;2032:41;;;;;;;;;2048:3;2052:1;2048:6;;;;;;;;;;;;;2040:15;;;2032:41;;;;2065:3;2069:1;2065:6;;;;;;;;;;;;;2057:15;;;2032:41;;;2016:9;:13;;:57;;;;2097:37;;;;;;;;;2113:1;2115;2113:4;;;;;;;;;;;;;2105:13;;;2097:37;;;;2128:1;2130;2128:4;;;;;;;;;;;;;2120:13;;;2097:37;;;2083:9;:11;;:51;;;;2166:9;2144;:19;;:31;;;;;2203:5;2185:9;:15;;:23;;;;;2232:37;;;;;;;;;2248:1;2250;2248:4;;;;;;;;;;;;;2240:13;;;2232:37;;;;2263:1;2265;2263:4;;;;;;;;;;;;;2255:13;;;2232:37;;;2218:9;:11;;:51;;;;2298:6;2279:9;:16;;:25;;;;;;;;;;;2314:26;;:::i;:::-;2343:18;2355:5;2343:11;:18::i;:::-;2314:47;;2378:28;2385:9;2396;2378:6;:28::i;:::-;2371:35;;;;1405:1008;;;;;;;;;;:::o;11777:454::-;11849:16;;:::i;:::-;11915:4;11909:11;11949:2;11943:9;11940:1;11933:20;12001:4;11997:2;11993:13;11987:20;11980:4;11977:1;11973:12;11966:42;12048:2;12042:9;12035:4;12032:1;12028:12;12021:31;12100:4;12096:2;12092:13;12086:20;12079:4;12076:1;12072:12;12065:42;12164:4;12161:1;12155:4;12152:1;12146:4;12141:3;12130:39;12123:47;12120:2;;;12199:1;12196;12189:12;12120:2;11886:339;;;;;:::o;8761:1165::-;8823:22;;:::i;:::-;8867:38;;;;;;;;;8875:13;8881:3;8886:1;8875:5;:13::i;:::-;8867:38;;;;8890:14;8896:3;8901:2;8890:5;:14::i;:::-;8867:38;;;8857:5;:7;;:48;;;;8925:39;;;;;;;;;8933:14;8939:3;8944:2;8933:5;:14::i;:::-;8925:39;;;;8949:14;8955:3;8960:2;8949:5;:14::i;:::-;8925:39;;;8915:5;:7;;:49;;;;8992:41;;;;;;;;;9000:15;9006:3;9011;9000:5;:15::i;:::-;8992:41;;;;9017:15;9023:3;9028;9017:5;:15::i;:::-;8992:41;;;8975:5;:14;;:58;;;;9060:41;;;;;;;;;9068:15;9074:3;9079;9068:5;:15::i;:::-;9060:41;;;;9085:15;9091:3;9096;9085:5;:15::i;:::-;9060:41;;;9043:5;:14;;:58;;;;9112:103;;;;;;;;;9130:41;;;;;;;;;9138:15;9144:3;9149;9138:5;:15::i;:::-;9130:41;;;;9155:15;9161:3;9166;9155:5;:15::i;:::-;9130:41;;;9112:103;;;;9173:41;;;;;;;;;9181:15;9187:3;9192;9181:5;:15::i;:::-;9173:41;;;;9198:15;9204:3;9209;9198:5;:15::i;:::-;9173:41;;;9112:103;;;:5;:14;;:103;;;;9238:15;9244:3;9249;9238:5;:15::i;:::-;9225:5;:10;;:28;;;;;9276:15;9282:3;9287;9276:5;:15::i;:::-;9263:5;:10;;:28;;;;;9312:15;9318:3;9323;9312:5;:15::i;:::-;9301:5;:8;;:26;;;;;9348:15;9354:3;9359;9348:5;:15::i;:::-;9338:5;:7;;:25;;;;;9386:15;9392:3;9397;9386:5;:15::i;:::-;9373:5;:10;;:28;;;;;9427:15;9433:3;9438;9427:5;:15::i;:::-;9411:5;:13;;:31;;;;;9469:15;9475:3;9480;9469:5;:15::i;:::-;9452:5;:14;;:32;;;;;9495;;:::i;:::-;9542:9;9554:1;9542:13;;9537:233;189:1;9557;:5;9537:233;;;9599:59;;;;;;;;;9607:24;9613:3;9628:2;9624:1;:6;9618:3;:12;9607:5;:24::i;:::-;9599:59;;;;9633:24;9639:3;9654:2;9650:1;:6;9644:3;:12;9633:5;:24::i;:::-;9599:59;;;9583:7;:10;;;9594:1;9583:13;;;;;;;;;;;;:75;;;;9688:71;;;;;;;;;9696:30;9702:3;9723:2;9718:1;189;9714:5;9713:12;9707:3;:18;9696:5;:30::i;:::-;9688:71;;;;9728:30;9734:3;9755:2;9750:1;189;9746:5;9745:12;9739:3;:18;9728:5;:30::i;:::-;9688:71;;;9672:7;:10;;;9683:1;9672:13;;;;;;;;;;;;:87;;;;9564:3;;;;;;;9537:233;;;;9791:25;9797:3;9812;189:1;9808:7;9802:3;:13;9791:5;:25::i;:::-;9779:7;:9;;:37;;;;;9838:25;9844:3;9859;189:1;9855:7;9849:3;:13;9838:5;:25::i;:::-;9826:7;:9;;:37;;;;;9889:7;9873:5;:13;;:23;;;;9914:5;9907:12;;;8761:1165;;;:::o;3142:5163::-;3237:4;3253:21;3277:135;3306:9;:13;;;3321:9;:13;;;3336:9;:11;;;3349:9;:19;;;3370:9;:15;;;3387:9;:16;;;3295:109;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3295:109:0;;;3285:120;;;;;;3277:129;;;:133;:135::i;:::-;3253:159;;3440:38;;:::i;:::-;3508:101;3537:13;3552:5;:7;;;3561:5;:7;;;3570:5;:14;;;3586:5;:14;;;3526:75;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3526:75:0;;;3516:86;;;;;;3508:95;;;:99;:101::i;:::-;3488:15;:17;;:121;;;;;3640:25;3647:15;:17;;;3640:6;:25::i;:::-;3619:15;:18;;:46;;;;3695:55;3724:15;:17;;;3713:29;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3713:29:0;;;3703:40;;;;;;3695:49;;;:53;:55::i;:::-;3675:15;:17;;:75;;;;;3760:47;;;;;;;;;3782:24;3804:1;3782:15;:17;;;:21;;:24;;;;:::i;:::-;3760:47;;;:15;:18;;:47;;;;3840:44;3866:15;:17;;;3840:15;:18;;;3859:1;3840:21;;;;;;;;;;;;;:25;;:44;;;;:::i;:::-;3817:15;:20;;:67;;;;;3929:144;4014:58;4051:15;:20;;;4014:32;160:2;4039:1;:6;4014:15;:20;;;:24;;:32;;;;:::i;:::-;:36;;:58;;;;:::i;:::-;3929:80;3964:44;3986:15;:18;;;4005:1;3986:21;;;;;;;;;;;;;3964:15;:17;;;:21;;:44;;;;:::i;:::-;3929:30;3940:15;:18;;;3929:10;:30::i;:::-;:34;;:80;;;;:::i;:::-;:84;;:144;;;;:::i;:::-;3909:15;:17;;:164;;;;;4103:33;4118:15;:17;;;4103:5;:10;;;:14;;:33;;;;:::i;:::-;4083:15;:17;;:53;;;;;4181:34;4187:4;4181:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4193:15;:18;;;4212:1;4193:21;;;;;;;;;;;;;4181:5;:34::i;:::-;4146:15;:32;;:69;;;;4246:71;4275:15;:17;;;4294:5;:14;;;4264:45;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4264:45:0;;;4254:56;;;;;;4246:65;;;:69;:71::i;:::-;4226:15;:17;;:91;;;;;4351:112;4355:41;4359:5;:14;;;4374:1;4359:17;;;;;;;;;;;;;4378:15;:17;;;4355:3;:41::i;:::-;4398:64;4402:5;:14;;;4417:1;4402:17;;;;;;;;;;;;;4421:40;4443:15;:17;;;4421:15;:17;;;:21;;:40;;;;:::i;:::-;4398:3;:64::i;:::-;4351:3;:112::i;:::-;4327:15;:21;;:136;;;;4500:40;;:::i;:::-;4573:56;4577:18;4581:1;4577:18;;;;;;;;;;;;;;;;;;;;;;;;;;4584:5;:10;;;4577:3;:18::i;:::-;4597:31;4601:9;:11;;;4614:13;:5;:7;;;:11;:13::i;:::-;4597:3;:31::i;:::-;4573:3;:56::i;:::-;4550:16;:20;;:79;;;;4665:34;;;;;;;;;;;;;;;;;;;4683:9;:15;;;4665:7;:34::i;:::-;4639:16;:23;;:60;;;;4732:78;4736:40;4740:16;:23;;;4765:5;:10;;;4736:3;:40::i;:::-;4778:31;4782:9;:11;;;4795:13;:5;:7;;;:11;:13::i;:::-;4778:3;:31::i;:::-;4732:3;:78::i;:::-;4709:16;:20;;:101;;;;4848:140;4852:112;4856:51;4860:34;4864:9;:13;;;4879:5;:14;;;4860:3;:34::i;:::-;4896:5;:10;;;4856:3;:51::i;:::-;4909:54;4913:34;4917:9;:13;;;4932:5;:14;;;4913:3;:34::i;:::-;4949:13;:5;:7;;;:11;:13::i;:::-;4909:3;:54::i;:::-;4852:3;:112::i;:::-;4966:15;:18;;;4985:1;4966:21;;;;;;;;;;;;;4848:3;:140::i;:::-;4820:16;:25;;:168;;;;5021:129;5025:97;5029:83;5033:50;5037:25;5041:1;5037:25;;;;;;;;;;;;;;;;;;;;;;;;;;5044:15;:17;;;5037:3;:25::i;:::-;5064:18;5068:1;5064:18;;;;;;;;;;;;;;;;;;;;;;;;;;5071:5;:10;;;5064:3;:18::i;:::-;5033:3;:50::i;:::-;5085:26;5089:15;:21;;;5085:3;:26::i;:::-;5029:3;:83::i;:::-;5114:5;:7;;;5025:3;:97::i;:::-;5124:16;:25;;;5021:3;:129::i;:::-;4998:16;:20;;:152;;;;5185:98;5189:21;5193:1;5189:21;;;;;;;;;;;;;;;;;;;;;;;;;;5196:5;:13;;;5189:3;:21::i;:::-;5212:70;5216:30;5220:9;:13;;;5235:5;:10;;;5216:3;:30::i;:::-;5248:33;5252:9;:13;;;5267;:5;:7;;;:11;:13::i;:::-;5248:3;:33::i;:::-;5212:3;:70::i;:::-;5185:3;:98::i;:::-;5160:16;:22;;:123;;;;5323:101;5327:22;5331:1;5327:22;;;;;;;;;;;;;;;;;;;;;;;;;;5334:5;:14;;;5327:3;:22::i;:::-;5351:72;5355:31;5359:5;:14;;;5375:5;:10;;;5355:3;:31::i;:::-;5388:34;5392:5;:14;;;5408:13;:5;:7;;;:11;:13::i;:::-;5388:3;:34::i;:::-;5351:3;:72::i;:::-;5323:3;:101::i;:::-;5293:16;:27;;:131;;;;5456:174;5485:15;:17;;;5504:16;:20;;;5526:16;:20;;;5548:16;:20;;;5570:16;:22;;;5594:16;:27;;;5474:148;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5474:148:0;;;5464:159;;;;;;5456:168;;;:172;:174::i;:::-;5435:16;:18;;:195;;;;;5670:5;:7;;;5648:16;:18;;;:29;5640:84;;;;;;;;;;;;;;;;;;;;;;;;5735:34;;:::i;:::-;5797:56;5826:16;:18;;;5815:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5815:30:0;;;5805:41;;;;;;5797:50;;;:54;:56::i;:::-;5779:13;:15;;:74;;;;;5883:23;5887:1;5883:23;;;;;;;;;;;;;;;;;;;;;;;;;;5890:13;:15;;;5883:3;:23::i;:::-;5863:13;:17;;:43;;;;5940:35;5952:2;5940:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5956:15;:18;;;5940:11;:35::i;:::-;5916:13;:21;;:59;;;;6006:90;6017:44;6023:15;:18;;;6043:15;:17;;;6017:5;:44::i;:::-;6063:15;:32;;;6006:10;:90::i;:::-;5985:13;:18;;:111;;;;6124:151;6128:95;6132:45;6136:5;:7;;;6145:31;6149:5;:7;;;6158:15;:17;;;6145:3;:31::i;:::-;6132:3;:45::i;:::-;6179:43;6183:13;6193:2;6183:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;6198:23;:15;:17;;;:21;:23::i;:::-;6179:3;:43::i;:::-;6128:3;:95::i;:::-;6225:49;6232:13;:21;;;6255:13;:18;;;6225:6;:49::i;:::-;6124:3;:151::i;:::-;6106:13;:15;;:169;;;;6303:44;6307:13;:15;;;6324:22;6328:1;6324:22;;;;;;;;;;;;;;;;;;;;;;;;;;6331:14;:5;:8;;;:12;:14::i;:::-;6324:3;:22::i;:::-;6303:3;:44::i;:::-;6285:13;:15;;:62;;;;6375:56;6379:13;:15;;;6396:34;6400:13;:17;;;6419:5;:10;;;6396:3;:34::i;:::-;6375:3;:56::i;:::-;6357:13;:15;;:74;;;;6486:32;;:::i;:::-;6521:5;:13;;;6486:48;;6549:9;6561:1;6549:13;;6544:421;189:1;6564;:5;6544:421;;;6608:83;6637:13;:15;;;6654:7;:10;;;6665:1;6654:13;;;;;;;;;;;;;6669:7;:10;;;6680:1;6669:13;;;;;;;;;;;;;6626:57;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6626:57:0;;;6616:68;;;;;;6608:77;;;:81;:83::i;:::-;6590:13;:15;;:101;;;;;6735:13;:15;;;6705:13;:24;;;6730:1;6705:27;;;;;;;;;;;;:45;;;;;6784:12;6799:21;:13;:15;;;:19;:21::i;:::-;6784:36;;6852:102;6856:13;:15;;;6873:80;6877:42;6881:7;:10;;;6892:1;6881:13;;;;;;;;;;;;;6896:22;6916:1;6896:13;:15;;;:19;;:22;;;;:::i;:::-;6877:3;:42::i;:::-;6921:31;6925:7;:10;;;6936:1;6925:13;;;;;;;;;;;;;6940:11;6949:1;6940:4;:8;;:11;;;;:::i;:::-;6921:3;:31::i;:::-;6873:3;:80::i;:::-;6852:3;:102::i;:::-;6834:13;:15;;:120;;;;6544:421;6571:3;;;;;;;6544:421;;;;7009:1;6975:13;:28;;;7004:1;6975:31;;;;;;;;;;;;:35;;;;;7025:9;7037:1;7025:13;;7020:155;189:1;7040;:5;7020:155;;;7100:64;7136:13;:24;;;7161:1;7136:27;;;;;;;;;;;;;7100:13;:28;;;7129:1;7100:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;7066:13;:28;;;7095:1;7066:31;;;;;;;;;;;;:98;;;;;7047:3;;;;;;;7020:155;;;;7184:21;;:::i;:::-;7249:37;:13;:28;;;7278:1;7249:31;;;;;;;;;;;;;:35;:37::i;:::-;7215:13;:28;;;7244:1;7215:31;;;;;;;;;;;;:71;;;;;7301:9;7313:1;7301:13;;7296:462;7322:1;160:2;7320:3;;;;;;;;7316:1;:7;7296:462;;;7349:9;7361:1;7349:13;;7344:404;160:2;7375:1;7370;7365;:6;;;;7364:12;:16;7344:404;;;7405:10;7428:1;7423;:6;;;;7418:1;:12;7405:25;;7453:6;7460:2;7453:10;;;;;;;;;;;;;7452:11;7448:286;;;7487:12;7502:76;7542:13;:24;;;7575:1;7571;189;7567:5;:9;7542:35;;;;;;;;;;;;;7502:13;:24;;;7535:1;7531;189;7527:5;:9;7502:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;7487:91;;7635:41;7671:4;7635:13;:28;;;7664:1;7635:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;7600:13;:28;;;7629:2;7600:32;;;;;;;;;;;;:76;;;;;7711:4;7698:6;7705:2;7698:10;;;;;;;;;;;;:17;;;;;;;;;;;7448:286;;7344:404;7382:3;;;;;7344:404;;;;7325:3;;;;;7296:462;;;;7768:20;;:::i;:::-;7798;;:::i;:::-;7833:9;7845:1;7833:13;;7828:224;160:2;7848:1;:5;7828:224;;;7882:55;7886:5;7893:43;7897:2;7900:1;7897:5;;;;;;;;;;;;7893:43;;;;;;;;;;;;;;;;;;;;;;;;;;7904:13;:28;;;7933:1;7904:31;;;;;;;;;;;;;7893:3;:43::i;:::-;7882:3;:55::i;:::-;7874:63;;7959:82;7963:5;7970:70;7974:13;:21;;;7996:1;7974:24;;;;;;;;;;;;;8000:13;:28;;;8037:1;8033;160:2;8029:5;:9;8000:39;;;;;;;;;;;;;7970:3;:70::i;:::-;7959:3;:82::i;:::-;7951:90;;7855:3;;;;;;;7828:224;;;;8061:21;;:::i;:::-;8085:104;8089:49;8093:21;8097:5;8104:7;:9;;;8093:3;:21::i;:::-;8116;8120:5;8127:7;:9;;;8116:3;:21::i;:::-;8089:3;:49::i;:::-;8140:48;8144:13;:17;;;8163:24;8177:7;:9;;;8163:7;:9;;;:13;;:24;;;;:::i;:::-;8140:3;:48::i;:::-;8085:3;:104::i;:::-;8061:128;;8207:27;8210:13;:15;;;8227:6;8207:2;:27::i;:::-;8199:77;;;;;;;;;;;;;;;;;;;;;;;;8294:4;8287:11;;;;;;;;;;;3142:5163;;;;:::o;11410:295::-;11483:14;11576:4;11570:11;11632:5;11625:4;11618:5;11614:16;11610:28;11604:35;11601:1;11594:46;11687:1;11681:8;11671:18;;11547:152;;;;;:::o;727:95:3:-;774:7;117:77;800:1;:15;;;;;;;;793:22;;727:95;;;:::o;10970:236:0:-;11023:24;;:::i;:::-;11071:1;11059:6;11066:1;11059:9;;;;;;;;;;;;:13;;;;;11094:4;11082:6;11089:1;11082:9;;;;;;;;;;;;:16;;;;;11113:9;11125:1;11113:13;;11108:92;160:2;11128:1;:5;11108:92;;;11166:23;11184:4;11166:6;11177:1;11173;:5;11166:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;11154:6;11161:1;11154:9;;;;;;;;;;;;:35;;;;;11135:3;;;;;;;11108:92;;;;10970:236;;;:::o;1062:580:3:-;1130:14;1156:13;117:77;1156:27;;1231:4;1225:11;1259:4;1256:1;1249:15;1298:4;1291;1288:1;1284:12;1277:26;1337:4;1330;1327:1;1323:12;1316:26;1376:4;1369;1366:1;1362:12;1355:26;1415:8;1408:4;1405:1;1401:12;1394:30;1458:5;1451:4;1448:1;1444:12;1437:27;1521:4;1518:1;1512:4;1509:1;1503:4;1498:3;1487:39;1480:47;1477:2;;;1579:1;1576;1569:12;1477:2;1624:1;1618:8;1608:18;;1202:434;;;;;;:::o;496:116::-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;828:127::-;886:7;917:1;912;:6;;:36;;947:1;943;117:77;929:15;:19;912:36;;;925:1;921;:5;912:36;905:43;;828:127;;;;:::o;10376:180:0:-;10441:14;10472:9;10484:1;10472:13;;10467:83;160:2;10487:1;:5;10467:83;;;10522:17;10533:2;10536:1;10533:5;;;;;;;;;;;;;10522:6;:10;;:17;;;;:::i;:::-;10513:26;;10494:3;;;;;;;10467:83;;;;10376:180;;;:::o;11212:192::-;11282:24;;:::i;:::-;11323:9;11335:1;11323:13;;11318:80;160:2;11338:1;:5;11318:80;;;11376:11;11385:1;11376;11378;11376:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;11364:6;11371:1;11364:9;;;;;;;;;;;;:23;;;;;11345:3;;;;;;;11318:80;;;;11212:192;;;;:::o;12237:382::-;12302:16;;:::i;:::-;12368:4;12362:11;12402:1;12396:8;12393:1;12386:19;12452:4;12449:1;12445:12;12439:19;12432:4;12429:1;12425:12;12418:41;12493:1;12486:4;12483:1;12479:12;12472:23;12552:4;12549:1;12543:4;12540:1;12534:4;12529:3;12518:39;12511:47;12508:2;;;12587:1;12584;12577:12;12508:2;12339:274;;;;;:::o;961:95:3:-;1008:7;1048:1;117:77;1034:15;1027:22;;961:95;;;:::o;14193:181:0:-;14265:14;;:::i;:::-;14298:69;227:77;14341:5;14348:1;14324:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14324:26:0;;;14314:37;;;;;;14306:46;;;:60;;;;;;;;14298:7;:69::i;:::-;14291:76;;14193:181;;;;:::o;12625:::-;12679:14;;:::i;:::-;12712:47;;;;;;;;;12720:1;:3;;;12712:47;;;;227:77;12740:1;:3;;;:17;;;;;;;;227:77;12725:33;12712:47;;;12705:54;;12625:181;;;:::o;10148:222::-;10236:24;;:::i;:::-;10277:9;10289:1;10277:13;;10272:92;160:2;10292:1;:5;10272:92;;;10330:23;10334:2;10337:1;10334:5;;;;;;;;;;;;;10341:11;:2;10344:1;10341:5;;;;;;;;;;;;;:9;:11::i;:::-;10330:3;:23::i;:::-;10318:6;10325:1;10318:9;;;;;;;;;;;;:35;;;;10299:3;;;;;;;10272:92;;;;10148:222;;;;:::o;9932:210::-;10017:24;;:::i;:::-;10058:9;10070:1;10058:13;;10053:83;160:2;10073:1;:5;10053:83;;;10111:14;10120:1;10122;10120:4;;;;;;;;;;;;;10111:1;10113;10111:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;10099:6;10106:1;10099:9;;;;;;;;;;;;:26;;;;;10080:3;;;;;;;10053:83;;;;9932:210;;;;:::o;10562:178::-;10626:18;;:::i;:::-;10661:9;10673:1;10661:13;;10656:78;160:2;10676:1;:5;10656:78;;;10708:15;10712:3;10717:2;10720:1;10717:5;;;;;;;;;;;;;10708:3;:15::i;:::-;10702:21;;10683:3;;;;;;;10656:78;;;;10562:178;;;:::o;10746:218::-;10829:21;;:::i;:::-;10867:9;10879:1;10867:13;;10862:96;160:2;10882:1;:5;10862:96;;;10917:30;10921:6;10929:17;10933:2;10936:1;10933:5;;;;;;;;;;;;;10940:2;10943:1;10940:5;;;;;;;;;;;;;10929:3;:17::i;:::-;10917:3;:30::i;:::-;10908:39;;10889:3;;;;;;;10862:96;;;;10746:218;;;;:::o;618:103:3:-;665:7;691:23;695:1;712;117:77;698:15;691:3;:23::i;:::-;684:30;;618:103;;;:::o;12812:131:0:-;12885:4;12916:2;:4;;;12908:2;:4;;;:12;:28;;;;;12932:2;:4;;;12924:2;:4;;;:12;12908:28;12901:35;;12812:131;;;;:::o;374:116:3:-;432:7;117:77;458:25;;;;;;;468:1;465;458:25;451:32;;374:116;;;;:::o;13565:449:0:-;13619:14;;:::i;:::-;13645:9;13664:311;13671:4;13664:311;;;13691:16;13730:1;13710:17;13719:4;13725:1;13710:8;:17::i;:::-;:21;13691:40;;13817:41;13826:8;13856:1;13851;227:77;13837:15;13836:21;;;;;;;;13817:8;:41::i;:::-;13813:45;;13894:8;13876:14;13885:1;13888;13876:8;:14::i;:::-;:26;13872:70;;;13922:5;;;13872:70;13963:1;13955:9;;;;13664:311;;;;13991:16;;;;;;;;;13999:4;13991:16;;;;14005:1;13991:16;;;13984:23;;;13565:449;;;:::o;12949:610::-;13022:14;13073:13;227:77;13073:27;;13148:4;13142:11;13176:4;13173:1;13166:15;13215:4;13208;13205:1;13201:12;13194:26;13254:4;13247;13244:1;13240:12;13233:26;13293:4;13286;13283:1;13279:12;13272:26;13332:8;13325:4;13322:1;13318:12;13311:30;13375:5;13368:4;13365:1;13361:12;13354:27;13438:4;13435:1;13429:4;13426:1;13420:4;13415:3;13404:39;13397:47;13394:2;;;13496:1;13493;13486:12;13394:2;13541:1;13535:8;13525:18;;13119:434;;;;;;:::o;81:14295::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14295:0;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14295:0;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14295:0;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14295:0;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:14295:0;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:615;;264:3;257:4;249:6;245:17;241:27;234:35;231:2;;;282:1;279;272:12;231:2;306:3;324:78;339:62;394:6;339:62;;;324:78;;;315:87;;419:5;478:6;525:3;517:4;509:6;505:17;500:3;496:27;493:36;490:2;;;542:1;539;532:12;490:2;567:1;552:206;577:6;574:1;571:13;552:206;;;635:3;657:37;690:3;678:10;657:37;;;652:3;645:50;718:4;713:3;709:14;702:21;;746:4;741:3;737:14;730:21;;609:149;599:1;596;592:9;587:14;;552:206;;;556:14;224:540;;;;;;;;772:118;;839:46;877:6;864:20;839:46;;;830:55;;824:66;;;;;898:440;;999:3;992:4;984:6;980:17;976:27;969:35;966:2;;;1017:1;1014;1007:12;966:2;1054:6;1041:20;1076:64;1091:48;1132:6;1091:48;;;1076:64;;;1067:73;;1160:6;1153:5;1146:21;1196:4;1188:6;1184:17;1229:4;1222:5;1218:16;1264:3;1255:6;1250:3;1246:16;1243:25;1240:2;;;1281:1;1278;1271:12;1240:2;1291:41;1325:6;1320:3;1315;1291:41;;;959:379;;;;;;;;1380:460;;1494:4;1482:9;1477:3;1473:19;1469:30;1466:2;;;1512:1;1509;1502:12;1466:2;1530:20;1545:4;1530:20;;;1521:29;;1597:1;1628:49;1673:3;1664:6;1653:9;1649:22;1628:49;;;1622:3;1615:5;1611:15;1604:74;1560:129;1736:2;1769:49;1814:3;1805:6;1794:9;1790:22;1769:49;;;1762:4;1755:5;1751:16;1744:75;1699:131;1460:380;;;;;1847:118;;1914:46;1952:6;1939:20;1914:46;;;1905:55;;1899:66;;;;;1972:1411;;;;;;;;;2296:3;2284:9;2275:7;2271:23;2267:33;2264:2;;;2313:1;2310;2303:12;2264:2;2348:1;2365:76;2433:7;2424:6;2413:9;2409:22;2365:76;;;2355:86;;2327:120;2478:2;2496:76;2564:7;2555:6;2544:9;2540:22;2496:76;;;2486:86;;2457:121;2609:3;2628:76;2696:7;2687:6;2676:9;2672:22;2628:76;;;2618:86;;2588:122;2741:3;2760:53;2805:7;2796:6;2785:9;2781:22;2760:53;;;2750:63;;2720:99;2850:3;2869:53;2914:7;2905:6;2894:9;2890:22;2869:53;;;2859:63;;2829:99;2959:3;2978:76;3046:7;3037:6;3026:9;3022:22;2978:76;;;2968:86;;2938:122;3091:3;3110:53;3155:7;3146:6;3135:9;3131:22;3110:53;;;3100:63;;3070:99;3228:3;3217:9;3213:19;3200:33;3253:18;3245:6;3242:30;3239:2;;;3285:1;3282;3275:12;3239:2;3305:62;3359:7;3350:6;3339:9;3335:22;3305:62;;;3295:72;;3179:194;2258:1125;;;;;;;;;;;;3390:467;;;3561:3;3549:9;3540:7;3536:23;3532:33;3529:2;;;3578:1;3575;3568:12;3529:2;3613:1;3630:78;3700:7;3691:6;3680:9;3676:22;3630:78;;;3620:88;;3592:122;3745:2;3763:78;3833:7;3824:6;3813:9;3809:22;3763:78;;;3753:88;;3724:123;3523:334;;;;;;3865:259;;3993:91;4080:3;4073:5;3993:91;;;4113:4;4108:3;4104:14;4090:28;;3986:138;;;;;4132:120;4215:31;4240:5;4215:31;;;4210:3;4203:44;4197:55;;;4332:743;4503:69;4566:5;4503:69;;;4585:105;4683:6;4678:3;4585:105;;;4578:112;;4710:71;4775:5;4710:71;;;4802:1;4787:276;4812:6;4809:1;4806:13;4787:276;;;4859:105;4960:3;4951:6;4945:13;4859:105;;;4852:112;;4981:75;5049:6;4981:75;;;4971:85;;4834:1;4831;4827:9;4822:14;;4787:276;;;4791:14;4482:593;;;;;5083:111;5160:28;5182:5;5160:28;;;5155:3;5148:41;5142:52;;;5201:360;;5331:39;5364:5;5331:39;;;5382:89;5464:6;5459:3;5382:89;;;5375:96;;5476:52;5521:6;5516:3;5509:4;5502:5;5498:16;5476:52;;;5549:6;5544:3;5540:16;5533:23;;5311:250;;;;;;5569:465;;5729:67;5793:2;5788:3;5729:67;;;5722:74;;5829:66;5825:1;5820:3;5816:11;5809:87;5930:66;5925:2;5920:3;5916:12;5909:88;6025:2;6020:3;6016:12;6009:19;;5715:319;;;;6043:465;;6203:67;6267:2;6262:3;6203:67;;;6196:74;;6303:66;6299:1;6294:3;6290:11;6283:87;6404:66;6399:2;6394:3;6390:12;6383:88;6499:2;6494:3;6490:12;6483:19;;6189:319;;;;6581:464;6724:4;6719:3;6715:14;6803:3;6796:5;6792:15;6786:22;6814:61;6870:3;6865;6861:13;6848:11;6814:61;;;6744:137;6950:4;6943:5;6939:16;6933:23;6962:62;7018:4;7013:3;7009:14;6996:11;6962:62;;;6891:139;6697:348;;;;7117:450;7246:4;7241:3;7237:14;7325:3;7318:5;7314:15;7308:22;7336:61;7392:3;7387;7383:13;7370:11;7336:61;;;7266:137;7472:4;7465:5;7461:16;7455:23;7484:62;7540:4;7535:3;7531:14;7518:11;7484:62;;;7413:139;7219:348;;;;7639:460;7778:4;7773:3;7769:14;7857:3;7850:5;7846:15;7840:22;7868:61;7924:3;7919;7915:13;7902:11;7868:61;;;7798:137;8004:4;7997:5;7993:16;7987:23;8016:62;8072:4;8067:3;8063:14;8050:11;8016:62;;;7945:139;7751:348;;;;8106:110;8179:31;8204:5;8179:31;;;8174:3;8167:44;8161:55;;;8223:120;8306:31;8331:5;8306:31;;;8301:3;8294:44;8288:55;;;8350:159;8451:52;8471:31;8496:5;8471:31;;;8451:52;;;8446:3;8439:65;8433:76;;;8516:405;;8690:95;8781:3;8772:6;8690:95;;;8683:102;;8796:75;8867:3;8858:6;8796:75;;;8893:2;8888:3;8884:12;8877:19;;8913:3;8906:10;;8671:250;;;;;;8928:201;;9040:2;9029:9;9025:18;9017:26;;9054:65;9116:1;9105:9;9101:17;9092:6;9054:65;;;9011:118;;;;;9136:407;;9327:2;9316:9;9312:18;9304:26;;9377:9;9371:4;9367:20;9363:1;9352:9;9348:17;9341:47;9402:131;9528:4;9402:131;;;9394:139;;9298:245;;;;9550:407;;9741:2;9730:9;9726:18;9718:26;;9791:9;9785:4;9781:20;9777:1;9766:9;9762:17;9755:47;9816:131;9942:4;9816:131;;;9808:139;;9712:245;;;;9964:313;;10132:2;10121:9;10117:18;10109:26;;10146:121;10264:1;10253:9;10249:17;10240:6;10146:121;;;10103:174;;;;;10284:1049;;10680:3;10669:9;10665:19;10657:27;;10695:117;10809:1;10798:9;10794:17;10785:6;10695:117;;;10823:118;10937:2;10926:9;10922:18;10913:6;10823:118;;;10952:119;11066:3;11055:9;11051:19;11042:6;10952:119;;;11082:73;11150:3;11139:9;11135:19;11126:6;11082:73;;;11166;11234:3;11223:9;11219:19;11210:6;11166:73;;;11250;11318:3;11307:9;11303:19;11294:6;11250:73;;;10651:682;;;;;;;;;;11340:213;;11458:2;11447:9;11443:18;11435:26;;11472:71;11540:1;11529:9;11525:17;11516:6;11472:71;;;11429:124;;;;;11560:493;;11790:3;11779:9;11775:19;11767:27;;11805:71;11873:1;11862:9;11858:17;11849:6;11805:71;;;11887:156;12039:2;12028:9;12024:18;12015:6;11887:156;;;11761:292;;;;;;12060:620;;12326:3;12315:9;12311:19;12303:27;;12341:71;12409:1;12398:9;12394:17;12385:6;12341:71;;;12423:118;12537:2;12526:9;12522:18;12513:6;12423:118;;;12552;12666:2;12655:9;12651:18;12642:6;12552:118;;;12297:383;;;;;;;12687:1028;;13101:3;13090:9;13086:19;13078:27;;13116:71;13184:1;13173:9;13169:17;13160:6;13116:71;;;13198:118;13312:2;13301:9;13297:18;13288:6;13198:118;;;13327;13441:2;13430:9;13426:18;13417:6;13327:118;;;13456:119;13570:3;13559:9;13555:19;13546:6;13456:119;;;13586;13700:3;13689:9;13685:19;13676:6;13586:119;;;13072:643;;;;;;;;;13722:1232;;14210:3;14199:9;14195:19;14187:27;;14225:71;14293:1;14282:9;14278:17;14269:6;14225:71;;;14307:118;14421:2;14410:9;14406:18;14397:6;14307:118;;;14436;14550:2;14539:9;14535:18;14526:6;14436:118;;;14565:119;14679:3;14668:9;14664:19;14655:6;14565:119;;;14695;14809:3;14798:9;14794:19;14785:6;14695:119;;;14825;14939:3;14928:9;14924:19;14915:6;14825:119;;;14181:773;;;;;;;;;;14961:256;;15023:2;15017:9;15007:19;;15061:4;15053:6;15049:17;15160:6;15148:10;15145:22;15124:18;15112:10;15109:34;15106:62;15103:2;;;15181:1;15178;15171:12;15103:2;15201:10;15197:2;15190:22;15001:216;;;;;15224:233;;15381:18;15373:6;15370:30;15367:2;;;15413:1;15410;15403:12;15367:2;15442:4;15434:6;15430:17;15422:25;;15304:153;;;;15464:258;;15607:18;15599:6;15596:30;15593:2;;;15639:1;15636;15629:12;15593:2;15683:4;15679:9;15672:4;15664:6;15660:17;15656:33;15648:41;;15712:4;15706;15702:15;15694:23;;15530:192;;;;15731:125;;15843:6;15832:17;;15824:32;;;;15865:113;;15970:3;15960:13;;15954:24;;;;15985:92;;16066:5;16060:12;16050:22;;16044:33;;;;16085:137;;16211:4;16203:6;16199:17;16188:28;;16181:41;;;;16231:161;;16383:3;16368:18;;16361:31;;;;;16401:163;;16516:6;16511:3;16504:19;16553:4;16548:3;16544:14;16529:29;;16497:67;;;;;16573:145;;16709:3;16694:18;;16687:31;;;;;16726:105;;16795:31;16820:5;16795:31;;;16784:42;;16778:53;;;;16838:92;;16918:5;16911:13;16904:21;16893:32;;16887:43;;;;16937:128;;17017:42;17010:5;17006:54;16995:65;;16989:76;;;;17072:79;;17141:5;17130:16;;17124:27;;;;17158:105;;17227:31;17252:5;17227:31;;;17216:42;;17210:53;;;;17270:79;;17339:5;17328:16;;17322:27;;;;17356:128;;17436:42;17429:5;17425:54;17414:65;;17408:76;;;;17491:79;;17560:5;17549:16;;17543:27;;;;17578:145;17659:6;17654:3;17649;17636:30;17715:1;17706:6;17701:3;17697:16;17690:27;17629:94;;;;17732:268;17797:1;17804:101;17818:6;17815:1;17812:13;17804:101;;;17894:1;17889:3;17885:11;17879:18;17875:1;17870:3;17866:11;17859:39;17840:2;17837:1;17833:10;17828:15;;17804:101;;;17920:6;17917:1;17914:13;17911:2;;;17985:1;17976:6;17971:3;17967:16;17960:27;17911:2;17781:219;;;;;18008:74;;18072:5;18061:16;;18055:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract BurnVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 32;\n    uint256 constant n = 5;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n\n    G1Point[m] gs;\n    G1Point[m] hs;\n    G1Point g;\n    G1Point h;\n\n    uint256[m] twos = powers(2); // how much is this actually used?\n\n    struct BurnStatement {\n        G1Point CLn;\n        G1Point CRn;\n        G1Point y;\n        uint256 bTransfer;\n        uint256 epoch; // or uint8?\n        address sender;\n        G1Point u;\n    }\n\n    struct BurnProof {\n        G1Point A;\n        G1Point S;\n\n        G1Point CLnPrime;\n        G1Point CRnPrime;\n\n        G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 tauX;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_vDiff;\n        uint256 s_nuDiff;\n\n        InnerProductProof ipProof;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs[i] = mapInto(\"G\", i);\n            hs[i] = mapInto(\"H\", i);\n        }\n    } // will it be more expensive later on to sload these than to recompute them?\n\n    function verifyBurn(bytes32[2] memory CLn, bytes32[2] memory CRn, bytes32[2] memory y, uint256 bTransfer, uint256 epoch, bytes32[2] memory u, address sender, bytes memory proof) view public returns (bool) {\n        BurnStatement memory statement; // WARNING: if this is called directly in the console,\n        // and your strings are less than 64 characters, they will be padded on the right, not the left. should hopefully not be an issue,\n        // as this will typically be called simply by the other contract. still though, beware\n        statement.CLn = G1Point(uint256(CLn[0]), uint256(CLn[1]));\n        statement.CRn = G1Point(uint256(CRn[0]), uint256(CRn[1]));\n        statement.y = G1Point(uint256(y[0]), uint256(y[1]));\n        statement.bTransfer = bTransfer;\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        statement.sender = sender;\n        BurnProof memory burnProof = unserialize(proof);\n        return verify(statement, burnProof);\n    }\n\n    struct BurnAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[1] zs; // silly. just to match zether.\n        uint256 zSum;\n        uint256[m] twoTimesZSquared;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        G1Point A_y;\n        G1Point gEpoch;\n        G1Point A_u;\n        G1Point c_commit;\n        G1Point A_t;\n        G1Point A_CLn;\n        G1Point A_CLnPrime;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u_x;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 o;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(BurnStatement memory statement, BurnProof memory proof) view internal returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.y, statement.bTransfer, statement.epoch, statement.sender))).mod(); // stacktoodeep?\n\n        BurnAuxiliaries memory burnAuxiliaries;\n        burnAuxiliaries.y = uint256(keccak256(abi.encode(statementHash, proof.A, proof.S, proof.CLnPrime, proof.CRnPrime))).mod();\n        burnAuxiliaries.ys = powers(burnAuxiliaries.y);\n        burnAuxiliaries.z = uint256(keccak256(abi.encode(burnAuxiliaries.y))).mod();\n        burnAuxiliaries.zs = [burnAuxiliaries.z.exp(2)];\n        burnAuxiliaries.zSum = burnAuxiliaries.zs[0].mul(burnAuxiliaries.z); // trivial sum\n        burnAuxiliaries.k = sumScalars(burnAuxiliaries.ys).mul(burnAuxiliaries.z.sub(burnAuxiliaries.zs[0])).sub(burnAuxiliaries.zSum.mul(2 ** m).sub(burnAuxiliaries.zSum));\n        burnAuxiliaries.t = proof.tHat.sub(burnAuxiliaries.k);\n        burnAuxiliaries.twoTimesZSquared = times(twos, burnAuxiliaries.zs[0]);\n\n        burnAuxiliaries.x = uint256(keccak256(abi.encode(burnAuxiliaries.z, proof.tCommits))).mod();\n        burnAuxiliaries.tEval = add(mul(proof.tCommits[0], burnAuxiliaries.x), mul(proof.tCommits[1], burnAuxiliaries.x.mul(burnAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = add(mul(g, proof.s_sk), mul(statement.y, proof.c.neg()));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = add(mul(sigmaAuxiliaries.gEpoch, proof.s_sk), mul(statement.u, proof.c.neg()));\n        sigmaAuxiliaries.c_commit = mul(add(mul(add(statement.CRn, proof.CRnPrime), proof.s_sk), mul(add(statement.CLn, proof.CLnPrime), proof.c.neg())), burnAuxiliaries.zs[0]);\n        sigmaAuxiliaries.A_t = add(mul(add(add(mul(g, burnAuxiliaries.t), mul(h, proof.tauX)), neg(burnAuxiliaries.tEval)), proof.c), sigmaAuxiliaries.c_commit);\n        sigmaAuxiliaries.A_CLn = add(mul(g, proof.s_vDiff), add(mul(statement.CRn, proof.s_sk), mul(statement.CLn, proof.c.neg())));\n        sigmaAuxiliaries.A_CLnPrime = add(mul(h, proof.s_nuDiff), add(mul(proof.CRnPrime, proof.s_sk), mul(proof.CLnPrime, proof.c.neg())));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(burnAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_u, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_CLn, sigmaAuxiliaries.A_CLnPrime))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = mul(g, ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = hadamardInv(hs, burnAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(burnAuxiliaries.ys, burnAuxiliaries.z), burnAuxiliaries.twoTimesZSquared);\n        ipAuxiliaries.P = add(add(add(proof.A, mul(proof.S, burnAuxiliaries.x)), mul(sumPoints(gs), burnAuxiliaries.z.neg())), commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(h, proof.mu.neg()));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u_x, proof.tHat));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.o = uint256(keccak256(abi.encode(ipAuxiliaries.o, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.o; // overwrites value\n            uint256 xInv = ipAuxiliaries.o.inv();\n            ipAuxiliaries.P = add(ipAuxiliaries.P, add(mul(ipProof.ls[i], ipAuxiliaries.o.exp(2)), mul(ipProof.rs[i], xInv.exp(2))));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u_x, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function multiExpGs(uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(gs[i], ss[i]));\n        }\n    }\n\n    function multiExpHsInversed(uint256[m] memory ss, G1Point[m] memory hs) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(hs[i], ss[m - 1 - i]));\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (BurnProof memory proof) {\n        proof.A = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.S = G1Point(slice(arr, 64), slice(arr, 96));\n\n        proof.CLnPrime = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.CRnPrime = G1Point(slice(arr, 192), slice(arr, 224));\n\n        proof.tCommits = [G1Point(slice(arr, 256), slice(arr, 288)), G1Point(slice(arr, 320), slice(arr, 352))];\n        proof.tHat = slice(arr, 384);\n        proof.tauX = slice(arr, 416);\n        proof.mu = slice(arr, 448);\n\n        proof.c = slice(arr, 480);\n        proof.s_sk = slice(arr, 512);\n        proof.s_vDiff = slice(arr, 544);\n        proof.s_nuDiff = slice(arr, 576);\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 608 + i * 64), slice(arr, 640 + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 608 + (n + i) * 64), slice(arr, 640 + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 608 + n * 128);\n        ipProof.b = slice(arr, 640 + n * 128);\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[m] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) public view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) {\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {},
      "links": {},
      "address": "0xE10681CCf3452138a4B8226E583Bbc8919Dd2439",
      "transactionHash": "0x3717121c6d00551b5912444c5f19e643cd5e1b16ac70939eb1607e2ae9066948"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x208F985f55FABb91DA6a71ceE5BC0ef820202C7E",
      "transactionHash": "0xd4a5fa6f5fbb9e74de4abb39ba83d84397dd8771f0c9b179add7e10df97a91eb"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-11-06T18:42:34.478Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}