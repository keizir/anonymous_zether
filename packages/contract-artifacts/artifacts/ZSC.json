{
  "contractName": "ZSC",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "epochLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_coin",
          "type": "address"
        },
        {
          "name": "_zether",
          "type": "address"
        },
        {
          "name": "_burn",
          "type": "address"
        },
        {
          "name": "_epochLength",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "parties",
          "type": "bytes32[2][]"
        }
      ],
      "name": "TransferOccurred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        }
      ],
      "name": "simulateAccounts",
      "outputs": [
        {
          "name": "accounts",
          "type": "bytes32[2][2][]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "y",
          "type": "bytes32[2]"
        },
        {
          "name": "bTransfer",
          "type": "uint256"
        }
      ],
      "name": "fund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "C",
          "type": "bytes32[2][]"
        },
        {
          "name": "D",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "y",
          "type": "bytes32[2]"
        },
        {
          "name": "bTransfer",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"y\",\"type\":\"bytes32[2]\"},{\"name\":\"bTransfer\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"epochLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"C\",\"type\":\"bytes32[2][]\"},{\"name\":\"D\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"y\",\"type\":\"bytes32[2]\"},{\"name\":\"bTransfer\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"simulateAccounts\",\"outputs\":[{\"name\":\"accounts\",\"type\":\"bytes32[2][2][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_coin\",\"type\":\"address\"},{\"name\":\"_zether\",\"type\":\"address\"},{\"name\":\"_burn\",\"type\":\"address\"},{\"name\":\"_epochLength\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"parties\",\"type\":\"bytes32[2][]\"}],\"name\":\"TransferOccurred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZSC.sol\":\"ZSC\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/BurnVerifier.sol\":{\"keccak256\":\"0x1b0d77540857e955f7ee412f61ac469bf2b8a104780130162a120f4c2e299a69\",\"urls\":[\"bzzr://7085cdd42bf30e3fd45f23568e395ba450918ee27febba0c6bd853f192ac012d\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/CashToken.sol\":{\"keccak256\":\"0x82bb618b45f209947dab386268264b59af92d89e32057fcddb43d77444bf5ebd\",\"urls\":[\"bzzr://0e7157c5c1bb4b64fbf43071131558130666196f6e7643e4ca7a5461436f9a29\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/InnerProductVerifier.sol\":{\"keccak256\":\"0xae109fcaf1c51fe31e65077535d86f941b1d3b00dacafb70ade34bcf84360056\",\"urls\":[\"bzzr://acffea6fa7e90163a00d4623178195f549e8b854d3065897af0d7bab96dd48f9\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x8042a21e0d68964297468f01088773705e013ec436f4ef23f2c6221837c96a33\",\"urls\":[\"bzzr://c61c9573ebc7bd5f9c81065894fcbf255e2a66550dc82a31348fdf9c4b4d42fe\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZSC.sol\":{\"keccak256\":\"0x5a6e3a7d586881caaeabffddc3993b0f61344a13daf6492dc9b0fdfa266f2f6c\",\"urls\":[\"bzzr://ad66c95c7529b537a22e4138759c3d7a63b97cc0276ad2f2d19b11941e4ed419\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0x453c94b6310c9455bdcc2b7e92780168ecc50f3ec6185678ac3ee0db44fb5d3b\",\"urls\":[\"bzzr://073ab0dd78d848fa0756093ccd5c6fa28035e5e5bf44fd30fbcdc0f7acf9f55a\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzzr://946a26eebf5d294534471d07c4dc449ce3123e9fc2994bdfcd99dff1d09cc1af\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzzr://fefcc5ec4e313a66c9fd38375983b5973c528e7e19b6d37c2f1ac6745295e6e2\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzzr://812521b94ef1bd30b0a93e14a97a0e79e2bf4cb607aa47c21c8177966a79fd1a\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060085534801561001557600080fd5b506040516080806127cb8339810180604052608081101561003557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050505061268b806101406000396000f3fe608060405234801561001057600080fd5b5060043610610074576000357c0100000000000000000000000000000000000000000000000000000000900480635464befb1461007957806357d775f8146100b15780635ec7ccfd146100cf57806373663b5f146103ac5780637ea9712f146104f3575b600080fd5b6100af6004803603606081101561008f57600080fd5b810190808060400190919291929080359060200190929190505050610611565b005b6100b9610b10565b6040518082815260200191505060405180910390f35b6103aa600480360360e08110156100e557600080fd5b810190808035906020019064010000000081111561010257600080fd5b82018360208201111561011457600080fd5b8035906020019184604083028401116401000000008311171561013657600080fd5b9190808060200260200160405190810160405280939291908181526020016000905b828210156101af578484839050604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610158565b5050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019064010000000081111561021357600080fd5b82018360208201111561022557600080fd5b8035906020019184604083028401116401000000008311171561024757600080fd5b9190808060200260200160405190810160405280939291908181526020016000905b828210156102c0578484839050604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610269565b5050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019064010000000081111561032457600080fd5b82018360208201111561033657600080fd5b8035906020019184600183028401116401000000008311171561035857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b16565b005b6104f1600480360360c08110156103c257600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019064010000000081111561046b57600080fd5b82018360208201111561047d57600080fd5b8035906020019184600183028401116401000000008311171561049f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611519565b005b6105746004803603604081101561050957600080fd5b810190808035906020019064010000000081111561052657600080fd5b82018360208201111561053857600080fd5b8035906020019184604083028401116401000000008311171561055a57600080fd5b909192939192939080359060200190929190505050611e21565b60405180806020018281038252838181518152602001915080516000925b818410156106005782849060200190602002015160026000925b818410156105f25782846020020151600260200280838360005b838110156105e15780820151818401526020810190506105c6565b5050505090500192600101926105ac565b925050509260010192610592565b925050509250505060405180910390f35b6000826040516020018082600260200280828437600081840152601f19601f820116905080830192505050915050604051602081830303815290604052805190602001209050610660816120ed565b63ffffffff82111515156106dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4465706f73697420616d6f756e74206f7574206f662072616e67652e0000000081525060200191505060405180910390fd5b6106e46123c0565b60056000838152602001908152602001600020600060028110151561070557fe5b60020201600280602002604051908101604052809291908260028015610740576020028201915b81548152602001906001019080831161072c575b50505050509050600160405182518152602083015160208201527f077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d460408201527f01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f8756060820152846080820152604080820160606040840160075afa8216915060408360808360065afa821691508115156107d957600080fd5b5050806005600084815260200190815260200160002060006002811015156107fd57fe5b6002020190600261080f9291906123e2565b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561090857600080fd5b505af115801561091c573d6000803e3d6000fd5b505050506040513d602081101561093257600080fd5b810190808051906020019092919050505015156109b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5472616e736665722066726f6d2073656e646572206661696c65642e0000000081525060200191505060405180910390fd5b63ffffffff6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610a7657600080fd5b505afa158015610a8a573d6000803e3d6000fd5b505050506040513d6020811015610aa057600080fd5b810190808051906020019092919050505011151515610b0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806125e06028913960400191505060405180910390fd5b50505050565b60035481565b600083519050606081604051908082528060200260200182016040528015610b5857816020015b610b45612422565b815260200190600190039081610b3d5790505b509050606082604051908082528060200260200182016040528015610b9757816020015b610b84612422565b815260200190600190039081610b7c5790505b509050828851141515610c12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f496e707574206172726179206c656e677468206d69736d61746368210000000081525060200191505060405180910390fd5b60008090505b83811015610f8c5760008782815181101515610c3057fe5b906020019060200201516040516020018082600260200280838360005b83811015610c68578082015181840152602081019050610c4d565b50505050905001915050604051602081830303815290604052805190602001209050610c93816120ed565b610c9b612444565b60056000838152602001908152602001600020600280602002604051908101604052809291906000905b82821015610d1e57838260020201600280602002604051908101604052809291908260028015610d0a576020028201915b815481526020019060010190808311610cf6575b505050505081526020019060010190610cc5565b5050505090506001604051825151815260208351015160208201526020850260208e010151516040820152602080860260208f01015101517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd470360608201526040835160808360065afa821691506020830151518152602080840151015160208201528b51604082015260208c01517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd470360608201526040602084015160808360065afa82169150811515610df257600080fd5b50508060056000848152602001908152602001600020906002610e16929190612472565b5060046000838152602001908152602001600020600280602002604051908101604052809291906000905b82821015610e9a57838260020201600280602002604051908101604052809291908260028015610e86576020028201915b815481526020019060010190808311610e72575b505050505081526020019060010190610e41565b5050505090506001604051825151815260208351015160208201526020850260208e010151516040820152602080860260208f01015101517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703606082015260406020860260208901015160808360065afa821691506020830151518152602080840151015160208201528b51604082015260208c01517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703606082015260406020860260208801015160808360065afa82169150811515610f7b57600080fd5b505050508080600101915050610c18565b5060008090506000866040516020018082600260200280838360005b83811015610fc3578082015181840152602081019050610fa8565b5050505090500191505060405160208183030381529060405280519060200120905060008090505b60078054905081101561102f578160078281548110151561100857fe5b90600052602060002001541415611022576001925061102f565b8080600101915050610feb565b50811515156110a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f6e636520616c7265616479207365656e210000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631659e67d85858d8d8d6008548e8e6040518963ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001806020018060200189600260200280838360005b83811015611150578082015181840152602081019050611135565b505050509050018060200188815260200187600260200280838360005b8381101561118857808201518184015260208101905061116d565b505050509050018060200186810386528e8181518152602001915080516000925b818410156111f457828490602001906020020151600260200280838360005b838110156111e35780820151818401526020810190506111c8565b5050505090500192600101926111a9565b9250505086810385528d8181518152602001915080516000925b8184101561125957828490602001906020020151600260200280838360005b8381101561124857808201518184015260208101905061122d565b50505050905001926001019261120e565b9250505086810384528c8181518152602001915080516000925b818410156112be57828490602001906020020151600260200280838360005b838110156112ad578082015181840152602081019050611292565b505050509050019260010192611273565b9250505086810383528a8181518152602001915080516000925b8184101561132357828490602001906020020151600260200280838360005b838110156113125780820151818401526020810190506112f7565b5050505090500192600101926112d8565b92505050868103825287818151815260200191508051906020019080838360005b8381101561135f578082015181840152602081019050611344565b50505050905090810190601f16801561138c5780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060206040518083038186803b1580156113b457600080fd5b505afa1580156113c8573d6000803e3d6000fd5b505050506040513d60208110156113de57600080fd5b81019080805190602001909291905050501515611446576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126086023913960400191505060405180910390fd5b60078190806001815401808255809150509060018203906000526020600020016000909192909190915055507f4ef6ed22b1551aeadeb80e67bb3a38788491e81527cc70a85bff611e9e51e18a8860405180806020018281038252838181518152602001915080516000925b818410156114fd57828490602001906020020151600260200280838360005b838110156114ec5780820151818401526020810190506114d1565b5050505090500192600101926114b2565b925050509250505060405180910390a150505050505050505050565b6000846040516020018082600260200280838360005b8381101561154a57808201518184015260208101905061152f565b50505050905001915050604051602081830303815290604052805190602001209050611575816120ed565b8360001115801561158a575063ffffffff8411155b15156115fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e7366657220616d6f756e74206f7574206f662072616e67652e00000081525060200191505060405180910390fd5b611606612444565b60056000838152602001908152602001600020600280602002604051908101604052809291906000905b8282101561168957838260020201600280602002604051908101604052809291908260028015611675576020028201915b815481526020019060010190808311611661575b505050505081526020019060010190611630565b5050505090506001604051825151815260208351015160208201527f077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d460408201527f01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f8756060820152867f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001036080820152604080820160606040840160075afa821691506040835160808360065afa8216915081151561174657600080fd5b5050806005600084815260200190815260200160002090600261176a929190612472565b5060046000838152602001908152602001600020600280602002604051908101604052809291906000905b828210156117ee578382600202016002806020026040519081016040528092919082600280156117da576020028201915b8154815260200190600101908083116117c6575b505050505081526020019060010190611795565b5050505090506001604051825151815260208351015160208201527f077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d460408201527f01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f8756060820152867f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001036080820152604080820160606040840160075afa821691506040835160808360065afa821691508115156118ab57600080fd5b505060008090506000856040516020018082600260200280838360005b838110156118e35780820151818401526020810190506118c8565b5050505090500191505060405160208183030381529060405280519060200120905060008090505b60078054905081101561194f578160078281548110151561192857fe5b90600052602060002001541415611942576001925061194f565b808060010191505061190b565b50811515156119c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f6e636520616c7265616479207365656e210000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e1a999e846000600281101515611a1357fe5b6020020151856001600281101515611a2757fe5b60200201518b8b6008548c338d6040518963ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018089600260200280838360005b83811015611a8a578082015181840152602081019050611a6f565b5050505090500188600260200280838360005b83811015611ab8578082015181840152602081019050611a9d565b5050505090500187600260200280838360005b83811015611ae6578082015181840152602081019050611acb565b5050505090500186815260200185815260200184600260200280838360005b83811015611b20578082015181840152602081019050611b05565b505050509050018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b95578082015181840152602081019050611b7a565b50505050905090810190601f168015611bc25780820380516001836020036101000a031916815260200191505b50995050505050505050505060206040518083038186803b158015611be657600080fd5b505afa158015611bfa573d6000803e3d6000fd5b505050506040513d6020811015611c1057600080fd5b81019080805190602001909291905050501515611c95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4275726e2070726f6f6620766572696669636174696f6e206661696c6564210081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611d5957600080fd5b505af1158015611d6d573d6000803e3d6000fd5b505050506040513d6020811015611d8357600080fd5b81019080805190602001909291905050501515611deb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603581526020018061262b6035913960400191505060405180910390fd5b60078190806001815401808255809150509060018203906000526020600020016000909192909190915055505050505050505050565b6060600084849050905080604051908082528060200260200182016040528015611e6557816020015b611e526124c2565b815260200190600190039081611e4a5790505b50915060008090505b818110156120e45760008686838181101515611e8657fe5b9050604002016040516020018082600260200280828437600081840152601f19601f82011690508083019250505091505060405160208183030381529060405280519060200120905060046000828152602001908152602001600020600280602002604051908101604052809291906000905b82821015611f5257838260020201600280602002604051908101604052809291908260028015611f3e576020028201915b815481526020019060010190808311611f2a575b505050505081526020019060010190611ef9565b505050508483815181101515611f6457fe5b9060200190602002018190525084600660008381526020019081526020016000205410156120d657611f94612444565b60056000838152602001908152602001600020600280602002604051908101604052809291906000905b8282101561201757838260020201600280602002604051908101604052809291908260028015612003576020028201915b815481526020019060010190808311611fef575b505050505081526020019060010190611fbe565b5050505090506001604051825151815260208351015160208201526020850260208801015151516040820152602080860260208901015151015160608201526040602086026020890101515160808360065afa82169150602083015151815260208084015101516020820152602080860260208901015101515160408201526020806020870260208a0101510151015160608201526040602080870260208a010151015160808360065afa821691508115156120d257600080fd5b5050505b508080600101915050611e6e565b50509392505050565b6000600354428115156120fc57fe5b049050806006600084815260200190815260200160002054101561239c576121226124f0565b604080519081016040528060046000868152602001908152602001600020600280602002604051908101604052809291906000905b828210156121b05783826002020160028060200260405190810160405280929190826002801561219c576020028201915b815481526020019060010190808311612188575b505050505081526020019060010190612157565b50505050815260200160056000868152602001908152602001600020600280602002604051908101604052809291906000905b8282101561223c57838260020201600280602002604051908101604052809291908260028015612228576020028201915b815481526020019060010190808311612214575b5050505050815260200190600101906121e3565b50505050815250905060016040518251515181526020835151015160208201526020830151515160408201526020808401515101516060820152604083515160808360065afa82169150602083510151518152602080845101510151602082015260208084015101515160408201526020806020850151015101516060820152604060208451015160808360065afa821691508115156122db57600080fd5b50508060006002811015156122ec57fe5b602002015160046000858152602001908152602001600020906002612312929190612472565b50604080519081016040528060408051908101604052806000600102815260200160006001028152508152602001604080519081016040528060006001028152602001600060010281525081525060056000858152602001908152602001600020906002612381929190612472565b50816006600085815260200190815260200160002081905550505b8060085410156123bc5780600881905550600760006123bb919061251f565b5b5050565b6040805190810160405280600290602082028038833980820191505090505090565b8260028101928215612411579160200282015b828111156124105782518255916020019190600101906123f5565b5b50905061241e9190612540565b5090565b6040805190810160405280600290602082028038833980820191505090505090565b6080604051908101604052806002905b61245c612422565b8152602001906001900390816124545790505090565b826002800281019282156124b1579160200282015b828111156124b0578251829060026124a0929190612565565b5091602001919060020190612487565b5b5090506124be91906125a5565b5090565b6080604051908101604052806002905b6124da612422565b8152602001906001900390816124d25790505090565b610100604051908101604052806002905b6125096124c2565b8152602001906001900390816125015790505090565b508054600082559060005260206000209081019061253d9190612540565b50565b61256291905b8082111561255e576000816000905550600101612546565b5090565b90565b8260028101928215612594579160200282015b82811115612593578251825591602001919060010190612578565b5b5090506125a19190612540565b5090565b6125ce91905b808211156125ca57600081816125c191906125d1565b506002016125ab565b5090565b90565b50600081556001016000905556fe46756e642070757368657320636f6e74726163742070617374206d6178696d756d2076616c75652e5472616e736665722070726f6f6620766572696669636174696f6e206661696c656421546869732073686f756c646e2774206661696c2e2e2e20536f6d657468696e672077656e74207365766572656c792077726f6e672ea165627a7a72305820b8038f6d1c02aae2edc32051e1d35e588bfbaa0ed520c3f3bbb69a0065db295f0029",
  "deployedBytecode": "",
  "sourceMap": "111:13112:5:-;;;679:1;652:28;;1109:376;8:9:-1;5:2;;;30:1;27;20:12;5:2;1109:376:5;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1109:376:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:5;1325:4;;:23;;;;;;;;;;;;;;;;;;1390:7;1358:14;;:40;;;;;;;;;;;;;;;;;;1436:5;1408:12;;:34;;;;;;;;;;;;;;;;;;1466:12;1452:11;:26;;;;1109:376;;;;111:13112;;;;;;",
  "deployedSourceMap": "111:13112:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:13112:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5155:1317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5155:1317:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;216:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6478:3757;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6478:3757:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6478:3757:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6478:3757:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6478:3757:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6478:3757:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6478:3757:5;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6478:3757:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6478:3757:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6478:3757:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6478:3757:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6478:3757:5;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6478:3757:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6478:3757:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6478:3757:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6478:3757:5;;;;;;;;;;;;;;;:::i;:::-;;10241:2980;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10241:2980:5;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10241:2980:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10241:2980:5;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10241:2980:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10241:2980:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10241:2980:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10241:2980:5;;;;;;;;;;;;;;;:::i;:::-;;1491:2107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1491:2107:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1491:2107:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1491:2107:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1491:2107:5;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1491:2107:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5155:1317;5230:13;5267:1;5256:13;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5256:13:5;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5256:13:5;;;5246:24;;;;;;5230:40;;5280:15;5289:5;5280:8;:15::i;:::-;296:10;5314:9;:16;;5306:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5411:25;;:::i;:::-;5439:10;:17;5450:5;5439:17;;;;;;;;;;;5457:1;5439:20;;;;;;;;;;;;5411:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:1;5535:4;5529:11;5569:7;5563:14;5560:1;5553:25;5631:4;5622:7;5618:18;5612:25;5605:4;5602:1;5598:12;5591:47;5672:66;5665:4;5662:1;5658:12;5651:88;5773:66;5766:4;5763:1;5759:12;5752:88;5874:9;5867:4;5864:1;5860:12;5853:31;6049:4;6042;6039:1;6035:12;6029:4;6022;6019:1;6015:12;6009:4;6004:3;5993:61;5985:6;5981:74;5971:84;;6130:4;6121:7;6115:4;6112:1;6106:4;6101:3;6090:45;6082:6;6078:58;6068:68;;6159:6;6152:14;6149:2;;;6195:1;6192;6185:12;6149:2;5478:743;;6253:7;6230:10;:17;6241:5;6230:17;;;;;;;;;;;6248:1;6230:20;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;6278:4;;;;;;;;;;;:17;;;6296:10;6316:4;6323:9;6278:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6278:55:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6278:55:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6278:55:5;;;;;;;;;;;;;;;;6270:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:10;6384:4;;;;;;;;;;;:14;;;6407:4;6384:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6384:29:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6384:29:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6384:29:5;;;;;;;;;;;;;;;;:36;;6376:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5155:1317;;;;:::o;216:26::-;;;;:::o;6478:3757::-;6621:12;6636:1;:8;6621:23;;6654;6697:4;6680:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6654:48;;6712:23;6755:4;6738:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6712:48;;6790:4;6778:1;:8;:16;6770:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6843:9;6855:1;6843:13;;6838:2895;6862:4;6858:1;:8;6838:2895;;;6887:13;6924:1;6926;6924:4;;;;;;;;;;;;;;;;;;6913:16;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6913:16:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6913:16:5;;;6903:27;;;;;;6887:43;;6944:15;6953:5;6944:8;:15::i;:::-;6973:28;;:::i;:::-;7004:10;:17;7015:5;7004:17;;;;;;;;;;;6973:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7076:1;7109:4;7103:11;7153:7;7147:14;7141:21;7138:1;7131:32;7227:4;7217:7;7211:14;7207:25;7201:32;7194:4;7191:1;7187:12;7180:54;7595:4;7592:1;7588:12;7581:4;7578:1;7574:12;7570:31;7564:38;7558:45;7551:4;7548:1;7544:12;7537:67;7764:4;7755;7752:1;7748:12;7741:4;7738:1;7734:12;7730:31;7724:38;7720:49;7714:56;7646:66;7642:129;7635:4;7632:1;7628:12;7621:151;7858:4;7848:7;7842:14;7836:4;7833:1;7827:4;7822:3;7811:52;7803:6;7799:65;7789:75;;7916:4;7907:7;7903:18;7897:25;7891:32;7888:1;7881:43;7999:4;7991;7982:7;7978:18;7972:25;7968:36;7962:43;7955:4;7952:1;7948:12;7941:65;8137:1;8131:8;8124:4;8121:1;8117:12;8110:30;8263:4;8260:1;8256:12;8250:19;8182:66;8178:92;8171:4;8168:1;8164:12;8157:114;8379:4;8371;8362:7;8358:18;8352:25;8346:4;8343:1;8337:4;8332:3;8321:63;8313:6;8309:76;8299:86;;8412:6;8405:14;8402:2;;;8452:1;8449;8442:12;8402:2;7044:1442;;8519:7;8499:10;:17;8510:5;8499:17;;;;;;;;;;;:27;;;;;;;:::i;:::-;;8591:3;:10;8595:5;8591:10;;;;;;;;;;;8581:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8656:1;8689:4;8683:11;8733:7;8727:14;8721:21;8718:1;8711:32;8807:4;8797:7;8791:14;8787:25;8781:32;8774:4;8771:1;8767:12;8760:54;8889:4;8886:1;8882:12;8875:4;8872:1;8868:12;8864:31;8858:38;8852:45;8845:4;8842:1;8838:12;8831:67;9058:4;9049;9046:1;9042:12;9035:4;9032:1;9028:12;9024:31;9018:38;9014:49;9008:56;8940:66;8936:129;8929:4;8926:1;8922:12;8915:151;9178:4;9169;9166:1;9162:12;9155:4;9150:3;9146:14;9142:33;9136:40;9130:4;9127:1;9121:4;9116:3;9105:78;9097:6;9093:91;9083:101;;9236:4;9227:7;9223:18;9217:25;9211:32;9208:1;9201:43;9319:4;9311;9302:7;9298:18;9292:25;9288:36;9282:43;9275:4;9272:1;9268:12;9261:65;9370:1;9364:8;9357:4;9354:1;9350:12;9343:30;9496:4;9493:1;9489:12;9483:19;9415:66;9411:92;9404:4;9401:1;9397:12;9390:114;9616:4;9607;9604:1;9600:12;9593:4;9588:3;9584:14;9580:33;9574:40;9568:4;9565:1;9559:4;9554:3;9543:78;9535:6;9531:91;9521:101;;9649:6;9642:14;9639:2;;;9689:1;9686;9679:12;9639:2;8624:1099;;;;6868:3;;;;;;;6838:2895;;;;9743:9;9755:5;9743:17;;9770:13;9807:1;9796:13;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9796:13:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9796:13:5;;;9786:24;;;;;;9770:40;;9825:9;9837:1;9825:13;;9820:163;9844:8;:15;;;;9840:1;:19;9820:163;;;9899:5;9884:8;9893:1;9884:11;;;;;;;;;;;;;;;;;;:20;9880:93;;;9931:4;9924:11;;9953:5;;9880:93;9861:3;;;;;;;9820:163;;;;10001:4;10000:5;9992:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10047:14;;;;;;;;;;;:29;;;10077:3;10082;10087:1;10090;10093;10096:16;;10114:1;10117:5;10047:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10047:76:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10047:76:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10047:76:5;;;;;;;;;;;;;;;;10039:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10174:8;10188:5;10174:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;10174:20:5;;;;;;;;;;;;;;;;;;;;;;10209:19;10226:1;10209:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10209:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;6478:3757;;;;;;;;;;:::o;10241:2980::-;10353:13;10390:1;10379:13;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10379:13:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10379:13:5;;;10369:24;;;;;;10353:40;;10403:15;10412:5;10403:8;:15::i;:::-;10442:9;10437:1;:14;;:34;;;;;296:10;10455:9;:16;;10437:34;10429:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10515:28;;:::i;:::-;10546:10;:17;10557:5;10546:17;;;;;;;;;;;10515:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10669:1;10698:4;10692:11;10738:7;10732:14;10726:21;10723:1;10716:32;10808:4;10798:7;10792:14;10788:25;10782:32;10775:4;10772:1;10768:12;10761:54;10896:66;10889:4;10886:1;10882:12;10875:88;11004:66;10997:4;10994:1;10990:12;10983:88;11184:9;11116:66;11112:82;11105:4;11102:1;11098:12;11091:104;11286:4;11279;11276:1;11272:12;11266:4;11259;11256:1;11252:12;11246:4;11241:3;11230:61;11222:6;11218:74;11208:84;;11374:4;11364:7;11358:14;11352:4;11349:1;11343:4;11338:3;11327:52;11319:6;11315:65;11305:75;;11469:6;11462:14;11459:2;;;11505:1;11502;11495:12;11459:2;10641:890;;11560:7;11540:10;:17;11551:5;11540:17;;;;;;;;;;;:27;;;;;;;:::i;:::-;;11608:3;:10;11612:5;11608:10;;;;;;;;;;;11598:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11739:1;11768:4;11762:11;11808:7;11802:14;11796:21;11793:1;11786:32;11878:4;11868:7;11862:14;11858:25;11852:32;11845:4;11842:1;11838:12;11831:54;11919:66;11912:4;11909:1;11905:12;11898:88;12027:66;12020:4;12017:1;12013:12;12006:88;12207:9;12139:66;12135:82;12128:4;12125:1;12121:12;12114:104;12309:4;12302;12299:1;12295:12;12289:4;12282;12279:1;12275:12;12269:4;12264:3;12253:61;12245:6;12241:74;12231:84;;12397:4;12387:7;12381:14;12375:4;12372:1;12366:4;12361:3;12350:52;12342:6;12338:65;12328:75;;12492:6;12485:14;12482:2;;;12528:1;12525;12518:12;12482:2;11711:843;;12563:9;12575:5;12563:17;;12590:13;12627:1;12616:13;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12616:13:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12616:13:5;;;12606:24;;;;;;12590:40;;12645:9;12657:1;12645:13;;12640:231;12664:8;:15;;;;12660:1;:19;12640:231;;;12719:5;12704:8;12713:1;12704:11;;;;;;;;;;;;;;;;;;:20;12700:161;;;12819:4;12812:11;;12841:5;;12700:161;12681:3;;;;;;;12640:231;;;;12889:4;12888:5;12880:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12935:12;;;;;;;;;;;:23;;;12959:7;12967:1;12959:10;;;;;;;;;;;;;12971:7;12979:1;12971:10;;;;;;;;;;;;;12983:1;12986:9;12997:16;;13015:1;13018:10;13030:5;12935:101;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12935:101:5;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12935:101:5;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12935:101:5;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12935:101:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12935:101:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12935:101:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12935:101:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12935:101:5;;;;;;;;;;;;;;;;12927:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13090:4;;;;;;;;;;;:13;;;13104:10;13116:9;13090:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13090:36:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13090:36:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13090:36:5;;;;;;;;;;;;;;;;13082:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13194:8;13208:5;13194:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;13194:20:5;;;;;;;;;;;;;;;;;;;;;;10241:2980;;;;;;;;:::o;1491:2107::-;1580:31;2015:12;2030:1;;:8;;2015:23;;2079:4;2059:25;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2048:36;;2099:9;2111:1;2099:13;;2094:1498;2118:4;2114:1;:8;2094:1498;;;2143:13;2180:1;;2182;2180:4;;;;;;;;;;;;;;2169:16;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2169:16:5;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2169:16:5;;;2159:27;;;;;;2143:43;;2214:3;:10;2218:5;2214:10;;;;;;;;;;;2200:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;2209:1;2200:11;;;;;;;;;;;;;;;;;:24;;;;2264:5;2242:12;:19;2255:5;2242:19;;;;;;;;;;;;:27;2238:1344;;;2289:28;;:::i;:::-;2320:10;:17;2331:5;2320:17;;;;;;;;;;;2289:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2400:1;2437:4;2431:11;2485:7;2479:14;2473:21;2470:1;2463:32;2563:4;2553:7;2547:14;2543:25;2537:32;2530:4;2527:1;2523:12;2516:54;2662:4;2659:1;2655:12;2648:4;2638:8;2634:19;2630:38;2624:45;2618:52;2612:59;2605:4;2602:1;2598:12;2591:81;2778:4;2768;2765:1;2761:12;2754:4;2744:8;2740:19;2736:38;2730:45;2724:52;2720:63;2714:70;2707:4;2704:1;2700:12;2693:92;2913:4;2903;2900:1;2896:12;2889:4;2879:8;2875:19;2871:38;2865:45;2859:52;2853:4;2850:1;2844:4;2839:3;2828:90;2820:6;2816:103;2806:113;;2975:4;2966:7;2962:18;2956:25;2950:32;2947:1;2940:43;3062:4;3054;3045:7;3041:18;3035:25;3031:36;3025:43;3018:4;3015:1;3011:12;3004:65;3174:4;3165;3162:1;3158:12;3151:4;3141:8;3137:19;3133:38;3127:45;3123:56;3117:63;3111:70;3104:4;3101:1;3097:12;3090:92;3299:4;3291;3282;3279:1;3275:12;3268:4;3258:8;3254:19;3250:38;3244:45;3240:56;3234:63;3230:74;3224:81;3217:4;3214:1;3210:12;3203:103;3445:4;3437;3428;3425:1;3421:12;3414:4;3404:8;3400:19;3396:38;3390:45;3386:56;3380:63;3374:4;3371:1;3365:4;3360:3;3349:101;3341:6;3337:114;3327:124;;3482:6;3475:14;3472:2;;;3526:1;3523;3516:12;3472:2;2364:1204;;;;2094:1498;2124:3;;;;;;;2094:1498;;;;1491:2107;;;;;;:::o;3604:1545::-;3656:9;3686:11;;3668:15;:29;;;;;;;;3656:41;;3733:1;3711:12;:19;3724:5;3711:19;;;;;;;;;;;;:23;3707:1327;;;3750:31;;:::i;:::-;:65;;;;;;;;;3785:3;:10;3789:5;3785:10;;;;;;;;;;;3750:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3797:10;:17;3808:5;3797:17;;;;;;;;;;;3750:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:1;3903:4;3897:11;3953:7;3947:14;3941:21;3935:28;3932:1;3925:39;4035:4;4024:7;4018:14;4012:21;4008:32;4002:39;3995:4;3992:1;3988:12;3981:61;4111:4;4102:7;4098:18;4092:25;4086:32;4080:39;4073:4;4070:1;4066:12;4059:61;4202:4;4193;4184:7;4180:18;4174:25;4168:32;4164:43;4158:50;4151:4;4148:1;4144:12;4137:72;4302:4;4291:7;4285:14;4279:21;4273:4;4270:1;4264:4;4259:3;4248:59;4240:6;4236:72;4226:82;;4367:4;4357:7;4351:14;4347:25;4341:32;4335:39;4332:1;4325:50;4457:4;4449;4439:7;4433:14;4429:25;4423:32;4419:43;4413:50;4406:4;4403:1;4399:12;4392:72;4545:4;4537;4528:7;4524:18;4518:25;4514:36;4508:43;4502:50;4495:4;4492:1;4488:12;4481:72;4646:4;4638;4630;4621:7;4617:18;4611:25;4607:36;4601:43;4597:54;4591:61;4584:4;4581:1;4577:12;4570:83;4757:4;4749;4739:7;4733:14;4729:25;4723:32;4717:4;4714:1;4708:4;4703:3;4692:70;4684:6;4680:83;4670:93;;4790:6;4783:14;4780:2;;;4830:1;4827;4820:12;4780:2;3838:1026;;4890:7;4898:1;4890:10;;;;;;;;;;;;;4877:3;:10;4881:5;4877:10;;;;;;;;;;;:23;;;;;;;:::i;:::-;;4914:72;;;;;;;;;;;;;;;;;;4944:1;4936:10;;4914:72;;;;4956:1;4948:10;;4914:72;;;;;;;;;;;;;;;;4970:1;4962:10;;4914:72;;;;4982:1;4974:10;;4914:72;;;;;;:10;:17;4925:5;4914:17;;;;;;;;;;;:72;;;;;;;:::i;:::-;;5022:1;5000:12;:19;5013:5;5000:19;;;;;;;;;;;:23;;;;3707:1327;;5066:1;5047:16;;:20;5043:100;;;5102:1;5083:16;:20;;;;5124:8;;5117:15;;;;:::i;:::-;5043:100;3604:1545;;:::o;111:13112::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;111:13112:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;111:13112:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.4;\n\nimport './ZetherVerifier.sol';\nimport './BurnVerifier.sol';\nimport './CashToken.sol';\n\ncontract ZSC {\n    CashToken coin;\n    ZetherVerifier zetherverifier;\n    BurnVerifier burnverifier;\n    uint256 public epochLength; // now in milliseconds.\n\n    uint256 constant MAX = 4294967295; // 2^32 - 1 // no sload for constants...!\n    mapping(bytes32 => bytes32[2][2]) acc; // main account mapping\n    mapping(bytes32 => bytes32[2][2]) pTransfers; // storage for pending transfers\n    mapping(bytes32 => uint256) lastRollOver;\n    bytes32[] nonceSet; // would be more natural to use a mapping, but they can't be deleted / reset!\n    uint256 lastGlobalUpdate = 0; // will be also used as a proxy for \"current epoch\", seeing as rollovers will be anticipated\n    // not implementing account locking for now...revisit\n\n    event TransferOccurred(bytes32[2][] parties); // all parties will be notified, client can determine whether it was real or not.\n    // arg is still necessary for transfers---not even so much to know when you received a transfer, as to know when you got rolled over.\n\n    constructor(address _coin, address _zether, address _burn, uint256 _epochLength) public {\n        // epoch length, like block.time, is in _seconds_. 4 is the minimum!!! (To allow a withdrawal to go through.)\n        coin = CashToken(_coin);\n        zetherverifier = ZetherVerifier(_zether);\n        burnverifier = BurnVerifier(_burn);\n        epochLength = _epochLength;\n    }\n\n    function simulateAccounts(bytes32[2][] calldata y, uint256 epoch) view external returns (bytes32[2][2][] memory accounts) {\n        // all of this could be assembled locally by querying `acc` and `pTransfers` (and `lastRollOver`) and assembling things by hand\n        // turns out this is extremely _slow_ though, because of the ~ 4 * N queries which must be made. turns out it's much faster\n        // to simply move the entire process into a contract method, and in fact this allows us to make the above 3 private\n        uint256 size = y.length;\n        accounts = new bytes32[2][2][](size);\n        for (uint256 i = 0; i < size; i++) {\n            bytes32 yHash = keccak256(abi.encode(y[i]));\n            accounts[i] = acc[yHash];\n            if (lastRollOver[yHash] < epoch) {\n                bytes32[2][2] memory scratch = pTransfers[yHash];\n                assembly {\n                    let result := 1\n                    let m := mload(0x40)\n                    mstore(m, mload(mload(scratch)))\n                    mstore(add(m, 0x20), mload(add(mload(scratch), 0x20)))\n                    mstore(add(m, 0x40), mload(mload(mload(add(add(accounts, 0x20), mul(i, 0x20))))))\n                    mstore(add(m, 0x60), mload(add(mload(mload(add(add(accounts, 0x20), mul(i, 0x20)))), 0x20)))\n                    result := and(result, staticcall(gas, 0x06, m, 0x80, mload(mload(add(add(accounts, 0x20), mul(i, 0x20)))), 0x40))\n                    mstore(m, mload(mload(add(scratch, 0x20))))\n                    mstore(add(m, 0x20), mload(add(mload(add(scratch, 0x20)), 0x20)))\n                    mstore(add(m, 0x40), mload(mload(add(mload(add(add(accounts, 0x20), mul(i, 0x20))), 0x20))))\n                    mstore(add(m, 0x60), mload(add(mload(add(mload(add(add(accounts, 0x20), mul(i, 0x20))), 0x20)), 0x20)))\n                    result := and(result, staticcall(gas, 0x06, m, 0x80, mload(add(mload(add(add(accounts, 0x20), mul(i, 0x20))), 0x20)), 0x40))\n                    if iszero(result) {\n                        revert(0, 0)\n                    }\n                }\n            }\n        }\n    }\n\n    function rollOver(bytes32 yHash) internal {\n        uint256 e = block.timestamp / epochLength;\n        if (lastRollOver[yHash] < e) {\n            bytes32[2][2][2] memory scratch = [acc[yHash], pTransfers[yHash]];\n            assembly {\n                let result := 1\n                let m := mload(0x40)\n                mstore(m, mload(mload(mload(scratch))))\n                mstore(add(m, 0x20), mload(add(mload(mload(scratch)), 0x20)))\n                mstore(add(m, 0x40), mload(mload(mload(add(scratch, 0x20)))))\n                mstore(add(m, 0x60), mload(add(mload(mload(add(scratch, 0x20))), 0x20)))\n                result := and(result, staticcall(gas, 0x06, m, 0x80, mload(mload(scratch)), 0x40))\n                mstore(m, mload(mload(add(mload(scratch), 0x20))))\n                mstore(add(m, 0x20), mload(add(mload(add(mload(scratch), 0x20)), 0x20)))\n                mstore(add(m, 0x40), mload(mload(add(mload(add(scratch, 0x20)), 0x20))))\n                mstore(add(m, 0x60), mload(add(mload(add(mload(add(scratch, 0x20)), 0x20)), 0x20)))\n                result := and(result, staticcall(gas, 0x06, m, 0x80, mload(add(mload(scratch), 0x20)), 0x40))\n                if iszero(result) {\n                    revert(0, 0)\n                }\n            }\n            acc[yHash] = scratch[0];\n            pTransfers[yHash] = [[bytes32(0), bytes32(0)], [bytes32(0), bytes32(0)]];\n            lastRollOver[yHash] = e;\n        }\n        if (lastGlobalUpdate < e) {\n            lastGlobalUpdate = e;\n            delete nonceSet;\n        }\n    }\n\n    function fund(bytes32[2] calldata y, uint256 bTransfer) external {\n        bytes32 yHash = keccak256(abi.encode(y));\n        rollOver(yHash);\n\n        require(bTransfer <= MAX, \"Deposit amount out of range.\"); // uint, so other way not necessary?\n\n        bytes32[2] memory scratch = pTransfers[yHash][0];\n        assembly {\n            let result := 1\n            let m := mload(0x40)\n            mstore(m, mload(scratch))\n            mstore(add(m, 0x20), mload(add(scratch, 0x20)))\n            mstore(add(m, 0x40), 0x077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d4)\n            mstore(add(m, 0x60), 0x01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f875)\n            mstore(add(m, 0x80), bTransfer) // b will hopefully be a primitive / literal and not a pointer / address?\n            result := and(result, staticcall(gas, 0x07, add(m, 0x40), 0x60, add(m, 0x40), 0x40))\n            result := and(result, staticcall(gas, 0x06, m, 0x80, scratch, 0x40))\n            if iszero(result) {\n                revert(0, 0)\n            }\n        }\n        pTransfers[yHash][0] = scratch;\n        require(coin.transferFrom(msg.sender, address(this), bTransfer), \"Transfer from sender failed.\");\n        require(coin.balanceOf(address(this)) <= MAX, \"Fund pushes contract past maximum value.\");\n    }\n\n    function transfer(bytes32[2][] memory C, bytes32[2] memory D, bytes32[2][] memory y, bytes32[2] memory u, bytes memory proof) public {\n        uint256 size = y.length;\n        bytes32[2][] memory CLn = new bytes32[2][](size);\n        bytes32[2][] memory CRn = new bytes32[2][](size);\n        require(C.length == size, \"Input array length mismatch!\");\n\n        for (uint256 i = 0; i < size; i++) {\n            bytes32 yHash = keccak256(abi.encode(y[i]));\n            rollOver(yHash);\n            bytes32[2][2] memory scratch = pTransfers[yHash];\n            assembly {\n                let result := 1\n                let m := mload(0x40)\n                mstore(m, mload(mload(scratch)))\n                mstore(add(m, 0x20), mload(add(mload(scratch), 0x20)))\n                // calldatacopy(add(m, 0x40), add(0x104, mul(i, 0x40)), 0x40) // copy C[i] onto running block\n                // having to change external --> public to avoid stacktoodeep\n                // as a result, have to use the below two lines instead of the above single line.\n                mstore(add(m, 0x40), mload(mload(add(add(C, 0x20), mul(i, 0x20)))))\n                mstore(add(m, 0x60), sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(add(mload(add(add(C, 0x20), mul(i, 0x20))), 0x20))))\n                result := and(result, staticcall(gas, 0x06, m, 0x80, mload(scratch), 0x40))\n                mstore(m, mload(mload(add(scratch, 0x20))))\n                mstore(add(m, 0x20), mload(add(mload(add(scratch, 0x20)), 0x20)))\n                // calldatacopy(add(m, 0x40), 0x24, 0x40) // copy R onto running block\n                mstore(add(m, 0x40), mload(D))\n                mstore(add(m, 0x60), sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(add(D, 0x20)))) // invert!\n                result := and(result, staticcall(gas, 0x06, m, 0x80, mload(add(scratch, 0x20)), 0x40))\n                if iszero(result) {\n                    revert(0, 0)\n                }\n            }\n            pTransfers[yHash] = scratch; // credit / debit / neither y's account.\n            scratch = acc[yHash];\n            assembly {\n                let result := 1\n                let m := mload(0x40)\n                mstore(m, mload(mload(scratch)))\n                mstore(add(m, 0x20), mload(add(mload(scratch), 0x20)))\n                mstore(add(m, 0x40), mload(mload(add(add(C, 0x20), mul(i, 0x20)))))\n                mstore(add(m, 0x60), sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(add(mload(add(add(C, 0x20), mul(i, 0x20))), 0x20))))\n                result := and(result, staticcall(gas, 0x06, m, 0x80, mload(add(add(CLn, 0x20), mul(i, 0x20))), 0x40))\n                mstore(m, mload(mload(add(scratch, 0x20))))\n                mstore(add(m, 0x20), mload(add(mload(add(scratch, 0x20)), 0x20)))\n                mstore(add(m, 0x40), mload(D))\n                mstore(add(m, 0x60), sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(add(D, 0x20))))\n                result := and(result, staticcall(gas, 0x06, m, 0x80, mload(add(add(CRn, 0x20), mul(i, 0x20))), 0x40))\n                if iszero(result) {\n                    revert(0, 0)\n                }\n            }\n        }\n\n        bool seen = false;\n        bytes32 uHash = keccak256(abi.encode(u));\n        for (uint256 i = 0; i < nonceSet.length; i++) {\n            if (nonceSet[i] == uHash) {\n                seen = true;\n                break;\n            }\n        }\n        require(!seen, \"Nonce already seen!\");\n        require(zetherverifier.verifyTransfer(CLn, CRn, C, D, y, lastGlobalUpdate, u, proof), \"Transfer proof verification failed!\");\n\n        nonceSet.push(uHash);\n        emit TransferOccurred(y);\n    }\n\n    function burn(bytes32[2] memory y, uint256 bTransfer, bytes32[2] memory u, bytes memory proof) public {\n        bytes32 yHash = keccak256(abi.encode(y));\n        rollOver(yHash);\n\n        require(0 <= bTransfer && bTransfer <= MAX, \"Transfer amount out of range.\");\n        bytes32[2][2] memory scratch = pTransfers[yHash]; // could technically use sload, but... let's not go there.\n        assembly {\n            let result := 1\n            let m := mload(0x40)\n            mstore(m, mload(mload(scratch)))\n            mstore(add(m, 0x20), mload(add(mload(scratch), 0x20)))\n            // load bulletproof generator here\n            mstore(add(m, 0x40), 0x077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d4) // g_x\n            mstore(add(m, 0x60), 0x01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f875) // g_y\n            mstore(add(m, 0x80), sub(0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001, bTransfer))\n            result := and(result, staticcall(gas, 0x07, add(m, 0x40), 0x60, add(m, 0x40), 0x40))\n            result := and(result, staticcall(gas, 0x06, m, 0x80, mload(scratch), 0x40)) // scratch[0] = acc[yHash][0] * g ^ -b, scratch[1] doesn't change\n            if iszero(result) {\n                revert(0, 0)\n            }\n        }\n        pTransfers[yHash] = scratch; // debit y's balance\n        scratch = acc[yHash]; // simulate debit of acc---just for use in verification, won't be applied\n        assembly {\n            let result := 1\n            let m := mload(0x40)\n            mstore(m, mload(mload(scratch)))\n            mstore(add(m, 0x20), mload(add(mload(scratch), 0x20)))\n            mstore(add(m, 0x40), 0x077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d4) // g_x\n            mstore(add(m, 0x60), 0x01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f875) // g_y\n            mstore(add(m, 0x80), sub(0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001, bTransfer))\n            result := and(result, staticcall(gas, 0x07, add(m, 0x40), 0x60, add(m, 0x40), 0x40))\n            result := and(result, staticcall(gas, 0x06, m, 0x80, mload(scratch), 0x40)) // scratch[0] = acc[yHash][0] * g ^ -b, scratch[1] doesn't change\n            if iszero(result) {\n                revert(0, 0)\n            }\n        }\n        bool seen = false;\n        bytes32 uHash = keccak256(abi.encode(u));\n        for (uint256 i = 0; i < nonceSet.length; i++) {\n            if (nonceSet[i] == uHash) { // does this have to repeat the sload for each iteration?!? revisit\n                seen = true;\n                break;\n            }\n        }\n        require(!seen, \"Nonce already seen!\");\n        require(burnverifier.verifyBurn(scratch[0], scratch[1], y, bTransfer, lastGlobalUpdate, u, msg.sender, proof), \"Burn proof verification failed!\");\n        require(coin.transfer(msg.sender, bTransfer), \"This shouldn't fail... Something went severely wrong.\");\n        nonceSet.push(uHash);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZSC.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {
        "0x4ef6ed22b1551aeadeb80e67bb3a38788491e81527cc70a85bff611e9e51e18a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "parties",
              "type": "bytes32[2][]"
            }
          ],
          "name": "TransferOccurred",
          "type": "event",
          "signature": "0x4ef6ed22b1551aeadeb80e67bb3a38788491e81527cc70a85bff611e9e51e18a"
        }
      },
      "links": {},
      "address": "0x3747Aa186B4292d6a52231c916e0b96d4adBB466",
      "transactionHash": "0xec4d1169bed8f8e67d5dc4947c1108d0217b5edb395df95868415f37c608e5c6"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-29T16:08:40.007Z",
  "networkType": "quorum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}