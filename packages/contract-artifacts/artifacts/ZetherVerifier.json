{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "baseSize",
      "outputs": [
        {
          "name": "size",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "size",
          "type": "uint256"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "extendBase",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "C",
          "type": "bytes32[2][]"
        },
        {
          "name": "D",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2][]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2][]\"},{\"name\":\"C\",\"type\":\"bytes32[2][]\"},{\"name\":\"D\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseSize\",\"outputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"extendBase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x0a8fcd9f60c29d4e0114dd2f632688845d0e505943b3bc514698fd91da377ee6\",\"urls\":[\"bzzr://84371071fa5f1d7eba148701bb8d49c9e2de726fd0feb8669bf4754da418e44b\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0x7cc614425934ac0b5777960e9265558782855a0bd38fc979d34843d8526d6224\",\"urls\":[\"bzzr://21108e5d0d828d520959267700ff6b7fb1326eb8199ba6733fd984b349572a8c\"]}},\"version\":1}",
  "bytecode": "0x60806040526200001f60026200025d640100000000026401000000009004565b6006906040620000319291906200059b565b503480156200003f57600080fd5b506200008f6040805190810160405280600181526020017f470000000000000000000000000000000000000000000000000000000000000081525062000312640100000000026401000000009004565b60026000820151816000015560208201518160010155905050620000f76040805190810160405280600181526020017f560000000000000000000000000000000000000000000000000000000000000081525062000312640100000000026401000000009004565b6004600082015181600001556020820151816001015590505060008090505b604081101562000256576000620001726040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508362000395640100000000026401000000009004565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506001620002066040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508362000395640100000000026401000000009004565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050808060010191505062000116565b506200073d565b62000267620005e0565b60018160006040811015156200027957fe5b602002018181525050818160016040811015156200029357fe5b6020020181815250506000600290505b60408110156200030c57620002e6838360018403604081101515620002c457fe5b60200201516200041b6401000000000262003599179091906401000000009004565b8282604081101515620002f557fe5b6020020181815250508080600101915050620002a3565b50919050565b6200031c62000604565b6200038e7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360405160200162000354919062000698565b60405160208183030381529060405280519060200120600190048115156200037857fe5b0662000453640100000000026401000000009004565b9050919050565b6200039f62000604565b620004137f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001620003d9929190620006b1565b6040516020818303038152906040528051906020012060019004811515620003fd57fe5b0662000453640100000000026401000000009004565b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156200044857fe5b828409905092915050565b6200045d62000604565b60005b600115620005105760006003620004888560036200052d640100000000026401000000009004565b019050620004d681600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515620004c057fe5b046200052d640100000000026401000000009004565b915080620004f58360026200052d640100000000026401000000009004565b141562000503575062000510565b6001840193505062000460565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156200058f57600080fd5b80519250505092915050565b8260408101928215620005cd579160200282015b82811115620005cc578251825591602001919060010190620005af565b5b509050620005dc91906200061e565b5090565b61080060405190810160405280604090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6200064391905b808211156200063f57600081600090555060010162000625565b5090565b90565b60006200065382620006dd565b6200065f8185620006e8565b935062000671818560208601620006fd565b80840191505092915050565b620006926200068c82620006f3565b62000733565b82525050565b6000620006a6828462000646565b915081905092915050565b6000620006bf828562000646565b9150620006cd82846200067d565b6020820191508190509392505050565b600081519050919050565b600081905092915050565b6000819050919050565b60005b838110156200071d57808201518184015260208101905062000700565b838111156200072d576000848401525b50505050565b6000819050919050565b61588e806200074d6000396000f3fe608060405260043610610051576000357c0100000000000000000000000000000000000000000000000000000000900480631659e67d146100565780634e8ee0e214610093578063a00547ab146100be575b600080fd5b34801561006257600080fd5b5061007d60048036036100789190810190614bf3565b6100da565b60405161008a91906152f4565b60405180910390f35b34801561009f57600080fd5b506100a861056a565b6040516100b591906153ef565b60405180910390f35b6100d860048036036100d39190810190614d1e565b610576565b005b60006100e46143ef565b6000865190508060008054905010151515610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b9061534f565b60405180910390fd5b8060405190808252806020026020018201604052801561016e57816020015b61015b61443a565b8152602001906001900390816101535790505b508260000181905250806040519080825280602002602001820160405280156101b157816020015b61019e61443a565b8152602001906001900390816101965790505b508260200181905250806040519080825280602002602001820160405280156101f457816020015b6101e161443a565b8152602001906001900390816101d95790505b5082604001819052508060405190808252806020026020018201604052801561023757816020015b61022461443a565b81526020019060019003908161021c5790505b50826080018190525060008090505b8181101561049b5760408051908101604052808d8381518110151561026757fe5b90602001906020020151600060028110151561027f57fe5b60200201516001900481526020018d8381518110151561029b57fe5b9060200190602002015160016002811015156102b357fe5b6020020151600190048152508360000151828151811015156102d157fe5b9060200190602002018190525060408051908101604052808c838151811015156102f757fe5b90602001906020020151600060028110151561030f57fe5b60200201516001900481526020018c8381518110151561032b57fe5b90602001906020020151600160028110151561034357fe5b60200201516001900481525083602001518281518110151561036157fe5b9060200190602002018190525060408051908101604052808b8381518110151561038757fe5b90602001906020020151600060028110151561039f57fe5b60200201516001900481526020018b838151811015156103bb57fe5b9060200190602002015160016002811015156103d357fe5b6020020151600190048152508360400151828151811015156103f157fe5b906020019060200201819052506040805190810160405280898381518110151561041757fe5b90602001906020020151600060028110151561042f57fe5b6020020151600190048152602001898381518110151561044b57fe5b90602001906020020151600160028110151561046357fe5b60200201516001900481525083608001518281518110151561048157fe5b906020019060200201819052508080600101915050610246565b5060408051908101604052808960006002811015156104b657fe5b60200201516001900481526020018960016002811015156104d357fe5b6020020151600190048152508260600181905250858260a0018181525050604080519081016040528086600060028110151561050b57fe5b602002015160019004815260200186600160028110151561052857fe5b6020020151600190048152508260c00181905250610544614454565b61054d8561069f565b9050610559838261106b565b935050505098975050505050505050565b60008080549050905090565b6000808054905090505b8181101561069b5760006105c96040805190810160405280600181526020017f4700000000000000000000000000000000000000000000000000000000000000815250836133f2565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050600161064c6040805190810160405280600181526020017f4800000000000000000000000000000000000000000000000000000000000000815250836133f2565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508080600101915050610580565b5050565b6106a7614454565b60408051908101604052806106bd846000613462565b81526020016106cd846020613462565b815250816000018190525060408051908101604052806106ee846040613462565b81526020016106fe846060613462565b8152508160200181905250604080519081016040528061071f846080613462565b815260200161072f8460a0613462565b815250816040018190525060408051908101604052806107508460c0613462565b81526020016107608460e0613462565b8152508160600181905250604080519081016040528061078284610100613462565b815260200161079384610120613462565b815250816080018190525060408051908101604052806107b584610140613462565b81526020016107c684610160613462565b8152508160a0018190525060408051908101604052806107e884610180613462565b81526020016107f9846101a0613462565b8152508160c00181905250604080519081016040528061081b846101c0613462565b815260200161082c846101e0613462565b8152508160e00181905250604080519081016040528061084e84610200613462565b815260200161085f84610220613462565b815250816101000181905250604080519081016040528061088284610240613462565b815260200161089384610260613462565b815250816101200181905250600060c06109208451038115156108b257fe5b0490506002818115156108c157fe5b046040519080825280602002602001820160405280156108fb57816020015b6108e86145bc565b8152602001906001900390816108e05790505b5082610140018190525060028181151561091157fe5b0460405190808252806020026020018201604052801561094b57816020015b6109386145bc565b8152602001906001900390816109305790505b5082610160018190525060008090505b60028281151561096757fe5b04811015610b3a57604080519081016040528061098b866040850261028001613462565b81526020016109a186604085026102a001613462565b815250836101400151828151811015156109b757fe5b9060200190602002015160006002811015156109cf57fe5b602002018190525060408051908101604052806109f88660408502602087026102800101613462565b8152602001610a138660408502602087026102a00101613462565b81525083610140015182815181101515610a2957fe5b906020019060200201516001600281101515610a4157fe5b60200201819052506040805190810160405280610a6a8660408502604087026102800101613462565b8152602001610a858660408502604087026102a00101613462565b81525083610160015182815181101515610a9b57fe5b906020019060200201516000600281101515610ab357fe5b60200201819052506040805190810160405280610adc8660408502606087026102800101613462565b8152602001610af78660408502606087026102a00101613462565b81525083610160015182815181101515610b0d57fe5b906020019060200201516001600281101515610b2557fe5b6020020181905250808060010191505061095b565b506040805190810160405280610b57856080850261028001613462565b8152602001610b6d85608085026102a001613462565b8152508261018001819052506040805190810160405280610b9585608085026102c001613462565b8152602001610bab85608085026102e001613462565b815250826101a0018190525060018103604051908082528060200260200182016040528015610bf457816020015b610be16145ea565b815260200190600190039081610bd95790505b50826101c0018190525060008090505b60018203811015610cb057610c258460208302608085026103000101613462565b836101c0015182815181101515610c3857fe5b906020019060200201516000600281101515610c5057fe5b602002018181525050610c6f846020830260a085026102e00101613462565b836101c0015182815181101515610c8257fe5b906020019060200201516001600281101515610c9a57fe5b6020020181815250508080600101915050610c04565b50600060c082029050610cc784826102c001613462565b836101e0018181525050610cdf84826102e001613462565b83610200018181525050610cf7848261030001613462565b836102200181815250506040805190810160405280610d1a868461032001613462565b8152602001610d2d868461034001613462565b8152508361024001819052506040805190810160405280610d52868461036001613462565b8152602001610d65868461038001613462565b8152508361026001819052506040805190810160405280610d8a86846103a001613462565b8152602001610d9d86846103c001613462565b8152508361028001819052506040805190810160405280610dc286846103e001613462565b8152602001610dd5868461040001613462565b815250836102a0018190525060408051908101604052806040805190810160405280610e05888661042001613462565b8152602001610e18888661044001613462565b81525081526020016040805190810160405280610e39888661046001613462565b8152602001610e4c888661048001613462565b815250815250836102c00181905250610e6984826104a001613462565b836102e0018181525050610e8184826104c001613462565b83610300018181525050610e9984826104e001613462565b83610320018181525050610eb1848261050001613462565b83610340018181525050610ec9848261052001613462565b83610360018181525050610ee1848261054001613462565b83610380018181525050610ef9848261056001613462565b836103a0018181525050610f11848261058001613462565b836103c0018181525050610f2984826105a001613462565b836103e0018181525050610f4184826105c001613462565b83610400018181525050610f5361460c565b60008090505b600681101561101b576040805190810160405280610f808860408502876105e00101613462565b8152602001610f988860408502876106000101613462565b815250826000015182600681101515610fad57fe5b60200201819052506040805190810160405280610fd68860408560060102876105e00101613462565b8152602001610ff18860408560060102876106000101613462565b81525082602001518260068110151561100657fe5b60200201819052508080600101915050610f59565b50611030856080600602846105e00101613462565b81604001818152505061104d856080600602846106000101613462565b81606001818152505080846104200181905250839350505050919050565b6000806110c3846000015185602001518660400151876060015188608001518960a001516040516020016110a496959493929190615277565b604051602081830303815290604052805190602001206001900461347b565b90506110cd614642565b6110d56146c1565b60c0604051908101604052808660400151815260200186606001518152602001866080015181526020018660a0015181526020018660c0015181526020018660e0015181525090506111888386600001518760200151848961010001518a61012001518b61014001518c61016001518d61018001518e6101a001516040516020016111699a9998979695949392919061546a565b604051602081830303815290604052805190602001206001900461347b565b8260200181815250506001856101c00151510182600001818152505081600001516040519080825280602002602001820160405280156111e257816020015b6111cf6145ea565b8152602001906001900390816111c75790505b50826040018190525081602001518260400151600081518110151561120357fe5b90602001906020020151600060028110151561121b57fe5b60200201818152505081602001518260400151600081518110151561123c57fe5b90602001906020020151600160028110151561125457fe5b6020020181815250506000600190505b826000015181101561149157856101c001516001820381518110151561128657fe5b90602001906020020151600060028110151561129e57fe5b60200201518360400151828151811015156112b557fe5b9060200190602002015160006002811015156112cd57fe5b602002018181525050856101c00151600182038151811015156112ec57fe5b90602001906020020151600160028110151561130457fe5b602002015183604001518281518110151561131b57fe5b90602001906020020151600160028110151561133357fe5b6020020181815250506113ac83604001518281518110151561135157fe5b90602001906020020151600060028110151561136957fe5b60200201518460400151600081518110151561138157fe5b90602001906020020151600060028110151561139957fe5b60200201516134b090919063ffffffff16565b836040015160008151811015156113bf57fe5b9060200190602002015160006002811015156113d757fe5b6020020181815250506114508360400151828151811015156113f557fe5b90602001906020020151600160028110151561140d57fe5b60200201518460400151600081518110151561142557fe5b90602001906020020151600160028110151561143d57fe5b60200201516134b090919063ffffffff16565b8360400151600081518110151561146357fe5b90602001906020020151600160028110151561147b57fe5b6020020181815250508080600101915050611264565b5060008090505b82600001518110156115c157611524836060015161151f6000848154811015156114be57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508660400151858151811015156114fd57fe5b90602001906020020151600060028110151561151557fe5b60200201516134f0565b61352b565b83606001819052506115ac83606001516115a760018481548110151561154657fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505086604001518581518110151561158557fe5b90602001906020020151600160028110151561159d57fe5b60200201516134f0565b61352b565b83606001819052508080600101915050611498565b506116256115e46115da876060015185602001516134f0565b876040015161352b565b611620846060015161161b6004604080519081016040529081600082015481526020016001820154815250508a6101e001516134f0565b61352b565b613571565b1515611666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165d9061538f565b60405180910390fd5b6040805190810160405280600081526020016000815250826060018190525060008090505b82600001518110156118605761176d83606001516117686000848154811015156116b157fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250506117636117268860400151878151811015156116f657fe5b90602001906020020151600060028110151561170e57fe5b602002015189602001516134b090919063ffffffff16565b88604001518781518110151561173857fe5b90602001906020020151600060028110151561175057fe5b602002015161359990919063ffffffff16565b6134f0565b61352b565b836060018190525061184b836060015161184660018481548110151561178f57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250506118416118048860400151878151811015156117d457fe5b9060200190602002015160016002811015156117ec57fe5b602002015189602001516134b090919063ffffffff16565b88604001518781518110151561181657fe5b90602001906020020151600160028110151561182e57fe5b602002015161359990919063ffffffff16565b6134f0565b61352b565b8360600181905250808060010191505061168b565b506118c4611883611879876080015185602001516134f0565b8760a0015161352b565b6118bf84606001516118ba6004604080519081016040529081600082015481526020016001820154815250508a61020001516134f0565b61352b565b613571565b1515611905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fc9061536f565b60405180910390fd5b60008090505b82600001518110156119f4576119778360a0015161197289600001518481518110151561193457fe5b9060200190602002015186604001518581518110151561195057fe5b90602001906020020151600060028110151561196857fe5b60200201516134f0565b61352b565b8360a001819052506119df8360c001516119da89602001518481518110151561199c57fe5b906020019060200201518660400151858151811015156119b857fe5b9060200190602002015160006002811015156119d057fe5b60200201516134f0565b61352b565b8360c00181905250808060010191505061190b565b50611a108260a00151611a0b8761010001516135d0565b61352b565b8260a00181905250611a338260c00151611a2e8761012001516135d0565b61352b565b8260c00181905250611a4d82604001518760400151613649565b826101000181905250611a6882604001518760800151613649565b82610120018190525060008090505b60028360000151811515611a8757fe5b04811015611cb05760008090505b6002811015611ca25760008090505b6002811015611b5457611b1a8560400151828560020201815181101515611ac757fe5b9060200190602002015183600281101515611ade57fe5b60200201518660e0015183600281101515611af557fe5b602002015184600281101515611b0757fe5b602002015161390290919063ffffffff16565b8560e0015182600281101515611b2c57fe5b602002015183600281101515611b3e57fe5b6020020181815250508080600101915050611aa4565b50611bc384610100015183815181101515611b6b57fe5b9060200190602002015182600281101515611b8257fe5b6020020151611bbe89610140015185815181101515611b9d57fe5b9060200190602002015184600281101515611bb457fe5b60200201516135d0565b61352b565b84610100015183815181101515611bd657fe5b9060200190602002015182600281101515611bed57fe5b6020020181905250611c6384610120015183815181101515611c0b57fe5b9060200190602002015182600281101515611c2257fe5b6020020151611c5e89610160015185815181101515611c3d57fe5b9060200190602002015184600281101515611c5457fe5b60200201516135d0565b61352b565b84610120015183815181101515611c7657fe5b9060200190602002015182600281101515611c8d57fe5b60200201819052508080600101915050611a95565b508080600101915050611a77565b50611d188260e001516000600281101515611cc757fe5b60200201516001600281101515611cda57fe5b60200201518360e001516000600281101515611cf257fe5b60200201516000600281101515611d0557fe5b602002015161359990919063ffffffff16565b8260e001516000600281101515611d2b57fe5b60200201516000600281101515611d3e57fe5b602002018181525050611dae8260e001516001600281101515611d5d57fe5b60200201516001600281101515611d7057fe5b60200201518360e001516001600281101515611d8857fe5b60200201516000600281101515611d9b57fe5b602002015161359990919063ffffffff16565b8260e001516001600281101515611dc157fe5b60200201516000600281101515611dd457fe5b602002018181525050611ec4611e4f600080815481101515611df257fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508460e001516000600281101515611e3257fe5b60200201516000600281101515611e4557fe5b60200201516134f0565b611ebf60016000815481101515611e6257fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508560e001516001600281101515611ea257fe5b60200201516000600281101515611eb557fe5b60200201516134f0565b61352b565b8260600181905250611f2f611eee611ee48760e0015185602001516134f0565b8760c0015161352b565b611f2a8460600151611f256004604080519081016040529081600082015481526020016001820154815250508a61022001516134f0565b61352b565b613571565b1515611f70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f67906153af565b60405180910390fd5b611f98611f85876060015184602001516134f0565b611f938761018001516135d0565b61352b565b8260800181905250611fe4611fd160026040805190810160405290816000820154815260200160018201548152505084602001516134f0565b611fdf876101a001516135d0565b61352b565b826101400181905250611ff56146f0565b61204883602001518761024001518861026001518961028001518a6102a00151604051602001612029959493929190615518565b604051602081830303815290604052805190602001206001900461347b565b81600001818152505061205e8160000151613939565b816020018190525061209d816000015160405160200161207e91906153ef565b604051602081830303815290604052805190602001206001900461347b565b81604001818152505060408051908101604052806120c9600284604001516139d690919063ffffffff16565b81526020016120e6600384604001516139d690919063ffffffff16565b8152508160600181905250612148816040015161213a8360600151600160028110151561210f57fe5b60200201518460600151600060028110151561212757fe5b602002015161390290919063ffffffff16565b61359990919063ffffffff16565b8160a00181815250506121eb6121918260a001516121836002604081151561216c57fe5b0460020a8560a0015161359990919063ffffffff16565b6134b090919063ffffffff16565b6121dd6121c2846060015160006002811015156121aa57fe5b602002015185604001516134b090919063ffffffff16565b6121cf8560200151613a43565b61359990919063ffffffff16565b6134b090919063ffffffff16565b81610100018181525050612212816101000151876102e001516134b090919063ffffffff16565b8160e001818152505060008090505b6002604081151561222e57fe5b048110156122e2576122638160020a8360600151600060028110151561225057fe5b602002015161359990919063ffffffff16565b82608001518260408110151561227557fe5b6020020181815250506122ab8160020a8360600151600160028110151561229857fe5b602002015161359990919063ffffffff16565b8260800151600260408115156122bd57fe5b0483016040811015156122cc57fe5b6020020181815250508080600101915050612221565b506123218160400151876102c0015160405160200161230292919061540a565b604051602081830303815290604052805190602001206001900461347b565b8160c0018181525050612394612353876102c00151600060028110151561234457fe5b60200201518360c001516134f0565b61238f886102c00151600160028110151561236a57fe5b602002015161238a8560c001518660c0015161359990919063ffffffff16565b6134f0565b61352b565b8161012001819052506123a561475c565b6124086123bc8561014001518961036001516134f0565b61240386610120015160008151811015156123d357fe5b9060200190602002015160006002811015156123eb57fe5b60200201516123fe8b6103400151613a8e565b6134f0565b61352b565b81602001819052506124476124278561014001518961038001516134f0565b612442866080015161243d8b6103400151613a8e565b6134f0565b61352b565b81604001819052506124926040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508960a001516133f2565b81606001819052506124d06124b082606001518961036001516134f0565b6124cb8a60c001516124c68b6103400151613a8e565b6134f0565b61352b565b81608001819052506125d861255361254886610120015160008151811015156124f557fe5b90602001906020020151600060028110151561250d57fe5b6020020151876101200151600081518110151561252657fe5b90602001906020020151600160028110151561253e57fe5b602002015161352b565b8961038001516134f0565b6125d36125c0876101000151600081518110151561256d57fe5b90602001906020020151600060028110151561258557fe5b6020020151886101000151600081518110151561259e57fe5b9060200190602002015160016002811015156125b657fe5b602002015161352b565b6125ce8b6103400151613a8e565b6134f0565b61352b565b8160a001819052506001600285600001518115156125f257fe5b040360405190808252806020026020018201604052801561262d57816020015b61261a6145bc565b8152602001906001900390816126125790505b508161010001819052506000600190505b6002856000015181151561264e57fe5b048110156127e7576126e26126978661012001518381518110151561266f57fe5b90602001906020020151600060028110151561268757fe5b60200201518a61038001516134f0565b6126dd876101000151848151811015156126ad57fe5b9060200190602002015160006002811015156126c557fe5b60200201516126d88c6103400151613a8e565b6134f0565b61352b565b826101000151600183038151811015156126f857fe5b90602001906020020151600060028110151561271057fe5b60200201819052506127a46127598661012001518381518110151561273157fe5b90602001906020020151600160028110151561274957fe5b60200201518a61038001516134f0565b61279f8761010001518481518110151561276f57fe5b90602001906020020151600160028110151561278757fe5b602002015161279a8c6103400151613a8e565b6134f0565b61352b565b826101000151600183038151811015156127ba57fe5b9060200190602002015160016002811015156127d257fe5b6020020181905250808060010191505061263e565b5061290061288961286c61281261280788608001518c610260015161352b565b8b61036001516134f0565b612867612854896101000151600081518110151561282c57fe5b90602001906020020151600060028110151561284457fe5b60200201518d610240015161352b565b6128628d6103400151613a8e565b6134f0565b61352b565b8460600151600060028110151561287f57fe5b60200201516134f0565b6128fb6128de6128b06128a58960c001518d6102a0015161352b565b8c61036001516134f0565b6128d96128c68a60a001518e610280015161352b565b6128d48e6103400151613a8e565b6134f0565b61352b565b856060015160016002811015156128f157fe5b60200201516134f0565b61352b565b8160c001819052506129b46129aa6129896129766129426002604080519081016040529081600082015481526020016001820154815250508760e001516134f0565b6129716004604080519081016040529081600082015481526020016001820154815250508d61030001516134f0565b61352b565b6129848661012001516135d0565b61352b565b6129a587602001518b610340015161359990919063ffffffff16565b6134f0565b8260c0015161352b565b8160e00181905250612a556129ee600260408051908101604052908160008201548152602001600182015481525050896103a001516134f0565b612a50612a0487608001518b61036001516134f0565b612a4b8861010001516000815181101515612a1b57fe5b906020019060200201516000600281101515612a3357fe5b6020020151612a468d6103400151613a8e565b6134f0565b61352b565b61352b565b816101200181905250612acb612a90600260408051908101604052908160008201548152602001600182015481525050896103c001516134f0565b612ac6612aa68760c001518b61036001516134f0565b612ac18860a00151612abc8d6103400151613a8e565b6134f0565b61352b565b61352b565b816101400181905250612b43612b06600460408051908101604052908160008201548152602001600182015481525050896103e001516134f0565b612b3e612b1d8a61026001518b61036001516134f0565b612b398b6102400151612b348d6103400151613a8e565b6134f0565b61352b565b61352b565b816101600181905250612bbb612b7e6004604080519081016040529081600082015481526020016001820154815250508961040001516134f0565b612bb6612b958a6102a001518b61036001516134f0565b612bb18b6102800151612bac8d6103400151613a8e565b6134f0565b61352b565b61352b565b816101800181905250612c3c8260c001518260200151836040015184608001518560a001518661010001518760e001518861012001518961014001518a61016001518b6101800151604051602001612c1d9b9a9998979695949392919061556c565b604051602081830303815290604052805190602001206001900461347b565b8160000181815250508661034001518160000151141515612c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c899061532f565b60405180910390fd5b612c9a614807565b612cd18260000151604051602001612cb291906153ef565b604051602081830303815290604052805190602001206001900461347b565b816080018181525050612d0860026040805190810160405290816000820154815260200160018201548152505082608001516134f0565b8160000181905250612d896001805480602002602001604051908101604052809291908181526020016000905b82821015612d7b57838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612d35565b505050508460200151613aba565b8160200181905250612db0612da684602001518560400151613b36565b8460800151613b9d565b8160400181905250612e82612e6b612ddd8a60000151612dd88c602001518860c001516134f0565b61352b565b612e66612e546000805480602002602001604051908101604052809291908181526020016000905b82821015612e4b57838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612e05565b50505050613c16565b612e618860400151613a8e565b6134f0565b61352b565b612e7d83602001518460400151613c63565b61352b565b8160600181905250612ece8160600151612ec9600460408051908101604052908160008201548152602001600182015481525050612ec48c6103200151613a8e565b6134f0565b61352b565b8160600181905250612ef68160600151612ef183600001518b6102e001516134f0565b61352b565b8160600181905250612f0661460c565b886104200151905060008090505b600681101561305357612f848360800151836000015183600681101515612f3757fe5b6020020151846020015184600681101515612f4e57fe5b6020020151604051602001612f6593929190615433565b604051602081830303815290604052805190602001206001900461347b565b83608001818152505082608001518360a0015182600681101515612fa457fe5b6020020181815250506000612fbc8460800151613cc7565b905061303d8460600151613038613000866000015186600681101515612fde57fe5b6020020151612ffb60028a608001516139d690919063ffffffff16565b6134f0565b61303387602001518760068110151561301557fe5b602002015161302e6002886139d690919063ffffffff16565b6134f0565b61352b565b61352b565b8460600181905250508080600101915050612f14565b5060018260c00151600060408110151561306957fe5b60200201818152505060008090505b60068110156130ea576130c18360a001518260068110151561309657fe5b60200201518460c0015160006040811015156130ae57fe5b602002015161359990919063ffffffff16565b8360c0015160006040811015156130d457fe5b6020020181815250508080600101915050613078565b506130f361486a565b6131138360c00151600060408110151561310957fe5b6020020151613cc7565b8360c00151600060408110151561312657fe5b60200201818152505060008090505b6002604081151561314257fe5b048110156132555760008090505b6040828260019060020a020110156132495760008160019060020a0283019050838160408110151561317e57fe5b6020020151151561323d5760006131d68760a00151846001600603036006811015156131a657fe5b60200201518860a00151856001600603036006811015156131c357fe5b602002015161359990919063ffffffff16565b9050613201818860c00151866040811015156131ee57fe5b602002015161359990919063ffffffff16565b8760c001518360408110151561321357fe5b6020020181815250506001858360408110151561322c57fe5b602002019015159081151581525050505b50806001019050613150565b50806001019050613135565b5061325e61488e565b61326661488e565b60008090505b604081101561332f576132d9836132d460008481548110151561328b57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508960c00151856040811015156132ca57fe5b60200201516134f0565b61352b565b92506133208261331b8860200151846040811015156132f457fe5b60200201518960c001518560016040030360408110151561331157fe5b60200201516134f0565b61352b565b9150808060010191505061326c565b5061333861488e565b61338c61335f61334c8588604001516134f0565b61335a8589606001516134f0565b61352b565b613387886000015161338289606001518a6040015161359990919063ffffffff16565b6134f0565b61352b565b905061339c866060015182613571565b15156133dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016133d4906153cf565b60405180910390fd5b60019b50505050505050505050505092915050565b6133fa61488e565b61345a7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47848460405160200161343192919061524f565b604051602081830303815290604052805190602001206001900481151561345457fe5b06613cfd565b905092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001828115156134a857fe5b069050919050565b6000818310156134e45782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103016134e8565b8183035b905092915050565b6134f861488e565b604051835181526020840151602082015282604082015260408260608360075afa151561352457600080fd5b5092915050565b61353361488e565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561356a57600080fd5b5092915050565b600081600001518360000151148015613591575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156135c557fe5b828409905092915050565b6135d861488e565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47846020015181151561361c57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6060600083519050600060028281151561365f57fe5b0490508060405190808252806020026020018201604052801561369c57816020015b6136896145bc565b8152602001906001900390816136815790505b50925060606136ac856000613d9d565b90506060836040519080825280602002602001820160405280156136df5781602001602082028038833980820191505090505b50905060008090505b60028110156138f45760008090505b8581101561375f57888682880381151561370d57fe5b0681518110151561371a57fe5b906020019060200201518260028110151561373157fe5b6020020151838281518110151561374457fe5b906020019060200201818152505080806001019150506136f7565b5061376982613ffe565b91506060846040519080825280602002602001820160405280156137a757816020015b61379461443a565b81526020019060019003908161378c5790505b5090506000600290506137b981613cc7565b905060008090505b868110156138765761384e61384861380788848151811015156137e057fe5b9060200190602002015188858151811015156137f857fe5b906020019060200201516134f0565b613843898b860181518110151561381a57fe5b90602001906020020151898c870181518110151561383457fe5b906020019060200201516134f0565b61352b565b836134f0565b838281518110151561385c57fe5b9060200190602002018190525080806001019150506137c1565b50613882826001613d9d565b915060008090505b868110156138e45782818151811015156138a057fe5b9060200190602002015189828151811015156138b857fe5b90602001906020020151856002811015156138cf57fe5b6020020181905250808060010191505061388a565b50505080806001019150506136e8565b508494505050505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561392e57fe5b828408905092915050565b6139416148a8565b600181600060408110151561395257fe5b6020020181815250508181600160408110151561396b57fe5b6020020181815250506000600290505b60408110156139d0576139ac83836001840360408110151561399957fe5b602002015161359990919063ffffffff16565b82826040811015156139ba57fe5b602002018181525050808060010191505061397b565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515613a3757600080fd5b80519250505092915050565b600080600090505b6040811015613a8857613a798382604081101515613a6557fe5b60200201518361390290919063ffffffff16565b91508080600101915050613a4b565b50919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b613ac26148cc565b60008090505b6040811015613b2f57613b0c8482815181101515613ae257fe5b90602001906020020151613b078584604081101515613afd57fe5b6020020151613cc7565b6134f0565b8282604081101515613b1a57fe5b60200201819052508080600101915050613ac8565b5092915050565b613b3e6148a8565b60008090505b6040811015613b9657613b72838583604081101515613b5f57fe5b602002015161359990919063ffffffff16565b8282604081101515613b8057fe5b6020020181815250508080600101915050613b44565b5092915050565b613ba56148a8565b60008090505b6040811015613c0f57613beb8382604081101515613bc557fe5b60200201518583604081101515613bd857fe5b602002015161390290919063ffffffff16565b8282604081101515613bf957fe5b6020020181815250508080600101915050613bab565b5092915050565b613c1e61488e565b60008090505b6040811015613c5d57613c4e828483815181101515613c3f57fe5b9060200190602002015161352b565b91508080600101915050613c24565b50919050565b613c6b61488e565b60008090505b6040811015613cc057613cb182613cac8684604081101515613c8f57fe5b60200201518685604081101515613ca257fe5b60200201516134f0565b61352b565b91508080600101915050613c71565b5092915050565b6000613cf68260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001036139d6565b9050919050565b613d0561488e565b60005b600115613d805760006003613d1e856003614226565b019050613d5a81600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515613d5457fe5b04614226565b915080613d68836002614226565b1415613d745750613d80565b60018401935050613d08565b604080519081016040528084815260200182815250915050919050565b60606000835190506001811415613db75783915050613ff8565b6000600282811515613dc557fe5b06141515613e08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613dff9061530f565b60405180910390fd5b6000613e4c826310000000811515613e1c57fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd6139d690919063ffffffff16565b90506000600190508415613e6a57613e6382613cc7565b9150600290505b613e7381613cc7565b90506060613e8b613e85886000614293565b87613d9d565b90506060613ea3613e9d896001614293565b88613d9d565b905060006001905085604051908082528060200260200182016040528015613ee557816020015b613ed261443a565b815260200190600190039081613eca5790505b50965060008090505b600287811515613efa57fe5b04811015613ff057613f0a61488e565b613f2b8483815181101515613f1b57fe5b90602001906020020151846134f0565b9050613f57613f518684815181101515613f4157fe5b906020019060200201518361352b565b876134f0565b8983815181101515613f6557fe5b90602001906020020181905250613fa4613f9e8684815181101515613f8657fe5b90602001906020020151613f99846135d0565b61352b565b876134f0565b8960028a811515613fb157fe5b048401815181101515613fc057fe5b90602001906020020181905250613fe0878461359990919063ffffffff16565b9250508080600101915050613eee565b505050505050505b92915050565b606060008251905060018114156140185782915050614221565b600060028281151561402657fe5b06141515614069576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016140609061530f565b60405180910390fd5b60006140ad82631000000081151561407d57fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd6139d690919063ffffffff16565b905060606140c46140bf866000614346565b613ffe565b905060606140db6140d6876001614346565b613ffe565b9050600060019050846040519080825280602002602001820160405280156141125781602001602082028038833980820191505090505b50955060008090505b60028681151561412757fe5b0481101561421a57600061415b83858481518110151561414357fe5b9060200190602002015161359990919063ffffffff16565b905061418781868481518110151561416f57fe5b9060200190602002015161390290919063ffffffff16565b888381518110151561419557fe5b90602001906020020181815250506141cd8186848151811015156141b557fe5b906020019060200201516134b090919063ffffffff16565b886002898115156141da57fe5b0484018151811015156141e957fe5b906020019060200201818152505061420a868461359990919063ffffffff16565b925050808060010191505061411b565b5050505050505b919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561428757600080fd5b80519250505092915050565b6060600283518115156142a257fe5b046040519080825280602002602001820160405280156142dc57816020015b6142c961443a565b8152602001906001900390816142c15790505b50905060008090505b600284518115156142f257fe5b0481101561433f578383826002020181518110151561430d57fe5b90602001906020020151828281518110151561432557fe5b9060200190602002018190525080806001019150506142e5565b5092915050565b60606002835181151561435557fe5b046040519080825280602002602001820160405280156143845781602001602082028038833980820191505090505b50905060008090505b6002845181151561439a57fe5b048110156143e857838382600202018151811015156143b557fe5b9060200190602002015182828151811015156143cd57fe5b9060200190602002018181525050808060010191505061438d565b5092915050565b6101206040519081016040528060608152602001606081526020016060815260200161441961443a565b8152602001606081526020016000815260200161443461443a565b81525090565b604080519081016040528060008152602001600081525090565b6109c06040519081016040528061446961443a565b815260200161447661443a565b815260200161448361443a565b815260200161449061443a565b815260200161449d61443a565b81526020016144aa61443a565b81526020016144b761443a565b81526020016144c461443a565b81526020016144d161443a565b81526020016144de61443a565b815260200160608152602001606081526020016144f961443a565b815260200161450661443a565b81526020016060815260200160008152602001600081526020016000815260200161452f61443a565b815260200161453c61443a565b815260200161454961443a565b815260200161455661443a565b81526020016145636145bc565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016145b66148fb565b81525090565b6080604051908101604052806002905b6145d461443a565b8152602001906001900390816145cc5790505090565b6040805190810160405280600290602082028038833980820191505090505090565b61034060405190810160405280614621614931565b815260200161462e614931565b815260200160008152602001600081525090565b6102606040519081016040528060008152602001600081526020016060815260200161466c61443a565b815260200161467961443a565b815260200161468661443a565b815260200161469361443a565b81526020016146a0614960565b815260200160608152602001606081526020016146bb61443a565b81525090565b610180604051908101604052806006905b6146da61443a565b8152602001906001900390816146d25790505090565b611140604051908101604052806000815260200161470c61498e565b8152602001600081526020016147206145ea565b815260200161472d61498e565b81526020016000815260200160008152602001600081526020016000815260200161475661443a565b81525090565b610300604051908101604052806000815260200161477861443a565b815260200161478561443a565b815260200161479261443a565b815260200161479f61443a565b81526020016147ac61443a565b81526020016147b961443a565b81526020016147c661443a565b8152602001606081526020016147da61443a565b81526020016147e761443a565b81526020016147f461443a565b815260200161480161443a565b81525090565b6121606040519081016040528061481c61443a565b81526020016148296149b2565b815260200161483661498e565b815260200161484361443a565b8152602001600081526020016148576149e1565b815260200161486461498e565b81525090565b61080060405190810160405280604090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6148e561443a565b8152602001906001900390816148dd5790505090565b61034060405190810160405280614910614931565b815260200161491d614931565b815260200160008152602001600081525090565b610180604051908101604052806006905b61494a61443a565b8152602001906001900390816149425790505090565b6080604051908101604052806002905b6149786145ea565b8152602001906001900390816149705790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6149cb61443a565b8152602001906001900390816149c35790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b600082601f8301121515614a1757600080fd5b8135614a2a614a258261564e565b615621565b91508181835260208401935060208101905083856040840282011115614a4f57600080fd5b60005b83811015614a7f5781614a658882614a89565b845260208401935060408301925050600181019050614a52565b5050505092915050565b600082601f8301121515614a9c57600080fd5b6002614aaf614aaa82615676565b615621565b91508183856020840282011115614ac557600080fd5b60005b83811015614af55781614adb8882614b75565b845260208401935060208301925050600181019050614ac8565b5050505092915050565b600082601f8301121515614b1257600080fd5b6002614b25614b2082615698565b615621565b91508183856020840282011115614b3b57600080fd5b60005b83811015614b6b5781614b518882614b75565b845260208401935060208301925050600181019050614b3e565b5050505092915050565b6000614b8182356157f4565b905092915050565b600082601f8301121515614b9c57600080fd5b8135614baf614baa826156ba565b615621565b91508082526020830160208301858383011115614bcb57600080fd5b614bd6838284615808565b50505092915050565b6000614beb82356157fe565b905092915050565b600080600080600080600080610140898b031215614c1057600080fd5b600089013567ffffffffffffffff811115614c2a57600080fd5b614c368b828c01614a04565b985050602089013567ffffffffffffffff811115614c5357600080fd5b614c5f8b828c01614a04565b975050604089013567ffffffffffffffff811115614c7c57600080fd5b614c888b828c01614a04565b9650506060614c998b828c01614aff565b95505060a089013567ffffffffffffffff811115614cb657600080fd5b614cc28b828c01614a04565b94505060c0614cd38b828c01614bdf565b93505060e0614ce48b828c01614aff565b92505061012089013567ffffffffffffffff811115614d0257600080fd5b614d0e8b828c01614b89565b9150509295985092959890939650565b600060208284031215614d3057600080fd5b6000614d3e84828501614bdf565b91505092915050565b6000614d538383614dd1565b60808301905092915050565b6000614d6b83836151bc565b60408301905092915050565b6000614d8282615714565b614d8c818561577f565b9350614d97836156e6565b60005b82811015614dc557614dad868351614d47565b9550614db88261574b565b9150600181019050614d9a565b50849250505092915050565b614dda8161571f565b614de48184615790565b9250614def826156f3565b60005b82811015614e1d57614e05858351614d5f565b9450614e1082615758565b9150600181019050614df2565b5050505050565b614e2d8161571f565b614e37818461579b565b9250614e42826156f3565b60005b82811015614e7057614e58858351614d5f565b9450614e6382615758565b9150600181019050614e45565b5050505050565b614e808161572a565b614e8a81846157a6565b9250614e95826156fd565b60005b82811015614ec357614eab858351614d5f565b9450614eb682615765565b9150600181019050614e98565b5050505050565b6000614ed582615735565b614edf81856157b1565b9350614eea83615707565b60005b82811015614f1857614f00868351614d5f565b9550614f0b82615772565b9150600181019050614eed565b50849250505092915050565b614f2d816157de565b82525050565b6000614f3e82615740565b614f4881856157d3565b9350614f58818560208601615817565b80840191505092915050565b6000614f71601f836157c2565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b6000614fb1602a836157c2565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b60006150176042836157c2565b91507f496e61646571756174652073746f72656420766563746f72206261736521204360008301527f616c6c20657874656e644261736520616e64207468656e20747279206167616960208301527f6e2e0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b60006150a3601d836157c2565b91507f5265636f76657279206661696c75726520666f7220555e77202a20562e0000006000830152602082019050919050565b60006150e3601d836157c2565b91507f5265636f76657279206661696c75726520666f7220515e77202a20502e0000006000830152602082019050919050565b6000615123601d836157c2565b91507f5265636f76657279206661696c75726520666f7220595e77202a20582e0000006000830152602082019050919050565b60006151636025836157c2565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516151d2600085018261521a565b5060208201516151e5602085018261521a565b50505050565b604082016000820151615201600085018261521a565b506020820151615214602085018261521a565b50505050565b615223816157ea565b82525050565b615232816157ea565b82525050565b615249615244826157ea565b61584a565b82525050565b600061525b8285614f33565b91506152678284615238565b6020820191508190509392505050565b600060e08201905081810360008301526152918189614eca565b905081810360208301526152a58188614eca565b905081810360408301526152b98187614eca565b90506152c860608301866151eb565b81810360a08301526152da8185614eca565b90506152e960c0830184615229565b979650505050505050565b60006020820190506153096000830184614f24565b92915050565b6000602082019050818103600083015261532881614f64565b9050919050565b6000602082019050818103600083015261534881614fa4565b9050919050565b600060208201905081810360008301526153688161500a565b9050919050565b6000602082019050818103600083015261538881615096565b9050919050565b600060208201905081810360008301526153a8816150d6565b9050919050565b600060208201905081810360008301526153c881615116565b9050919050565b600060208201905081810360008301526153e881615156565b9050919050565b60006020820190506154046000830184615229565b92915050565b600060a08201905061541f6000830185615229565b61542c6020830184614e24565b9392505050565b600060a0820190506154486000830186615229565b61545560208301856151eb565b61546260608301846151eb565b949350505050565b600061036082019050615480600083018d615229565b61548d602083018c6151eb565b61549a606083018b6151eb565b6154a760a083018a614e77565b6154b56102208301896151eb565b6154c36102608301886151eb565b8181036102a08301526154d68187614d77565b90508181036102c08301526154eb8186614d77565b90506154fb6102e08301856151eb565b6155096103208301846151eb565b9b9a5050505050505050505050565b60006101208201905061552e6000830188615229565b61553b60208301876151eb565b61554860608301866151eb565b61555560a08301856151eb565b61556260e08301846151eb565b9695505050505050565b600061028082019050615582600083018e615229565b61558f602083018d6151eb565b61559c606083018c6151eb565b6155a960a083018b6151eb565b6155b660e083018a6151eb565b8181036101208301526155c98189614d77565b90506155d96101408301886151eb565b6155e76101808301876151eb565b6155f56101c08301866151eb565b6156036102008301856151eb565b6156116102408301846151eb565b9c9b505050505050505050505050565b6000604051905081810181811067ffffffffffffffff8211171561564457600080fd5b8060405250919050565b600067ffffffffffffffff82111561566557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561568d57600080fd5b602082029050919050565b600067ffffffffffffffff8211156156af57600080fd5b602082029050919050565b600067ffffffffffffffff8211156156d157600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b6000819050919050565b6000602082019050919050565b600081519050919050565b600060029050919050565b600060069050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561583557808201518184015260208101905061581a565b83811115615844576000848401525b50505050565b600081905091905056fea265627a7a723058204afd3b09557385e3a1fbfff66659849f42be0cc4dc93afab8702d2c3ac6595d06c6578706572696d656e74616cf50037",
  "deployedBytecode": "",
  "sourceMap": "81:28242:5:-;;;688:9;695:1;688:6;;;:9;;;:::i;:::-;670:27;;;;;;;;:::i;:::-;;2067:208;8:9:-1;5:2;;;30:1;27;20:12;5:2;2067:208:5;2102:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;2098:1;:16;;;;;;;;;;;;;;;;;;;2128:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;2124:1;:16;;;;;;;;;;;;;;;;;;;2155:9;2167:1;2155:13;;2150:119;162:2;2170:1;:5;2150:119;;;2196:2;2204:15;;;;;;;;;;;;;;;;;;;2217:1;2204:7;;;:15;;;:::i;:::-;2196:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2196:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:2;2242:15;;;;;;;;;;;;;;;;;;;2255:1;2242:7;;;:15;;;:::i;:::-;2234:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2234:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:3;;;;;;;2150:119;;;;81:28242;;24915:236;24968:24;;:::i;:::-;25016:1;25004:6;25011:1;25004:9;;;;;;;;;;;;:13;;;;;25039:4;25027:6;25034:1;25027:9;;;;;;;;;;;;:16;;;;;25058:9;25070:1;25058:13;;25053:92;162:2;25073:1;:5;25053:92;;;25111:23;25129:4;25111:6;25122:1;25118;:5;25111:13;;;;;;;;;;;;;:17;;;;;;:23;;;;;:::i;:::-;25099:6;25106:1;25099:9;;;;;;;;;;;;:35;;;;;25080:3;;;;;;;25053:92;;;;24915:236;;;:::o;27967:167::-;28028:14;;:::i;:::-;28061:66;229:77;28104:5;28087:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28087:23:5;;;28077:34;;;;;;28069:43;;;:57;;;;;;;;28061:7;;;:66;;;:::i;:::-;28054:73;;27967:167;;;:::o;28140:181::-;28212:14;;:::i;:::-;28245:69;229:77;28288:5;28295:1;28271:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28271:26:5;;;28261:37;;;;;;28253:46;;;:60;;;;;;;;28245:7;;;:69;;;:::i;:::-;28238:76;;28140:181;;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;27512:449:5:-;27566:14;;:::i;:::-;27592:9;27611:311;27618:4;27611:311;;;27638:16;27677:1;27657:17;27666:4;27672:1;27657:8;;;:17;;;:::i;:::-;:21;27638:40;;27764:41;27773:8;27803:1;27798;229:77;27784:15;27783:21;;;;;;;;27764:8;;;:41;;;:::i;:::-;27760:45;;27841:8;27823:14;27832:1;27835;27823:8;;;:14;;;:::i;:::-;:26;27819:70;;;27869:5;;;27819:70;27910:1;27902:9;;;;27611:311;;;;27938:16;;;;;;;;;27946:4;27938:16;;;;27952:1;27938:16;;;27931:23;;;27512:449;;;:::o;26896:610::-;26969:14;27020:13;229:77;27020:27;;27095:4;27089:11;27123:4;27120:1;27113:15;27162:4;27155;27152:1;27148:12;27141:26;27201:4;27194;27191:1;27187:12;27180:26;27240:4;27233;27230:1;27226:12;27219:26;27279:8;27272:4;27269:1;27265:12;27258:30;27322:5;27315:4;27312:1;27308:12;27301:27;27385:4;27382:1;27376:4;27373:1;27367:4;27362:3;27351:39;27344:47;27341:2;;;27443:1;27440;27433:12;27341:2;27488:1;27482:8;27472:18;;27066:434;;;;;;:::o;81:28242::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28242:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:28242:5;;;;;;;",
  "deployedSourceMap": "81:28242:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:1215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3158:1215:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2281:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2281:90:5;;;:::i;:::-;;;;;;;;;;;;;;;;2377:775;;;;;;;;;;;;;;;;:::i;:::-;;3158:1215;3376:4;3392:32;;:::i;:::-;3434:12;3449:1;:8;3434:23;;3488:4;3475:2;:9;;;;:17;;3467:96;;;;;;;;;;;;;;;;;;;;;;;;3604:4;3590:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3574:9;:13;;:35;;;;3649:4;3635:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3619:9;:13;;:35;;;;3692:4;3678:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3664:9;:11;;:33;;;;3735:4;3721:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3707:9;:11;;:33;;;;3755:9;3767:1;3755:13;;3750:354;3774:4;3770:1;:8;3750:354;;;3818:47;;;;;;;;;3834:3;3838:1;3834:6;;;;;;;;;;;;;;;;;;3841:1;3834:9;;;;;;;;;;;;;3826:18;;;3818:47;;;;3854:3;3858:1;3854:6;;;;;;;;;;;;;;;;;;3861:1;3854:9;;;;;;;;;;;;;3846:18;;;3818:47;;;3799:9;:13;;;3813:1;3799:16;;;;;;;;;;;;;;;;;:66;;;;3898:47;;;;;;;;;3914:3;3918:1;3914:6;;;;;;;;;;;;;;;;;;3921:1;3914:9;;;;;;;;;;;;;3906:18;;;3898:47;;;;3934:3;3938:1;3934:6;;;;;;;;;;;;;;;;;;3941:1;3934:9;;;;;;;;;;;;;3926:18;;;3898:47;;;3879:9;:13;;;3893:1;3879:16;;;;;;;;;;;;;;;;;:66;;;;3976:43;;;;;;;;;3992:1;3994;3992:4;;;;;;;;;;;;;;;;;;3997:1;3992:7;;;;;;;;;;;;;3984:16;;;3976:43;;;;4010:1;4012;4010:4;;;;;;;;;;;;;;;;;;4015:1;4010:7;;;;;;;;;;;;;4002:16;;;3976:43;;;3959:9;:11;;;3971:1;3959:14;;;;;;;;;;;;;;;;;:60;;;;4050:43;;;;;;;;;4066:1;4068;4066:4;;;;;;;;;;;;;;;;;;4071:1;4066:7;;;;;;;;;;;;;4058:16;;;4050:43;;;;4084:1;4086;4084:4;;;;;;;;;;;;;;;;;;4089:1;4084:7;;;;;;;;;;;;;4076:16;;;4050:43;;;4033:9;:11;;;4045:1;4033:14;;;;;;;;;;;;;;;;;:60;;;;3780:3;;;;;;;3750:354;;;;4127:37;;;;;;;;;4143:1;4145;4143:4;;;;;;;;;;;;;4135:13;;;4127:37;;;;4158:1;4160;4158:4;;;;;;;;;;;;;4150:13;;;4127:37;;;4113:9;:11;;:51;;;;4192:5;4174:9;:15;;:23;;;;;4221:37;;;;;;;;;4237:1;4239;4237:4;;;;;;;;;;;;;4229:13;;;4221:37;;;;4252:1;4254;4252:4;;;;;;;;;;;;;4244:13;;;4221:37;;;4207:9;:11;;:51;;;;4268:30;;:::i;:::-;4301:18;4313:5;4301:11;:18::i;:::-;4268:51;;4336:30;4343:9;4354:11;4336:6;:30::i;:::-;4329:37;;;;;3158:1215;;;;;;;;;;:::o;2281:90::-;2324:12;2355:2;:9;;;;2348:16;;2281:90;:::o;2377:775::-;3021:9;3033:2;:9;;;;3021:21;;3016:130;3048:4;3044:1;:8;3016:130;;;3073:2;3081:15;;;;;;;;;;;;;;;;;;;3094:1;3081:7;:15::i;:::-;3073:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3073:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3111:2;3119:15;;;;;;;;;;;;;;;;;;;3132:1;3119:7;:15::i;:::-;3111:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3111:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3054:3;;;;;;;3016:130;;;;2377:775;:::o;20161:3603::-;20223:24;;:::i;:::-;20269:38;;;;;;;;;20277:13;20283:3;20288:1;20277:5;:13::i;:::-;20269:38;;;;20292:14;20298:3;20303:2;20292:5;:14::i;:::-;20269:38;;;20259:5;:7;;:48;;;;20327:39;;;;;;;;;20335:14;20341:3;20346:2;20335:5;:14::i;:::-;20327:39;;;;20351:14;20357:3;20362:2;20351:5;:14::i;:::-;20327:39;;;20317:5;:7;;:49;;;;20387:41;;;;;;;;;20395:15;20401:3;20406;20395:5;:15::i;:::-;20387:41;;;;20412:15;20418:3;20423;20412:5;:15::i;:::-;20387:41;;;20377:5;:7;;:51;;;;20448:41;;;;;;;;;20456:15;20462:3;20467;20456:5;:15::i;:::-;20448:41;;;;20473:15;20479:3;20484;20473:5;:15::i;:::-;20448:41;;;20438:5;:7;;:51;;;;20509:41;;;;;;;;;20517:15;20523:3;20528;20517:5;:15::i;:::-;20509:41;;;;20534:15;20540:3;20545;20534:5;:15::i;:::-;20509:41;;;20499:5;:7;;:51;;;;20570:41;;;;;;;;;20578:15;20584:3;20589;20578:5;:15::i;:::-;20570:41;;;;20595:15;20601:3;20606;20595:5;:15::i;:::-;20570:41;;;20560:5;:7;;:51;;;;20631:41;;;;;;;;;20639:15;20645:3;20650;20639:5;:15::i;:::-;20631:41;;;;20656:15;20662:3;20667;20656:5;:15::i;:::-;20631:41;;;20621:5;:7;;:51;;;;20692:41;;;;;;;;;20700:15;20706:3;20711;20700:5;:15::i;:::-;20692:41;;;;20717:15;20723:3;20728;20717:5;:15::i;:::-;20692:41;;;20682:5;:7;;:51;;;;20756:41;;;;;;;;;20764:15;20770:3;20775;20764:5;:15::i;:::-;20756:41;;;;20781:15;20787:3;20792;20781:5;:15::i;:::-;20756:41;;;20743:5;:10;;:54;;;;20820:41;;;;;;;;;20828:15;20834:3;20839;20828:5;:15::i;:::-;20820:41;;;;20845:15;20851:3;20856;20845:5;:15::i;:::-;20820:41;;;20807:5;:10;;:54;;;;20871:12;20908:3;20900:4;20887:3;:10;:17;20886:25;;;;;;;;20871:40;;21035:1;21028:4;:8;;;;;;;;21011:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21000:5;:8;;:37;;;;21082:1;21075:4;:8;;;;;;;;21058:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21047:5;:8;;:37;;;;21099:9;21111:1;21099:13;;21094:482;21125:1;21118:4;:8;;;;;;;;21114:1;:12;21094:482;;;21164:59;;;;;;;;;21172:24;21178:3;21193:2;21189:1;:6;21183:3;:12;21172:5;:24::i;:::-;21164:59;;;;21198:24;21204:3;21219:2;21215:1;:6;21209:3;:12;21198:5;:24::i;:::-;21164:59;;;21147:5;:8;;;21156:1;21147:11;;;;;;;;;;;;;;;;;;21159:1;21147:14;;;;;;;;;;;;:76;;;;21254:83;;;;;;;;;21262:36;21268:3;21295:2;21291:1;:6;21286:2;21279:4;:9;21273:3;:15;:24;21262:5;:36::i;:::-;21254:83;;;;21300:36;21306:3;21333:2;21329:1;:6;21324:2;21317:4;:9;21311:3;:15;:24;21300:5;:36::i;:::-;21254:83;;;21237:5;:8;;;21246:1;21237:11;;;;;;;;;;;;;;;;;;21249:1;21237:14;;;;;;;;;;;;:100;;;;21368:83;;;;;;;;;21376:36;21382:3;21409:2;21405:1;:6;21400:2;21393:4;:9;21387:3;:15;:24;21376:5;:36::i;:::-;21368:83;;;;21414:36;21420:3;21447:2;21443:1;:6;21438:2;21431:4;:9;21425:3;:15;:24;21414:5;:36::i;:::-;21368:83;;;21351:5;:8;;;21360:1;21351:11;;;;;;;;;;;;;;;;;;21363:1;21351:14;;;;;;;;;;;;:100;;;;21482:83;;;;;;;;;21490:36;21496:3;21523:2;21519:1;:6;21514:2;21507:4;:9;21501:3;:15;:24;21490:5;:36::i;:::-;21482:83;;;;21528:36;21534:3;21561:2;21557:1;:6;21552:2;21545:4;:9;21539:3;:15;:24;21528:5;:36::i;:::-;21482:83;;;21465:5;:8;;;21474:1;21465:11;;;;;;;;;;;;;;;;;;21477:1;21465:14;;;;;;;;;;;;:100;;;;21128:3;;;;;;;21094:482;;;;21596:67;;;;;;;;;21604:28;21610:3;21628;21621:4;:10;21615:3;:16;21604:5;:28::i;:::-;21596:67;;;;21634:28;21640:3;21658;21651:4;:10;21645:3;:16;21634:5;:28::i;:::-;21596:67;;;21585:5;:8;;:78;;;;21684:67;;;;;;;;;21692:28;21698:3;21716;21709:4;:10;21703:3;:16;21692:5;:28::i;:::-;21684:67;;;;21722:28;21728:3;21746;21739:4;:10;21733:3;:16;21722:5;:28::i;:::-;21684:67;;;21673:5;:8;;:78;;;;21796:1;21789:4;:8;21772:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21762:5;:7;;:36;;;;21813:9;21825:1;21813:13;;21808:222;21839:1;21832:4;:8;21828:1;:12;21808:222;;;21877:37;21883:3;21911:2;21907:1;:6;21901:3;21894:4;:10;21888:3;:16;:25;21877:5;:37::i;:::-;21861:5;:7;;;21869:1;21861:10;;;;;;;;;;;;;;;;;;21872:1;21861:13;;;;;;;;;;;;:53;;;;;21944:37;21950:3;21978:2;21974:1;:6;21968:3;21961:4;:10;21955:3;:16;:25;21944:5;:37::i;:::-;21928:5;:7;;;21936:1;21928:10;;;;;;;;;;;;;;;;;;21939:1;21928:13;;;;;;;;;;;;:53;;;;;21842:3;;;;;;;21808:222;;;;22040:16;22066:3;22059:4;:10;22040:29;;22091:26;22097:3;22108:8;22102:3;:14;22091:5;:26::i;:::-;22079:5;:9;;:38;;;;;22139:26;22145:3;22156:8;22150:3;:14;22139:5;:26::i;:::-;22127:5;:9;;:38;;;;;22187:26;22193:3;22204:8;22198:3;:14;22187:5;:26::i;:::-;22175:5;:9;;:38;;;;;22239:63;;;;;;;;;22247:26;22253:3;22264:8;22258:3;:14;22247:5;:26::i;:::-;22239:63;;;;22275:26;22281:3;22292:8;22286:3;:14;22275:5;:26::i;:::-;22239:63;;;22224:5;:12;;:78;;;;22327:63;;;;;;;;;22335:26;22341:3;22352:8;22346:3;:14;22335:5;:26::i;:::-;22327:63;;;;22363:26;22369:3;22380:8;22374:3;:14;22363:5;:26::i;:::-;22327:63;;;22312:5;:12;;:78;;;;22417:63;;;;;;;;;22425:26;22431:3;22442:8;22436:3;:14;22425:5;:26::i;:::-;22417:63;;;;22453:26;22459:3;22470:8;22464:3;:14;22453:5;:26::i;:::-;22417:63;;;22400:5;:14;;:80;;;;22507:64;;;;;;;;;22515:26;22521:3;22532:8;22526:3;:14;22515:5;:26::i;:::-;22507:64;;;;22543:27;22549:3;22561:8;22554:4;:15;22543:5;:27::i;:::-;22507:64;;;22490:5;:14;;:81;;;;22582:151;;;;;;;;;22600:65;;;;;;;;;22608:27;22614:3;22626:8;22619:4;:15;22608:5;:27::i;:::-;22600:65;;;;22637:27;22643:3;22655:8;22648:4;:15;22637:5;:27::i;:::-;22600:65;;;22582:151;;;;22667:65;;;;;;;;;22675:27;22681:3;22693:8;22686:4;:15;22675:5;:27::i;:::-;22667:65;;;;22704:27;22710:3;22722:8;22715:4;:15;22704:5;:27::i;:::-;22667:65;;;22582:151;;;:5;:14;;:151;;;;22756:27;22762:3;22774:8;22767:4;:15;22756:5;:27::i;:::-;22743:5;:10;;:40;;;;;22806:27;22812:3;22824:8;22817:4;:15;22806:5;:27::i;:::-;22793:5;:10;;:40;;;;;22854:27;22860:3;22872:8;22865:4;:15;22854:5;:27::i;:::-;22843:5;:8;;:38;;;;;22902:27;22908:3;22920:8;22913:4;:15;22902:5;:27::i;:::-;22892:5;:7;;:37;;;;;22952:27;22958:3;22970:8;22963:4;:15;22952:5;:27::i;:::-;22939:5;:10;;:40;;;;;23001:27;23007:3;23019:8;23012:4;:15;23001:5;:27::i;:::-;22989:5;:9;;:39;;;;;23058:27;23064:3;23076:8;23069:4;:15;23058:5;:27::i;:::-;23038:5;:17;;:47;;;;;23111:27;23117:3;23129:8;23122:4;:15;23111:5;:27::i;:::-;23095:5;:13;;:43;;;;;23169:27;23175:3;23187:8;23180:4;:15;23169:5;:27::i;:::-;23148:5;:18;;:48;;;;;23223:27;23229:3;23241:8;23234:4;:15;23223:5;:27::i;:::-;23206:5;:14;;:44;;;;;23261:32;;:::i;:::-;23308:9;23320:1;23308:13;;23303:281;191:1;23323;:5;23303:281;;;23365:83;;;;;;;;;23373:36;23379:3;23406:2;23402:1;:6;23391:8;23384:4;:15;:24;23373:5;:36::i;:::-;23365:83;;;;23411:36;23417:3;23444:2;23440:1;:6;23429:8;23422:4;:15;:24;23411:5;:36::i;:::-;23365:83;;;23349:7;:10;;;23360:1;23349:13;;;;;;;;;;;;:99;;;;23478:95;;;;;;;;;23486:42;23492:3;23525:2;23520:1;191;23516:5;23515:12;23504:8;23497:4;:15;:30;23486:5;:42::i;:::-;23478:95;;;;23530:42;23536:3;23569:2;23564:1;191;23560:5;23559:12;23548:8;23541:4;:15;:30;23530:5;:42::i;:::-;23478:95;;;23462:7;:10;;;23473:1;23462:13;;;;;;;;;;;;:111;;;;23330:3;;;;;;;23303:281;;;;23605:37;23611:3;23638;191:1;23634:7;23623:8;23616:4;:15;:25;23605:5;:37::i;:::-;23593:7;:9;;:49;;;;;23664:37;23670:3;23697;191:1;23693:7;23682:8;23675:4;:15;:25;23664:5;:37::i;:::-;23652:7;:9;;:49;;;;;23727:7;23711:5;:13;;:23;;;;23752:5;23745:12;;;;;20161:3603;;;:::o;5490:10858::-;5589:4;5605:21;5629:122;5658:9;:13;;;5673:9;:13;;;5688:9;:11;;;5701:9;:11;;;5714:9;:11;;;5727:9;:15;;;5647:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5647:96:5;;;5637:107;;;;;;5629:116;;;:120;:122::i;:::-;5605:146;;5762:38;;:::i;:::-;5810:23;;:::i;:::-;:80;;;;;;;;;5837:5;:7;;;5810:80;;;;5846:5;:7;;;5810:80;;;;5855:5;:7;;;5810:80;;;;5864:5;:7;;;5810:80;;;;5873:5;:7;;;5810:80;;;;5882:5;:7;;;5810:80;;;;;5940:140;5969:13;5984:5;:7;;;5993:5;:7;;;6002:5;6009;:10;;;6021:5;:10;;;6033:5;:8;;;6043:5;:8;;;6053:5;:8;;;6063:5;:8;;;5958:114;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5958:114:5;;;5948:125;;;;;;5940:134;;;:138;:140::i;:::-;5920:15;:17;;:160;;;;;6130:1;6113:5;:7;;;:14;:18;6090:15;:20;;:41;;;;;6178:15;:20;;;6161:38;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6141:15;:17;;:58;;;;6235:15;:17;;;6209:15;:17;;;6227:1;6209:20;;;;;;;;;;;;;;;;;;6230:1;6209:23;;;;;;;;;;;;:43;;;;;6288:15;:17;;;6262:15;:17;;;6280:1;6262:20;;;;;;;;;;;;;;;;;;6283:1;6262:23;;;;;;;;;;;;:43;;;;;6320:9;6332:1;6320:13;;6315:360;6339:15;:20;;;6335:1;:24;6315:360;;;6406:5;:7;;;6418:1;6414;:5;6406:14;;;;;;;;;;;;;;;;;;6421:1;6406:17;;;;;;;;;;;;;6380:15;:17;;;6398:1;6380:20;;;;;;;;;;;;;;;;;;6401:1;6380:23;;;;;;;;;;;;:43;;;;;6463:5;:7;;;6475:1;6471;:5;6463:14;;;;;;;;;;;;;;;;;;6478:1;6463:17;;;;;;;;;;;;;6437:15;:17;;;6455:1;6437:20;;;;;;;;;;;;;;;;;;6458:1;6437:23;;;;;;;;;;;;:43;;;;;6520:52;6548:15;:17;;;6566:1;6548:20;;;;;;;;;;;;;;;;;;6569:1;6548:23;;;;;;;;;;;;;6520:15;:17;;;6538:1;6520:20;;;;;;;;;;;;;;;;;;6541:1;6520:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;6494:15;:17;;;6512:1;6494:20;;;;;;;;;;;;;;;;;;6515:1;6494:23;;;;;;;;;;;;:78;;;;;6612:52;6640:15;:17;;;6658:1;6640:20;;;;;;;;;;;;;;;;;;6661:1;6640:23;;;;;;;;;;;;;6612:15;:17;;;6630:1;6612:20;;;;;;;;;;;;;;;;;;6633:1;6612:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;6586:15;:17;;;6604:1;6586:20;;;;;;;;;;;;;;;;;;6607:1;6586:23;;;;;;;;;;;;:78;;;;;6361:3;;;;;;;6315:360;;;;6689:9;6701:1;6689:13;;6684:260;6708:15;:20;;;6704:1;:24;6684:260;;;6772:62;6776:15;:20;;;6798:35;6802:2;6805:1;6802:5;;;;;;;;;;;;;;;;;;;;6798:35;;;;;;;;;;;;;;;;;;;;;;;;;;6809:15;:17;;;6827:1;6809:20;;;;;;;;;;;;;;;;;;6830:1;6809:23;;;;;;;;;;;;;6798:3;:35::i;:::-;6772:3;:62::i;:::-;6749:15;:20;;:85;;;;6871:62;6875:15;:20;;;6897:35;6901:2;6904:1;6901:5;;;;;;;;;;;;;;;;;;;;6897:35;;;;;;;;;;;;;;;;;;;;;;;;;;6908:15;:17;;;6926:1;6908:20;;;;;;;;;;;;;;;;;;6929:1;6908:23;;;;;;;;;;;;;6897:3;:35::i;:::-;6871:3;:62::i;:::-;6848:15;:20;;:85;;;;6730:3;;;;;;;6684:260;;;;6961:95;6964:45;6968:31;6972:5;:7;;;6981:15;:17;;;6968:3;:31::i;:::-;7001:5;:7;;;6964:3;:45::i;:::-;7011:44;7015:15;:20;;;7037:17;7041:1;7037:17;;;;;;;;;;;;;;;;;;;;;;;;;;7044:5;:9;;;7037:3;:17::i;:::-;7011:3;:44::i;:::-;6961:2;:95::i;:::-;6953:137;;;;;;;;;;;;;;;;;;;;;;;;7124:13;;;;;;;;;7132:1;7124:13;;;;7135:1;7124:13;;;7101:15;:20;;:36;;;;7152:9;7164:1;7152:13;;7147:425;7171:15;:20;;;7167:1;:24;7147:425;;;7281:114;7285:15;:20;;;7307:87;7311:2;7314:1;7311:5;;;;;;;;;;;;;;;;;;;;7307:87;;;;;;;;;;;;;;;;;;;;;;;;;;7318:75;7346:46;7368:15;:17;;;7386:1;7368:20;;;;;;;;;;;;;;;;;;7389:1;7368:23;;;;;;;;;;;;;7346:15;:17;;;:21;;:46;;;;:::i;:::-;7318:15;:17;;;7336:1;7318:20;;;;;;;;;;;;;;;;;;7339:1;7318:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;7307:3;:87::i;:::-;7281:3;:114::i;:::-;7258:15;:20;;:137;;;;7432:114;7436:15;:20;;;7458:87;7462:2;7465:1;7462:5;;;;;;;;;;;;;;;;;;;;7458:87;;;;;;;;;;;;;;;;;;;;;;;;;;7469:75;7497:46;7519:15;:17;;;7537:1;7519:20;;;;;;;;;;;;;;;;;;7540:1;7519:23;;;;;;;;;;;;;7497:15;:17;;;:21;;:46;;;;:::i;:::-;7469:15;:17;;;7487:1;7469:20;;;;;;;;;;;;;;;;;;7490:1;7469:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;7458:3;:87::i;:::-;7432:3;:114::i;:::-;7409:15;:20;;:137;;;;7193:3;;;;;;;7147:425;;;;7589:95;7592:45;7596:31;7600:5;:7;;;7609:15;:17;;;7596:3;:31::i;:::-;7629:5;:7;;;7592:3;:45::i;:::-;7639:44;7643:15;:20;;;7665:17;7669:1;7665:17;;;;;;;;;;;;;;;;;;;;;;;;;;7672:5;:9;;;7665:3;:17::i;:::-;7639:3;:44::i;:::-;7589:2;:95::i;:::-;7581:137;;;;;;;;;;;;;;;;;;;;;;;;7734:9;7746:1;7734:13;;7729:282;7753:15;:20;;;7749:1;:24;7729:282;;;7817:73;7821:15;:20;;;7843:46;7847:9;:13;;;7861:1;7847:16;;;;;;;;;;;;;;;;;;7865:15;:17;;;7883:1;7865:20;;;;;;;;;;;;;;;;;;7886:1;7865:23;;;;;;;;;;;;;7843:3;:46::i;:::-;7817:3;:73::i;:::-;7794:15;:20;;:96;;;;7927:73;7931:15;:20;;;7953:46;7957:9;:13;;;7971:1;7957:16;;;;;;;;;;;;;;;;;;7975:15;:17;;;7993:1;7975:20;;;;;;;;;;;;;;;;;;7996:1;7975:23;;;;;;;;;;;;;7953:3;:46::i;:::-;7927:3;:73::i;:::-;7904:15;:20;;:96;;;;7775:3;;;;;;;7729:282;;;;8043:42;8047:15;:20;;;8069:15;8073:5;:10;;;8069:3;:15::i;:::-;8043:3;:42::i;:::-;8020:15;:20;;:65;;;;8118:42;8122:15;:20;;;8144:15;8148:5;:10;;;8144:3;:15::i;:::-;8118:3;:42::i;:::-;8095:15;:20;;:65;;;;8192:52;8213:15;:17;;;8232:9;:11;;;8192:20;:52::i;:::-;8171:15;:18;;:73;;;;8355:52;8376:15;:17;;;8395:9;:11;;;8355:20;:52::i;:::-;8334:15;:18;;:73;;;;8423:9;8435:1;8423:13;;8418:611;8465:1;8442:15;:20;;;:24;;;;;;;;8438:1;:28;8418:611;;;8601:9;8613:1;8601:13;;8596:423;8620:1;8616;:5;8596:423;;;8651:9;8663:1;8651:13;;8646:169;8670:1;8666;:5;8646:169;;;8731:65;8764:15;:17;;;8790:1;8786;8782;:5;:9;8764:28;;;;;;;;;;;;;;;;;;8793:1;8764:31;;;;;;;;;;;;;8731:15;:22;;;8754:1;8731:25;;;;;;;;;;;;;8757:1;8731:28;;;;;;;;;;;;;:32;;:65;;;;:::i;:::-;8700:15;:22;;;8723:1;8700:25;;;;;;;;;;;;;8726:1;8700:28;;;;;;;;;;;;:96;;;;;8673:3;;;;;;;8646:169;;;;8859:50;8863:15;:18;;;8882:1;8863:21;;;;;;;;;;;;;;;;;;8885:1;8863:24;;;;;;;;;;;;;8889:19;8893:5;:8;;;8902:1;8893:11;;;;;;;;;;;;;;;;;;8905:1;8893:14;;;;;;;;;;;;;8889:3;:19::i;:::-;8859:3;:50::i;:::-;8832:15;:18;;;8851:1;8832:21;;;;;;;;;;;;;;;;;;8854:1;8832:24;;;;;;;;;;;;:77;;;;8954:50;8958:15;:18;;;8977:1;8958:21;;;;;;;;;;;;;;;;;;8980:1;8958:24;;;;;;;;;;;;;8984:19;8988:5;:8;;;8997:1;8988:11;;;;;;;;;;;;;;;;;;9000:1;8988:14;;;;;;;;;;;;;8984:3;:19::i;:::-;8954:3;:50::i;:::-;8927:15;:18;;;8946:1;8927:21;;;;;;;;;;;;;;;;;;8949:1;8927:24;;;;;;;;;;;;:77;;;;8623:3;;;;;;;8596:423;;;;8468:3;;;;;;;8418:611;;;;9192:62;9225:15;:22;;;9248:1;9225:25;;;;;;;;;;;;;9251:1;9225:28;;;;;;;;;;;;;9192:15;:22;;;9215:1;9192:25;;;;;;;;;;;;;9218:1;9192:28;;;;;;;;;;;;;:32;;:62;;;;:::i;:::-;9161:15;:22;;;9184:1;9161:25;;;;;;;;;;;;;9187:1;9161:28;;;;;;;;;;;;:93;;;;;9295:62;9328:15;:22;;;9351:1;9328:25;;;;;;;;;;;;;9354:1;9328:28;;;;;;;;;;;;;9295:15;:22;;;9318:1;9295:25;;;;;;;;;;;;;9321:1;9295:28;;;;;;;;;;;;;:32;;:62;;;;:::i;:::-;9264:15;:22;;;9287:1;9264:25;;;;;;;;;;;;;9290:1;9264:28;;;;;;;;;;;;:93;;;;;9390:87;9394:40;9398:2;9401:1;9398:5;;;;;;;;;;;;;;;;;;;;9394:40;;;;;;;;;;;;;;;;;;;;;;;;;;9405:15;:22;;;9428:1;9405:25;;;;;;;;;;;;;9431:1;9405:28;;;;;;;;;;;;;9394:3;:40::i;:::-;9436;9440:2;9443:1;9440:5;;;;;;;;;;;;;;;;;;;;9436:40;;;;;;;;;;;;;;;;;;;;;;;;;;9447:15;:22;;;9470:1;9447:25;;;;;;;;;;;;;9473:1;9447:28;;;;;;;;;;;;;9436:3;:40::i;:::-;9390:3;:87::i;:::-;9367:15;:20;;:110;;;;9496:95;9499:45;9503:31;9507:5;:7;;;9516:15;:17;;;9503:3;:31::i;:::-;9536:5;:7;;;9499:3;:45::i;:::-;9546:44;9550:15;:20;;;9572:17;9576:1;9572:17;;;;;;;;;;;;;;;;;;;;;;;;;;9579:5;:9;;;9572:3;:17::i;:::-;9546:3;:44::i;:::-;9496:2;:95::i;:::-;9488:137;;;;;;;;;;;;;;;;;;;;;;;;9657:55;9661:35;9665:9;:11;;;9678:15;:17;;;9661:3;:35::i;:::-;9698:13;9702:5;:8;;;9698:3;:13::i;:::-;9657:3;:55::i;:::-;9636:15;:18;;:76;;;;9743:45;9747:25;9751:1;9747:25;;;;;;;;;;;;;;;;;;;;;;;;;;9754:15;:17;;;9747:3;:25::i;:::-;9774:13;9778:5;:8;;;9774:3;:13::i;:::-;9743:3;:45::i;:::-;9722:15;:18;;:66;;;;9799:42;;:::i;:::-;9873:115;9902:15;:17;;;9921:5;:12;;;9935:5;:12;;;9949:5;:14;;;9965:5;:14;;;9891:89;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9891:89:5;;;9881:100;;;;;;9873:109;;;:113;:115::i;:::-;9851:17;:19;;:137;;;;;10021:27;10028:17;:19;;;10021:6;:27::i;:::-;9998:17;:20;;:50;;;;10080:57;10109:17;:19;;;10098:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10098:31:5;;;10088:42;;;;;;10080:51;;;:55;:57::i;:::-;10058:17;:19;;:79;;;;;10147;;;;;;;;;10171:26;10195:1;10171:17;:19;;;:23;;:26;;;;:::i;:::-;10147:79;;;;10199:26;10223:1;10199:17;:19;;;:23;;:26;;;;:::i;:::-;10147:79;;;:17;:20;;:79;;;;10269:77;10326:17;:19;;;10269:52;10297:17;:20;;;10318:1;10297:23;;;;;;;;;;;;;10269:17;:20;;;10290:1;10269:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;10244:17;:22;;:102;;;;;10378:160;10469:68;10514:17;:22;;;10469:40;10506:1;162:2;10502:5;;;;;;;;10496:1;:12;10469:17;:22;;;:26;;:40;;;;:::i;:::-;:44;;:68;;;;:::i;:::-;10378:86;10415:48;10439:17;:20;;;10460:1;10439:23;;;;;;;;;;;;;10415:17;:19;;;:23;;:48;;;;:::i;:::-;10378:32;10389:17;:20;;;10378:10;:32::i;:::-;:36;;:86;;;;:::i;:::-;:90;;:160;;;;:::i;:::-;10356:17;:19;;:182;;;;;10570:35;10585:17;:19;;;10570:5;:10;;;:14;;:35;;;;:::i;:::-;10548:17;:19;;:57;;;;;10620:9;10632:1;10620:13;;10615:233;10643:1;162:2;10639:5;;;;;;;;10635:1;:9;10615:233;;;10705:35;10738:1;10733;:6;10705:17;:20;;;10726:1;10705:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;10665:17;:34;;;10700:1;10665:37;;;;;;;;;;;;:75;;;;;10802:35;10835:1;10830;:6;10802:17;:20;;;10823:1;10802:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;10754:17;:34;;;10797:1;162:2;10793:5;;;;;;;;10789:1;:9;10754:45;;;;;;;;;;;;:83;;;;;10646:3;;;;;;;10615:233;;;;10880:73;10909:17;:19;;;10930:5;:14;;;10898:47;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10898:47:5;;;10888:58;;;;;;10880:67;;;:71;:73::i;:::-;10858:17;:19;;:95;;;;;10989:118;10993:43;10997:5;:14;;;11012:1;10997:17;;;;;;;;;;;;;11016;:19;;;10993:3;:43::i;:::-;11038:68;11042:5;:14;;;11057:1;11042:17;;;;;;;;;;;;;11061:44;11085:17;:19;;;11061:17;:19;;;:23;;:44;;;;:::i;:::-;11038:3;:68::i;:::-;10989:3;:118::i;:::-;10963:17;:23;;:144;;;;11144:40;;:::i;:::-;11217:86;11221:35;11225:15;:18;;;11245:5;:10;;;11221:3;:35::i;:::-;11258:44;11262:15;:18;;;11281:1;11262:21;;;;;;;;;;;;;;;;;;11284:1;11262:24;;;;;;;;;;;;;11288:13;:5;:7;;;:11;:13::i;:::-;11258:3;:44::i;:::-;11217:3;:86::i;:::-;11194:16;:20;;:109;;;;11336:79;11340:34;11344:15;:18;;;11364:5;:9;;;11340:3;:34::i;:::-;11376:38;11380:15;:18;;;11400:13;:5;:7;;;:11;:13::i;:::-;11376:3;:38::i;:::-;11336:3;:79::i;:::-;11313:16;:20;;:102;;;;11451:34;;;;;;;;;;;;;;;;;;;11469:9;:15;;;11451:7;:34::i;:::-;11425:16;:23;;:60;;;;11518:78;11522:40;11526:16;:23;;;11551:5;:10;;;11522:3;:40::i;:::-;11564:31;11568:9;:11;;;11581:13;:5;:7;;;:11;:13::i;:::-;11564:3;:31::i;:::-;11518:3;:78::i;:::-;11495:16;:20;;:101;;;;11629:153;11633:71;11637:55;11641:15;:18;;;11660:1;11641:21;;;;;;;;;;;;;;;;;;11663:1;11641:24;;;;;;;;;;;;;11667:15;:18;;;11686:1;11667:21;;;;;;;;;;;;;;;;;;11689:1;11667:24;;;;;;;;;;;;;11637:3;:55::i;:::-;11694:5;:9;;;11633:3;:71::i;:::-;11706:75;11710:55;11714:15;:18;;;11733:1;11714:21;;;;;;;;;;;;;;;;;;11736:1;11714:24;;;;;;;;;;;;;11740:15;:18;;;11759:1;11740:21;;;;;;;;;;;;;;;;;;11762:1;11740:24;;;;;;;;;;;;;11710:3;:55::i;:::-;11767:13;:5;:7;;;:11;:13::i;:::-;11706:3;:75::i;:::-;11629:3;:153::i;:::-;11606:16;:20;;:176;;;;11859:1;11855;11832:15;:20;;;:24;;;;;;;;:28;11815:46;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11792:16;:20;;:69;;;;11876:9;11888:1;11876:13;;11871:342;11918:1;11895:15;:20;;;:24;;;;;;;;11891:1;:28;11871:342;;;11973:91;11977:40;11981:15;:18;;;12000:1;11981:21;;;;;;;;;;;;;;;;;;12003:1;11981:24;;;;;;;;;;;;;12007:5;:9;;;11977:3;:40::i;:::-;12019:44;12023:15;:18;;;12042:1;12023:21;;;;;;;;;;;;;;;;;;12045:1;12023:24;;;;;;;;;;;;;12049:13;:5;:7;;;:11;:13::i;:::-;12019:3;:44::i;:::-;11973:3;:91::i;:::-;11940:16;:20;;;11965:1;11961;:5;11940:27;;;;;;;;;;;;;;;;;;11968:1;11940:30;;;;;;;;;;;;:124;;;;12111:91;12115:40;12119:15;:18;;;12138:1;12119:21;;;;;;;;;;;;;;;;;;12141:1;12119:24;;;;;;;;;;;;;12145:5;:9;;;12115:3;:40::i;:::-;12157:44;12161:15;:18;;;12180:1;12161:21;;;;;;;;;;;;;;;;;;12183:1;12161:24;;;;;;;;;;;;;12187:13;:5;:7;;;:11;:13::i;:::-;12157:3;:44::i;:::-;12111:3;:91::i;:::-;12078:16;:20;;;12103:1;12099;:5;12078:27;;;;;;;;;;;;;;;;;;12106:1;12078:30;;;;;;;;;;;;:124;;;;11921:3;;;;;;;11871:342;;;;12250:317;12254:154;12258:124;12262:54;12266:37;12270:15;:18;;;12290:5;:12;;;12266:3;:37::i;:::-;12305:5;:10;;;12262:3;:54::i;:::-;12318:63;12322:43;12326:15;:18;;;12345:1;12326:21;;;;;;;;;;;;;;;;;;12348:1;12326:24;;;;;;;;;;;;;12352:5;:12;;;12322:3;:43::i;:::-;12367:13;:5;:7;;;:11;:13::i;:::-;12318:3;:63::i;:::-;12258:3;:124::i;:::-;12384:17;:20;;;12405:1;12384:23;;;;;;;;;;;;;12254:3;:154::i;:::-;12410:156;12414:126;12418:58;12422:41;12426:15;:20;;;12448:5;:14;;;12422:3;:41::i;:::-;12465:5;:10;;;12418:3;:58::i;:::-;12478:61;12482:41;12486:15;:20;;;12508:5;:14;;;12482:3;:41::i;:::-;12525:13;:5;:7;;;:11;:13::i;:::-;12478:3;:61::i;:::-;12414:3;:126::i;:::-;12542:17;:20;;;12563:1;12542:23;;;;;;;;;;;;;12410:3;:156::i;:::-;12250:3;:317::i;:::-;12222:16;:25;;:345;;;;12600:156;12604:124;12608:87;12612:52;12616:27;12620:1;12616:27;;;;;;;;;;;;;;;;;;;;;;;;;;12623:17;:19;;;12616:3;:27::i;:::-;12645:18;12649:1;12645:18;;;;;;;;;;;;;;;;;;;;;;;;;;12652:5;:10;;;12645:3;:18::i;:::-;12612:3;:52::i;:::-;12666:28;12670:17;:23;;;12666:3;:28::i;:::-;12608:3;:87::i;:::-;12697:30;12709:15;:17;;;12697:5;:7;;;:11;;:30;;;;:::i;:::-;12604:3;:124::i;:::-;12730:16;:25;;;12600:3;:156::i;:::-;12577:16;:20;;:179;;;;12791:118;12795:25;12799:1;12795:25;;;;;;;;;;;;;;;;;;;;;;;;;;12802:5;:17;;;12795:3;:25::i;:::-;12822:86;12826:35;12830:15;:18;;;12850:5;:10;;;12826:3;:35::i;:::-;12863:44;12867:15;:18;;;12886:1;12867:21;;;;;;;;;;;;;;;;;;12889:1;12867:24;;;;;;;;;;;;;12893:13;:5;:7;;;:11;:13::i;:::-;12863:3;:44::i;:::-;12822:3;:86::i;:::-;12791:3;:118::i;:::-;12766:16;:22;;:143;;;;12944:112;12948:21;12952:1;12948:21;;;;;;;;;;;;;;;;;;;;;;;;;;12955:5;:13;;;12948:3;:21::i;:::-;12971:84;12975:37;12979:15;:20;;;13001:5;:10;;;12975:3;:37::i;:::-;13014:40;13018:15;:20;;;13040:13;:5;:7;;;:11;:13::i;:::-;13014:3;:40::i;:::-;12971:3;:84::i;:::-;12944:3;:112::i;:::-;12919:16;:22;;:137;;;;13094:101;13098:26;13102:1;13098:26;;;;;;;;;;;;;;;;;;;;;;;;;;13105:5;:18;;;13098:3;:26::i;:::-;13126:68;13130:29;13134:5;:12;;;13148:5;:10;;;13130:3;:29::i;:::-;13161:32;13165:5;:12;;;13179:13;:5;:7;;;:11;:13::i;:::-;13161:3;:32::i;:::-;13126:3;:68::i;:::-;13094:3;:101::i;:::-;13066:16;:25;;:129;;;;13235:101;13239:22;13243:1;13239:22;;;;;;;;;;;;;;;;;;;;;;;;;;13246:5;:14;;;13239:3;:22::i;:::-;13263:72;13267:31;13271:5;:14;;;13287:5;:10;;;13267:3;:31::i;:::-;13300:34;13304:5;:14;;;13320:13;:5;:7;;;:11;:13::i;:::-;13300:3;:34::i;:::-;13263:3;:72::i;:::-;13235:3;:101::i;:::-;13205:16;:27;;:131;;;;13368:293;13397:17;:19;;;13418:16;:20;;;13440:16;:20;;;13462:16;:20;;;13484:16;:20;;;13506:16;:20;;;13528:16;:20;;;13550:16;:22;;;13574:16;:22;;;13598:16;:25;;;13625:16;:27;;;13386:267;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13386:267:5;;;13376:278;;;;;;13368:287;;;:291;:293::i;:::-;13347:16;:18;;:314;;;;;13701:5;:7;;;13679:16;:18;;;:29;13671:84;;;;;;;;;;;;;;;;;;;;;;;;13766:34;;:::i;:::-;13828:56;13857:16;:18;;;13846:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13846:30:5;;;13836:41;;;;;;13828:50;;;:54;:56::i;:::-;13810:13;:15;;:74;;;;;13914:23;13918:1;13914:23;;;;;;;;;;;;;;;;;;;;;;;;;;13921:13;:15;;;13914:3;:23::i;:::-;13894:13;:17;;:43;;;;13971:37;13983:2;13971:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13987:17;:20;;;13971:11;:37::i;:::-;13947:13;:21;;:61;;;;14039:96;14050:48;14056:17;:20;;;14078:17;:19;;;14050:5;:48::i;:::-;14100:17;:34;;;14039:10;:96::i;:::-;14018:13;:18;;:117;;;;14163:155;14167:99;14171:47;14175:5;:7;;;14184:33;14188:5;:7;;;14197:17;:19;;;14184:3;:33::i;:::-;14171:3;:47::i;:::-;14220:45;14224:13;14234:2;14224:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;14239:25;:17;:19;;;:23;:25::i;:::-;14220:3;:45::i;:::-;14167:3;:99::i;:::-;14268:49;14275:13;:21;;;14298:13;:18;;;14268:6;:49::i;:::-;14163:3;:155::i;:::-;14145:13;:15;;:173;;;;14346:44;14350:13;:15;;;14367:22;14371:1;14367:22;;;;;;;;;;;;;;;;;;;;;;;;;;14374:14;:5;:8;;;:12;:14::i;:::-;14367:3;:22::i;:::-;14346:3;:44::i;:::-;14328:13;:15;;:62;;;;14418:56;14422:13;:15;;;14439:34;14443:13;:17;;;14462:5;:10;;;14439:3;:34::i;:::-;14418:3;:56::i;:::-;14400:13;:15;;:74;;;;14529:32;;:::i;:::-;14564:5;:13;;;14529:48;;14592:9;14604:1;14592:13;;14587:421;191:1;14607;:5;14587:421;;;14651:83;14680:13;:15;;;14697:7;:10;;;14708:1;14697:13;;;;;;;;;;;;;14712:7;:10;;;14723:1;14712:13;;;;;;;;;;;;;14669:57;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14669:57:5;;;14659:68;;;;;;14651:77;;;:81;:83::i;:::-;14633:13;:15;;:101;;;;;14778:13;:15;;;14748:13;:24;;;14773:1;14748:27;;;;;;;;;;;;:45;;;;;14827:12;14842:21;:13;:15;;;:19;:21::i;:::-;14827:36;;14895:102;14899:13;:15;;;14916:80;14920:42;14924:7;:10;;;14935:1;14924:13;;;;;;;;;;;;;14939:22;14959:1;14939:13;:15;;;:19;;:22;;;;:::i;:::-;14920:3;:42::i;:::-;14964:31;14968:7;:10;;;14979:1;14968:13;;;;;;;;;;;;;14983:11;14992:1;14983:4;:8;;:11;;;;:::i;:::-;14964:3;:31::i;:::-;14916:3;:80::i;:::-;14895:3;:102::i;:::-;14877:13;:15;;:120;;;;14587:421;14614:3;;;;;;;14587:421;;;;15052:1;15018:13;:28;;;15047:1;15018:31;;;;;;;;;;;;:35;;;;;15068:9;15080:1;15068:13;;15063:155;191:1;15083;:5;15063:155;;;15143:64;15179:13;:24;;;15204:1;15179:27;;;;;;;;;;;;;15143:13;:28;;;15172:1;15143:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;15109:13;:28;;;15138:1;15109:31;;;;;;;;;;;;:98;;;;;15090:3;;;;;;;15063:155;;;;15227:21;;:::i;:::-;15292:37;:13;:28;;;15321:1;15292:31;;;;;;;;;;;;;:35;:37::i;:::-;15258:13;:28;;;15287:1;15258:31;;;;;;;;;;;;:71;;;;;15344:9;15356:1;15344:13;;15339:462;15365:1;162:2;15363:3;;;;;;;;15359:1;:7;15339:462;;;15392:9;15404:1;15392:13;;15387:404;162:2;15418:1;15413;15408;:6;;;;15407:12;:16;15387:404;;;15448:10;15471:1;15466;:6;;;;15461:1;:12;15448:25;;15496:6;15503:2;15496:10;;;;;;;;;;;;;15495:11;15491:286;;;15530:12;15545:76;15585:13;:24;;;15618:1;15614;191;15610:5;:9;15585:35;;;;;;;;;;;;;15545:13;:24;;;15578:1;15574;191;15570:5;:9;15545:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;15530:91;;15678:41;15714:4;15678:13;:28;;;15707:1;15678:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;15643:13;:28;;;15672:2;15643:32;;;;;;;;;;;;:76;;;;;15754:4;15741:6;15748:2;15741:10;;;;;;;;;;;;:17;;;;;;;;;;;15491:286;;15387:404;15425:3;;;;;15387:404;;;;15368:3;;;;;15339:462;;;;15811:20;;:::i;:::-;15841;;:::i;:::-;15876:9;15888:1;15876:13;;15871:224;162:2;15891:1;:5;15871:224;;;15925:55;15929:5;15936:43;15940:2;15943:1;15940:5;;;;;;;;;;;;;;;;;;;;15936:43;;;;;;;;;;;;;;;;;;;;;;;;;;15947:13;:28;;;15976:1;15947:31;;;;;;;;;;;;;15936:3;:43::i;:::-;15925:3;:55::i;:::-;15917:63;;16002:82;16006:5;16013:70;16017:13;:21;;;16039:1;16017:24;;;;;;;;;;;;;16043:13;:28;;;16080:1;16076;162:2;16072:5;:9;16043:39;;;;;;;;;;;;;16013:3;:70::i;:::-;16002:3;:82::i;:::-;15994:90;;15898:3;;;;;;;15871:224;;;;16104:21;;:::i;:::-;16128:104;16132:49;16136:21;16140:5;16147:7;:9;;;16136:3;:21::i;:::-;16159;16163:5;16170:7;:9;;;16159:3;:21::i;:::-;16132:3;:49::i;:::-;16183:48;16187:13;:17;;;16206:24;16220:7;:9;;;16206:7;:9;;;:13;;:24;;;;:::i;:::-;16183:3;:48::i;:::-;16128:3;:104::i;:::-;16104:128;;16250:27;16253:13;:15;;;16270:6;16250:2;:27::i;:::-;16242:77;;;;;;;;;;;;;;;;;;;;;;;;16337:4;16330:11;;;;;;;;;;;;;5490:10858;;;;:::o;28140:181::-;28212:14;;:::i;:::-;28245:69;229:77;28288:5;28295:1;28271:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28271:26:5;;;28261:37;;;;;;28253:46;;;:60;;;;;;;;28245:7;:69::i;:::-;28238:76;;28140:181;;;;:::o;25355:295::-;25428:14;25521:4;25515:11;25577:5;25570:4;25563:5;25559:16;25555:28;25549:35;25546:1;25539:46;25632:1;25626:8;25616:18;;25492:152;;;;;:::o;727:95:3:-;774:7;117:77;800:1;:15;;;;;;;;793:22;;727:95;;;:::o;828:127::-;886:7;917:1;912;:6;;:36;;947:1;943;117:77;929:15;:19;912:36;;;925:1;921;:5;912:36;905:43;;828:127;;;;:::o;26184:382:5:-;26249:16;;:::i;:::-;26315:4;26309:11;26349:1;26343:8;26340:1;26333:19;26399:4;26396:1;26392:12;26386:19;26379:4;26376:1;26372:12;26365:41;26440:1;26433:4;26430:1;26426:12;26419:23;26499:4;26496:1;26490:4;26487:1;26481:4;26476:3;26465:39;26458:47;26455:2;;;26534:1;26531;26524:12;26455:2;26286:274;;;;;:::o;25722:456::-;25796:16;;:::i;:::-;25862:4;25856:11;25896:2;25890:9;25887:1;25880:20;25948:4;25944:2;25940:13;25934:20;25927:4;25924:1;25920:12;25913:42;25995:2;25989:9;25982:4;25979:1;25975:12;25968:31;26047:4;26043:2;26039:13;26033:20;26026:4;26023:1;26019:12;26012:42;26111:4;26108:1;26102:4;26099:1;26093:4;26088:3;26077:39;26070:47;26067:2;;;26146:1;26143;26136:12;26067:2;25833:339;;;;;:::o;26759:131::-;26832:4;26863:2;:4;;;26855:2;:4;;;:12;:28;;;;;26879:2;:4;;;26871:2;:4;;;:12;26855:28;26848:35;;26759:131;;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;26572:181:5:-;26626:14;;:::i;:::-;26659:47;;;;;;;;;26667:1;:3;;;26659:47;;;;229:77;26687:1;:3;;;:17;;;;;;;;229:77;26672:33;26659:47;;;26652:54;;26572:181;;;:::o;16354:1489::-;16460:26;16735:12;16750:8;:15;16735:30;;16775:12;16797:1;16790:4;:8;;;;;;;;16775:23;;16834:4;16817:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16808:31;;16921:25;16949:16;16953:4;16959:5;16949:3;:16::i;:::-;16921:44;;16976:29;17022:4;17008:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17008:19:5;;;;16976:51;;17042:9;17054:1;17042:13;;17037:777;17061:1;17057;:5;17037:777;;;17088:9;17100:1;17088:13;;17083:148;17107:4;17103:1;:8;17083:148;;;17154:8;17176:4;17171:1;17164:4;:8;17163:17;;;;;;;;17154:27;;;;;;;;;;;;;;;;;;17182:1;17154:30;;;;;;;;;;;;;17136:12;17149:1;17136:15;;;;;;;;;;;;;;;;;:48;;;;;17113:3;;;;;;;17083:148;;;;17260:17;17264:12;17260:3;:17::i;:::-;17245:32;;17291:28;17336:4;17322:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17291:50;;17355:20;17378:1;17355:24;;17408:18;:12;:16;:18::i;:::-;17393:33;;17445:9;17457:1;17445:13;;17440:203;17464:4;17460:1;:8;17440:203;;;17522:106;17526:87;17530:33;17534:8;17543:1;17534:11;;;;;;;;;;;;;;;;;;17547:12;17560:1;17547:15;;;;;;;;;;;;;;;;;;17530:3;:33::i;:::-;17565:47;17569:8;17582:4;17578:1;:8;17569:18;;;;;;;;;;;;;;;;;;17589:12;17606:4;17602:1;:8;17589:22;;;;;;;;;;;;;;;;;;17565:3;:47::i;:::-;17526:3;:87::i;:::-;17615:12;17522:3;:106::i;:::-;17505:11;17517:1;17505:14;;;;;;;;;;;;;;;;;:123;;;;17470:3;;;;;;;17440:203;;;;17671:22;17675:11;17688:4;17671:3;:22::i;:::-;17657:36;;17712:9;17724:1;17712:13;;17707:97;17731:4;17727:1;:8;17707:97;;;17775:11;17787:1;17775:14;;;;;;;;;;;;;;;;;;17760:6;17767:1;17760:9;;;;;;;;;;;;;;;;;;17770:1;17760:12;;;;;;;;;;;;:29;;;;17737:3;;;;;;;17707:97;;;;17037:777;;17064:3;;;;;;;17037:777;;;;17830:6;17823:13;;;;;;16354:1489;;;;:::o;374:116:3:-;432:7;117:77;458:25;;;;;;;468:1;465;458:25;451:32;;374:116;;;;:::o;24915:236:5:-;24968:24;;:::i;:::-;25016:1;25004:6;25011:1;25004:9;;;;;;;;;;;;:13;;;;;25039:4;25027:6;25034:1;25027:9;;;;;;;;;;;;:16;;;;;25058:9;25070:1;25058:13;;25053:92;162:2;25073:1;:5;25053:92;;;25111:23;25129:4;25111:6;25122:1;25118;:5;25111:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;25099:6;25106:1;25099:9;;;;;;;;;;;;:35;;;;;25080:3;;;;;;;25053:92;;;;24915:236;;;:::o;1062:580:3:-;1130:14;1156:13;117:77;1156:27;;1231:4;1225:11;1259:4;1256:1;1249:15;1298:4;1291;1288:1;1284:12;1277:26;1337:4;1330;1327:1;1323:12;1316:26;1376:4;1369;1366:1;1362:12;1355:26;1415:8;1408:4;1405:1;1401:12;1394:30;1458:5;1451:4;1448:1;1444:12;1437:27;1521:4;1518:1;1512:4;1509:1;1503:4;1498:3;1487:39;1480:47;1477:2;;;1579:1;1576;1569:12;1477:2;1624:1;1618:8;1608:18;;1202:434;;;;;;:::o;24213:180:5:-;24278:14;24309:9;24321:1;24309:13;;24304:83;162:2;24324:1;:5;24304:83;;;24359:17;24370:2;24373:1;24370:5;;;;;;;;;;;;;24359:6;:10;;:17;;;;:::i;:::-;24350:26;;24331:3;;;;;;;24304:83;;;;24213:180;;;:::o;961:95:3:-;1008:7;1048:1;117:77;1034:15;1027:22;;961:95;;;:::o;23986:221:5:-;24073:24;;:::i;:::-;24114:9;24126:1;24114:13;;24109:92;162:2;24129:1;:5;24109:92;;;24167:23;24171:2;24174:1;24171:5;;;;;;;;;;;;;;;;;;24178:11;:2;24181:1;24178:5;;;;;;;;;;;;;:9;:11::i;:::-;24167:3;:23::i;:::-;24155:6;24162:1;24155:9;;;;;;;;;;;;:35;;;;24136:3;;;;;;;24109:92;;;;23986:221;;;;:::o;25157:192::-;25227:24;;:::i;:::-;25268:9;25280:1;25268:13;;25263:80;162:2;25283:1;:5;25263:80;;;25321:11;25330:1;25321;25323;25321:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;25309:6;25316:1;25309:9;;;;;;;;;;;;:23;;;;;25290:3;;;;;;;25263:80;;;;25157:192;;;;:::o;23770:210::-;23855:24;;:::i;:::-;23896:9;23908:1;23896:13;;23891:83;162:2;23911:1;:5;23891:83;;;23949:14;23958:1;23960;23958:4;;;;;;;;;;;;;23949:1;23951;23949:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;23937:6;23944:1;23937:9;;;;;;;;;;;;:26;;;;;23918:3;;;;;;;23891:83;;;;23770:210;;;;:::o;24399:177::-;24462:18;;:::i;:::-;24497:9;24509:1;24497:13;;24492:78;162:2;24512:1;:5;24492:78;;;24544:15;24548:3;24553:2;24556:1;24553:5;;;;;;;;;;;;;;;;;;24544:3;:15::i;:::-;24538:21;;24519:3;;;;;;;24492:78;;;;24399:177;;;:::o;24582:327::-;24665:21;;:::i;:::-;24703:9;24715:1;24703:13;;24698:205;162:2;24718:1;:5;24698:205;;;24862:30;24866:6;24874:17;24878:2;24881:1;24878:5;;;;;;;;;;;;;24885:2;24888:1;24885:5;;;;;;;;;;;;;24874:3;:17::i;:::-;24862:3;:30::i;:::-;24853:39;;24725:3;;;;;;;24698:205;;;;24582:327;;;;:::o;618:103:3:-;665:7;691:23;695:1;712;117:77;698:15;691:3;:23::i;:::-;684:30;;618:103;;;:::o;27512:449:5:-;27566:14;;:::i;:::-;27592:9;27611:311;27618:4;27611:311;;;27638:16;27677:1;27657:17;27666:4;27672:1;27657:8;:17::i;:::-;:21;27638:40;;27764:41;27773:8;27803:1;27798;229:77;27784:15;27783:21;;;;;;;;27764:8;:41::i;:::-;27760:45;;27841:8;27823:14;27832:1;27835;27823:8;:14::i;:::-;:26;27819:70;;;27869:5;;;27819:70;27910:1;27902:9;;;;27611:311;;;;27938:16;;;;;;;;;27946:4;27938:16;;;;27952:1;27938:16;;;27931:23;;;27512:449;;;:::o;17849:997::-;17923:23;17958:12;17973:5;:12;17958:27;;18007:1;17999:4;:9;17995:52;;;18031:5;18024:12;;;;;17995:52;18076:1;18071;18064:4;:8;;;;;;;;:13;18056:57;;;;;;;;;;;;;;;;;;;;;;;;18124:13;18140:23;18158:4;18150:5;:12;;;;;;;;337:76;18140:9;;:23;;;;:::i;:::-;18124:39;;18173:20;18196:1;18173:24;;18211:7;18207:87;;;18242:11;:5;:9;:11::i;:::-;18234:19;;18282:1;18267:16;;18207:87;18318:18;:12;:16;:18::i;:::-;18303:33;;18346:21;18370:31;18374:17;18382:5;18389:1;18374:7;:17::i;:::-;18393:7;18370:3;:31::i;:::-;18346:55;;18411:20;18434:31;18438:17;18446:5;18453:1;18438:7;:17::i;:::-;18457:7;18434:3;:31::i;:::-;18411:54;;18475:17;18495:1;18475:21;;18529:4;18515:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18506:28;;18549:9;18561:1;18549:13;;18544:296;18575:1;18568:4;:8;;;;;;;;18564:1;:12;18544:296;;;18597:19;;:::i;:::-;18619:22;18623:3;18627:1;18623:6;;;;;;;;;;;;;;;;;;18631:9;18619:3;:22::i;:::-;18597:44;;18667:37;18671:18;18675:4;18680:1;18675:7;;;;;;;;;;;;;;;;;;18684:4;18671:3;:18::i;:::-;18691:12;18667:3;:37::i;:::-;18655:6;18662:1;18655:9;;;;;;;;;;;;;;;;;:49;;;;18741:42;18745:23;18749:4;18754:1;18749:7;;;;;;;;;;;;;;;;;;18758:9;18762:4;18758:3;:9::i;:::-;18745:3;:23::i;:::-;18770:12;18741:3;:42::i;:::-;18718:6;18736:1;18729:4;:8;;;;;;;;18725:1;:12;18718:20;;;;;;;;;;;;;;;;;:65;;;;18809:20;18823:5;18809:9;:13;;:20;;;;:::i;:::-;18797:32;;18544:296;18578:3;;;;;;;18544:296;;;;17849:997;;;;;;;;;;;:::o;19134:739::-;19194:23;19229:12;19244:5;:12;19229:27;;19278:1;19270:4;:9;19266:52;;;19302:5;19295:12;;;;;19266:52;19347:1;19342;19335:4;:8;;;;;;;;:13;19327:57;;;;;;;;;;;;;;;;;;;;;;;;19395:13;19411:23;19429:4;19421:5;:12;;;;;;;;337:76;19411:9;;:23;;;;:::i;:::-;19395:39;;19444:21;19468:22;19472:17;19480:5;19487:1;19472:7;:17::i;:::-;19468:3;:22::i;:::-;19444:46;;19500:20;19523:22;19527:17;19535:5;19542:1;19527:7;:17::i;:::-;19523:3;:22::i;:::-;19500:45;;19555:17;19575:1;19555:21;;19609:4;19595:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19595:19:5;;;;19586:28;;19629:9;19641:1;19629:13;;19624:243;19655:1;19648:4;:8;;;;;;;;19644:1;:12;19624:243;;;19677:12;19692:21;19703:9;19692:3;19696:1;19692:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;19677:36;;19739:17;19751:4;19739;19744:1;19739:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;19727:6;19734:1;19727:9;;;;;;;;;;;;;;;;;:29;;;;;19793:17;19805:4;19793;19798:1;19793:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;19770:6;19788:1;19781:4;:8;;;;;;;;19777:1;:12;19770:20;;;;;;;;;;;;;;;;;:40;;;;;19836:20;19850:5;19836:9;:13;;:20;;;;:::i;:::-;19824:32;;19624:243;19658:3;;;;;;;19624:243;;;;19134:739;;;;;;;;;:::o;26896:610::-;26969:14;27020:13;229:77;27020:27;;27095:4;27089:11;27123:4;27120:1;27113:15;27162:4;27155;27152:1;27148:12;27141:26;27201:4;27194;27191:1;27187:12;27180:26;27240:4;27233;27230:1;27226:12;27219:26;27279:8;27272:4;27269:1;27265:12;27258:30;27322:5;27315:4;27312:1;27308:12;27301:27;27385:4;27382:1;27376:4;27373:1;27367:4;27362:3;27351:39;27344:47;27341:2;;;27443:1;27440;27433:12;27341:2;27488:1;27482:8;27472:18;;27066:434;;;;;;:::o;18852:276::-;18932:23;19005:1;18990:5;:12;:16;;;;;;;;18976:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18967:40;;19022:9;19034:1;19022:13;;19017:105;19056:1;19041:5;:12;:16;;;;;;;;19037:1;:20;19017:105;;;19090:5;19104:6;19100:1;19096;:5;:14;19090:21;;;;;;;;;;;;;;;;;;19078:6;19085:1;19078:9;;;;;;;;;;;;;;;;;:33;;;;19059:3;;;;;;;19017:105;;;;18852:276;;;;:::o;19879:::-;19959:23;20032:1;20017:5;:12;:16;;;;;;;;20003:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20003:31:5;;;;19994:40;;20049:9;20061:1;20049:13;;20044:105;20083:1;20068:5;:12;:16;;;;;;;;20064:1;:20;20044:105;;;20117:5;20131:6;20127:1;20123;:5;:14;20117:21;;;;;;;;;;;;;;;;;;20105:6;20112:1;20105:9;;;;;;;;;;;;;;;;;:33;;;;;20086:3;;;;;;;20044:105;;;;19879:276;;;;:::o;81:28242::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28242:5;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28242:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28242:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28242:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28242:5;;;;:::o;26:764:-1:-;;162:3;155:4;147:6;143:17;139:27;132:35;129:2;;;180:1;177;170:12;129:2;217:6;204:20;239:99;254:83;330:6;254:83;;;239:99;;;230:108;;355:5;380:6;373:5;366:21;410:4;402:6;398:17;388:27;;432:4;427:3;423:14;416:21;;485:6;532:3;524:4;516:6;512:17;507:3;503:27;500:36;497:2;;;549:1;546;539:12;497:2;574:1;559:225;584:6;581:1;578:13;559:225;;;642:3;664:56;716:3;704:10;664:56;;;659:3;652:69;744:4;739:3;735:14;728:21;;772:4;767:3;763:14;756:21;;616:168;606:1;603;599:9;594:14;;559:225;;;563:14;122:668;;;;;;;;817:607;;928:3;921:4;913:6;909:17;905:27;898:35;895:2;;;946:1;943;936:12;895:2;970:3;988:74;1003:58;1054:6;1003:58;;;988:74;;;979:83;;1079:5;1138:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:2;;;1202:1;1199;1192:12;1150:2;1227:1;1212:206;1237:6;1234:1;1231:13;1212:206;;;1295:3;1317:37;1350:3;1338:10;1317:37;;;1312:3;1305:50;1378:4;1373:3;1369:14;1362:21;;1406:4;1401:3;1397:14;1390:21;;1269:149;1259:1;1256;1252:9;1247:14;;1212:206;;;1216:14;888:536;;;;;;;;1451:615;;1566:3;1559:4;1551:6;1547:17;1543:27;1536:35;1533:2;;;1584:1;1581;1574:12;1533:2;1608:3;1626:78;1641:62;1696:6;1641:62;;;1626:78;;;1617:87;;1721:5;1780:6;1827:3;1819:4;1811:6;1807:17;1802:3;1798:27;1795:36;1792:2;;;1844:1;1841;1834:12;1792:2;1869:1;1854:206;1879:6;1876:1;1873:13;1854:206;;;1937:3;1959:37;1992:3;1980:10;1959:37;;;1954:3;1947:50;2020:4;2015:3;2011:14;2004:21;;2048:4;2043:3;2039:14;2032:21;;1911:149;1901:1;1898;1894:9;1889:14;;1854:206;;;1858:14;1526:540;;;;;;;;2074:118;;2141:46;2179:6;2166:20;2141:46;;;2132:55;;2126:66;;;;;2200:440;;2301:3;2294:4;2286:6;2282:17;2278:27;2271:35;2268:2;;;2319:1;2316;2309:12;2268:2;2356:6;2343:20;2378:64;2393:48;2434:6;2393:48;;;2378:64;;;2369:73;;2462:6;2455:5;2448:21;2498:4;2490:6;2486:17;2531:4;2524:5;2520:16;2566:3;2557:6;2552:3;2548:16;2545:25;2542:2;;;2583:1;2580;2573:12;2542:2;2593:41;2627:6;2622:3;2617;2593:41;;;2261:379;;;;;;;;2648:118;;2715:46;2753:6;2740:20;2715:46;;;2706:55;;2700:66;;;;;2773:2013;;;;;;;;;3227:3;3215:9;3206:7;3202:23;3198:33;3195:2;;;3244:1;3241;3234:12;3195:2;3307:1;3296:9;3292:17;3279:31;3330:18;3322:6;3319:30;3316:2;;;3362:1;3359;3352:12;3316:2;3382:97;3471:7;3462:6;3451:9;3447:22;3382:97;;;3372:107;;3258:227;3544:2;3533:9;3529:18;3516:32;3568:18;3560:6;3557:30;3554:2;;;3600:1;3597;3590:12;3554:2;3620:97;3709:7;3700:6;3689:9;3685:22;3620:97;;;3610:107;;3495:228;3782:2;3771:9;3767:18;3754:32;3806:18;3798:6;3795:30;3792:2;;;3838:1;3835;3828:12;3792:2;3858:97;3947:7;3938:6;3927:9;3923:22;3858:97;;;3848:107;;3733:228;3992:2;4010:76;4078:7;4069:6;4058:9;4054:22;4010:76;;;4000:86;;3971:121;4151:3;4140:9;4136:19;4123:33;4176:18;4168:6;4165:30;4162:2;;;4208:1;4205;4198:12;4162:2;4228:97;4317:7;4308:6;4297:9;4293:22;4228:97;;;4218:107;;4102:229;4362:3;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4341:99;4471:3;4490:76;4558:7;4549:6;4538:9;4534:22;4490:76;;;4480:86;;4450:122;4631:3;4620:9;4616:19;4603:33;4656:18;4648:6;4645:30;4642:2;;;4688:1;4685;4678:12;4642:2;4708:62;4762:7;4753:6;4742:9;4738:22;4708:62;;;4698:72;;4582:194;3189:1597;;;;;;;;;;;;4793:241;;4897:2;4885:9;4876:7;4872:23;4868:32;4865:2;;;4913:1;4910;4903:12;4865:2;4948:1;4965:53;5010:7;5001:6;4990:9;4986:22;4965:53;;;4955:63;;4927:97;4859:175;;;;;5042:335;;5208:129;5333:3;5326:5;5208:129;;;5366:4;5361:3;5357:14;5343:28;;5201:176;;;;;5386:259;;5514:91;5601:3;5594:5;5514:91;;;5634:4;5629:3;5625:14;5611:28;;5507:138;;;;;5734:925;;5955:90;6039:5;5955:90;;;6058:126;6177:6;6172:3;6058:126;;;6051:133;;6204:92;6290:5;6204:92;;;6317:1;6302:335;6327:6;6324:1;6321:13;6302:335;;;6374:143;6513:3;6504:6;6498:13;6374:143;;;6367:150;;6534:96;6623:6;6534:96;;;6524:106;;6349:1;6346;6342:9;6337:14;;6302:335;;;6306:14;6650:3;6643:10;;5934:725;;;;;;;6744:723;6905:69;6968:5;6905:69;;;6987:95;7075:6;7070:3;6987:95;;;6980:102;;7102:71;7167:5;7102:71;;;7194:1;7179:276;7204:6;7201:1;7198:13;7179:276;;;7251:105;7352:3;7343:6;7337:13;7251:105;;;7244:112;;7373:75;7441:6;7373:75;;;7363:85;;7226:1;7223;7219:9;7214:14;;7179:276;;;7183:14;6884:583;;;;;7552:743;7723:69;7786:5;7723:69;;;7805:105;7903:6;7898:3;7805:105;;;7798:112;;7930:71;7995:5;7930:71;;;8022:1;8007:276;8032:6;8029:1;8026:13;8007:276;;;8079:105;8180:3;8171:6;8165:13;8079:105;;;8072:112;;8201:75;8269:6;8201:75;;;8191:85;;8054:1;8051;8047:9;8042:14;;8007:276;;;8011:14;7702:593;;;;;8380:759;8555:73;8622:5;8555:73;;;8641:105;8739:6;8734:3;8641:105;;;8634:112;;8766:75;8835:5;8766:75;;;8862:1;8847:280;8872:6;8869:1;8866:13;8847:280;;;8919:105;9020:3;9011:6;9005:13;8919:105;;;8912:112;;9041:79;9113:6;9041:79;;;9031:89;;8894:1;8891;8887:9;8882:14;;8847:280;;;8851:14;8534:605;;;;;9222:773;;9405:71;9470:5;9405:71;;;9489:107;9589:6;9584:3;9489:107;;;9482:114;;9616:73;9683:5;9616:73;;;9710:1;9695:278;9720:6;9717:1;9714:13;9695:278;;;9767:105;9868:3;9859:6;9853:13;9767:105;;;9760:112;;9889:77;9959:6;9889:77;;;9879:87;;9742:1;9739;9735:9;9730:14;;9695:278;;;9699:14;9986:3;9979:10;;9384:611;;;;;;;10003:111;10080:28;10102:5;10080:28;;;10075:3;10068:41;10062:52;;;10121:360;;10251:39;10284:5;10251:39;;;10302:89;10384:6;10379:3;10302:89;;;10295:96;;10396:52;10441:6;10436:3;10429:4;10422:5;10418:16;10396:52;;;10469:6;10464:3;10460:16;10453:23;;10231:250;;;;;;10489:364;;10649:67;10713:2;10708:3;10649:67;;;10642:74;;10749:66;10745:1;10740:3;10736:11;10729:87;10844:2;10839:3;10835:12;10828:19;;10635:218;;;;10862:465;;11022:67;11086:2;11081:3;11022:67;;;11015:74;;11122:66;11118:1;11113:3;11109:11;11102:87;11223:66;11218:2;11213:3;11209:12;11202:88;11318:2;11313:3;11309:12;11302:19;;11008:319;;;;11336:566;;11496:67;11560:2;11555:3;11496:67;;;11489:74;;11596:66;11592:1;11587:3;11583:11;11576:87;11697:66;11692:2;11687:3;11683:12;11676:88;11798:66;11793:2;11788:3;11784:12;11777:88;11893:2;11888:3;11884:12;11877:19;;11482:420;;;;11911:364;;12071:67;12135:2;12130:3;12071:67;;;12064:74;;12171:66;12167:1;12162:3;12158:11;12151:87;12266:2;12261:3;12257:12;12250:19;;12057:218;;;;12284:364;;12444:67;12508:2;12503:3;12444:67;;;12437:74;;12544:66;12540:1;12535:3;12531:11;12524:87;12639:2;12634:3;12630:12;12623:19;;12430:218;;;;12657:364;;12817:67;12881:2;12876:3;12817:67;;;12810:74;;12917:66;12913:1;12908:3;12904:11;12897:87;13012:2;13007:3;13003:12;12996:19;;12803:218;;;;13030:465;;13190:67;13254:2;13249:3;13190:67;;;13183:74;;13290:66;13286:1;13281:3;13277:11;13270:87;13391:66;13386:2;13381:3;13377:12;13370:88;13486:2;13481:3;13477:12;13470:19;;13176:319;;;;13572:450;13701:4;13696:3;13692:14;13780:3;13773:5;13769:15;13763:22;13791:61;13847:3;13842;13838:13;13825:11;13791:61;;;13721:137;13927:4;13920:5;13916:16;13910:23;13939:62;13995:4;13990:3;13986:14;13973:11;13939:62;;;13868:139;13674:348;;;;14098:460;14237:4;14232:3;14228:14;14316:3;14309:5;14305:15;14299:22;14327:61;14383:3;14378;14374:13;14361:11;14327:61;;;14257:137;14463:4;14456:5;14452:16;14446:23;14475:62;14531:4;14526:3;14522:14;14509:11;14475:62;;;14404:139;14210:348;;;;14565:110;14638:31;14663:5;14638:31;;;14633:3;14626:44;14620:55;;;14682:120;14765:31;14790:5;14765:31;;;14760:3;14753:44;14747:55;;;14809:159;14910:52;14930:31;14955:5;14930:31;;;14910:52;;;14905:3;14898:65;14892:76;;;14975:405;;15149:95;15240:3;15231:6;15149:95;;;15142:102;;15255:75;15326:3;15317:6;15255:75;;;15352:2;15347:3;15343:12;15336:19;;15372:3;15365:10;;15130:250;;;;;;15387:1759;;16043:3;16032:9;16028:19;16020:27;;16094:9;16088:4;16084:20;16080:1;16069:9;16065:17;16058:47;16119:146;16260:4;16251:6;16119:146;;;16111:154;;16313:9;16307:4;16303:20;16298:2;16287:9;16283:18;16276:48;16338:146;16479:4;16470:6;16338:146;;;16330:154;;16532:9;16526:4;16522:20;16517:2;16506:9;16502:18;16495:48;16557:146;16698:4;16689:6;16557:146;;;16549:154;;16714:118;16828:2;16817:9;16813:18;16804:6;16714:118;;;16881:9;16875:4;16871:20;16865:3;16854:9;16850:19;16843:49;16906:146;17047:4;17038:6;16906:146;;;16898:154;;17063:73;17131:3;17120:9;17116:19;17107:6;17063:73;;;16014:1132;;;;;;;;;;17153:201;;17265:2;17254:9;17250:18;17242:26;;17279:65;17341:1;17330:9;17326:17;17317:6;17279:65;;;17236:118;;;;;17361:407;;17552:2;17541:9;17537:18;17529:26;;17602:9;17596:4;17592:20;17588:1;17577:9;17573:17;17566:47;17627:131;17753:4;17627:131;;;17619:139;;17523:245;;;;17775:407;;17966:2;17955:9;17951:18;17943:26;;18016:9;18010:4;18006:20;18002:1;17991:9;17987:17;17980:47;18041:131;18167:4;18041:131;;;18033:139;;17937:245;;;;18189:407;;18380:2;18369:9;18365:18;18357:26;;18430:9;18424:4;18420:20;18416:1;18405:9;18401:17;18394:47;18455:131;18581:4;18455:131;;;18447:139;;18351:245;;;;18603:407;;18794:2;18783:9;18779:18;18771:26;;18844:9;18838:4;18834:20;18830:1;18819:9;18815:17;18808:47;18869:131;18995:4;18869:131;;;18861:139;;18765:245;;;;19017:407;;19208:2;19197:9;19193:18;19185:26;;19258:9;19252:4;19248:20;19244:1;19233:9;19229:17;19222:47;19283:131;19409:4;19283:131;;;19275:139;;19179:245;;;;19431:407;;19622:2;19611:9;19607:18;19599:26;;19672:9;19666:4;19662:20;19658:1;19647:9;19643:17;19636:47;19697:131;19823:4;19697:131;;;19689:139;;19593:245;;;;19845:407;;20036:2;20025:9;20021:18;20013:26;;20086:9;20080:4;20076:20;20072:1;20061:9;20057:17;20050:47;20111:131;20237:4;20111:131;;;20103:139;;20007:245;;;;20259:213;;20377:2;20366:9;20362:18;20354:26;;20391:71;20459:1;20448:9;20444:17;20435:6;20391:71;;;20348:124;;;;;20479:493;;20709:3;20698:9;20694:19;20686:27;;20724:71;20792:1;20781:9;20777:17;20768:6;20724:71;;;20806:156;20958:2;20947:9;20943:18;20934:6;20806:156;;;20680:292;;;;;;20979:620;;21245:3;21234:9;21230:19;21222:27;;21260:71;21328:1;21317:9;21313:17;21304:6;21260:71;;;21342:118;21456:2;21445:9;21441:18;21432:6;21342:118;;;21471;21585:2;21574:9;21570:18;21561:6;21471:118;;;21216:383;;;;;;;21606:2548;;22592:3;22581:9;22577:19;22569:27;;22607:71;22675:1;22664:9;22660:17;22651:6;22607:71;;;22689:118;22803:2;22792:9;22788:18;22779:6;22689:118;;;22818;22932:2;22921:9;22917:18;22908:6;22818:118;;;22947:161;23103:3;23092:9;23088:19;23079:6;22947:161;;;23119:119;23233:3;23222:9;23218:19;23209:6;23119:119;;;23249;23363:3;23352:9;23348:19;23339:6;23249:119;;;23417:9;23411:4;23407:20;23401:3;23390:9;23386:19;23379:49;23442:184;23621:4;23612:6;23442:184;;;23434:192;;23675:9;23669:4;23665:20;23659:3;23648:9;23644:19;23637:49;23700:184;23879:4;23870:6;23700:184;;;23692:192;;23895:119;24009:3;23998:9;23994:19;23985:6;23895:119;;;24025;24139:3;24128:9;24124:19;24115:6;24025:119;;;22563:1591;;;;;;;;;;;;;;24161:1028;;24575:3;24564:9;24560:19;24552:27;;24590:71;24658:1;24647:9;24643:17;24634:6;24590:71;;;24672:118;24786:2;24775:9;24771:18;24762:6;24672:118;;;24801;24915:2;24904:9;24900:18;24891:6;24801:118;;;24930:119;25044:3;25033:9;25029:19;25020:6;24930:119;;;25060;25174:3;25163:9;25159:19;25150:6;25060:119;;;24546:643;;;;;;;;;25196:2462;;26135:3;26124:9;26120:19;26112:27;;26150:71;26218:1;26207:9;26203:17;26194:6;26150:71;;;26232:118;26346:2;26335:9;26331:18;26322:6;26232:118;;;26361;26475:2;26464:9;26460:18;26451:6;26361:118;;;26490:119;26604:3;26593:9;26589:19;26580:6;26490:119;;;26620;26734:3;26723:9;26719:19;26710:6;26620:119;;;26788:9;26782:4;26778:20;26772:3;26761:9;26757:19;26750:49;26813:184;26992:4;26983:6;26813:184;;;26805:192;;27008:119;27122:3;27111:9;27107:19;27098:6;27008:119;;;27138;27252:3;27241:9;27237:19;27228:6;27138:119;;;27268;27382:3;27371:9;27367:19;27358:6;27268:119;;;27398;27512:3;27501:9;27497:19;27488:6;27398:119;;;27528:120;27643:3;27632:9;27628:19;27618:7;27528:120;;;26106:1552;;;;;;;;;;;;;;;27665:256;;27727:2;27721:9;27711:19;;27765:4;27757:6;27753:17;27864:6;27852:10;27849:22;27828:18;27816:10;27813:34;27810:62;27807:2;;;27885:1;27882;27875:12;27807:2;27905:10;27901:2;27894:22;27705:216;;;;;27928:277;;28106:18;28098:6;28095:30;28092:2;;;28138:1;28135;28128:12;28092:2;28167:4;28159:6;28155:17;28147:25;;28195:4;28189;28185:15;28177:23;;28029:176;;;;28212:229;;28365:18;28357:6;28354:30;28351:2;;;28397:1;28394;28387:12;28351:2;28426:4;28418:6;28414:17;28406:25;;28288:153;;;;28448:233;;28605:18;28597:6;28594:30;28591:2;;;28637:1;28634;28627:12;28591:2;28666:4;28658:6;28654:17;28646:25;;28528:153;;;;28688:258;;28831:18;28823:6;28820:30;28817:2;;;28863:1;28860;28853:12;28817:2;28907:4;28903:9;28896:4;28888:6;28884:17;28880:33;28872:41;;28936:4;28930;28926:15;28918:23;;28754:192;;;;28955:157;;29100:4;29092:6;29088:17;29077:28;;29069:43;;;;29123:125;;29235:6;29224:17;;29216:32;;;;29259:129;;29375:6;29364:17;;29356:32;;;;29399:138;;29525:4;29517:6;29513:17;29502:28;;29494:43;;;;29546:143;;29678:5;29672:12;29662:22;;29656:33;;;;29696:113;;29801:3;29791:13;;29785:24;;;;29816:117;;29925:3;29915:13;;29909:24;;;;29940:124;;30053:5;30047:12;30037:22;;30031:33;;;;30071:92;;30152:5;30146:12;30136:22;;30130:33;;;;30171:158;;30318:4;30310:6;30306:17;30295:28;;30288:41;;;;30338:137;;30464:4;30456:6;30452:17;30441:28;;30434:41;;;;30484:141;;30614:4;30606:6;30602:17;30591:28;;30584:41;;;;30634:139;;30762:4;30754:6;30750:17;30739:28;;30732:41;;;;30782:218;;30952:6;30947:3;30940:19;30989:4;30984:3;30980:14;30965:29;;30933:67;;;;;31009:151;;31151:3;31136:18;;31129:31;;;;;31169:161;;31321:3;31306:18;;31299:31;;;;;31339:161;;31491:3;31476:18;;31469:31;;;;;31509:199;;31660:6;31655:3;31648:19;31697:4;31692:3;31688:14;31673:29;;31641:67;;;;;31717:163;;31832:6;31827:3;31820:19;31869:4;31864:3;31860:14;31845:29;;31813:67;;;;;31889:145;;32025:3;32010:18;;32003:31;;;;;32042:92;;32122:5;32115:13;32108:21;32097:32;;32091:43;;;;32141:79;;32210:5;32199:16;;32193:27;;;;32227:79;;32296:5;32285:16;;32279:27;;;;32313:79;;32382:5;32371:16;;32365:27;;;;32400:145;32481:6;32476:3;32471;32458:30;32537:1;32528:6;32523:3;32519:16;32512:27;32451:94;;;;32554:268;32619:1;32626:101;32640:6;32637:1;32634:13;32626:101;;;32716:1;32711:3;32707:11;32701:18;32697:1;32692:3;32688:11;32681:39;32662:2;32659:1;32655:10;32650:15;;32626:101;;;32742:6;32739:1;32736:13;32733:2;;;32807:1;32798:6;32793:3;32789:16;32782:27;32733:2;32603:219;;;;;32830:74;;32894:5;32883:16;;32877:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 64;\n    uint256 constant n = 6;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n    uint256 constant UNITY = 9334303377689037989442018753807510978357674015322511348041267794643984346845; // primitive 2^28th root of unity modulo GROUP_ORDER (not field!)\n\n    G1Point[] gs; // warning: this and the below are not statically sized anymore\n    G1Point[] hs; // need to push to these if large anonsets are used.\n    G1Point g;\n    G1Point h;\n\n    uint256[m] twos = powers(2);\n\n    struct ZetherStatement {\n        G1Point[] CLn;\n        G1Point[] CRn;\n        G1Point[] C;\n        G1Point D;\n        G1Point[] y;\n        uint256 epoch; // or uint8?\n        G1Point u;\n    }\n\n    struct ZetherProof {\n        G1Point A;\n        G1Point S;\n\n        G1Point P;\n        G1Point Q;\n        G1Point U;\n        G1Point V;\n        G1Point X;\n        G1Point Y;\n        G1Point CLnG;\n        G1Point CRnG;\n        G1Point[2][] CG; // flipping the indexing order on this, 'cause...\n        G1Point[2][] yG; // assuming this one has the same size..., N / 2 by 2,\n        G1Point DG;\n        G1Point gG;\n        uint256[2][] f; // and that this has size N - 1 by 2.\n        uint256 z_P;\n        uint256 z_U;\n        uint256 z_X;\n\n        G1Point CPrime;\n        G1Point DPrime;\n        G1Point CLnPrime;\n        G1Point CRnPrime;\n\n        G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 tauX;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_r;\n        uint256 s_vTransfer;\n        uint256 s_vDiff;\n        uint256 s_nuTransfer;\n        uint256 s_nuDiff;\n\n        InnerProductProof ipProof;\n    }\n\n    struct SigmaProof {\n        uint256 c;\n        uint256 sX;\n        uint256 sR;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function baseSize() external view returns (uint256 size) {\n        return gs.length;\n    }\n\n    function extendBase(uint256 size) external payable {\n        // unfortunate, but necessary. essentially, we need vector bases of arbitrary (linear) length for large anonsets...\n        // could mitigate this by using the logarithmic tricks of Groth and Kohlweiss; see also BCC+15\n        // but this would cause problems elsewhere: N log N-sized proofs and N log^2(N) prove / verify time.\n        // the increase in proof size is paradoxical: while _f_ will become smaller (log N), you'll need more correction terms\n        // thus a linear persistent space overhead is not so bad in the grand scheme, and we deem this acceptable.\n        for (uint256 i = gs.length; i < size; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function verifyTransfer(bytes32[2][] memory CLn, bytes32[2][] memory CRn, bytes32[2][] memory C, bytes32[2] memory D, bytes32[2][] memory y, uint256 epoch, bytes32[2] memory u, bytes memory proof) view public returns (bool) {\n        ZetherStatement memory statement;\n        uint256 size = y.length;\n        require(gs.length >= size, \"Inadequate stored vector base! Call extendBase and then try again.\");\n\n        statement.CLn = new G1Point[](size);\n        statement.CRn = new G1Point[](size);\n        statement.C = new G1Point[](size);\n        statement.y = new G1Point[](size);\n        for (uint256 i = 0; i < size; i++) {\n            statement.CLn[i] = G1Point(uint256(CLn[i][0]), uint256(CLn[i][1]));\n            statement.CRn[i] = G1Point(uint256(CRn[i][0]), uint256(CRn[i][1]));\n            statement.C[i] = G1Point(uint256(C[i][0]), uint256(C[i][1]));\n            statement.y[i] = G1Point(uint256(y[i][0]), uint256(y[i][1]));\n        }\n        statement.D = G1Point(uint256(D[0]), uint256(D[1]));\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[2] zs; // [z^2, z^3]\n        uint256[m] twoTimesZSquared;\n        uint256 zSum;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        G1Point A_y;\n        G1Point A_D;\n        G1Point gEpoch;\n        G1Point A_u;\n        G1Point A_B;\n        G1Point c_commit;\n        G1Point A_t;\n        G1Point[2][] A_C;\n        G1Point A_C00;\n        G1Point A_CLn;\n        G1Point A_CPrime;\n        G1Point A_CLnPrime;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 size;\n        uint256 w;\n        uint256[2][] f;\n        G1Point temp;\n        G1Point D2;\n        G1Point CLn2;\n        G1Point CRn2;\n        uint256[2][2] cycler;\n        G1Point[2][] C2;\n        G1Point[2][] y2;\n        G1Point g2;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u_x;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 o;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) view internal returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.C, statement.D, statement.y, statement.epoch))).mod();\n\n        AnonAuxiliaries memory anonAuxiliaries;\n        G1Point[6] memory store = [proof.P, proof.Q, proof.U, proof.V, proof.X, proof.Y]; // for stacktoodeep\n        anonAuxiliaries.w = uint256(keccak256(abi.encode(statementHash, proof.A, proof.S, store, proof.CLnG, proof.CRnG, proof.CG, proof.yG, proof.DG, proof.gG))).mod();\n        anonAuxiliaries.size = proof.f.length + 1;\n        anonAuxiliaries.f = new uint256[2][](anonAuxiliaries.size);\n        anonAuxiliaries.f[0][0] = anonAuxiliaries.w;\n        anonAuxiliaries.f[0][1] = anonAuxiliaries.w;\n        for (uint256 i = 1; i < anonAuxiliaries.size; i++) {\n            anonAuxiliaries.f[i][0] = proof.f[i - 1][0];\n            anonAuxiliaries.f[i][1] = proof.f[i - 1][1];\n            anonAuxiliaries.f[0][0] = anonAuxiliaries.f[0][0].sub(anonAuxiliaries.f[i][0]);\n            anonAuxiliaries.f[0][1] = anonAuxiliaries.f[0][1].sub(anonAuxiliaries.f[i][1]);\n        }\n        for (uint256 i = 0; i < anonAuxiliaries.size; i++) {\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[i], anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(hs[i], anonAuxiliaries.f[i][1]));\n        }\n        require(eq(add(mul(proof.Q, anonAuxiliaries.w), proof.P), add(anonAuxiliaries.temp, mul(h, proof.z_P))), \"Recovery failure for Q^w * P.\");\n\n        anonAuxiliaries.temp = G1Point(0, 0);\n        for (uint256 i = 0; i < anonAuxiliaries.size; i++) { // danger... gs and hs need to be big enough.\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[i], anonAuxiliaries.f[i][0].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[i][0]))));\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(hs[i], anonAuxiliaries.f[i][1].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[i][1])))); // commutative\n        }\n        require(eq(add(mul(proof.U, anonAuxiliaries.w), proof.V), add(anonAuxiliaries.temp, mul(h, proof.z_U))), \"Recovery failure for U^w * V.\");\n\n        for (uint256 i = 0; i < anonAuxiliaries.size; i++) {\n            anonAuxiliaries.CLn2 = add(anonAuxiliaries.CLn2, mul(statement.CLn[i], anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.CRn2 = add(anonAuxiliaries.CRn2, mul(statement.CRn[i], anonAuxiliaries.f[i][0]));\n        }\n        anonAuxiliaries.CLn2 = add(anonAuxiliaries.CLn2, neg(proof.CLnG));\n        anonAuxiliaries.CRn2 = add(anonAuxiliaries.CRn2, neg(proof.CRnG));\n\n        anonAuxiliaries.C2 = assembleConvolutions(anonAuxiliaries.f, statement.C); // will internally include _two_ fourier transforms, and split even / odd, etc.\n        anonAuxiliaries.y2 = assembleConvolutions(anonAuxiliaries.f, statement.y);\n\n        for (uint256 i = 0; i < anonAuxiliaries.size / 2; i++) { // order of loops can be switched...\n            // could use _two_ further nested loops inside this, but...\n            for (uint256 j = 0; j < 2; j++) {\n                for (uint256 k = 0; k < 2; k++) {\n                    anonAuxiliaries.cycler[k][j] = anonAuxiliaries.cycler[k][j].add(anonAuxiliaries.f[2 * i + k][j]);\n                }\n                anonAuxiliaries.C2[i][j] = add(anonAuxiliaries.C2[i][j], neg(proof.CG[i][j]));\n                anonAuxiliaries.y2[i][j] = add(anonAuxiliaries.y2[i][j], neg(proof.yG[i][j]));\n            }\n        }\n        // replace the leftmost column with the Hadamard of the left and right columns. just do the multiplication once...\n        anonAuxiliaries.cycler[0][0] = anonAuxiliaries.cycler[0][0].mul(anonAuxiliaries.cycler[0][1]);\n        anonAuxiliaries.cycler[1][0] = anonAuxiliaries.cycler[1][0].mul(anonAuxiliaries.cycler[1][1]);\n        anonAuxiliaries.temp = add(mul(gs[0], anonAuxiliaries.cycler[0][0]), mul(hs[0], anonAuxiliaries.cycler[1][0]));\n\n        require(eq(add(mul(proof.Y, anonAuxiliaries.w), proof.X), add(anonAuxiliaries.temp, mul(h, proof.z_X))), \"Recovery failure for Y^w * X.\");\n\n        anonAuxiliaries.D2 = add(mul(statement.D, anonAuxiliaries.w), neg(proof.DG));\n        anonAuxiliaries.g2 = add(mul(g, anonAuxiliaries.w), neg(proof.gG));\n\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(anonAuxiliaries.w, proof.CPrime, proof.DPrime, proof.CLnPrime, proof.CRnPrime))).mod();\n        zetherAuxiliaries.ys = powers(zetherAuxiliaries.y);\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs = [zetherAuxiliaries.z.exp(2), zetherAuxiliaries.z.exp(3)];        \n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = sumScalars(zetherAuxiliaries.ys).mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** (m / 2)).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.t = proof.tHat.sub(zetherAuxiliaries.k);\n        for (uint256 i = 0; i < m / 2; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + m / 2] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.tCommits))).mod();\n        zetherAuxiliaries.tEval = add(mul(proof.tCommits[0], zetherAuxiliaries.x), mul(proof.tCommits[1], zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = add(mul(anonAuxiliaries.g2, proof.s_sk), mul(anonAuxiliaries.y2[0][0], proof.c.neg()));\n        sigmaAuxiliaries.A_D = add(mul(anonAuxiliaries.g2, proof.s_r), mul(anonAuxiliaries.D2, proof.c.neg()));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = add(mul(sigmaAuxiliaries.gEpoch, proof.s_sk), mul(statement.u, proof.c.neg()));\n        sigmaAuxiliaries.A_B = add(mul(add(anonAuxiliaries.y2[0][0], anonAuxiliaries.y2[0][1]), proof.s_r), mul(add(anonAuxiliaries.C2[0][0], anonAuxiliaries.C2[0][1]), proof.c.neg()));\n        sigmaAuxiliaries.A_C = new G1Point[2][](anonAuxiliaries.size / 2 - 1);\n        for (uint256 i = 1; i < anonAuxiliaries.size / 2; i++) {\n            sigmaAuxiliaries.A_C[i - 1][0] = add(mul(anonAuxiliaries.y2[i][0], proof.s_r), mul(anonAuxiliaries.C2[i][0], proof.c.neg()));\n            sigmaAuxiliaries.A_C[i - 1][1] = add(mul(anonAuxiliaries.y2[i][1], proof.s_r), mul(anonAuxiliaries.C2[i][1], proof.c.neg()));\n        }\n        sigmaAuxiliaries.c_commit = add(mul(add(mul(add(anonAuxiliaries.D2, proof.DPrime), proof.s_sk), mul(add(anonAuxiliaries.C2[0][0], proof.CPrime), proof.c.neg())), zetherAuxiliaries.zs[0]), mul(add(mul(add(anonAuxiliaries.CRn2, proof.CRnPrime), proof.s_sk), mul(add(anonAuxiliaries.CLn2, proof.CLnPrime), proof.c.neg())), zetherAuxiliaries.zs[1]));\n        sigmaAuxiliaries.A_t = add(mul(add(add(mul(g, zetherAuxiliaries.t), mul(h, proof.tauX)), neg(zetherAuxiliaries.tEval)), proof.c.mul(anonAuxiliaries.w)), sigmaAuxiliaries.c_commit);\n        sigmaAuxiliaries.A_C00 = add(mul(g, proof.s_vTransfer), add(mul(anonAuxiliaries.D2, proof.s_sk), mul(anonAuxiliaries.C2[0][0], proof.c.neg())));\n        sigmaAuxiliaries.A_CLn = add(mul(g, proof.s_vDiff), add(mul(anonAuxiliaries.CRn2, proof.s_sk), mul(anonAuxiliaries.CLn2, proof.c.neg())));\n        sigmaAuxiliaries.A_CPrime = add(mul(h, proof.s_nuTransfer), add(mul(proof.DPrime, proof.s_sk), mul(proof.CPrime, proof.c.neg())));\n        sigmaAuxiliaries.A_CLnPrime = add(mul(h, proof.s_nuDiff), add(mul(proof.CRnPrime, proof.s_sk), mul(proof.CLnPrime, proof.c.neg())));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(zetherAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_D, sigmaAuxiliaries.A_u, sigmaAuxiliaries.A_B, sigmaAuxiliaries.A_C, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_C00, sigmaAuxiliaries.A_CLn, sigmaAuxiliaries.A_CPrime, sigmaAuxiliaries.A_CLnPrime))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = mul(g, ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = hadamardInv(hs, zetherAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(zetherAuxiliaries.ys, zetherAuxiliaries.z), zetherAuxiliaries.twoTimesZSquared);\n        ipAuxiliaries.P = add(add(add(proof.A, mul(proof.S, zetherAuxiliaries.x)), mul(sumPoints(gs), zetherAuxiliaries.z.neg())), commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(h, proof.mu.neg()));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u_x, proof.tHat));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.o = uint256(keccak256(abi.encode(ipAuxiliaries.o, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.o; // overwrites value\n            uint256 xInv = ipAuxiliaries.o.inv();\n            ipAuxiliaries.P = add(ipAuxiliaries.P, add(mul(ipProof.ls[i], ipAuxiliaries.o.exp(2)), mul(ipProof.rs[i], xInv.exp(2))));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u_x, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, G1Point[] memory base) internal view returns (G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            G1Point[] memory inverse_fft = new G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = mul(add(mul(base_fft[j], exponent_fft[j]), mul(base_fft[j + half], exponent_fft[j + half])), compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n        return result;\n    }\n\n    function fft(G1Point[] memory input, bool inverse) internal view returns (G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        G1Point[] memory even = fft(extract(input, 0), inverse);\n        G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            G1Point memory temp = mul(odd[i], omega_run);\n            result[i] = mul(add(even[i], temp), compensation);\n            result[i + size / 2] = mul(add(even[i], neg(temp)), compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(G1Point[] memory input, uint256 parity) internal pure returns (G1Point[] memory result) {\n        result = new G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.A = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.S = G1Point(slice(arr, 64), slice(arr, 96));\n\n        proof.P = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.Q = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.U = G1Point(slice(arr, 256), slice(arr, 288));\n        proof.V = G1Point(slice(arr, 320), slice(arr, 352));\n        proof.X = G1Point(slice(arr, 384), slice(arr, 416));\n        proof.Y = G1Point(slice(arr, 448), slice(arr, 480));\n        proof.CLnG = G1Point(slice(arr, 512), slice(arr, 544));\n        proof.CRnG = G1Point(slice(arr, 576), slice(arr, 608));\n        uint256 size = (arr.length - 2336) / 192; // warning: this and the below assume that n = 6 (i.e. b* and b' are 32 bits).\n        proof.CG = new G1Point[2][](size / 2);\n        proof.yG = new G1Point[2][](size / 2);\n        for (uint256 i = 0; i < size / 2; i++) {\n            proof.CG[i][0] = G1Point(slice(arr, 640 + i * 64), slice(arr, 672 + i * 64));\n            proof.CG[i][1] = G1Point(slice(arr, 640 + size * 32 + i * 64), slice(arr, 672 + size * 32 + i * 64));\n            proof.yG[i][0] = G1Point(slice(arr, 640 + size * 64 + i * 64), slice(arr, 672 + size * 64 + i * 64));\n            proof.yG[i][1] = G1Point(slice(arr, 640 + size * 96 + i * 64), slice(arr, 672 + size * 96 + i * 64));\n        }\n        proof.DG = G1Point(slice(arr, 640 + size * 128), slice(arr, 672 + size * 128));\n        proof.gG = G1Point(slice(arr, 704 + size * 128), slice(arr, 736 + size * 128));\n\n        proof.f = new uint256[2][](size - 1);\n        for (uint256 i = 0; i < size - 1; i++) {\n            proof.f[i][0] = slice(arr, 768 + size * 128 + i * 32);\n            proof.f[i][1] = slice(arr, 736 + size * 160 + i * 32); // (size - 1) 32-byte elements above.\n        }\n\n        uint256 starting = size * 192;\n        proof.z_P = slice(arr, 704 + starting);\n        proof.z_U = slice(arr, 736 + starting);\n        proof.z_X = slice(arr, 768 + starting);\n\n        proof.CPrime = G1Point(slice(arr, 800 + starting), slice(arr, 832 + starting));\n        proof.DPrime = G1Point(slice(arr, 864 + starting), slice(arr, 896 + starting));\n        proof.CLnPrime = G1Point(slice(arr, 928 + starting), slice(arr, 960 + starting));\n        proof.CRnPrime = G1Point(slice(arr, 992 + starting), slice(arr, 1024 + starting));\n\n        proof.tCommits = [G1Point(slice(arr, 1056 + starting), slice(arr, 1088 + starting)), G1Point(slice(arr, 1120 + starting), slice(arr, 1152 + starting))];\n        proof.tHat = slice(arr, 1184 + starting);\n        proof.tauX = slice(arr, 1216 + starting);\n        proof.mu = slice(arr, 1248 + starting);\n\n        proof.c = slice(arr, 1280 + starting);\n        proof.s_sk = slice(arr, 1312 + starting);\n        proof.s_r = slice(arr, 1344 + starting);\n        proof.s_vTransfer = slice(arr, 1376 + starting);\n        proof.s_vDiff = slice(arr, 1408 + starting);\n        proof.s_nuTransfer = slice(arr, 1440 + starting);\n        proof.s_nuDiff = slice(arr, 1472 + starting);\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 1504 + starting + i * 64), slice(arr, 1536 + starting + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 1504 + starting + (n + i) * 64), slice(arr, 1536 + starting + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 1504 + starting + n * 128);\n        ipProof.b = slice(arr, 1536 + starting + n * 128);\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) { // killed a silly initialization with the 0th indexes. [0x00, 0x00] will be treated as the zero point anyway\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) {\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {},
      "links": {},
      "address": "0x244e29801A30e791f5338D5aAFFf67678d08f052",
      "transactionHash": "0xb2e1ae42248a5b5b95cb653dcbd87bafd2f012176cac30822645c40cc30b7d78"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1d870e77a8fAA172B1Dda8e3b72f295dBeb9Aef3",
      "transactionHash": "0xfeff4bb107b4a4f9d2a7187a2a5d2adb02b7d34967cbdf6f9cf534cfd3cf0dda"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-11-06T19:30:47.870Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}