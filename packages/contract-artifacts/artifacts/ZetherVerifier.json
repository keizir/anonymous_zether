{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "C",
          "type": "bytes32[2][]"
        },
        {
          "name": "D",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2][]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2][]\"},{\"name\":\"C\",\"type\":\"bytes32[2][]\"},{\"name\":\"D\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x3b410db08d55d9540e8e795474410304be456ca3a36beb8c209019344593b267\",\"urls\":[\"bzzr://f5eaba23ec02eb7c30ce30f795aa0d7b1ae29d61d8111e2955a0f505bd1b328a\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0x0d0c52e9560f2a5477cd4f1748cecb69eb1c301c5d9b32e11cc851db9da88b04\",\"urls\":[\"bzzr://00b55719106afb23d143d5a8767c3deb71877ebc16a9430b440eec4e8766e038\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610048576000357c0100000000000000000000000000000000000000000000000000000000900480631659e67d1461004d575b600080fd5b610067600480360361006291908101906149c7565b61007d565b6040516100749190614efb565b60405180910390f35b60006100876141f4565b600086519050806040519080825280602002602001820160405280156100c757816020015b6100b461423f565b8152602001906001900390816100ac5790505b5082600001819052508060405190808252806020026020018201604052801561010a57816020015b6100f761423f565b8152602001906001900390816100ef5790505b5082602001819052508060405190808252806020026020018201604052801561014d57816020015b61013a61423f565b8152602001906001900390816101325790505b5082604001819052508060405190808252806020026020018201604052801561019057816020015b61017d61423f565b8152602001906001900390816101755790505b50826080018190525060008090505b818110156103f45760408051908101604052808d838151811015156101c057fe5b9060200190602002015160006002811015156101d857fe5b60200201516001900481526020018d838151811015156101f457fe5b90602001906020020151600160028110151561020c57fe5b60200201516001900481525083600001518281518110151561022a57fe5b9060200190602002018190525060408051908101604052808c8381518110151561025057fe5b90602001906020020151600060028110151561026857fe5b60200201516001900481526020018c8381518110151561028457fe5b90602001906020020151600160028110151561029c57fe5b6020020151600190048152508360200151828151811015156102ba57fe5b9060200190602002018190525060408051908101604052808b838151811015156102e057fe5b9060200190602002015160006002811015156102f857fe5b60200201516001900481526020018b8381518110151561031457fe5b90602001906020020151600160028110151561032c57fe5b60200201516001900481525083604001518281518110151561034a57fe5b906020019060200201819052506040805190810160405280898381518110151561037057fe5b90602001906020020151600060028110151561038857fe5b602002015160019004815260200189838151811015156103a457fe5b9060200190602002015160016002811015156103bc57fe5b6020020151600190048152508360800151828151811015156103da57fe5b90602001906020020181905250808060010191505061019f565b50604080519081016040528089600060028110151561040f57fe5b602002015160019004815260200189600160028110151561042c57fe5b6020020151600190048152508260600181905250858260a0018181525050604080519081016040528086600060028110151561046457fe5b602002015160019004815260200186600160028110151561048157fe5b6020020151600190048152508260c0018190525061049d614259565b6104a6856104c3565b90506104b28382611007565b935050505098975050505050505050565b6104cb614259565b60408051908101604052806104e1846000612f4d565b81526020016104f1846020612f4d565b81525081600001819052506040805190810160405280610512846040612f4d565b8152602001610522846060612f4d565b81525081602001819052506040805190810160405280610543846080612f4d565b81526020016105538460a0612f4d565b815250816040018190525060408051908101604052806105748460c0612f4d565b81526020016105848460e0612f4d565b815250816060018190525060408051908101604052806105a684610100612f4d565b81526020016105b784610120612f4d565b815250816080018190525060408051908101604052806105d984610140612f4d565b81526020016105ea84610160612f4d565b8152508160a00181905250604080519081016040528061060c84610180612f4d565b815260200161061d846101a0612f4d565b8152508160c00181905250604080519081016040528061063f846101c0612f4d565b8152602001610650846101e0612f4d565b8152508160e00181905250600061024061086084510381151561066f57fe5b049050806040519080825280602002602001820160405280156106ac57816020015b61069961423f565b8152602001906001900390816106915790505b50826101000181905250806040519080825280602002602001820160405280156106f057816020015b6106dd61423f565b8152602001906001900390816106d55790505b508261012001819052508060405190808252806020026020018201604052801561073457816020015b61072161423f565b8152602001906001900390816107195790505b508261014001819052508060405190808252806020026020018201604052801561077857816020015b61076561423f565b81526020019060019003908161075d5790505b50826101600181905250806040519080825280602002602001820160405280156107bc57816020015b6107a961423f565b8152602001906001900390816107a15790505b508261018001819052508060405190808252806020026020018201604052801561080057816020015b6107ed61423f565b8152602001906001900390816107e55790505b50826101a001819052508060405190808252806020026020018201604052801561084457816020015b61083161423f565b8152602001906001900390816108295790505b50826101c001819052508060405190808252806020026020018201604052801561088857816020015b61087561423f565b81526020019060019003908161086d5790505b50826101e00181905250806002026040519080825280602002602001820160405280156108c45781602001602082028038833980820191505090505b5082610200018190525060008090505b81811015610c4b5760408051908101604052806108f8866040850261020001612f4d565b815260200161090e866040850261022001612f4d565b8152508361010001518281518110151561092457fe5b90602001906020020181905250604080519081016040528061094f8660408587010261020001612f4d565b81526020016109678660408587010261022001612f4d565b8152508361012001518281518110151561097d57fe5b9060200190602002018190525060408051908101604052806109ab8660408502608087026102000101612f4d565b81526020016109c68660408502608087026102200101612f4d565b815250836101400151828151811015156109dc57fe5b906020019060200201819052506040805190810160405280610a0a866040850260c087026102000101612f4d565b8152602001610a25866040850260c087026102200101612f4d565b81525083610160015182815181101515610a3b57fe5b906020019060200201819052506040805190810160405280610a6a866040850261010087026102000101612f4d565b8152602001610a86866040850261010087026102200101612f4d565b81525083610180015182815181101515610a9c57fe5b906020019060200201819052506040805190810160405280610acb866040850261014087026102000101612f4d565b8152602001610ae7866040850261014087026102200101612f4d565b815250836101a0015182815181101515610afd57fe5b906020019060200201819052506040805190810160405280610b2c866040850261018087026102000101612f4d565b8152602001610b48866040850261018087026102200101612f4d565b815250836101c0015182815181101515610b5e57fe5b906020019060200201819052506040805190810160405280610b8d86604085026101c087026102000101612f4d565b8152602001610ba986604085026101c087026102200101612f4d565b815250836101e0015182815181101515610bbf57fe5b90602001906020020181905250610be3846020830261020085026102000101612f4d565b83610200015182815181101515610bf657fe5b9060200190602002018181525050610c1b846020830261022085026102000101612f4d565b836102000151838301815181101515610c3057fe5b906020019060200201818152505080806001019150506108d4565b50600061024082029050610c63848261020001612f4d565b83610220018181525050610c7b848261022001612f4d565b83610240018181525050610c93848261024001612f4d565b836102600181815250506040805190810160405280610cb6868461026001612f4d565b8152602001610cc9868461028001612f4d565b8152508361028001819052506040805190810160405280610cee86846102a001612f4d565b8152602001610d0186846102c001612f4d565b815250836102a001819052506040805190810160405280610d2686846102e001612f4d565b8152602001610d39868461030001612f4d565b815250836102c001819052506040805190810160405280610d5e868461032001612f4d565b8152602001610d71868461034001612f4d565b815250836102e0018190525060408051908101604052806040805190810160405280610da1888661036001612f4d565b8152602001610db4888661038001612f4d565b81525081526020016040805190810160405280610dd588866103a001612f4d565b8152602001610de888866103c001612f4d565b815250815250836103000181905250610e0584826103e001612f4d565b83610320018181525050610e1d848261040001612f4d565b83610340018181525050610e35848261042001612f4d565b83610360018181525050610e4d848261044001612f4d565b83610380018181525050610e65848261046001612f4d565b836103a0018181525050610e7d848261048001612f4d565b836103c0018181525050610e9584826104a001612f4d565b836103e0018181525050610ead84826104c001612f4d565b83610400018181525050610ec584826104e001612f4d565b83610420018181525050610edd848261050001612f4d565b83610440018181525050610eef6143b7565b60008090505b6006811015610fb7576040805190810160405280610f1c8860408502876105200101612f4d565b8152602001610f348860408502876105400101612f4d565b815250826000015182600681101515610f4957fe5b60200201819052506040805190810160405280610f728860408560060102876105200101612f4d565b8152602001610f8d8860408560060102876105400101612f4d565b815250826020015182600681101515610fa257fe5b60200201819052508080600101915050610ef5565b50610fcc856080600602846105200101612f4d565b816040018181525050610fe9856080600602846105400101612f4d565b81606001818152505080846104600181905250839350505050919050565b60008061105f846000015185602001518660400151876060015188608001518960a0015160405160200161104096959493929190614e7e565b6040516020818303038152906040528051906020012060019004612f66565b90506110696143ed565b6110cc82856000015186602001518760400151886060015189608001518a60a001518b60c001518c60e001516040516020016110ad9998979695949392919061516a565b6040516020818303038152906040528051906020012060019004612f66565b81604001818152505061114481604001518561010001518661012001518761014001518861016001518961018001518a6101a001518b6101c001518c6101e001516040516020016111259998979695949392919061501a565b6040516020818303038152906040528051906020012060019004612f66565b81606001818152505060028461020001515181151561115f57fe5b04816000018181525050806000015160020a81602001818152505080600001516002026040519080825280602002602001820160405280156111bb57816020015b6111a861449c565b8152602001906001900390816111a05790505b508160c0018190525060008090505b816000015160020281101561129c57846102000151818151811015156111ec57fe5b906020019060200201518260c001518281518110151561120857fe5b90602001906020020151600160028110151561122057fe5b60200201818152505061125c8561020001518281518110151561123f57fe5b906020019060200201518360600151612f9b90919063ffffffff16565b8260c001518281518110151561126e57fe5b90602001906020020151600060028110151561128657fe5b60200201818152505080806001019150506111ca565b5060008090505b81600001516002028110156113495761133382610100015161132e6000848154811015156112cd57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508560c001518581518110151561130c57fe5b90602001906020020151600160028110151561132457fe5b6020020151612fdb565b613016565b82610100018190525080806001019150506112a3565b506113ae61136c61136286606001518460600151612fdb565b8660400151613016565b6113a98361010001516113a4600460408051908101604052908160008201548152602001600182015481525050896102200151612fdb565b613016565b61305c565b15156113ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e690614f96565b60405180910390fd5b604080519081016040528060008152602001600081525081610100018190525060008090505b8160000151600202811015611511576114fb8261010001516114f660008481548110151561143f57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250506114f16114b48760c001518781518110151561148457fe5b90602001906020020151600160028110151561149c57fe5b60200201518860600151612f9b90919063ffffffff16565b8760c00151878151811015156114c657fe5b9060200190602002015160016002811015156114de57fe5b602002015161308490919063ffffffff16565b612fdb565b613016565b8261010001819052508080600101915050611415565b5061157661153461152a86608001518460600151612fdb565b8660a00151613016565b61157183610100015161156c600460408051908101604052908160008201548152602001600182015481525050896102400151612fdb565b613016565b61305c565b15156115b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ae90614f76565b60405180910390fd5b6117306116726000808154811015156115cc57fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505061166d8460c00151856000015181518110151561161257fe5b90602001906020020151600160028110151561162a57fe5b60200201518560c00151600081518110151561164257fe5b90602001906020020151600160028110151561165a57fe5b602002015161308490919063ffffffff16565b612fdb565b61172b6000600181548110151561168557fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250506117268560c0015186600001518151811015156116cb57fe5b9060200190602002015160006002811015156116e357fe5b60200201518660c0015160008151811015156116fb57fe5b90602001906020020151600060028110151561171357fe5b602002015161308490919063ffffffff16565b612fdb565b613016565b81610100018190525061179d61175b6117518660e001518460600151612fdb565b8660c00151613016565b611798836101000151611793600460408051908101604052908160008201548152602001600182015481525050896102600151612fdb565b613016565b61305c565b15156117de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d590614f56565b60405180910390fd5b6117eb8160c001516130bb565b8160e001819052506118058160e0015186604001516131b3565b8161016001819052506118208160e0015186608001516131b3565b81610180018190525060008090505b816020015181101561191c5761189c82610120015161189788600001518481518110151561185957fe5b906020019060200201518560e001518581518110151561187557fe5b90602001906020020151600060028110151561188d57fe5b6020020151612fdb565b613016565b8261012001819052506119068261014001516119018860200151848151811015156118c357fe5b906020019060200201518560e00151858151811015156118df57fe5b9060200190602002015160006002811015156118f757fe5b6020020151612fdb565b613016565b826101400181905250808060010191505061182f565b50600181608001818152505060008090505b8160200151811015611a4b5761199c826101a0015161199784610160015160028581151561195857fe5b0481518110151561196557fe5b9060200190602002015160028581151561197b57fe5b0660028110151561198857fe5b60200201518560800151612fdb565b613016565b826101a00181905250611a07826101c00151611a028461018001516002858115156119c357fe5b048151811015156119d057fe5b906020019060200201516002858115156119e657fe5b066002811015156119f357fe5b60200201518560800151612fdb565b613016565b826101c001819052506000811115611a3e57611a348260400151836080015161308490919063ffffffff16565b8260800181815250505b808060010191505061192e565b5060018160a001818152505060008090505b8160000151811015611d8e57611aa9826101200151611aa487610100015184815181101515611a8857fe5b90602001906020020151611a9f8660a00151613469565b612fdb565b613016565b826101200181905250611af2826101400151611aed87610120015184815181101515611ad157fe5b90602001906020020151611ae88660a00151613469565b612fdb565b613016565b826101400181905250611b668261016001516000815181101515611b1257fe5b906020019060200201516000600281101515611b2a57fe5b6020020151611b6187610140015184815181101515611b4557fe5b90602001906020020151611b5c8660a00151613469565b612fdb565b613016565b8261016001516000815181101515611b7a57fe5b906020019060200201516000600281101515611b9257fe5b6020020181905250611bda826102000151611bd587610160015184815181101515611bb957fe5b90602001906020020151611bd08660a00151613469565b612fdb565b613016565b826102000181905250611c4e8261018001516000815181101515611bfa57fe5b906020019060200201516000600281101515611c1257fe5b6020020151611c4987610180015184815181101515611c2d57fe5b90602001906020020151611c448660a00151613469565b612fdb565b613016565b8261018001516000815181101515611c6257fe5b906020019060200201516000600281101515611c7a57fe5b6020020181905250611cc2826101e00151611cbd876101a0015184815181101515611ca157fe5b90602001906020020151611cb88660a00151613469565b612fdb565b613016565b826101e00181905250611d0b826101a00151611d06876101c0015184815181101515611cea57fe5b90602001906020020151611d018660a00151613469565b612fdb565b613016565b826101a00181905250611d54826101c00151611d4f876101e0015184815181101515611d3357fe5b90602001906020020151611d4a8660a00151613469565b612fdb565b613016565b826101c00181905250611d7882606001518360a0015161308490919063ffffffff16565b8260a00181815250508080600101915050611a5d565b50611daf816102000151611daa87606001518460a00151612fdb565b613016565b816102000181905250611df4816101e00151611def6002604080519081016040529081600082015481526020016001820154815250508460a00151612fdb565b613016565b816101e00181905250611e056144be565b611e588260600151866102800151876102a00151886102c00151896102e00151604051602001611e39959493929190615116565b6040516020818303038152906040528051906020012060019004612f66565b816000018181525050611e6e8160000151613495565b8160200181905250611ead8160000151604051602001611e8e9190614fd6565b6040516020818303038152906040528051906020012060019004612f66565b8160400181815250506040805190810160405280611ed96002846040015161353290919063ffffffff16565b8152602001611ef66003846040015161353290919063ffffffff16565b8152508160600181905250611f588160400151611f4a83606001516001600281101515611f1f57fe5b602002015184606001516000600281101515611f3757fe5b602002015161359f90919063ffffffff16565b61308490919063ffffffff16565b8160a0018181525050611ffb611fa18260a00151611f9360026040811515611f7c57fe5b0460020a8560a0015161308490919063ffffffff16565b612f9b90919063ffffffff16565b611fed611fd284606001516000600281101515611fba57fe5b60200201518560400151612f9b90919063ffffffff16565b611fdf85602001516135d6565b61308490919063ffffffff16565b612f9b90919063ffffffff16565b81610100018181525050612022816101000151866103200151612f9b90919063ffffffff16565b8160e001818152505060008090505b6002604081151561203e57fe5b048110156120f2576120738160020a8360600151600060028110151561206057fe5b602002015161308490919063ffffffff16565b82608001518260408110151561208557fe5b6020020181815250506120bb8160020a836060015160016002811015156120a857fe5b602002015161308490919063ffffffff16565b8260800151600260408115156120cd57fe5b0483016040811015156120dc57fe5b6020020181815250508080600101915050612031565b506121318160400151866103000151604051602001612112929190614ff1565b6040516020818303038152906040528051906020012060019004612f66565b8160c00181815250506121a4612163866103000151600060028110151561215457fe5b60200201518360c00151612fdb565b61219f876103000151600160028110151561217a57fe5b602002015161219a8560c001518660c0015161308490919063ffffffff16565b612fdb565b613016565b8161012001819052506121b561452a565b6122186121cc846101e00151886103a00151612fdb565b61221385610180015160008151811015156121e357fe5b9060200190602002015160006002811015156121fb57fe5b602002015161220e8a6103800151613469565b612fdb565b613016565b8160200181905250612272612252600260408051908101604052908160008201548152602001600182015481525050886103c00151612fdb565b61226d89606001516122688a6103800151613469565b612fdb565b613016565b81604001819052506122bd6040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508860a00151613621565b81606001819052506122fb6122db8260600151886103a00151612fdb565b6122f68960c001516122f18a6103800151613469565b612fdb565b613016565b816080018190525061233b61231a846101c00151886103c00151612fdb565b612336856101a001516123318a6103800151613469565b612fdb565b613016565b8160c0018190525061245e6123e56123c861236e6123638761020001518b6102a00151613016565b8a6103a00151612fdb565b6123c36123b0886101600151600081518110151561238857fe5b9060200190602002015160006002811015156123a057fe5b60200201518c6102800151613016565b6123be8c6103800151613469565b612fdb565b613016565b846060015160006002811015156123db57fe5b6020020151612fdb565b61245961243c61240d6124028861014001518c6102e00151613016565b8b6103a00151612fdb565b6124376124248961012001518d6102c00151613016565b6124328d6103800151613469565b612fdb565b613016565b8560600151600160028110151561244f57fe5b6020020151612fdb565b613016565b8160e001819052506125126125086124e76124d46124a06002604080519081016040529081600082015481526020016001820154815250508760e00151612fdb565b6124cf6004604080519081016040529081600082015481526020016001820154815250508c6103400151612fdb565b613016565b6124e2866101200151613691565b613016565b6125038660a001518a610380015161308490919063ffffffff16565b612fdb565b8260e00151613016565b8161010001819052506125b561254d600260408051908101604052908160008201548152602001600182015481525050886103e00151612fdb565b6125b06125648661020001518a6103a00151612fdb565b6125ab876101600151600081518110151561257b57fe5b90602001906020020151600060028110151561259357fe5b60200201516125a68c6103800151613469565b612fdb565b613016565b613016565b81610120018190525061262d6125f0600260408051908101604052908160008201548152602001600182015481525050886104000151612fdb565b6126286126078661014001518a6103a00151612fdb565b61262387610120015161261e8c6103800151613469565b612fdb565b613016565b613016565b8161014001819052506126a5612668600460408051908101604052908160008201548152602001600182015481525050886104200151612fdb565b6126a061267f896102a001518a6103a00151612fdb565b61269b8a61028001516126968c6103800151613469565b612fdb565b613016565b613016565b81610160018190525061271d6126e0600460408051908101604052908160008201548152602001600182015481525050886104400151612fdb565b6127186126f7896102e001518a6103a00151612fdb565b6127138a6102c0015161270e8c6103800151613469565b612fdb565b613016565b613016565b8161018001819052506127988260c001518260200151836040015184608001518560c001518661010001518761012001518861014001518961016001518a61018001516040516020016127799a999897969594939291906151fa565b6040516020818303038152906040528051906020012060019004612f66565b81600001818152505085610380015181600001511415156127ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127e590614f36565b60405180910390fd5b6127f66145db565b61282d826000015160405160200161280e9190614fd6565b6040516020818303038152906040528051906020012060019004612f66565b8160800181815250506128646002604080519081016040529081600082015481526020016001820154815250508260800151612fdb565b81600001819052506128e56001805480602002602001604051908101604052809291908181526020016000905b828210156128d757838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612891565b50505050846020015161370a565b816020018190525061290c61290284602001518560400151613786565b84608001516137ed565b81604001819052506129de6129c761293989600001516129348b602001518860c00151612fdb565b613016565b6129c26129b06000805480602002602001604051908101604052809291908181526020016000905b828210156129a757838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612961565b50505050613866565b6129bd8860400151613469565b612fdb565b613016565b6129d9836020015184604001516138b3565b613016565b8160600181905250612a2a8160600151612a25600460408051908101604052908160008201548152602001600182015481525050612a208b6103600151613469565b612fdb565b613016565b8160600181905250612a528160600151612a4d83600001518a6103200151612fdb565b613016565b8160600181905250612a626143b7565b876104600151905060008090505b6006811015612baf57612ae08360800151836000015183600681101515612a9357fe5b6020020151846020015184600681101515612aaa57fe5b6020020151604051602001612ac1939291906150df565b6040516020818303038152906040528051906020012060019004612f66565b83608001818152505082608001518360a0015182600681101515612b0057fe5b6020020181815250506000612b188460800151613917565b9050612b998460600151612b94612b5c866000015186600681101515612b3a57fe5b6020020151612b5760028a6080015161353290919063ffffffff16565b612fdb565b612b8f876020015187600681101515612b7157fe5b6020020151612b8a60028861353290919063ffffffff16565b612fdb565b613016565b613016565b8460600181905250508080600101915050612a70565b5060018260c001516000604081101515612bc557fe5b60200201818152505060008090505b6006811015612c4657612c1d8360a0015182600681101515612bf257fe5b60200201518460c001516000604081101515612c0a57fe5b602002015161308490919063ffffffff16565b8360c001516000604081101515612c3057fe5b6020020181815250508080600101915050612bd4565b50612c4f61463e565b612c6f8360c001516000604081101515612c6557fe5b6020020151613917565b8360c001516000604081101515612c8257fe5b60200201818152505060008090505b60026040811515612c9e57fe5b04811015612db15760008090505b6040828260019060020a02011015612da55760008160019060020a02830190508381604081101515612cda57fe5b60200201511515612d99576000612d328760a0015184600160060303600681101515612d0257fe5b60200201518860a0015185600160060303600681101515612d1f57fe5b602002015161308490919063ffffffff16565b9050612d5d818860c0015186604081101515612d4a57fe5b602002015161308490919063ffffffff16565b8760c0015183604081101515612d6f57fe5b60200201818152505060018583604081101515612d8857fe5b602002019015159081151581525050505b50806001019050612cac565b50806001019050612c91565b50612dba614662565b612dc2614662565b60008090505b6040811015612e8b57612e3583612e30600084815481101515612de757fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508960c0015185604081101515612e2657fe5b6020020151612fdb565b613016565b9250612e7c82612e77886020015184604081101515612e5057fe5b60200201518960c0015185600160400303604081101515612e6d57fe5b6020020151612fdb565b613016565b91508080600101915050612dc8565b50612e94614662565b612ee8612ebb612ea8858860400151612fdb565b612eb6858960600151612fdb565b613016565b612ee38860000151612ede89606001518a6040015161308490919063ffffffff16565b612fdb565b613016565b9050612ef886606001518261305c565b1515612f39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3090614fb6565b60405180910390fd5b60019a505050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182811515612f9357fe5b069050919050565b600081831015612fcf5782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010301612fd3565b8183035b905092915050565b612fe3614662565b604051835181526020840151602082015282604082015260408260608360075afa151561300f57600080fd5b5092915050565b61301e614662565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561305557600080fd5b5092915050565b60008160000151836000015114801561307c575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156130b057fe5b828409905092915050565b60606000600283518115156130cc57fe5b04905060008160020a90508060405190808252806020026020018201604052801561311157816020015b6130fe61449c565b8152602001906001900390816130f65790505b50925060008090505b60028110156131ab57606061313984830285600185010260018961394d565b905060008090505b8381101561319c57818181518110151561315757fe5b90602001906020020151868281518110151561316f57fe5b906020019060200201518460028110151561318657fe5b6020020181815250508080600101915050613141565b5050808060010191505061311a565b505050919050565b606060008351905060006002828115156131c957fe5b0490508060405190808252806020026020018201604052801561320657816020015b6131f361467c565b8152602001906001900390816131eb5790505b5092506060613216856000613b02565b90506060836040519080825280602002602001820160405280156132495781602001602082028038833980820191505090505b50905060008090505b600281101561345e5760008090505b858110156132c957888682880381151561327757fe5b0681518110151561328457fe5b906020019060200201518260028110151561329b57fe5b602002015183828151811015156132ae57fe5b90602001906020020181815250508080600101915050613261565b506132d382613d63565b915060608460405190808252806020026020018201604052801561331157816020015b6132fe61423f565b8152602001906001900390816132f65790505b50905060006002905061332381613917565b905060008090505b868110156133e0576133b86133b2613371888481518110151561334a57fe5b90602001906020020151888581518110151561336257fe5b90602001906020020151612fdb565b6133ad898b860181518110151561338457fe5b90602001906020020151898c870181518110151561339e57fe5b90602001906020020151612fdb565b613016565b83612fdb565b83828151811015156133c657fe5b90602001906020020181905250808060010191505061332b565b506133ec826001613b02565b915060008090505b8681101561344e57828181518110151561340a57fe5b90602001906020020151898281518110151561342257fe5b906020019060200201518560028110151561343957fe5b602002018190525080806001019150506133f4565b5050508080600101915050613252565b505050505092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b61349d6146aa565b60018160006040811015156134ae57fe5b602002018181525050818160016040811015156134c757fe5b6020020181815250506000600290505b604081101561352c576135088383600184036040811015156134f557fe5b602002015161308490919063ffffffff16565b828260408110151561351657fe5b60200201818152505080806001019150506134d7565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561359357600080fd5b80519250505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156135cb57fe5b828408905092915050565b600080600090505b604081101561361b5761360c83826040811015156135f857fe5b60200201518361359f90919063ffffffff16565b915080806001019150506135de565b50919050565b613629614662565b6136897f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001613660929190614e56565b604051602081830303815290604052805190602001206001900481151561368357fe5b06613f8b565b905092915050565b613699614662565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156136dd57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6137126146ce565b60008090505b604081101561377f5761375c848281518110151561373257fe5b90602001906020020151613757858460408110151561374d57fe5b6020020151613917565b612fdb565b828260408110151561376a57fe5b60200201819052508080600101915050613718565b5092915050565b61378e6146aa565b60008090505b60408110156137e6576137c28385836040811015156137af57fe5b602002015161308490919063ffffffff16565b82826040811015156137d057fe5b6020020181815250508080600101915050613794565b5092915050565b6137f56146aa565b60008090505b604081101561385f5761383b838260408110151561381557fe5b6020020151858360408110151561382857fe5b602002015161359f90919063ffffffff16565b828260408110151561384957fe5b60200201818152505080806001019150506137fb565b5092915050565b61386e614662565b60008090505b60408110156138ad5761389e82848381518110151561388f57fe5b90602001906020020151613016565b91508080600101915050613874565b50919050565b6138bb614662565b60008090505b604081101561391057613901826138fc86846040811015156138df57fe5b602002015186856040811015156138f257fe5b6020020151612fdb565b613016565b915080806001019150506138c1565b5092915050565b60006139468260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103613532565b9050919050565b6060600085850360020a9050806040519080825280602002602001820160405280156139885781602001602082028038833980820191505090505b509150858514156139ba57838260008151811015156139a357fe5b906020019060200201818152505081915050613afa565b6001850394506060613a0a8787613a04878a8151811015156139d857fe5b9060200190602002015160006002811015156139f057fe5b60200201518961308490919063ffffffff16565b8761394d565b90506060613a568888613a50888b815181101515613a2457fe5b906020019060200201516001600281101515613a3c57fe5b60200201518a61308490919063ffffffff16565b8861394d565b905060008090505b600284811515613a6a57fe5b04811015613af5578281815181101515613a8057fe5b906020019060200201518582815181101515613a9857fe5b90602001906020020181815250508181815181101515613ab457fe5b9060200190602002015185600286811515613acb57fe5b048301815181101515613ada57fe5b90602001906020020181815250508080600101915050613a5e565b505050505b949350505050565b60606000835190506001811415613b1c5783915050613d5d565b6000600282811515613b2a57fe5b06141515613b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b6490614f16565b60405180910390fd5b6000613bb1826310000000811515613b8157fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd61353290919063ffffffff16565b90506000600190508415613bcf57613bc882613917565b9150600290505b613bd881613917565b90506060613bf0613bea88600061402b565b87613b02565b90506060613c08613c0289600161402b565b88613b02565b905060006001905085604051908082528060200260200182016040528015613c4a57816020015b613c3761423f565b815260200190600190039081613c2f5790505b50965060008090505b600287811515613c5f57fe5b04811015613d5557613c6f614662565b613c908483815181101515613c8057fe5b9060200190602002015184612fdb565b9050613cbc613cb68684815181101515613ca657fe5b9060200190602002015183613016565b87612fdb565b8983815181101515613cca57fe5b90602001906020020181905250613d09613d038684815181101515613ceb57fe5b90602001906020020151613cfe84613691565b613016565b87612fdb565b8960028a811515613d1657fe5b048401815181101515613d2557fe5b90602001906020020181905250613d45878461308490919063ffffffff16565b9250508080600101915050613c53565b505050505050505b92915050565b60606000825190506001811415613d7d5782915050613f86565b6000600282811515613d8b57fe5b06141515613dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613dc590614f16565b60405180910390fd5b6000613e12826310000000811515613de257fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd61353290919063ffffffff16565b90506060613e29613e248660006140de565b613d63565b90506060613e40613e3b8760016140de565b613d63565b905060006001905084604051908082528060200260200182016040528015613e775781602001602082028038833980820191505090505b50955060008090505b600286811515613e8c57fe5b04811015613f7f576000613ec0838584815181101515613ea857fe5b9060200190602002015161308490919063ffffffff16565b9050613eec818684815181101515613ed457fe5b9060200190602002015161359f90919063ffffffff16565b8883815181101515613efa57fe5b9060200190602002018181525050613f32818684815181101515613f1a57fe5b90602001906020020151612f9b90919063ffffffff16565b88600289811515613f3f57fe5b048401815181101515613f4e57fe5b9060200190602002018181525050613f6f868461308490919063ffffffff16565b9250508080600101915050613e80565b5050505050505b919050565b613f93614662565b60005b60011561400e5760006003613fac856003614187565b019050613fe881600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515613fe257fe5b04614187565b915080613ff6836002614187565b1415614002575061400e565b60018401935050613f96565b604080519081016040528084815260200182815250915050919050565b60606002835181151561403a57fe5b0460405190808252806020026020018201604052801561407457816020015b61406161423f565b8152602001906001900390816140595790505b50905060008090505b6002845181151561408a57fe5b048110156140d757838382600202018151811015156140a557fe5b9060200190602002015182828151811015156140bd57fe5b90602001906020020181905250808060010191505061407d565b5092915050565b6060600283518115156140ed57fe5b0460405190808252806020026020018201604052801561411c5781602001602082028038833980820191505090505b50905060008090505b6002845181151561413257fe5b04811015614180578383826002020181518110151561414d57fe5b90602001906020020151828281518110151561416557fe5b90602001906020020181815250508080600101915050614125565b5092915050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156141e857600080fd5b80519250505092915050565b6101206040519081016040528060608152602001606081526020016060815260200161421e61423f565b8152602001606081526020016000815260200161423961423f565b81525090565b604080519081016040528060008152602001600081525090565b6109806040519081016040528061426e61423f565b815260200161427b61423f565b815260200161428861423f565b815260200161429561423f565b81526020016142a261423f565b81526020016142af61423f565b81526020016142bc61423f565b81526020016142c961423f565b815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200161432a61423f565b815260200161433761423f565b815260200161434461423f565b815260200161435161423f565b815260200161435e61467c565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016143b16146fd565b81525090565b610340604051908101604052806143cc614733565b81526020016143d9614733565b815260200160008152602001600081525090565b61030060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081526020016060815260200161443a61423f565b815260200161444761423f565b815260200161445461423f565b8152602001606081526020016060815260200161446f61423f565b815260200161447c61423f565b815260200161448961423f565b815260200161449661423f565b81525090565b6040805190810160405280600290602082028038833980820191505090505090565b61114060405190810160405280600081526020016144da614762565b8152602001600081526020016144ee61449c565b81526020016144fb614762565b81526020016000815260200160008152602001600081526020016000815260200161452461423f565b81525090565b610320604051908101604052806000815260200161454661423f565b815260200161455361423f565b815260200161456061423f565b815260200161456d61423f565b815260200161457a61423f565b815260200161458761423f565b815260200161459461423f565b81526020016145a161423f565b81526020016145ae61423f565b81526020016145bb61423f565b81526020016145c861423f565b81526020016145d561423f565b81525090565b612160604051908101604052806145f061423f565b81526020016145fd614786565b815260200161460a614762565b815260200161461761423f565b81526020016000815260200161462b6147b5565b8152602001614638614762565b81525090565b61080060405190810160405280604090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b61469461423f565b81526020019060019003908161468c5790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6146e761423f565b8152602001906001900390816146df5790505090565b61034060405190810160405280614712614733565b815260200161471f614733565b815260200160008152602001600081525090565b610180604051908101604052806006905b61474c61423f565b8152602001906001900390816147445790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b61479f61423f565b8152602001906001900390816147975790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b600082601f83011215156147eb57600080fd5b81356147fe6147f9826152c6565b615299565b9150818183526020840193506020810190508385604084028201111561482357600080fd5b60005b838110156148535781614839888261485d565b845260208401935060408301925050600181019050614826565b5050505092915050565b600082601f830112151561487057600080fd5b600261488361487e826152ee565b615299565b9150818385602084028201111561489957600080fd5b60005b838110156148c957816148af8882614949565b84526020840193506020830192505060018101905061489c565b5050505092915050565b600082601f83011215156148e657600080fd5b60026148f96148f482615310565b615299565b9150818385602084028201111561490f57600080fd5b60005b8381101561493f57816149258882614949565b845260208401935060208301925050600181019050614912565b5050505092915050565b600061495582356153fe565b905092915050565b600082601f830112151561497057600080fd5b813561498361497e82615332565b615299565b9150808252602083016020830185838301111561499f57600080fd5b6149aa838284615412565b50505092915050565b60006149bf8235615408565b905092915050565b600080600080600080600080610140898b0312156149e457600080fd5b600089013567ffffffffffffffff8111156149fe57600080fd5b614a0a8b828c016147d8565b985050602089013567ffffffffffffffff811115614a2757600080fd5b614a338b828c016147d8565b975050604089013567ffffffffffffffff811115614a5057600080fd5b614a5c8b828c016147d8565b9650506060614a6d8b828c016148d3565b95505060a089013567ffffffffffffffff811115614a8a57600080fd5b614a968b828c016147d8565b94505060c0614aa78b828c016149b3565b93505060e0614ab88b828c016148d3565b92505061012089013567ffffffffffffffff811115614ad657600080fd5b614ae28b828c0161495d565b9150509295985092959890939650565b6000614afe8383614dc3565b60408301905092915050565b614b1381615375565b614b1d81846153b0565b9250614b288261535e565b60005b82811015614b5657614b3e858351614af2565b9450614b4982615396565b9150600181019050614b2b565b5050505050565b6000614b6882615380565b614b7281856153bb565b9350614b7d83615368565b60005b82811015614bab57614b93868351614af2565b9550614b9e826153a3565b9150600181019050614b80565b50849250505092915050565b614bc0816153e8565b82525050565b6000614bd18261538b565b614bdb81856153dd565b9350614beb818560208601615421565b80840191505092915050565b6000614c04601f836153cc565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b6000614c44602a836153cc565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b6000614caa601d836153cc565b91507f5265636f76657279206661696c75726520666f7220465e77202a20452e0000006000830152602082019050919050565b6000614cea601d836153cc565b91507f5265636f76657279206661696c75726520666f7220435e77202a20442e0000006000830152602082019050919050565b6000614d2a601d836153cc565b91507f5265636f76657279206661696c75726520666f7220425e77202a20412e0000006000830152602082019050919050565b6000614d6a6025836153cc565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b604082016000820151614dd96000850182614e21565b506020820151614dec6020850182614e21565b50505050565b604082016000820151614e086000850182614e21565b506020820151614e1b6020850182614e21565b50505050565b614e2a816153f4565b82525050565b614e39816153f4565b82525050565b614e50614e4b826153f4565b615454565b82525050565b6000614e628285614bc6565b9150614e6e8284614e3f565b6020820191508190509392505050565b600060e0820190508181036000830152614e988189614b5d565b90508181036020830152614eac8188614b5d565b90508181036040830152614ec08187614b5d565b9050614ecf6060830186614df2565b81810360a0830152614ee18185614b5d565b9050614ef060c0830184614e30565b979650505050505050565b6000602082019050614f106000830184614bb7565b92915050565b60006020820190508181036000830152614f2f81614bf7565b9050919050565b60006020820190508181036000830152614f4f81614c37565b9050919050565b60006020820190508181036000830152614f6f81614c9d565b9050919050565b60006020820190508181036000830152614f8f81614cdd565b9050919050565b60006020820190508181036000830152614faf81614d1d565b9050919050565b60006020820190508181036000830152614fcf81614d5d565b9050919050565b6000602082019050614feb6000830184614e30565b92915050565b600060a0820190506150066000830185614e30565b6150136020830184614b0a565b9392505050565b600061012082019050615030600083018c614e30565b8181036020830152615042818b614b5d565b90508181036040830152615056818a614b5d565b9050818103606083015261506a8189614b5d565b9050818103608083015261507e8188614b5d565b905081810360a08301526150928187614b5d565b905081810360c08301526150a68186614b5d565b905081810360e08301526150ba8185614b5d565b90508181036101008301526150cf8184614b5d565b90509a9950505050505050505050565b600060a0820190506150f46000830186614e30565b6151016020830185614df2565b61510e6060830184614df2565b949350505050565b60006101208201905061512c6000830188614e30565b6151396020830187614df2565b6151466060830186614df2565b61515360a0830185614df2565b61516060e0830184614df2565b9695505050505050565b600061022082019050615180600083018c614e30565b61518d602083018b614df2565b61519a606083018a614df2565b6151a760a0830189614df2565b6151b460e0830188614df2565b6151c2610120830187614df2565b6151d0610160830186614df2565b6151de6101a0830185614df2565b6151ec6101e0830184614df2565b9a9950505050505050505050565b600061026082019050615210600083018d614e30565b61521d602083018c614df2565b61522a606083018b614df2565b61523760a083018a614df2565b61524460e0830189614df2565b615252610120830188614df2565b615260610160830187614df2565b61526e6101a0830186614df2565b61527c6101e0830185614df2565b61528a610220830184614df2565b9b9a5050505050505050505050565b6000604051905081810181811067ffffffffffffffff821117156152bc57600080fd5b8060405250919050565b600067ffffffffffffffff8211156152dd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561530557600080fd5b602082029050919050565b600067ffffffffffffffff82111561532757600080fd5b602082029050919050565b600067ffffffffffffffff82111561534957600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000602082019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561543f578082015181840152602081019050615424565b8381111561544e576000848401525b50505050565b600081905091905056fea265627a7a72305820c3f09a7f54eabf5ef0d4984f25fe6de9c1028704e8cbe6f284e9cef4274abf2d6c6578706572696d656e74616cf50037",
  "sourceMap": "81:28088:5:-;;;1724:208;8:9:-1;5:2;;;30:1;27;20:12;5:2;1724:208:5;1759:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1755:1;:16;;;;;;;;;;;;;;;;;;;1785:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1781:1;:16;;;;;;;;;;;;;;;;;;;1812:9;1824:1;1812:13;;1807:119;162:2;1827:1;:5;1807:119;;;1853:2;1861:15;;;;;;;;;;;;;;;;;;;1874:1;1861:7;;;:15;;;:::i;:::-;1853:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1853:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:2;1899:15;;;;;;;;;;;;;;;;;;;1912:1;1899:7;;;:15;;;:::i;:::-;1891:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1891:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:3;;;;;;;1807:119;;;;81:28088;;27813:167;27874:14;;:::i;:::-;27907:66;229:77;27950:5;27933:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;27933:23:5;;;27923:34;;;;;;27915:43;;;:57;;;;;;;;27907:7;;;:66;;;:::i;:::-;27900:73;;27813:167;;;:::o;27986:181::-;28058:14;;:::i;:::-;28091:69;229:77;28134:5;28141:1;28117:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28117:26:5;;;28107:37;;;;;;28099:46;;;:60;;;;;;;;28091:7;;;:69;;;:::i;:::-;28084:76;;27986:181;;;;:::o;27358:449::-;27412:14;;:::i;:::-;27438:9;27457:311;27464:4;27457:311;;;27484:16;27523:1;27503:17;27512:4;27518:1;27503:8;;;:17;;;:::i;:::-;:21;27484:40;;27610:41;27619:8;27649:1;27644;229:77;27630:15;27629:21;;;;;;;;27610:8;;;:41;;;:::i;:::-;27606:45;;27687:8;27669:14;27678:1;27681;27669:8;;;:14;;;:::i;:::-;:26;27665:70;;;27715:5;;;27665:70;27756:1;27748:9;;;;27457:311;;;;27784:16;;;;;;;;;27792:4;27784:16;;;;27798:1;27784:16;;;27777:23;;;27358:449;;;:::o;26742:610::-;26815:14;26866:13;229:77;26866:27;;26941:4;26935:11;26969:4;26966:1;26959:15;27008:4;27001;26998:1;26994:12;26987:26;27047:4;27040;27037:1;27033:12;27026:26;27086:4;27079;27076:1;27072:12;27065:26;27125:8;27118:4;27115:1;27111:12;27104:30;27168:5;27161:4;27158:1;27154:12;27147:27;27231:4;27228:1;27222:4;27219:1;27213:4;27208:3;27197:39;27190:47;27187:2;;;27289:1;27286;27279:12;27187:2;27334:1;27328:8;27318:18;;26912:434;;;;;;:::o;81:28088::-;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:28088:5;;;;;;;",
  "deployedSourceMap": "81:28088:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:28088:5;;;;;;;;;;;;;;;;;;;;1938:1109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2156:4;2172:32;;:::i;:::-;2214:12;2229:1;:8;2214:23;;2278:4;2264:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2248:9;:13;;:35;;;;2323:4;2309:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2293:9;:13;;:35;;;;2366:4;2352:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2338:9;:11;;:33;;;;2409:4;2395:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2381:9;:11;;:33;;;;2429:9;2441:1;2429:13;;2424:354;2448:4;2444:1;:8;2424:354;;;2492:47;;;;;;;;;2508:3;2512:1;2508:6;;;;;;;;;;;;;;;;;;2515:1;2508:9;;;;;;;;;;;;;2500:18;;;2492:47;;;;2528:3;2532:1;2528:6;;;;;;;;;;;;;;;;;;2535:1;2528:9;;;;;;;;;;;;;2520:18;;;2492:47;;;2473:9;:13;;;2487:1;2473:16;;;;;;;;;;;;;;;;;:66;;;;2572:47;;;;;;;;;2588:3;2592:1;2588:6;;;;;;;;;;;;;;;;;;2595:1;2588:9;;;;;;;;;;;;;2580:18;;;2572:47;;;;2608:3;2612:1;2608:6;;;;;;;;;;;;;;;;;;2615:1;2608:9;;;;;;;;;;;;;2600:18;;;2572:47;;;2553:9;:13;;;2567:1;2553:16;;;;;;;;;;;;;;;;;:66;;;;2650:43;;;;;;;;;2666:1;2668;2666:4;;;;;;;;;;;;;;;;;;2671:1;2666:7;;;;;;;;;;;;;2658:16;;;2650:43;;;;2684:1;2686;2684:4;;;;;;;;;;;;;;;;;;2689:1;2684:7;;;;;;;;;;;;;2676:16;;;2650:43;;;2633:9;:11;;;2645:1;2633:14;;;;;;;;;;;;;;;;;:60;;;;2724:43;;;;;;;;;2740:1;2742;2740:4;;;;;;;;;;;;;;;;;;2745:1;2740:7;;;;;;;;;;;;;2732:16;;;2724:43;;;;2758:1;2760;2758:4;;;;;;;;;;;;;;;;;;2763:1;2758:7;;;;;;;;;;;;;2750:16;;;2724:43;;;2707:9;:11;;;2719:1;2707:14;;;;;;;;;;;;;;;;;:60;;;;2454:3;;;;;;;2424:354;;;;2801:37;;;;;;;;;2817:1;2819;2817:4;;;;;;;;;;;;;2809:13;;;2801:37;;;;2832:1;2834;2832:4;;;;;;;;;;;;;2824:13;;;2801:37;;;2787:9;:11;;:51;;;;2866:5;2848:9;:15;;:23;;;;;2895:37;;;;;;;;;2911:1;2913;2911:4;;;;;;;;;;;;;2903:13;;;2895:37;;;;2926:1;2928;2926:4;;;;;;;;;;;;;2918:13;;;2895:37;;;2881:9;:11;;:51;;;;2942:30;;:::i;:::-;2975:18;2987:5;2975:11;:18::i;:::-;2942:51;;3010:30;3017:9;3028:11;3010:6;:30::i;:::-;3003:37;;;;;1938:1109;;;;;;;;;;:::o;20007:3712::-;20069:24;;:::i;:::-;20116:38;;;;;;;;;20124:13;20130:3;20135:1;20124:5;:13::i;:::-;20116:38;;;;20139:14;20145:3;20150:2;20139:5;:14::i;:::-;20116:38;;;20105:5;:8;;:49;;;;20175:39;;;;;;;;;20183:14;20189:3;20194:2;20183:5;:14::i;:::-;20175:39;;;;20199:14;20205:3;20210:2;20199:5;:14::i;:::-;20175:39;;;20164:5;:8;;:50;;;;20234:41;;;;;;;;;20242:15;20248:3;20253;20242:5;:15::i;:::-;20234:41;;;;20259:15;20265:3;20270;20259:5;:15::i;:::-;20234:41;;;20224:5;:7;;:51;;;;20295:41;;;;;;;;;20303:15;20309:3;20314;20303:5;:15::i;:::-;20295:41;;;;20320:15;20326:3;20331;20320:5;:15::i;:::-;20295:41;;;20285:5;:7;;:51;;;;20356:41;;;;;;;;;20364:15;20370:3;20375;20364:5;:15::i;:::-;20356:41;;;;20381:15;20387:3;20392;20381:5;:15::i;:::-;20356:41;;;20346:5;:7;;:51;;;;20417:41;;;;;;;;;20425:15;20431:3;20436;20425:5;:15::i;:::-;20417:41;;;;20442:15;20448:3;20453;20442:5;:15::i;:::-;20417:41;;;20407:5;:7;;:51;;;;20478:41;;;;;;;;;20486:15;20492:3;20497;20486:5;:15::i;:::-;20478:41;;;;20503:15;20509:3;20514;20503:5;:15::i;:::-;20478:41;;;20468:5;:7;;:51;;;;20539:41;;;;;;;;;20547:15;20553:3;20558;20547:5;:15::i;:::-;20539:41;;;;20564:15;20570:3;20575;20564:5;:15::i;:::-;20539:41;;;20529:5;:7;;:51;;;;20591:9;20625:3;20617:4;20604:3;:10;:17;20603:25;;;;;;;;20591:37;;20665:1;20651:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20638:5;:10;;:29;;;;20704:1;20690:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20677:5;:10;;:29;;;;20743:1;20729:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20716:5;:10;;:29;;;;20780:1;20766:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20755:5;:8;;:27;;;;20819:1;20805:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20792:5;:10;;:29;;;;20856:1;20842:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20831:5;:8;;:27;;;;20895:1;20881:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20868:5;:10;;:29;;;;20934:1;20920:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20907:5;:10;;:29;;;;20974:1;20970;:5;20956:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20956:20:5;;;;20946:5;:7;;:30;;;;20991:9;21003:1;20991:13;;20986:1009;21010:1;21006;:5;20986:1009;;;21048:59;;;;;;;;;21056:24;21062:3;21077:2;21073:1;:6;21067:3;:12;21056:5;:24::i;:::-;21048:59;;;;21082:24;21088:3;21103:2;21099:1;:6;21093:3;:12;21082:5;:24::i;:::-;21048:59;;;21032:5;:10;;;21043:1;21032:13;;;;;;;;;;;;;;;;;:75;;;;21137:71;;;;;;;;;21145:30;21151:3;21172:2;21167:1;21163;:5;21162:12;21156:3;:18;21145:5;:30::i;:::-;21137:71;;;;21177:30;21183:3;21204:2;21199:1;21195;:5;21194:12;21188:3;:18;21177:5;:30::i;:::-;21137:71;;;21121:5;:10;;;21132:1;21121:13;;;;;;;;;;;;;;;;;:87;;;;21238:79;;;;;;;;;21246:34;21252:3;21277:2;21273:1;:6;21267:3;21263:1;:7;21257:3;:13;:22;21246:5;:34::i;:::-;21238:79;;;;21282:34;21288:3;21313:2;21309:1;:6;21303:3;21299:1;:7;21293:3;:13;:22;21282:5;:34::i;:::-;21238:79;;;21222:5;:10;;;21233:1;21222:13;;;;;;;;;;;;;;;;;:95;;;;21345:79;;;;;;;;;21353:34;21359:3;21384:2;21380:1;:6;21374:3;21370:1;:7;21364:3;:13;:22;21353:5;:34::i;:::-;21345:79;;;;21389:34;21395:3;21420:2;21416:1;:6;21410:3;21406:1;:7;21400:3;:13;:22;21389:5;:34::i;:::-;21345:79;;;21331:5;:8;;;21340:1;21331:11;;;;;;;;;;;;;;;;;:93;;;;21454:79;;;;;;;;;21462:34;21468:3;21493:2;21489:1;:6;21483:3;21479:1;:7;21473:3;:13;:22;21462:5;:34::i;:::-;21454:79;;;;21498:34;21504:3;21529:2;21525:1;:6;21519:3;21515:1;:7;21509:3;:13;:22;21498:5;:34::i;:::-;21454:79;;;21438:5;:10;;;21449:1;21438:13;;;;;;;;;;;;;;;;;:95;;;;21561:79;;;;;;;;;21569:34;21575:3;21600:2;21596:1;:6;21590:3;21586:1;:7;21580:3;:13;:22;21569:5;:34::i;:::-;21561:79;;;;21605:34;21611:3;21636:2;21632:1;:6;21626:3;21622:1;:7;21616:3;:13;:22;21605:5;:34::i;:::-;21561:79;;;21547:5;:8;;;21556:1;21547:11;;;;;;;;;;;;;;;;;:93;;;;21670:79;;;;;;;;;21678:34;21684:3;21709:2;21705:1;:6;21699:3;21695:1;:7;21689:3;:13;:22;21678:5;:34::i;:::-;21670:79;;;;21714:34;21720:3;21745:2;21741:1;:6;21735:3;21731:1;:7;21725:3;:13;:22;21714:5;:34::i;:::-;21670:79;;;21654:5;:10;;;21665:1;21654:13;;;;;;;;;;;;;;;;;:95;;;;21779:79;;;;;;;;;21787:34;21793:3;21818:2;21814:1;:6;21808:3;21804:1;:7;21798:3;:13;:22;21787:5;:34::i;:::-;21779:79;;;;21823:34;21829:3;21854:2;21850:1;:6;21844:3;21840:1;:7;21834:3;:13;:22;21823:5;:34::i;:::-;21779:79;;;21763:5;:10;;;21774:1;21763:13;;;;;;;;;;;;;;;;;:95;;;;21885:34;21891:3;21916:2;21912:1;:6;21906:3;21902:1;:7;21896:3;:13;:22;21885:5;:34::i;:::-;21872:5;:7;;;21880:1;21872:10;;;;;;;;;;;;;;;;;:47;;;;;21950:34;21956:3;21981:2;21977:1;:6;21971:3;21967:1;:7;21961:3;:13;:22;21950:5;:34::i;:::-;21933:5;:7;;;21945:1;21941;:5;21933:14;;;;;;;;;;;;;;;;;:51;;;;;21013:3;;;;;;;20986:1009;;;;22004:16;22027:3;22023:1;:7;22004:26;;22052;22058:3;22069:8;22063:3;:14;22052:5;:26::i;:::-;22040:5;:9;;:38;;;;;22100:26;22106:3;22117:8;22111:3;:14;22100:5;:26::i;:::-;22088:5;:9;;:38;;;;;22148:26;22154:3;22165:8;22159:3;:14;22148:5;:26::i;:::-;22136:5;:9;;:38;;;;;22200:63;;;;;;;;;22208:26;22214:3;22225:8;22219:3;:14;22208:5;:26::i;:::-;22200:63;;;;22236:26;22242:3;22253:8;22247:3;:14;22236:5;:26::i;:::-;22200:63;;;22185:5;:12;;:78;;;;22288:63;;;;;;;;;22296:26;22302:3;22313:8;22307:3;:14;22296:5;:26::i;:::-;22288:63;;;;22324:26;22330:3;22341:8;22335:3;:14;22324:5;:26::i;:::-;22288:63;;;22273:5;:12;;:78;;;;22378:63;;;;;;;;;22386:26;22392:3;22403:8;22397:3;:14;22386:5;:26::i;:::-;22378:63;;;;22414:26;22420:3;22431:8;22425:3;:14;22414:5;:26::i;:::-;22378:63;;;22361:5;:14;;:80;;;;22468:63;;;;;;;;;22476:26;22482:3;22493:8;22487:3;:14;22476:5;:26::i;:::-;22468:63;;;;22504:26;22510:3;22521:8;22515:3;:14;22504:5;:26::i;:::-;22468:63;;;22451:5;:14;;:80;;;;22542:147;;;;;;;;;22560:63;;;;;;;;;22568:26;22574:3;22585:8;22579:3;:14;22568:5;:26::i;:::-;22560:63;;;;22596:26;22602:3;22613:8;22607:3;:14;22596:5;:26::i;:::-;22560:63;;;22542:147;;;;22625:63;;;;;;;;;22633:26;22639:3;22650:8;22644:3;:14;22633:5;:26::i;:::-;22625:63;;;;22661:26;22667:3;22678:8;22672:3;:14;22661:5;:26::i;:::-;22625:63;;;22542:147;;;:5;:14;;:147;;;;22712:26;22718:3;22729:8;22723:3;:14;22712:5;:26::i;:::-;22699:5;:10;;:39;;;;;22761:27;22767:3;22779:8;22772:4;:15;22761:5;:27::i;:::-;22748:5;:10;;:40;;;;;22809:27;22815:3;22827:8;22820:4;:15;22809:5;:27::i;:::-;22798:5;:8;;:38;;;;;22857:27;22863:3;22875:8;22868:4;:15;22857:5;:27::i;:::-;22847:5;:7;;:37;;;;;22907:27;22913:3;22925:8;22918:4;:15;22907:5;:27::i;:::-;22894:5;:10;;:40;;;;;22956:27;22962:3;22974:8;22967:4;:15;22956:5;:27::i;:::-;22944:5;:9;;:39;;;;;23013:27;23019:3;23031:8;23024:4;:15;23013:5;:27::i;:::-;22993:5;:17;;:47;;;;;23066:27;23072:3;23084:8;23077:4;:15;23066:5;:27::i;:::-;23050:5;:13;;:43;;;;;23124:27;23130:3;23142:8;23135:4;:15;23124:5;:27::i;:::-;23103:5;:18;;:48;;;;;23178:27;23184:3;23196:8;23189:4;:15;23178:5;:27::i;:::-;23161:5;:14;;:44;;;;;23216:32;;:::i;:::-;23263:9;23275:1;23263:13;;23258:281;191:1;23278;:5;23258:281;;;23320:83;;;;;;;;;23328:36;23334:3;23361:2;23357:1;:6;23346:8;23339:4;:15;:24;23328:5;:36::i;:::-;23320:83;;;;23366:36;23372:3;23399:2;23395:1;:6;23384:8;23377:4;:15;:24;23366:5;:36::i;:::-;23320:83;;;23304:7;:10;;;23315:1;23304:13;;;;;;;;;;;;:99;;;;23433:95;;;;;;;;;23441:42;23447:3;23480:2;23475:1;191;23471:5;23470:12;23459:8;23452:4;:15;:30;23441:5;:42::i;:::-;23433:95;;;;23485:42;23491:3;23524:2;23519:1;191;23515:5;23514:12;23503:8;23496:4;:15;:30;23485:5;:42::i;:::-;23433:95;;;23417:7;:10;;;23428:1;23417:13;;;;;;;;;;;;:111;;;;23285:3;;;;;;;23258:281;;;;23560:37;23566:3;23593;191:1;23589:7;23578:8;23571:4;:15;:25;23560:5;:37::i;:::-;23548:7;:9;;:49;;;;;23619:37;23625:3;23652;191:1;23648:7;23637:8;23630:4;:15;:25;23619:5;:37::i;:::-;23607:7;:9;;:49;;;;;23682:7;23666:5;:13;;:23;;;;23707:5;23700:12;;;;;20007:3712;;;:::o;4383:10477::-;4482:4;4498:21;4522:122;4551:9;:13;;;4566:9;:13;;;4581:9;:11;;;4594:9;:11;;;4607:9;:11;;;4620:9;:15;;;4540:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4540:96:5;;;4530:107;;;;;;4522:116;;;:120;:122::i;:::-;4498:146;;4655:38;;:::i;:::-;4723:125;4752:13;4767:5;:8;;;4777:5;:8;;;4787:5;:7;;;4796:5;:7;;;4805:5;:7;;;4814:5;:7;;;4823:5;:7;;;4832:5;:7;;;4741:99;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4741:99:5;;;4731:110;;;;;;4723:119;;;:123;:125::i;:::-;4703:15;:17;;:145;;;;;4878:147;4907:15;:17;;;4926:5;:10;;;4938:5;:10;;;4950:5;:10;;;4962:5;:8;;;4972:5;:10;;;4984:5;:8;;;4994:5;:10;;;5006:5;:10;;;4896:121;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4896:121:5;;;4886:132;;;;;;4878:141;;;:145;:147::i;:::-;4858:15;:17;;:167;;;;;5072:1;5055:5;:7;;;:14;:18;;;;;;;;5035:15;:17;;:38;;;;;5108:15;:17;;;5103:1;:22;5083:15;:17;;:42;;;;;5176:15;:17;;;5172:1;:21;5155:39;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5135:15;:17;;:59;;;;5209:9;5221:1;5209:13;;5204:186;5232:15;:17;;;5228:1;:21;5224:1;:25;5204:186;;;5296:5;:7;;;5304:1;5296:10;;;;;;;;;;;;;;;;;;5270:15;:17;;;5288:1;5270:20;;;;;;;;;;;;;;;;;;5291:1;5270:23;;;;;;;;;;;;:36;;;;;5346:33;5368:5;:7;;;5376:1;5368:10;;;;;;;;;;;;;;;;;;5346:15;:17;;;:21;;:33;;;;:::i;:::-;5320:15;:17;;;5338:1;5320:20;;;;;;;;;;;;;;;;;;5341:1;5320:23;;;;;;;;;;;;:59;;;;;5251:3;;;;;;;5204:186;;;;5405:9;5417:1;5405:13;;5400:162;5428:15;:17;;;5424:1;:21;5420:1;:25;5400:162;;;5489:62;5493:15;:20;;;5515:35;5519:2;5522:1;5519:5;;;;;;;;;;;;;;;;;;;;5515:35;;;;;;;;;;;;;;;;;;;;;;;;;;5526:15;:17;;;5544:1;5526:20;;;;;;;;;;;;;;;;;;5547:1;5526:23;;;;;;;;;;;;;5515:3;:35::i;:::-;5489:3;:62::i;:::-;5466:15;:20;;:85;;;;5447:3;;;;;;;5400:162;;;;5579:95;5582:45;5586:31;5590:5;:7;;;5599:15;:17;;;5586:3;:31::i;:::-;5619:5;:7;;;5582:3;:45::i;:::-;5629:44;5633:15;:20;;;5655:17;5659:1;5655:17;;;;;;;;;;;;;;;;;;;;;;;;;;5662:5;:9;;;5655:3;:17::i;:::-;5629:3;:44::i;:::-;5579:2;:95::i;:::-;5571:137;;;;;;;;;;;;;;;;;;;;;;;;5742:13;;;;;;;;;5750:1;5742:13;;;;5753:1;5742:13;;;5719:15;:20;;:36;;;;5770:9;5782:1;5770:13;;5765:260;5793:15;:17;;;5789:1;:21;5785:1;:25;5765:260;;;5900:114;5904:15;:20;;;5926:87;5930:2;5933:1;5930:5;;;;;;;;;;;;;;;;;;;;5926:87;;;;;;;;;;;;;;;;;;;;;;;;;;5937:75;5965:46;5987:15;:17;;;6005:1;5987:20;;;;;;;;;;;;;;;;;;6008:1;5987:23;;;;;;;;;;;;;5965:15;:17;;;:21;;:46;;;;:::i;:::-;5937:15;:17;;;5955:1;5937:20;;;;;;;;;;;;;;;;;;5958:1;5937:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;5926:3;:87::i;:::-;5900:3;:114::i;:::-;5877:15;:20;;:137;;;;5812:3;;;;;;;5765:260;;;;6042:95;6045:45;6049:31;6053:5;:7;;;6062:15;:17;;;6049:3;:31::i;:::-;6082:5;:7;;;6045:3;:45::i;:::-;6092:44;6096:15;:20;;;6118:17;6122:1;6118:17;;;;;;;;;;;;;;;;;;;;;;;;;;6125:5;:9;;;6118:3;:17::i;:::-;6092:3;:44::i;:::-;6042:2;:95::i;:::-;6034:137;;;;;;;;;;;;;;;;;;;;;;;;6205:167;6209:80;6213:2;6216:1;6213:5;;;;;;;;;;;;;;;;;;;;6209:80;;;;;;;;;;;;;;;;;;;;;;;;;;6220:68;6248:15;:17;;;6266:15;:17;;;6248:36;;;;;;;;;;;;;;;;;;6285:1;6248:39;;;;;;;;;;;;;6220:15;:17;;;6238:1;6220:20;;;;;;;;;;;;;;;;;;6241:1;6220:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;6209:3;:80::i;:::-;6291;6295:2;6298:1;6295:5;;;;;;;;;;;;;;;;;;;;6291:80;;;;;;;;;;;;;;;;;;;;;;;;;;6302:68;6330:15;:17;;;6348:15;:17;;;6330:36;;;;;;;;;;;;;;;;;;6367:1;6330:39;;;;;;;;;;;;;6302:15;:17;;;6320:1;6302:20;;;;;;;;;;;;;;;;;;6323:1;6302:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;6291:3;:80::i;:::-;6205:3;:167::i;:::-;6182:15;:20;;:190;;;;6390:95;6393:45;6397:31;6401:5;:7;;;6410:15;:17;;;6397:3;:31::i;:::-;6430:5;:7;;;6393:3;:45::i;:::-;6440:44;6444:15;:20;;;6466:17;6470:1;6466:17;;;;;;;;;;;;;;;;;;;;;;;;;;6473:5;:9;;;6466:3;:17::i;:::-;6440:3;:44::i;:::-;6390:2;:95::i;:::-;6382:137;;;;;;;;;;;;;;;;;;;;;;;;6550:38;6570:15;:17;;;6550:19;:38::i;:::-;6530:15;:17;;:58;;;;6620:52;6641:15;:17;;;6660:9;:11;;;6620:20;:52::i;:::-;6599:15;:18;;:73;;;;6703:52;6724:15;:17;;;6743:9;:11;;;6703:20;:52::i;:::-;6682:15;:18;;:73;;;;6770:9;6782:1;6770:13;;6765:279;6789:15;:17;;;6785:1;:21;6765:279;;;6850:73;6854:15;:20;;;6876:46;6880:9;:13;;;6894:1;6880:16;;;;;;;;;;;;;;;;;;6898:15;:17;;;6916:1;6898:20;;;;;;;;;;;;;;;;;;6919:1;6898:23;;;;;;;;;;;;;6876:3;:46::i;:::-;6850:3;:73::i;:::-;6827:15;:20;;:96;;;;6960:73;6964:15;:20;;;6986:46;6990:9;:13;;;7004:1;6990:16;;;;;;;;;;;;;;;;;;7008:15;:17;;;7026:1;7008:20;;;;;;;;;;;;;;;;;;7029:1;7008:23;;;;;;;;;;;;;6986:3;:46::i;:::-;6960:3;:73::i;:::-;6937:15;:20;;:96;;;;6808:3;;;;;;;6765:279;;;;7076:1;7053:15;:20;;:24;;;;;7092:9;7104:1;7092:13;;7087:428;7111:15;:17;;;7107:1;:21;7087:428;;;7172:86;7176:15;:20;;;7198:59;7202:15;:18;;;7225:1;7221;:5;;;;;;;;7202:25;;;;;;;;;;;;;;;;;;7232:1;7228;:5;;;;;;;;7202:32;;;;;;;;;;;;;7236:15;:20;;;7198:3;:59::i;:::-;7172:3;:86::i;:::-;7149:15;:20;;:109;;;;7295:86;7299:15;:20;;;7321:59;7325:15;:18;;;7348:1;7344;:5;;;;;;;;7325:25;;;;;;;;;;;;;;;;;;7355:1;7351;:5;;;;;;;;7325:32;;;;;;;;;;;;;7359:15;:20;;;7321:3;:59::i;:::-;7295:3;:86::i;:::-;7272:15;:20;;:109;;;;7403:1;7399;:5;7395:110;;;7447:43;7472:15;:17;;;7447:15;:20;;;:24;;:43;;;;:::i;:::-;7424:15;:20;;:66;;;;;7395:110;7130:3;;;;;;;7087:428;;;;7547:1;7524:15;:20;;:24;;;;;7563:9;7575:1;7563:13;;7558:1024;7582:15;:17;;;7578:1;:21;7558:1024;;;7643:73;7647:15;:20;;;7669:46;7673:5;:10;;;7684:1;7673:13;;;;;;;;;;;;;;;;;;7688:26;:15;:20;;;:24;:26::i;:::-;7669:3;:46::i;:::-;7643:3;:73::i;:::-;7620:15;:20;;:96;;;;7753:73;7757:15;:20;;;7779:46;7783:5;:10;;;7794:1;7783:13;;;;;;;;;;;;;;;;;;7798:26;:15;:20;;;:24;:26::i;:::-;7779:3;:46::i;:::-;7753:3;:73::i;:::-;7730:15;:20;;:96;;;;7867:77;7871:15;:18;;;7890:1;7871:21;;;;;;;;;;;;;;;;;;7893:1;7871:24;;;;;;;;;;;;;7897:46;7901:5;:10;;;7912:1;7901:13;;;;;;;;;;;;;;;;;;7916:26;:15;:20;;;:24;:26::i;:::-;7897:3;:46::i;:::-;7867:3;:77::i;:::-;7840:15;:18;;;7859:1;7840:21;;;;;;;;;;;;;;;;;;7862:1;7840:24;;;;;;;;;;;;:104;;;;7979:69;7983:15;:18;;;8003:44;8007:5;:8;;;8016:1;8007:11;;;;;;;;;;;;;;;;;;8020:26;:15;:20;;;:24;:26::i;:::-;8003:3;:44::i;:::-;7979:3;:69::i;:::-;7958:15;:18;;:90;;;;8089:77;8093:15;:18;;;8112:1;8093:21;;;;;;;;;;;;;;;;;;8115:1;8093:24;;;;;;;;;;;;;8119:46;8123:5;:10;;;8134:1;8123:13;;;;;;;;;;;;;;;;;;8138:26;:15;:20;;;:24;:26::i;:::-;8119:3;:46::i;:::-;8089:3;:77::i;:::-;8062:15;:18;;;8081:1;8062:21;;;;;;;;;;;;;;;;;;8084:1;8062:24;;;;;;;;;;;;:104;;;;8201:69;8205:15;:18;;;8225:44;8229:5;:8;;;8238:1;8229:11;;;;;;;;;;;;;;;;;;8242:26;:15;:20;;;:24;:26::i;:::-;8225:3;:44::i;:::-;8201:3;:69::i;:::-;8180:15;:18;;:90;;;;8307:73;8311:15;:20;;;8333:46;8337:5;:10;;;8348:1;8337:13;;;;;;;;;;;;;;;;;;8352:26;:15;:20;;;:24;:26::i;:::-;8333:3;:46::i;:::-;8307:3;:73::i;:::-;8284:15;:20;;:96;;;;8417:73;8421:15;:20;;;8443:46;8447:5;:10;;;8458:1;8447:13;;;;;;;;;;;;;;;;;;8462:26;:15;:20;;;:24;:26::i;:::-;8443:3;:46::i;:::-;8417:3;:73::i;:::-;8394:15;:20;;:96;;;;8528:43;8553:15;:17;;;8528:15;:20;;;:24;;:43;;;;:::i;:::-;8505:15;:20;;:66;;;;;7601:3;;;;;;;7558:1024;;;;8612:63;8616:15;:18;;;8636:38;8640:9;:11;;;8653:15;:20;;;8636:3;:38::i;:::-;8612:3;:63::i;:::-;8591:15;:18;;:84;;;;8706:53;8710:15;:18;;;8730:28;8734:1;8730:28;;;;;;;;;;;;;;;;;;;;;;;;;;8737:15;:20;;;8730:3;:28::i;:::-;8706:3;:53::i;:::-;8685:15;:18;;:74;;;;8770:42;;:::i;:::-;8844:115;8873:15;:17;;;8892:5;:12;;;8906:5;:12;;;8920:5;:14;;;8936:5;:14;;;8862:89;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8862:89:5;;;8852:100;;;;;;8844:109;;;:113;:115::i;:::-;8822:17;:19;;:137;;;;;8992:27;8999:17;:19;;;8992:6;:27::i;:::-;8969:17;:20;;:50;;;;9051:57;9080:17;:19;;;9069:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9069:31:5;;;9059:42;;;;;;9051:51;;;:55;:57::i;:::-;9029:17;:19;;:79;;;;;9118;;;;;;;;;9142:26;9166:1;9142:17;:19;;;:23;;:26;;;;:::i;:::-;9118:79;;;;9170:26;9194:1;9170:17;:19;;;:23;;:26;;;;:::i;:::-;9118:79;;;:17;:20;;:79;;;;9240:77;9297:17;:19;;;9240:52;9268:17;:20;;;9289:1;9268:23;;;;;;;;;;;;;9240:17;:20;;;9261:1;9240:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;9215:17;:22;;:102;;;;;9349:160;9440:68;9485:17;:22;;;9440:40;9477:1;162:2;9473:5;;;;;;;;9467:1;:12;9440:17;:22;;;:26;;:40;;;;:::i;:::-;:44;;:68;;;;:::i;:::-;9349:86;9386:48;9410:17;:20;;;9431:1;9410:23;;;;;;;;;;;;;9386:17;:19;;;:23;;:48;;;;:::i;:::-;9349:32;9360:17;:20;;;9349:10;:32::i;:::-;:36;;:86;;;;:::i;:::-;:90;;:160;;;;:::i;:::-;9327:17;:19;;:182;;;;;9541:35;9556:17;:19;;;9541:5;:10;;;:14;;:35;;;;:::i;:::-;9519:17;:19;;:57;;;;;9591:9;9603:1;9591:13;;9586:233;9614:1;162:2;9610:5;;;;;;;;9606:1;:9;9586:233;;;9676:35;9709:1;9704;:6;9676:17;:20;;;9697:1;9676:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;9636:17;:34;;;9671:1;9636:37;;;;;;;;;;;;:75;;;;;9773:35;9806:1;9801;:6;9773:17;:20;;;9794:1;9773:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;9725:17;:34;;;9768:1;162:2;9764:5;;;;;;;;9760:1;:9;9725:45;;;;;;;;;;;;:83;;;;;9617:3;;;;;;;9586:233;;;;9851:73;9880:17;:19;;;9901:5;:14;;;9869:47;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9869:47:5;;;9859:58;;;;;;9851:67;;;:71;:73::i;:::-;9829:17;:19;;:95;;;;;9960:118;9964:43;9968:5;:14;;;9983:1;9968:17;;;;;;;;;;;;;9987;:19;;;9964:3;:43::i;:::-;10009:68;10013:5;:14;;;10028:1;10013:17;;;;;;;;;;;;;10032:44;10056:17;:19;;;10032:17;:19;;;:23;;:44;;;;:::i;:::-;10009:3;:68::i;:::-;9960:3;:118::i;:::-;9934:17;:23;;:144;;;;10115:40;;:::i;:::-;10188:86;10192:35;10196:15;:18;;;10216:5;:10;;;10192:3;:35::i;:::-;10229:44;10233:15;:18;;;10252:1;10233:21;;;;;;;;;;;;;;;;;;10255:1;10233:24;;;;;;;;;;;;;10259:13;:5;:7;;;:11;:13::i;:::-;10229:3;:44::i;:::-;10188:3;:86::i;:::-;10165:16;:20;;:109;;;;10307:55;10311:17;10315:1;10311:17;;;;;;;;;;;;;;;;;;;;;;;;;;10318:5;:9;;;10311:3;:17::i;:::-;10330:31;10334:9;:11;;;10347:13;:5;:7;;;:11;:13::i;:::-;10330:3;:31::i;:::-;10307:3;:55::i;:::-;10284:16;:20;;:78;;;;10482:34;;;;;;;;;;;;;;;;;;;10500:9;:15;;;10482:7;:34::i;:::-;10456:16;:23;;:60;;;;10549:78;10553:40;10557:16;:23;;;10582:5;:10;;;10553:3;:40::i;:::-;10595:31;10599:9;:11;;;10612:13;:5;:7;;;:11;:13::i;:::-;10595:3;:31::i;:::-;10549:3;:78::i;:::-;10526:16;:20;;:101;;;;10660:83;10664:36;10668:15;:20;;;10690:5;:9;;;10664:3;:36::i;:::-;10702:40;10706:15;:20;;;10728:13;:5;:7;;;:11;:13::i;:::-;10702:3;:40::i;:::-;10660:3;:83::i;:::-;10637:16;:20;;:106;;;;10781:317;10785:154;10789:124;10793:54;10797:37;10801:15;:18;;;10821:5;:12;;;10797:3;:37::i;:::-;10836:5;:10;;;10793:3;:54::i;:::-;10849:63;10853:43;10857:15;:18;;;10876:1;10857:21;;;;;;;;;;;;;;;;;;10879:1;10857:24;;;;;;;;;;;;;10883:5;:12;;;10853:3;:43::i;:::-;10898:13;:5;:7;;;:11;:13::i;:::-;10849:3;:63::i;:::-;10789:3;:124::i;:::-;10915:17;:20;;;10936:1;10915:23;;;;;;;;;;;;;10785:3;:154::i;:::-;10941:156;10945:126;10949:58;10953:41;10957:15;:20;;;10979:5;:14;;;10953:3;:41::i;:::-;10996:5;:10;;;10949:3;:58::i;:::-;11009:61;11013:41;11017:15;:20;;;11039:5;:14;;;11013:3;:41::i;:::-;11056:13;:5;:7;;;:11;:13::i;:::-;11009:3;:61::i;:::-;10945:3;:126::i;:::-;11073:17;:20;;;11094:1;11073:23;;;;;;;;;;;;;10941:3;:156::i;:::-;10781:3;:317::i;:::-;10753:16;:25;;:345;;;;11131:159;11135:127;11139:87;11143:52;11147:27;11151:1;11147:27;;;;;;;;;;;;;;;;;;;;;;;;;;11154:17;:19;;;11147:3;:27::i;:::-;11176:18;11180:1;11176:18;;;;;;;;;;;;;;;;;;;;;;;;;;11183:5;:10;;;11176:3;:18::i;:::-;11143:3;:52::i;:::-;11197:28;11201:17;:23;;;11197:3;:28::i;:::-;11139:3;:87::i;:::-;11228:33;11240:15;:20;;;11228:5;:7;;;:11;;:33;;;;:::i;:::-;11135:3;:127::i;:::-;11264:16;:25;;;11131:3;:159::i;:::-;11108:16;:20;;:182;;;;11324:118;11328:25;11332:1;11328:25;;;;;;;;;;;;;;;;;;;;;;;;;;11335:5;:17;;;11328:3;:25::i;:::-;11355:86;11359:35;11363:15;:18;;;11383:5;:10;;;11359:3;:35::i;:::-;11396:44;11400:15;:18;;;11419:1;11400:21;;;;;;;;;;;;;;;;;;11422:1;11400:24;;;;;;;;;;;;;11426:13;:5;:7;;;:11;:13::i;:::-;11396:3;:44::i;:::-;11355:3;:86::i;:::-;11324:3;:118::i;:::-;11300:16;:21;;:142;;;;11477:112;11481:21;11485:1;11481:21;;;;;;;;;;;;;;;;;;;;;;;;;;11488:5;:13;;;11481:3;:21::i;:::-;11504:84;11508:37;11512:15;:20;;;11534:5;:10;;;11508:3;:37::i;:::-;11547:40;11551:15;:20;;;11573:13;:5;:7;;;:11;:13::i;:::-;11547:3;:40::i;:::-;11504:3;:84::i;:::-;11477:3;:112::i;:::-;11452:16;:22;;:137;;;;11627:101;11631:26;11635:1;11631:26;;;;;;;;;;;;;;;;;;;;;;;;;;11638:5;:18;;;11631:3;:26::i;:::-;11659:68;11663:29;11667:5;:12;;;11681:5;:10;;;11663:3;:29::i;:::-;11694:32;11698:5;:12;;;11712:13;:5;:7;;;:11;:13::i;:::-;11694:3;:32::i;:::-;11659:3;:68::i;:::-;11627:3;:101::i;:::-;11599:16;:25;;:129;;;;11768:101;11772:22;11776:1;11772:22;;;;;;;;;;;;;;;;;;;;;;;;;;11779:5;:14;;;11772:3;:22::i;:::-;11796:72;11800:31;11804:5;:14;;;11820:5;:10;;;11800:3;:31::i;:::-;11833:34;11837:5;:14;;;11853:13;:5;:7;;;:11;:13::i;:::-;11833:3;:34::i;:::-;11796:3;:72::i;:::-;11768:3;:101::i;:::-;11738:16;:27;;:131;;;;11901:270;11930:17;:19;;;11951:16;:20;;;11973:16;:20;;;11995:16;:20;;;12017:16;:20;;;12039:16;:20;;;12061:16;:21;;;12084:16;:22;;;12108:16;:25;;;12135:16;:27;;;11919:244;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11919:244:5;;;11909:255;;;;;;11901:264;;;:268;:270::i;:::-;11880:16;:18;;:291;;;;;12211:5;:7;;;12189:16;:18;;;:29;12181:84;;;;;;;;;;;;;;;;;;;;;;;;12276:34;;:::i;:::-;12338:56;12367:16;:18;;;12356:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12356:30:5;;;12346:41;;;;;;12338:50;;;:54;:56::i;:::-;12320:13;:15;;:74;;;;;12424:23;12428:1;12424:23;;;;;;;;;;;;;;;;;;;;;;;;;;12431:13;:15;;;12424:3;:23::i;:::-;12404:13;:17;;:43;;;;12481:37;12493:2;12481:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12497:17;:20;;;12481:11;:37::i;:::-;12457:13;:21;;:61;;;;12549:96;12560:48;12566:17;:20;;;12588:17;:19;;;12560:5;:48::i;:::-;12610:17;:34;;;12549:10;:96::i;:::-;12528:13;:18;;:117;;;;12673:157;12677:101;12681:49;12685:5;:8;;;12695:34;12699:5;:8;;;12709:17;:19;;;12695:3;:34::i;:::-;12681:3;:49::i;:::-;12732:45;12736:13;12746:2;12736:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;12751:25;:17;:19;;;:23;:25::i;:::-;12732:3;:45::i;:::-;12677:3;:101::i;:::-;12780:49;12787:13;:21;;;12810:13;:18;;;12780:6;:49::i;:::-;12673:3;:157::i;:::-;12655:13;:15;;:175;;;;12858:44;12862:13;:15;;;12879:22;12883:1;12879:22;;;;;;;;;;;;;;;;;;;;;;;;;;12886:14;:5;:8;;;:12;:14::i;:::-;12879:3;:22::i;:::-;12858:3;:44::i;:::-;12840:13;:15;;:62;;;;12930:56;12934:13;:15;;;12951:34;12955:13;:17;;;12974:5;:10;;;12951:3;:34::i;:::-;12930:3;:56::i;:::-;12912:13;:15;;:74;;;;13041:32;;:::i;:::-;13076:5;:13;;;13041:48;;13104:9;13116:1;13104:13;;13099:421;191:1;13119;:5;13099:421;;;13163:83;13192:13;:15;;;13209:7;:10;;;13220:1;13209:13;;;;;;;;;;;;;13224:7;:10;;;13235:1;13224:13;;;;;;;;;;;;;13181:57;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13181:57:5;;;13171:68;;;;;;13163:77;;;:81;:83::i;:::-;13145:13;:15;;:101;;;;;13290:13;:15;;;13260:13;:24;;;13285:1;13260:27;;;;;;;;;;;;:45;;;;;13339:12;13354:21;:13;:15;;;:19;:21::i;:::-;13339:36;;13407:102;13411:13;:15;;;13428:80;13432:42;13436:7;:10;;;13447:1;13436:13;;;;;;;;;;;;;13451:22;13471:1;13451:13;:15;;;:19;;:22;;;;:::i;:::-;13432:3;:42::i;:::-;13476:31;13480:7;:10;;;13491:1;13480:13;;;;;;;;;;;;;13495:11;13504:1;13495:4;:8;;:11;;;;:::i;:::-;13476:3;:31::i;:::-;13428:3;:80::i;:::-;13407:3;:102::i;:::-;13389:13;:15;;:120;;;;13099:421;13126:3;;;;;;;13099:421;;;;13564:1;13530:13;:28;;;13559:1;13530:31;;;;;;;;;;;;:35;;;;;13580:9;13592:1;13580:13;;13575:155;191:1;13595;:5;13575:155;;;13655:64;13691:13;:24;;;13716:1;13691:27;;;;;;;;;;;;;13655:13;:28;;;13684:1;13655:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;13621:13;:28;;;13650:1;13621:31;;;;;;;;;;;;:98;;;;;13602:3;;;;;;;13575:155;;;;13739:21;;:::i;:::-;13804:37;:13;:28;;;13833:1;13804:31;;;;;;;;;;;;;:35;:37::i;:::-;13770:13;:28;;;13799:1;13770:31;;;;;;;;;;;;:71;;;;;13856:9;13868:1;13856:13;;13851:462;13877:1;162:2;13875:3;;;;;;;;13871:1;:7;13851:462;;;13904:9;13916:1;13904:13;;13899:404;162:2;13930:1;13925;13920;:6;;;;13919:12;:16;13899:404;;;13960:10;13983:1;13978;:6;;;;13973:1;:12;13960:25;;14008:6;14015:2;14008:10;;;;;;;;;;;;;14007:11;14003:286;;;14042:12;14057:76;14097:13;:24;;;14130:1;14126;191;14122:5;:9;14097:35;;;;;;;;;;;;;14057:13;:24;;;14090:1;14086;191;14082:5;:9;14057:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;14042:91;;14190:41;14226:4;14190:13;:28;;;14219:1;14190:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;14155:13;:28;;;14184:2;14155:32;;;;;;;;;;;;:76;;;;;14266:4;14253:6;14260:2;14253:10;;;;;;;;;;;;:17;;;;;;;;;;;14003:286;;13899:404;13937:3;;;;;13899:404;;;;13880:3;;;;;13851:462;;;;14323:20;;:::i;:::-;14353;;:::i;:::-;14388:9;14400:1;14388:13;;14383:224;162:2;14403:1;:5;14383:224;;;14437:55;14441:5;14448:43;14452:2;14455:1;14452:5;;;;;;;;;;;;;;;;;;;;14448:43;;;;;;;;;;;;;;;;;;;;;;;;;;14459:13;:28;;;14488:1;14459:31;;;;;;;;;;;;;14448:3;:43::i;:::-;14437:3;:55::i;:::-;14429:63;;14514:82;14518:5;14525:70;14529:13;:21;;;14551:1;14529:24;;;;;;;;;;;;;14555:13;:28;;;14592:1;14588;162:2;14584:5;:9;14555:39;;;;;;;;;;;;;14525:3;:70::i;:::-;14514:3;:82::i;:::-;14506:90;;14410:3;;;;;;;14383:224;;;;14616:21;;:::i;:::-;14640:104;14644:49;14648:21;14652:5;14659:7;:9;;;14648:3;:21::i;:::-;14671;14675:5;14682:7;:9;;;14671:3;:21::i;:::-;14644:3;:49::i;:::-;14695:48;14699:13;:17;;;14718:24;14732:7;:9;;;14718:7;:9;;;:13;;:24;;;;:::i;:::-;14695:3;:48::i;:::-;14640:3;:104::i;:::-;14616:128;;14762:27;14765:13;:15;;;14782:6;14762:2;:27::i;:::-;14754:77;;;;;;;;;;;;;;;;;;;;;;;;14849:4;14842:11;;;;;;;;;;;;4383:10477;;;;:::o;25201:295::-;25274:14;25367:4;25361:11;25423:5;25416:4;25409:5;25405:16;25401:28;25395:35;25392:1;25385:46;25478:1;25472:8;25462:18;;25338:152;;;;;:::o;720:95:3:-;767:7;110:77;793:1;:15;;;;;;;;786:22;;720:95;;;:::o;821:127::-;879:7;910:1;905;:6;;:36;;940:1;936;110:77;922:15;:19;905:36;;;918:1;914;:5;905:36;898:43;;821:127;;;;:::o;26030:382:5:-;26095:16;;:::i;:::-;26161:4;26155:11;26195:1;26189:8;26186:1;26179:19;26245:4;26242:1;26238:12;26232:19;26225:4;26222:1;26218:12;26211:41;26286:1;26279:4;26276:1;26272:12;26265:23;26345:4;26342:1;26336:4;26333:1;26327:4;26322:3;26311:39;26304:47;26301:2;;;26380:1;26377;26370:12;26301:2;26132:274;;;;;:::o;25568:456::-;25642:16;;:::i;:::-;25708:4;25702:11;25742:2;25736:9;25733:1;25726:20;25794:4;25790:2;25786:13;25780:20;25773:4;25770:1;25766:12;25759:42;25841:2;25835:9;25828:4;25825:1;25821:12;25814:31;25893:4;25889:2;25885:13;25879:20;25872:4;25869:1;25865:12;25858:42;25957:4;25954:1;25948:4;25945:1;25939:4;25934:3;25923:39;25916:47;25913:2;;;25992:1;25989;25982:12;25913:2;25679:339;;;;;:::o;26605:131::-;26678:4;26709:2;:4;;;26701:2;:4;;;:12;:28;;;;;26725:2;:4;;;26717:2;:4;;;:12;26701:28;26694:35;;26605:131;;;;:::o;489:116:3:-;547:7;110:77;573:25;;;;;;;583:1;580;573:25;566:32;;489:116;;;;:::o;14866:446:5:-;14941:26;14979:9;15002:1;14991;:8;:12;;;;;;;;14979:24;;15013:9;15030:1;15025;:6;15013:18;;15067:1;15050:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15041:28;;15084:9;15096:1;15084:13;;15079:227;15103:1;15099;:5;15079:227;;;15125:21;15149:46;15174:1;15170;:5;15187:1;15182;15178;:5;15177:11;15190:1;15193;15149:20;:46::i;:::-;15125:70;;15214:9;15226:1;15214:13;;15209:87;15233:1;15229;:5;15209:87;;;15274:4;15279:1;15274:7;;;;;;;;;;;;;;;;;;15259:6;15266:1;15259:9;;;;;;;;;;;;;;;;;;15269:1;15259:12;;;;;;;;;;;;:22;;;;;15236:3;;;;;;;15209:87;;;;15079:227;15106:3;;;;;;;15079:227;;;;14866:446;;;;;:::o;16223:1466::-;16329:26;16604:12;16619:8;:15;16604:30;;16644:12;16666:1;16659:4;:8;;;;;;;;16644:23;;16703:4;16686:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16677:31;;16790:25;16818:16;16822:4;16828:5;16818:3;:16::i;:::-;16790:44;;16845:29;16891:4;16877:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16877:19:5;;;;16845:51;;16911:9;16923:1;16911:13;;16906:777;16930:1;16926;:5;16906:777;;;16957:9;16969:1;16957:13;;16952:148;16976:4;16972:1;:8;16952:148;;;17023:8;17045:4;17040:1;17033:4;:8;17032:17;;;;;;;;17023:27;;;;;;;;;;;;;;;;;;17051:1;17023:30;;;;;;;;;;;;;17005:12;17018:1;17005:15;;;;;;;;;;;;;;;;;:48;;;;;16982:3;;;;;;;16952:148;;;;17129:17;17133:12;17129:3;:17::i;:::-;17114:32;;17160:28;17205:4;17191:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17160:50;;17224:20;17247:1;17224:24;;17277:18;:12;:16;:18::i;:::-;17262:33;;17314:9;17326:1;17314:13;;17309:203;17333:4;17329:1;:8;17309:203;;;17391:106;17395:87;17399:33;17403:8;17412:1;17403:11;;;;;;;;;;;;;;;;;;17416:12;17429:1;17416:15;;;;;;;;;;;;;;;;;;17399:3;:33::i;:::-;17434:47;17438:8;17451:4;17447:1;:8;17438:18;;;;;;;;;;;;;;;;;;17458:12;17475:4;17471:1;:8;17458:22;;;;;;;;;;;;;;;;;;17434:3;:47::i;:::-;17395:3;:87::i;:::-;17484:12;17391:3;:106::i;:::-;17374:11;17386:1;17374:14;;;;;;;;;;;;;;;;;:123;;;;17339:3;;;;;;;17309:203;;;;17540:22;17544:11;17557:4;17540:3;:22::i;:::-;17526:36;;17581:9;17593:1;17581:13;;17576:97;17600:4;17596:1;:8;17576:97;;;17644:11;17656:1;17644:14;;;;;;;;;;;;;;;;;;17629:6;17636:1;17629:9;;;;;;;;;;;;;;;;;;17639:1;17629:12;;;;;;;;;;;;:29;;;;17606:3;;;;;;;17576:97;;;;16906:777;;16933:3;;;;;;;16906:777;;;;16223:1466;;;;;;;;:::o;954:95:3:-;1001:7;1041:1;110:77;1027:15;1020:22;;954:95;;;:::o;24761:236:5:-;24814:24;;:::i;:::-;24862:1;24850:6;24857:1;24850:9;;;;;;;;;;;;:13;;;;;24885:4;24873:6;24880:1;24873:9;;;;;;;;;;;;:16;;;;;24904:9;24916:1;24904:13;;24899:92;162:2;24919:1;:5;24899:92;;;24957:23;24975:4;24957:6;24968:1;24964;:5;24957:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;24945:6;24952:1;24945:9;;;;;;;;;;;;:35;;;;;24926:3;;;;;;;24899:92;;;;24761:236;;;:::o;1055:580:3:-;1123:14;1149:13;110:77;1149:27;;1224:4;1218:11;1252:4;1249:1;1242:15;1291:4;1284;1281:1;1277:12;1270:26;1330:4;1323;1320:1;1316:12;1309:26;1369:4;1362;1359:1;1355:12;1348:26;1408:8;1401:4;1398:1;1394:12;1387:30;1451:5;1444:4;1441:1;1437:12;1430:27;1514:4;1511:1;1505:4;1502:1;1496:4;1491:3;1480:39;1473:47;1470:2;;;1572:1;1569;1562:12;1470:2;1617:1;1611:8;1601:18;;1195:434;;;;;;:::o;367:116::-;425:7;110:77;451:25;;;;;;;461:1;458;451:25;444:32;;367:116;;;;:::o;24168:180:5:-;24233:14;24264:9;24276:1;24264:13;;24259:83;162:2;24279:1;:5;24259:83;;;24314:17;24325:2;24328:1;24325:5;;;;;;;;;;;;;24314:6;:10;;:17;;;;:::i;:::-;24305:26;;24286:3;;;;;;;24259:83;;;;24168:180;;;:::o;27986:181::-;28058:14;;:::i;:::-;28091:69;229:77;28134:5;28141:1;28117:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28117:26:5;;;28107:37;;;;;;28099:46;;;:60;;;;;;;;28091:7;:69::i;:::-;28084:76;;27986:181;;;;:::o;26418:::-;26472:14;;:::i;:::-;26505:47;;;;;;;;;26513:1;:3;;;26505:47;;;;229:77;26533:1;:3;;;:17;;;;;;;;229:77;26518:33;26505:47;;;26498:54;;26418:181;;;:::o;23941:221::-;24028:24;;:::i;:::-;24069:9;24081:1;24069:13;;24064:92;162:2;24084:1;:5;24064:92;;;24122:23;24126:2;24129:1;24126:5;;;;;;;;;;;;;;;;;;24133:11;:2;24136:1;24133:5;;;;;;;;;;;;;:9;:11::i;:::-;24122:3;:23::i;:::-;24110:6;24117:1;24110:9;;;;;;;;;;;;:35;;;;24091:3;;;;;;;24064:92;;;;23941:221;;;;:::o;25003:192::-;25073:24;;:::i;:::-;25114:9;25126:1;25114:13;;25109:80;162:2;25129:1;:5;25109:80;;;25167:11;25176:1;25167;25169;25167:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;25155:6;25162:1;25155:9;;;;;;;;;;;;:23;;;;;25136:3;;;;;;;25109:80;;;;25003:192;;;;:::o;23725:210::-;23810:24;;:::i;:::-;23851:9;23863:1;23851:13;;23846:83;162:2;23866:1;:5;23846:83;;;23904:14;23913:1;23915;23913:4;;;;;;;;;;;;;23904:1;23906;23904:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;23892:6;23899:1;23892:9;;;;;;;;;;;;:26;;;;;23873:3;;;;;;;23846:83;;;;23725:210;;;;:::o;24354:177::-;24417:18;;:::i;:::-;24452:9;24464:1;24452:13;;24447:78;162:2;24467:1;:5;24447:78;;;24499:15;24503:3;24508:2;24511:1;24508:5;;;;;;;;;;;;;;;;;;24499:3;:15::i;:::-;24493:21;;24474:3;;;;;;;24447:78;;;;24354:177;;;:::o;24537:218::-;24620:21;;:::i;:::-;24658:9;24670:1;24658:13;;24653:96;162:2;24673:1;:5;24653:96;;;24708:30;24712:6;24720:17;24724:2;24727:1;24724:5;;;;;;;;;;;;;24731:2;24734:1;24731:5;;;;;;;;;;;;;24720:3;:17::i;:::-;24708:3;:30::i;:::-;24699:39;;24680:3;;;;;;;24653:96;;;;24537:218;;;;:::o;611:103:3:-;658:7;684:23;688:1;705;110:77;691:15;684:3;:23::i;:::-;677:30;;611:103;;;:::o;15318:899:5:-;15444:23;15629:12;15660:8;15650:7;:18;15644:1;:25;15629:40;;15727:4;15713:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;15713:19:5;;;;15704:28;;15758:8;15747:7;:19;15743:94;;;15794:5;15782:6;15789:1;15782:9;;;;;;;;;;;;;;;;;:17;;;;;15820:6;15813:13;;;;;15743:94;15866:1;15856:7;:11;15846:21;;15878;15902:68;15923:8;15933:7;15942:24;15952:1;15954:7;15952:10;;;;;;;;;;;;;;;;;;15963:1;15952:13;;;;;;;;;;;;;15942:5;:9;;:24;;;;:::i;:::-;15968:1;15902:20;:68::i;:::-;15878:92;;15980:22;16005:68;16026:8;16036:7;16045:24;16055:1;16057:7;16055:10;;;;;;;;;;;;;;;;;;16066:1;16055:13;;;;;;;;;;;;;16045:5;:9;;:24;;;;:::i;:::-;16071:1;16005:20;:68::i;:::-;15980:93;;16088:9;16100:1;16088:13;;16083:128;16114:1;16107:4;:8;;;;;;;;16103:1;:12;16083:128;;;16148:4;16153:1;16148:7;;;;;;;;;;;;;;;;;;16136:6;16143:1;16136:9;;;;;;;;;;;;;;;;;:19;;;;;16192:5;16198:1;16192:8;;;;;;;;;;;;;;;;;;16169:6;16187:1;16180:4;:8;;;;;;;;16176:1;:12;16169:20;;;;;;;;;;;;;;;;;:31;;;;;16117:3;;;;;;;16083:128;;;;15318:899;;;;;;;;;;:::o;17695:997::-;17769:23;17804:12;17819:5;:12;17804:27;;17853:1;17845:4;:9;17841:52;;;17877:5;17870:12;;;;;17841:52;17922:1;17917;17910:4;:8;;;;;;;;:13;17902:57;;;;;;;;;;;;;;;;;;;;;;;;17970:13;17986:23;18004:4;17996:5;:12;;;;;;;;337:76;17986:9;;:23;;;;:::i;:::-;17970:39;;18019:20;18042:1;18019:24;;18057:7;18053:87;;;18088:11;:5;:9;:11::i;:::-;18080:19;;18128:1;18113:16;;18053:87;18164:18;:12;:16;:18::i;:::-;18149:33;;18192:21;18216:31;18220:17;18228:5;18235:1;18220:7;:17::i;:::-;18239:7;18216:3;:31::i;:::-;18192:55;;18257:20;18280:31;18284:17;18292:5;18299:1;18284:7;:17::i;:::-;18303:7;18280:3;:31::i;:::-;18257:54;;18321:17;18341:1;18321:21;;18375:4;18361:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18352:28;;18395:9;18407:1;18395:13;;18390:296;18421:1;18414:4;:8;;;;;;;;18410:1;:12;18390:296;;;18443:19;;:::i;:::-;18465:22;18469:3;18473:1;18469:6;;;;;;;;;;;;;;;;;;18477:9;18465:3;:22::i;:::-;18443:44;;18513:37;18517:18;18521:4;18526:1;18521:7;;;;;;;;;;;;;;;;;;18530:4;18517:3;:18::i;:::-;18537:12;18513:3;:37::i;:::-;18501:6;18508:1;18501:9;;;;;;;;;;;;;;;;;:49;;;;18587:42;18591:23;18595:4;18600:1;18595:7;;;;;;;;;;;;;;;;;;18604:9;18608:4;18604:3;:9::i;:::-;18591:3;:23::i;:::-;18616:12;18587:3;:42::i;:::-;18564:6;18582:1;18575:4;:8;;;;;;;;18571:1;:12;18564:20;;;;;;;;;;;;;;;;;:65;;;;18655:20;18669:5;18655:9;:13;;:20;;;;:::i;:::-;18643:32;;18390:296;18424:3;;;;;;;18390:296;;;;17695:997;;;;;;;;;;;:::o;18980:739::-;19040:23;19075:12;19090:5;:12;19075:27;;19124:1;19116:4;:9;19112:52;;;19148:5;19141:12;;;;;19112:52;19193:1;19188;19181:4;:8;;;;;;;;:13;19173:57;;;;;;;;;;;;;;;;;;;;;;;;19241:13;19257:23;19275:4;19267:5;:12;;;;;;;;337:76;19257:9;;:23;;;;:::i;:::-;19241:39;;19290:21;19314:22;19318:17;19326:5;19333:1;19318:7;:17::i;:::-;19314:3;:22::i;:::-;19290:46;;19346:20;19369:22;19373:17;19381:5;19388:1;19373:7;:17::i;:::-;19369:3;:22::i;:::-;19346:45;;19401:17;19421:1;19401:21;;19455:4;19441:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19441:19:5;;;;19432:28;;19475:9;19487:1;19475:13;;19470:243;19501:1;19494:4;:8;;;;;;;;19490:1;:12;19470:243;;;19523:12;19538:21;19549:9;19538:3;19542:1;19538:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;19523:36;;19585:17;19597:4;19585;19590:1;19585:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;19573:6;19580:1;19573:9;;;;;;;;;;;;;;;;;:29;;;;;19639:17;19651:4;19639;19644:1;19639:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;19616:6;19634:1;19627:4;:8;;;;;;;;19623:1;:12;19616:20;;;;;;;;;;;;;;;;;:40;;;;;19682:20;19696:5;19682:9;:13;;:20;;;;:::i;:::-;19670:32;;19470:243;19504:3;;;;;;;19470:243;;;;18980:739;;;;;;;;;:::o;27358:449::-;27412:14;;:::i;:::-;27438:9;27457:311;27464:4;27457:311;;;27484:16;27523:1;27503:17;27512:4;27518:1;27503:8;:17::i;:::-;:21;27484:40;;27610:41;27619:8;27649:1;27644;229:77;27630:15;27629:21;;;;;;;;27610:8;:41::i;:::-;27606:45;;27687:8;27669:14;27678:1;27681;27669:8;:14::i;:::-;:26;27665:70;;;27715:5;;;27665:70;27756:1;27748:9;;;;27457:311;;;;27784:16;;;;;;;;;27792:4;27784:16;;;;27798:1;27784:16;;;27777:23;;;27358:449;;;:::o;18698:276::-;18778:23;18851:1;18836:5;:12;:16;;;;;;;;18822:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18813:40;;18868:9;18880:1;18868:13;;18863:105;18902:1;18887:5;:12;:16;;;;;;;;18883:1;:20;18863:105;;;18936:5;18950:6;18946:1;18942;:5;:14;18936:21;;;;;;;;;;;;;;;;;;18924:6;18931:1;18924:9;;;;;;;;;;;;;;;;;:33;;;;18905:3;;;;;;;18863:105;;;;18698:276;;;;:::o;19725:::-;19805:23;19878:1;19863:5;:12;:16;;;;;;;;19849:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19849:31:5;;;;19840:40;;19895:9;19907:1;19895:13;;19890:105;19929:1;19914:5;:12;:16;;;;;;;;19910:1;:20;19890:105;;;19963:5;19977:6;19973:1;19969;:5;:14;19963:21;;;;;;;;;;;;;;;;;;19951:6;19958:1;19951:9;;;;;;;;;;;;;;;;;:33;;;;;19932:3;;;;;;;19890:105;;;;19725:276;;;;:::o;26742:610::-;26815:14;26866:13;229:77;26866:27;;26941:4;26935:11;26969:4;26966:1;26959:15;27008:4;27001;26998:1;26994:12;26987:26;27047:4;27040;27037:1;27033:12;27026:26;27086:4;27079;27076:1;27072:12;27065:26;27125:8;27118:4;27115:1;27111:12;27104:30;27168:5;27161:4;27158:1;27154:12;27147:27;27231:4;27228:1;27222:4;27219:1;27213:4;27208:3;27197:39;27190:47;27187:2;;;27289:1;27286;27279:12;27187:2;27334:1;27328:8;27318:18;;26912:434;;;;;;:::o;81:28088::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28088:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28088:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28088:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28088:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28088:5;;;;:::o;26:764:-1:-;;162:3;155:4;147:6;143:17;139:27;132:35;129:2;;;180:1;177;170:12;129:2;217:6;204:20;239:99;254:83;330:6;254:83;;;239:99;;;230:108;;355:5;380:6;373:5;366:21;410:4;402:6;398:17;388:27;;432:4;427:3;423:14;416:21;;485:6;532:3;524:4;516:6;512:17;507:3;503:27;500:36;497:2;;;549:1;546;539:12;497:2;574:1;559:225;584:6;581:1;578:13;559:225;;;642:3;664:56;716:3;704:10;664:56;;;659:3;652:69;744:4;739:3;735:14;728:21;;772:4;767:3;763:14;756:21;;616:168;606:1;603;599:9;594:14;;559:225;;;563:14;122:668;;;;;;;;817:607;;928:3;921:4;913:6;909:17;905:27;898:35;895:2;;;946:1;943;936:12;895:2;970:3;988:74;1003:58;1054:6;1003:58;;;988:74;;;979:83;;1079:5;1138:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:2;;;1202:1;1199;1192:12;1150:2;1227:1;1212:206;1237:6;1234:1;1231:13;1212:206;;;1295:3;1317:37;1350:3;1338:10;1317:37;;;1312:3;1305:50;1378:4;1373:3;1369:14;1362:21;;1406:4;1401:3;1397:14;1390:21;;1269:149;1259:1;1256;1252:9;1247:14;;1212:206;;;1216:14;888:536;;;;;;;;1451:615;;1566:3;1559:4;1551:6;1547:17;1543:27;1536:35;1533:2;;;1584:1;1581;1574:12;1533:2;1608:3;1626:78;1641:62;1696:6;1641:62;;;1626:78;;;1617:87;;1721:5;1780:6;1827:3;1819:4;1811:6;1807:17;1802:3;1798:27;1795:36;1792:2;;;1844:1;1841;1834:12;1792:2;1869:1;1854:206;1879:6;1876:1;1873:13;1854:206;;;1937:3;1959:37;1992:3;1980:10;1959:37;;;1954:3;1947:50;2020:4;2015:3;2011:14;2004:21;;2048:4;2043:3;2039:14;2032:21;;1911:149;1901:1;1898;1894:9;1889:14;;1854:206;;;1858:14;1526:540;;;;;;;;2074:118;;2141:46;2179:6;2166:20;2141:46;;;2132:55;;2126:66;;;;;2200:440;;2301:3;2294:4;2286:6;2282:17;2278:27;2271:35;2268:2;;;2319:1;2316;2309:12;2268:2;2356:6;2343:20;2378:64;2393:48;2434:6;2393:48;;;2378:64;;;2369:73;;2462:6;2455:5;2448:21;2498:4;2490:6;2486:17;2531:4;2524:5;2520:16;2566:3;2557:6;2552:3;2548:16;2545:25;2542:2;;;2583:1;2580;2573:12;2542:2;2593:41;2627:6;2622:3;2617;2593:41;;;2261:379;;;;;;;;2648:118;;2715:46;2753:6;2740:20;2715:46;;;2706:55;;2700:66;;;;;2773:2013;;;;;;;;;3227:3;3215:9;3206:7;3202:23;3198:33;3195:2;;;3244:1;3241;3234:12;3195:2;3307:1;3296:9;3292:17;3279:31;3330:18;3322:6;3319:30;3316:2;;;3362:1;3359;3352:12;3316:2;3382:97;3471:7;3462:6;3451:9;3447:22;3382:97;;;3372:107;;3258:227;3544:2;3533:9;3529:18;3516:32;3568:18;3560:6;3557:30;3554:2;;;3600:1;3597;3590:12;3554:2;3620:97;3709:7;3700:6;3689:9;3685:22;3620:97;;;3610:107;;3495:228;3782:2;3771:9;3767:18;3754:32;3806:18;3798:6;3795:30;3792:2;;;3838:1;3835;3828:12;3792:2;3858:97;3947:7;3938:6;3927:9;3923:22;3858:97;;;3848:107;;3733:228;3992:2;4010:76;4078:7;4069:6;4058:9;4054:22;4010:76;;;4000:86;;3971:121;4151:3;4140:9;4136:19;4123:33;4176:18;4168:6;4165:30;4162:2;;;4208:1;4205;4198:12;4162:2;4228:97;4317:7;4308:6;4297:9;4293:22;4228:97;;;4218:107;;4102:229;4362:3;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4341:99;4471:3;4490:76;4558:7;4549:6;4538:9;4534:22;4490:76;;;4480:86;;4450:122;4631:3;4620:9;4616:19;4603:33;4656:18;4648:6;4645:30;4642:2;;;4688:1;4685;4678:12;4642:2;4708:62;4762:7;4753:6;4742:9;4738:22;4708:62;;;4698:72;;4582:194;3189:1597;;;;;;;;;;;;4794:259;;4922:91;5009:3;5002:5;4922:91;;;5042:4;5037:3;5033:14;5019:28;;4915:138;;;;;5138:743;5309:69;5372:5;5309:69;;;5391:105;5489:6;5484:3;5391:105;;;5384:112;;5516:71;5581:5;5516:71;;;5608:1;5593:276;5618:6;5615:1;5612:13;5593:276;;;5665:105;5766:3;5757:6;5751:13;5665:105;;;5658:112;;5787:75;5855:6;5787:75;;;5777:85;;5640:1;5637;5633:9;5628:14;;5593:276;;;5597:14;5288:593;;;;;5964:773;;6147:71;6212:5;6147:71;;;6231:107;6331:6;6326:3;6231:107;;;6224:114;;6358:73;6425:5;6358:73;;;6452:1;6437:278;6462:6;6459:1;6456:13;6437:278;;;6509:105;6610:3;6601:6;6595:13;6509:105;;;6502:112;;6631:77;6701:6;6631:77;;;6621:87;;6484:1;6481;6477:9;6472:14;;6437:278;;;6441:14;6728:3;6721:10;;6126:611;;;;;;;6745:111;6822:28;6844:5;6822:28;;;6817:3;6810:41;6804:52;;;6863:360;;6993:39;7026:5;6993:39;;;7044:89;7126:6;7121:3;7044:89;;;7037:96;;7138:52;7183:6;7178:3;7171:4;7164:5;7160:16;7138:52;;;7211:6;7206:3;7202:16;7195:23;;6973:250;;;;;;7231:364;;7391:67;7455:2;7450:3;7391:67;;;7384:74;;7491:66;7487:1;7482:3;7478:11;7471:87;7586:2;7581:3;7577:12;7570:19;;7377:218;;;;7604:465;;7764:67;7828:2;7823:3;7764:67;;;7757:74;;7864:66;7860:1;7855:3;7851:11;7844:87;7965:66;7960:2;7955:3;7951:12;7944:88;8060:2;8055:3;8051:12;8044:19;;7750:319;;;;8078:364;;8238:67;8302:2;8297:3;8238:67;;;8231:74;;8338:66;8334:1;8329:3;8325:11;8318:87;8433:2;8428:3;8424:12;8417:19;;8224:218;;;;8451:364;;8611:67;8675:2;8670:3;8611:67;;;8604:74;;8711:66;8707:1;8702:3;8698:11;8691:87;8806:2;8801:3;8797:12;8790:19;;8597:218;;;;8824:364;;8984:67;9048:2;9043:3;8984:67;;;8977:74;;9084:66;9080:1;9075:3;9071:11;9064:87;9179:2;9174:3;9170:12;9163:19;;8970:218;;;;9197:465;;9357:67;9421:2;9416:3;9357:67;;;9350:74;;9457:66;9453:1;9448:3;9444:11;9437:87;9558:66;9553:2;9548:3;9544:12;9537:88;9653:2;9648:3;9644:12;9637:19;;9343:319;;;;9739:450;9868:4;9863:3;9859:14;9947:3;9940:5;9936:15;9930:22;9958:61;10014:3;10009;10005:13;9992:11;9958:61;;;9888:137;10094:4;10087:5;10083:16;10077:23;10106:62;10162:4;10157:3;10153:14;10140:11;10106:62;;;10035:139;9841:348;;;;10265:460;10404:4;10399:3;10395:14;10483:3;10476:5;10472:15;10466:22;10494:61;10550:3;10545;10541:13;10528:11;10494:61;;;10424:137;10630:4;10623:5;10619:16;10613:23;10642:62;10698:4;10693:3;10689:14;10676:11;10642:62;;;10571:139;10377:348;;;;10732:110;10805:31;10830:5;10805:31;;;10800:3;10793:44;10787:55;;;10849:120;10932:31;10957:5;10932:31;;;10927:3;10920:44;10914:55;;;10976:159;11077:52;11097:31;11122:5;11097:31;;;11077:52;;;11072:3;11065:65;11059:76;;;11142:405;;11316:95;11407:3;11398:6;11316:95;;;11309:102;;11422:75;11493:3;11484:6;11422:75;;;11519:2;11514:3;11510:12;11503:19;;11539:3;11532:10;;11297:250;;;;;;11554:1759;;12210:3;12199:9;12195:19;12187:27;;12261:9;12255:4;12251:20;12247:1;12236:9;12232:17;12225:47;12286:146;12427:4;12418:6;12286:146;;;12278:154;;12480:9;12474:4;12470:20;12465:2;12454:9;12450:18;12443:48;12505:146;12646:4;12637:6;12505:146;;;12497:154;;12699:9;12693:4;12689:20;12684:2;12673:9;12669:18;12662:48;12724:146;12865:4;12856:6;12724:146;;;12716:154;;12881:118;12995:2;12984:9;12980:18;12971:6;12881:118;;;13048:9;13042:4;13038:20;13032:3;13021:9;13017:19;13010:49;13073:146;13214:4;13205:6;13073:146;;;13065:154;;13230:73;13298:3;13287:9;13283:19;13274:6;13230:73;;;12181:1132;;;;;;;;;;13320:201;;13432:2;13421:9;13417:18;13409:26;;13446:65;13508:1;13497:9;13493:17;13484:6;13446:65;;;13403:118;;;;;13528:407;;13719:2;13708:9;13704:18;13696:26;;13769:9;13763:4;13759:20;13755:1;13744:9;13740:17;13733:47;13794:131;13920:4;13794:131;;;13786:139;;13690:245;;;;13942:407;;14133:2;14122:9;14118:18;14110:26;;14183:9;14177:4;14173:20;14169:1;14158:9;14154:17;14147:47;14208:131;14334:4;14208:131;;;14200:139;;14104:245;;;;14356:407;;14547:2;14536:9;14532:18;14524:26;;14597:9;14591:4;14587:20;14583:1;14572:9;14568:17;14561:47;14622:131;14748:4;14622:131;;;14614:139;;14518:245;;;;14770:407;;14961:2;14950:9;14946:18;14938:26;;15011:9;15005:4;15001:20;14997:1;14986:9;14982:17;14975:47;15036:131;15162:4;15036:131;;;15028:139;;14932:245;;;;15184:407;;15375:2;15364:9;15360:18;15352:26;;15425:9;15419:4;15415:20;15411:1;15400:9;15396:17;15389:47;15450:131;15576:4;15450:131;;;15442:139;;15346:245;;;;15598:407;;15789:2;15778:9;15774:18;15766:26;;15839:9;15833:4;15829:20;15825:1;15814:9;15810:17;15803:47;15864:131;15990:4;15864:131;;;15856:139;;15760:245;;;;16012:213;;16130:2;16119:9;16115:18;16107:26;;16144:71;16212:1;16201:9;16197:17;16188:6;16144:71;;;16101:124;;;;;16232:493;;16462:3;16451:9;16447:19;16439:27;;16477:71;16545:1;16534:9;16530:17;16521:6;16477:71;;;16559:156;16711:2;16700:9;16696:18;16687:6;16559:156;;;16433:292;;;;;;16732:2899;;17778:3;17767:9;17763:19;17755:27;;17793:71;17861:1;17850:9;17846:17;17837:6;17793:71;;;17912:9;17906:4;17902:20;17897:2;17886:9;17882:18;17875:48;17937:146;18078:4;18069:6;17937:146;;;17929:154;;18131:9;18125:4;18121:20;18116:2;18105:9;18101:18;18094:48;18156:146;18297:4;18288:6;18156:146;;;18148:154;;18350:9;18344:4;18340:20;18335:2;18324:9;18320:18;18313:48;18375:146;18516:4;18507:6;18375:146;;;18367:154;;18570:9;18564:4;18560:20;18554:3;18543:9;18539:19;18532:49;18595:146;18736:4;18727:6;18595:146;;;18587:154;;18790:9;18784:4;18780:20;18774:3;18763:9;18759:19;18752:49;18815:146;18956:4;18947:6;18815:146;;;18807:154;;19010:9;19004:4;19000:20;18994:3;18983:9;18979:19;18972:49;19035:146;19176:4;19167:6;19035:146;;;19027:154;;19230:9;19224:4;19220:20;19214:3;19203:9;19199:19;19192:49;19255:146;19396:4;19387:6;19255:146;;;19247:154;;19450:9;19444:4;19440:20;19434:3;19423:9;19419:19;19412:49;19475:146;19616:4;19607:6;19475:146;;;19467:154;;17749:1882;;;;;;;;;;;;;19638:620;;19904:3;19893:9;19889:19;19881:27;;19919:71;19987:1;19976:9;19972:17;19963:6;19919:71;;;20001:118;20115:2;20104:9;20100:18;20091:6;20001:118;;;20130;20244:2;20233:9;20229:18;20220:6;20130:118;;;19875:383;;;;;;;20265:1028;;20679:3;20668:9;20664:19;20656:27;;20694:71;20762:1;20751:9;20747:17;20738:6;20694:71;;;20776:118;20890:2;20879:9;20875:18;20866:6;20776:118;;;20905;21019:2;21008:9;21004:18;20995:6;20905:118;;;21034:119;21148:3;21137:9;21133:19;21124:6;21034:119;;;21164;21278:3;21267:9;21263:19;21254:6;21164:119;;;20650:643;;;;;;;;;21300:1844;;22010:3;21999:9;21995:19;21987:27;;22025:71;22093:1;22082:9;22078:17;22069:6;22025:71;;;22107:118;22221:2;22210:9;22206:18;22197:6;22107:118;;;22236;22350:2;22339:9;22335:18;22326:6;22236:118;;;22365:119;22479:3;22468:9;22464:19;22455:6;22365:119;;;22495;22609:3;22598:9;22594:19;22585:6;22495:119;;;22625;22739:3;22728:9;22724:19;22715:6;22625:119;;;22755;22869:3;22858:9;22854:19;22845:6;22755:119;;;22885;22999:3;22988:9;22984:19;22975:6;22885:119;;;23015;23129:3;23118:9;23114:19;23105:6;23015:119;;;21981:1163;;;;;;;;;;;;;23151:2048;;23935:3;23924:9;23920:19;23912:27;;23950:71;24018:1;24007:9;24003:17;23994:6;23950:71;;;24032:118;24146:2;24135:9;24131:18;24122:6;24032:118;;;24161;24275:2;24264:9;24260:18;24251:6;24161:118;;;24290:119;24404:3;24393:9;24389:19;24380:6;24290:119;;;24420;24534:3;24523:9;24519:19;24510:6;24420:119;;;24550;24664:3;24653:9;24649:19;24640:6;24550:119;;;24680;24794:3;24783:9;24779:19;24770:6;24680:119;;;24810;24924:3;24913:9;24909:19;24900:6;24810:119;;;24940;25054:3;25043:9;25039:19;25030:6;24940:119;;;25070;25184:3;25173:9;25169:19;25160:6;25070:119;;;23906:1293;;;;;;;;;;;;;;25206:256;;25268:2;25262:9;25252:19;;25306:4;25298:6;25294:17;25405:6;25393:10;25390:22;25369:18;25357:10;25354:34;25351:62;25348:2;;;25426:1;25423;25416:12;25348:2;25446:10;25442:2;25435:22;25246:216;;;;;25469:277;;25647:18;25639:6;25636:30;25633:2;;;25679:1;25676;25669:12;25633:2;25708:4;25700:6;25696:17;25688:25;;25736:4;25730;25726:15;25718:23;;25570:176;;;;25753:229;;25906:18;25898:6;25895:30;25892:2;;;25938:1;25935;25928:12;25892:2;25967:4;25959:6;25955:17;25947:25;;25829:153;;;;25989:233;;26146:18;26138:6;26135:30;26132:2;;;26178:1;26175;26168:12;26132:2;26207:4;26199:6;26195:17;26187:25;;26069:153;;;;26229:258;;26372:18;26364:6;26361:30;26358:2;;;26404:1;26401;26394:12;26358:2;26448:4;26444:9;26437:4;26429:6;26425:17;26421:33;26413:41;;26477:4;26471;26467:15;26459:23;;26295:192;;;;26496:125;;26608:6;26597:17;;26589:32;;;;26632:138;;26758:4;26750:6;26746:17;26735:28;;26727:43;;;;26779:113;;26884:3;26874:13;;26868:24;;;;26899:124;;27012:5;27006:12;26996:22;;26990:33;;;;27030:92;;27111:5;27105:12;27095:22;;27089:33;;;;27130:137;;27256:4;27248:6;27244:17;27233:28;;27226:41;;;;27276:139;;27404:4;27396:6;27392:17;27381:28;;27374:41;;;;27424:161;;27576:3;27561:18;;27554:31;;;;;27594:199;;27745:6;27740:3;27733:19;27782:4;27777:3;27773:14;27758:29;;27726:67;;;;;27802:163;;27917:6;27912:3;27905:19;27954:4;27949:3;27945:14;27930:29;;27898:67;;;;;27974:145;;28110:3;28095:18;;28088:31;;;;;28127:92;;28207:5;28200:13;28193:21;28182:32;;28176:43;;;;28226:79;;28295:5;28284:16;;28278:27;;;;28312:79;;28381:5;28370:16;;28364:27;;;;28398:79;;28467:5;28456:16;;28450:27;;;;28485:145;28566:6;28561:3;28556;28543:30;28622:1;28613:6;28608:3;28604:16;28597:27;28536:94;;;;28639:268;28704:1;28711:101;28725:6;28722:1;28719:13;28711:101;;;28801:1;28796:3;28792:11;28786:18;28782:1;28777:3;28773:11;28766:39;28747:2;28744:1;28740:10;28735:15;;28711:101;;;28827:6;28824:1;28821:13;28818:2;;;28892:1;28883:6;28878:3;28874:16;28867:27;28818:2;28688:219;;;;;28915:74;;28979:5;28968:16;;28962:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 64;\n    uint256 constant n = 6;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n    uint256 constant UNITY = 9334303377689037989442018753807510978357674015322511348041267794643984346845; // primitive 2^28th root of unity modulo GROUP_ORDER (not field!)\n\n    G1Point[] gs;\n    G1Point[] hs;\n    G1Point g;\n    G1Point h;\n\n    struct ZetherStatement {\n        G1Point[] CLn;\n        G1Point[] CRn;\n        G1Point[] C;\n        G1Point D;\n        G1Point[] y;\n        uint256 epoch;\n        G1Point u;\n    }\n\n    struct ZetherProof {\n        G1Point BA;\n        G1Point BS;\n        G1Point A;\n        G1Point B;\n        G1Point C;\n        G1Point D;\n        G1Point E;\n        G1Point F;\n\n        G1Point[] CLnG;\n        G1Point[] CRnG;\n        G1Point[] C_0G;\n        G1Point[] DG;\n        G1Point[] y_0G;\n        G1Point[] gG;\n        G1Point[] C_XG;\n        G1Point[] y_XG;\n\n        uint256[] f;\n        uint256 z_A;\n        uint256 z_C;\n        uint256 z_E;\n\n        G1Point CPrime;\n        G1Point DPrime;\n        G1Point CLnPrime;\n        G1Point CRnPrime;\n\n        G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 tauX;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_r;\n        uint256 s_vTransfer;\n        uint256 s_vDiff;\n        uint256 s_nuTransfer;\n        uint256 s_nuDiff;\n\n        InnerProductProof ipProof;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function verifyTransfer(bytes32[2][] memory CLn, bytes32[2][] memory CRn, bytes32[2][] memory C, bytes32[2] memory D, bytes32[2][] memory y, uint256 epoch, bytes32[2] memory u, bytes memory proof) view public returns (bool) {\n        ZetherStatement memory statement;\n        uint256 size = y.length;\n\n        statement.CLn = new G1Point[](size);\n        statement.CRn = new G1Point[](size);\n        statement.C = new G1Point[](size);\n        statement.y = new G1Point[](size);\n        for (uint256 i = 0; i < size; i++) {\n            statement.CLn[i] = G1Point(uint256(CLn[i][0]), uint256(CLn[i][1]));\n            statement.CRn[i] = G1Point(uint256(CRn[i][0]), uint256(CRn[i][1]));\n            statement.C[i] = G1Point(uint256(C[i][0]), uint256(C[i][1]));\n            statement.y[i] = G1Point(uint256(y[i][0]), uint256(y[i][1]));\n        }\n        statement.D = G1Point(uint256(D[0]), uint256(D[1]));\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[2] zs; // [z^2, z^3]\n        uint256[m] twoTimesZSquared;\n        uint256 zSum;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        G1Point A_y;\n        G1Point A_D;\n        G1Point gEpoch;\n        G1Point A_u;\n        G1Point A_B;\n        G1Point A_X;\n        G1Point c_commit;\n        G1Point A_t;\n        G1Point A_C0;\n        G1Point A_CLn;\n        G1Point A_CPrime;\n        G1Point A_CLnPrime;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 m;\n        uint256 N;\n        uint256 v;\n        uint256 w;\n        uint256 vPow;\n        uint256 wPow;\n        uint256[2][] f; // could just allocate extra space in the proof?\n        uint256[2][] r; // each poly is an array of length N. evaluations of prods\n        G1Point temp;\n        G1Point CLnR;\n        G1Point CRnR;\n        G1Point[2][] CR;\n        G1Point[2][] yR;\n        G1Point C_XR;\n        G1Point y_XR;\n        G1Point gR;\n        G1Point DR;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u_x;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 o;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) view internal returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.C, statement.D, statement.y, statement.epoch))).mod();\n\n        AnonAuxiliaries memory anonAuxiliaries;\n        anonAuxiliaries.v = uint256(keccak256(abi.encode(statementHash, proof.BA, proof.BS, proof.A, proof.B, proof.C, proof.D, proof.E, proof.F))).mod();\n        anonAuxiliaries.w = uint256(keccak256(abi.encode(anonAuxiliaries.v, proof.CLnG, proof.CRnG, proof.C_0G, proof.DG, proof.y_0G, proof.gG, proof.C_XG, proof.y_XG))).mod();\n        anonAuxiliaries.m = proof.f.length / 2;\n        anonAuxiliaries.N = 2 ** anonAuxiliaries.m;\n        anonAuxiliaries.f = new uint256[2][](2 * anonAuxiliaries.m);\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) {\n            anonAuxiliaries.f[k][1] = proof.f[k];\n            anonAuxiliaries.f[k][0] = anonAuxiliaries.w.sub(proof.f[k]);\n        }\n\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) {\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[k], anonAuxiliaries.f[k][1]));\n        }\n        require(eq(add(mul(proof.B, anonAuxiliaries.w), proof.A), add(anonAuxiliaries.temp, mul(h, proof.z_A))), \"Recovery failure for B^w * A.\");\n\n        anonAuxiliaries.temp = G1Point(0, 0);\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) { // danger... gs and hs need to be big enough.\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[k], anonAuxiliaries.f[k][1].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[k][1]))));\n        }\n        require(eq(add(mul(proof.C, anonAuxiliaries.w), proof.D), add(anonAuxiliaries.temp, mul(h, proof.z_C))), \"Recovery failure for C^w * D.\");\n\n        anonAuxiliaries.temp = add(mul(gs[0], anonAuxiliaries.f[0][1].mul(anonAuxiliaries.f[anonAuxiliaries.m][1])), mul(gs[1], anonAuxiliaries.f[0][0].mul(anonAuxiliaries.f[anonAuxiliaries.m][0])));\n        require(eq(add(mul(proof.F, anonAuxiliaries.w), proof.E), add(anonAuxiliaries.temp, mul(h, proof.z_E))), \"Recovery failure for F^w * E.\");\n\n        anonAuxiliaries.r = assemblePolynomials(anonAuxiliaries.f);\n\n        anonAuxiliaries.CR = assembleConvolutions(anonAuxiliaries.r, statement.C);\n        anonAuxiliaries.yR = assembleConvolutions(anonAuxiliaries.r, statement.y);\n        for (uint256 i = 0; i < anonAuxiliaries.N; i++) {\n            anonAuxiliaries.CLnR = add(anonAuxiliaries.CLnR, mul(statement.CLn[i], anonAuxiliaries.r[i][0]));\n            anonAuxiliaries.CRnR = add(anonAuxiliaries.CRnR, mul(statement.CRn[i], anonAuxiliaries.r[i][0]));\n        }\n        anonAuxiliaries.vPow = 1;\n        for (uint256 i = 0; i < anonAuxiliaries.N; i++) {\n            anonAuxiliaries.C_XR = add(anonAuxiliaries.C_XR, mul(anonAuxiliaries.CR[i / 2][i % 2], anonAuxiliaries.vPow));\n            anonAuxiliaries.y_XR = add(anonAuxiliaries.y_XR, mul(anonAuxiliaries.yR[i / 2][i % 2], anonAuxiliaries.vPow));\n            if (i > 0) {\n                anonAuxiliaries.vPow = anonAuxiliaries.vPow.mul(anonAuxiliaries.v);\n            }\n        }\n        anonAuxiliaries.wPow = 1;\n        for (uint256 k = 0; k < anonAuxiliaries.m; k++) {\n            anonAuxiliaries.CLnR = add(anonAuxiliaries.CLnR, mul(proof.CLnG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CRnR = add(anonAuxiliaries.CRnR, mul(proof.CRnG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CR[0][0] = add(anonAuxiliaries.CR[0][0], mul(proof.C_0G[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.DR = add(anonAuxiliaries.DR, mul(proof.DG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.yR[0][0] = add(anonAuxiliaries.yR[0][0], mul(proof.y_0G[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.gR = add(anonAuxiliaries.gR, mul(proof.gG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.C_XR = add(anonAuxiliaries.C_XR, mul(proof.C_XG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.y_XR = add(anonAuxiliaries.y_XR, mul(proof.y_XG[k], anonAuxiliaries.wPow.neg()));\n\n            anonAuxiliaries.wPow = anonAuxiliaries.wPow.mul(anonAuxiliaries.w);\n        }\n        anonAuxiliaries.DR = add(anonAuxiliaries.DR, mul(statement.D, anonAuxiliaries.wPow));\n        anonAuxiliaries.gR = add(anonAuxiliaries.gR, mul(g, anonAuxiliaries.wPow));\n\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(anonAuxiliaries.w, proof.CPrime, proof.DPrime, proof.CLnPrime, proof.CRnPrime))).mod();\n        zetherAuxiliaries.ys = powers(zetherAuxiliaries.y);\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs = [zetherAuxiliaries.z.exp(2), zetherAuxiliaries.z.exp(3)];        \n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = sumScalars(zetherAuxiliaries.ys).mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** (m / 2)).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.t = proof.tHat.sub(zetherAuxiliaries.k);\n        for (uint256 i = 0; i < m / 2; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + m / 2] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.tCommits))).mod();\n        zetherAuxiliaries.tEval = add(mul(proof.tCommits[0], zetherAuxiliaries.x), mul(proof.tCommits[1], zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = add(mul(anonAuxiliaries.gR, proof.s_sk), mul(anonAuxiliaries.yR[0][0], proof.c.neg()));\n        sigmaAuxiliaries.A_D = add(mul(g, proof.s_r), mul(statement.D, proof.c.neg())); // add(mul(anonAuxiliaries.gR, proof.s_r), mul(anonAuxiliaries.DR, proof.c.neg()));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = add(mul(sigmaAuxiliaries.gEpoch, proof.s_sk), mul(statement.u, proof.c.neg()));\n        sigmaAuxiliaries.A_X = add(mul(anonAuxiliaries.y_XR, proof.s_r), mul(anonAuxiliaries.C_XR, proof.c.neg()));\n        sigmaAuxiliaries.c_commit = add(mul(add(mul(add(anonAuxiliaries.DR, proof.DPrime), proof.s_sk), mul(add(anonAuxiliaries.CR[0][0], proof.CPrime), proof.c.neg())), zetherAuxiliaries.zs[0]), mul(add(mul(add(anonAuxiliaries.CRnR, proof.CRnPrime), proof.s_sk), mul(add(anonAuxiliaries.CLnR, proof.CLnPrime), proof.c.neg())), zetherAuxiliaries.zs[1]));\n        sigmaAuxiliaries.A_t = add(mul(add(add(mul(g, zetherAuxiliaries.t), mul(h, proof.tauX)), neg(zetherAuxiliaries.tEval)), proof.c.mul(anonAuxiliaries.wPow)), sigmaAuxiliaries.c_commit);\n        sigmaAuxiliaries.A_C0 = add(mul(g, proof.s_vTransfer), add(mul(anonAuxiliaries.DR, proof.s_sk), mul(anonAuxiliaries.CR[0][0], proof.c.neg())));\n        sigmaAuxiliaries.A_CLn = add(mul(g, proof.s_vDiff), add(mul(anonAuxiliaries.CRnR, proof.s_sk), mul(anonAuxiliaries.CLnR, proof.c.neg())));\n        sigmaAuxiliaries.A_CPrime = add(mul(h, proof.s_nuTransfer), add(mul(proof.DPrime, proof.s_sk), mul(proof.CPrime, proof.c.neg())));\n        sigmaAuxiliaries.A_CLnPrime = add(mul(h, proof.s_nuDiff), add(mul(proof.CRnPrime, proof.s_sk), mul(proof.CLnPrime, proof.c.neg())));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(zetherAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_D, sigmaAuxiliaries.A_u, sigmaAuxiliaries.A_X, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_C0, sigmaAuxiliaries.A_CLn, sigmaAuxiliaries.A_CPrime, sigmaAuxiliaries.A_CLnPrime))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = mul(g, ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = hadamardInv(hs, zetherAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(zetherAuxiliaries.ys, zetherAuxiliaries.z), zetherAuxiliaries.twoTimesZSquared);\n        ipAuxiliaries.P = add(add(add(proof.BA, mul(proof.BS, zetherAuxiliaries.x)), mul(sumPoints(gs), zetherAuxiliaries.z.neg())), commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(h, proof.mu.neg()));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u_x, proof.tHat));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.o = uint256(keccak256(abi.encode(ipAuxiliaries.o, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.o; // overwrites value\n            uint256 xInv = ipAuxiliaries.o.inv();\n            ipAuxiliaries.P = add(ipAuxiliaries.P, add(mul(ipProof.ls[i], ipAuxiliaries.o.exp(2)), mul(ipProof.rs[i], xInv.exp(2))));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u_x, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function assemblePolynomials(uint256[2][] memory f) internal view returns (uint256[2][] memory result) {\n        uint256 m = f.length / 2;\n        uint256 N = 2 ** m;\n        result = new uint256[2][](N);\n        for (uint256 i = 0; i < 2; i++) {\n            uint256[] memory half = recursivePolynomials(i * m, (i + 1) * m, 1, f);\n            for (uint256 j = 0; j < N; j++) {\n                result[j][i] = half[j];\n            }\n        }\n    }\n\n    function recursivePolynomials(uint256 baseline, uint256 current, uint256 accum, uint256[2][] memory f) internal view returns (uint256[] memory result) {\n        // have to do a bunch of re-allocating because solidity won't let me have something which is internal and also modifies (internal) state. (?)\n        uint256 size = 2 ** (current - baseline); // size is at least 2...\n        result = new uint256[](size);\n\n        if (current == baseline) {\n            result[0] = accum;\n            return result;\n        }\n        current = current - 1;\n\n        uint256[] memory left = recursivePolynomials(baseline, current, accum.mul(f[current][0]), f);\n        uint256[] memory right = recursivePolynomials(baseline, current, accum.mul(f[current][1]), f);\n        for (uint256 i = 0; i < size / 2; i++) {\n            result[i] = left[i];\n            result[i + size / 2] = right[i];\n        }\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, G1Point[] memory base) internal view returns (G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            G1Point[] memory inverse_fft = new G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = mul(add(mul(base_fft[j], exponent_fft[j]), mul(base_fft[j + half], exponent_fft[j + half])), compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n    }\n\n    function fft(G1Point[] memory input, bool inverse) internal view returns (G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        G1Point[] memory even = fft(extract(input, 0), inverse);\n        G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            G1Point memory temp = mul(odd[i], omega_run);\n            result[i] = mul(add(even[i], temp), compensation);\n            result[i + size / 2] = mul(add(even[i], neg(temp)), compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(G1Point[] memory input, uint256 parity) internal pure returns (G1Point[] memory result) {\n        result = new G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.BA = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.BS = G1Point(slice(arr, 64), slice(arr, 96));\n        proof.A = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.B = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.C = G1Point(slice(arr, 256), slice(arr, 288));\n        proof.D = G1Point(slice(arr, 320), slice(arr, 352));\n        proof.E = G1Point(slice(arr, 384), slice(arr, 416));\n        proof.F = G1Point(slice(arr, 448), slice(arr, 480));\n\n        uint256 m = (arr.length - 2144) / 576;\n        proof.CLnG = new G1Point[](m);\n        proof.CRnG = new G1Point[](m);\n        proof.C_0G = new G1Point[](m);\n        proof.DG = new G1Point[](m);\n        proof.y_0G = new G1Point[](m);\n        proof.gG = new G1Point[](m);\n        proof.C_XG = new G1Point[](m);\n        proof.y_XG = new G1Point[](m);\n        proof.f = new uint256[](2 * m);\n        for (uint256 k = 0; k < m; k++) {\n            proof.CLnG[k] = G1Point(slice(arr, 512 + k * 64), slice(arr, 544 + k * 64));\n            proof.CRnG[k] = G1Point(slice(arr, 512 + (m + k) * 64), slice(arr, 544 + (m + k) * 64));\n            proof.C_0G[k] = G1Point(slice(arr, 512 + m * 128 + k * 64), slice(arr, 544 + m * 128 + k * 64));\n            proof.DG[k] = G1Point(slice(arr, 512 + m * 192 + k * 64), slice(arr, 544 + m * 192 + k * 64));\n            proof.y_0G[k] = G1Point(slice(arr, 512 + m * 256 + k * 64), slice(arr, 544 + m * 256 + k * 64));\n            proof.gG[k] = G1Point(slice(arr, 512 + m * 320 + k * 64), slice(arr, 544 + m * 320 + k * 64));\n            proof.C_XG[k] = G1Point(slice(arr, 512 + m * 384 + k * 64), slice(arr, 544 + m * 384 + k * 64));\n            proof.y_XG[k] = G1Point(slice(arr, 512 + m * 448 + k * 64), slice(arr, 544 + m * 448 + k * 64));\n            proof.f[k] = slice(arr, 512 + m * 512 + k * 32);\n            proof.f[k + m] = slice(arr, 512 + m * 544 + k * 32);\n        }\n        uint256 starting = m * 576;\n        proof.z_A = slice(arr, 512 + starting);\n        proof.z_C = slice(arr, 544 + starting);\n        proof.z_E = slice(arr, 576 + starting);\n\n        proof.CPrime = G1Point(slice(arr, 608 + starting), slice(arr, 640 + starting));\n        proof.DPrime = G1Point(slice(arr, 672 + starting), slice(arr, 704 + starting));\n        proof.CLnPrime = G1Point(slice(arr, 736 + starting), slice(arr, 768 + starting));\n        proof.CRnPrime = G1Point(slice(arr, 800 + starting), slice(arr, 832 + starting));\n\n        proof.tCommits = [G1Point(slice(arr, 864 + starting), slice(arr, 896 + starting)), G1Point(slice(arr, 928 + starting), slice(arr, 960 + starting))];\n        proof.tHat = slice(arr, 992 + starting);\n        proof.tauX = slice(arr, 1024 + starting);\n        proof.mu = slice(arr, 1056 + starting);\n\n        proof.c = slice(arr, 1088 + starting);\n        proof.s_sk = slice(arr, 1120 + starting);\n        proof.s_r = slice(arr, 1152 + starting);\n        proof.s_vTransfer = slice(arr, 1184 + starting);\n        proof.s_vDiff = slice(arr, 1216 + starting);\n        proof.s_nuTransfer = slice(arr, 1248 + starting);\n        proof.s_nuDiff = slice(arr, 1280 + starting);\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 1312 + starting + i * 64), slice(arr, 1344 + starting + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 1312 + starting + (n + i) * 64), slice(arr, 1344 + starting + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 1312 + starting + n * 128);\n        ipProof.b = slice(arr, 1344 + starting + n * 128);\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) {\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-26T18:28:14.461Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}