{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [
        {
          "name": "_ip",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "x",
              "type": "bytes32"
            },
            {
              "name": "y",
              "type": "bytes32"
            }
          ],
          "name": "CLn",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "bytes32"
            },
            {
              "name": "y",
              "type": "bytes32"
            }
          ],
          "name": "CRn",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "bytes32"
            },
            {
              "name": "y",
              "type": "bytes32"
            }
          ],
          "name": "C",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "bytes32"
            },
            {
              "name": "y",
              "type": "bytes32"
            }
          ],
          "name": "D",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "bytes32"
            },
            {
              "name": "y",
              "type": "bytes32"
            }
          ],
          "name": "y",
          "type": "tuple[]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "x",
              "type": "bytes32"
            },
            {
              "name": "y",
              "type": "bytes32"
            }
          ],
          "name": "u",
          "type": "tuple"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"components\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"CLn\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"CRn\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"C\",\"type\":\"tuple[]\"},{\"components\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"D\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"y\",\"type\":\"tuple[]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"x\",\"type\":\"bytes32\"},{\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"u\",\"type\":\"tuple\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ip\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/InnerProductVerifier.sol\":{\"keccak256\":\"0x35a83f4b702a7828b658721e1fb879b8b7405d4817f70a0f253390df6a496133\",\"urls\":[\"bzzr://bb6237e32092d4abe23feaf6363eca1dd050d342b110a79a90e0f9c2bdf2a345\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x9b61721071ca5df079abe43906e41fc7a3e8da6994f974ff7d22d6e114c01938\",\"urls\":[\"bzzr://d180973b32645bdfe8d5a216020483efac70379ea0b14a55d231d29f91c15155\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0x054d5a3cd44e8234dca8352fdb5738ad5df0224ebecd9170270683feb9d761c6\",\"urls\":[\"bzzr://d59fe88548e913168a050911c13a7ee5ca3bf073692b0c4614eb17e9ab73da22\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610048576000357c010000000000000000000000000000000000000000000000000000000090048063d2d5e70a1461004d575b600080fd5b61006760048036036100629190810190613f8a565b61007d565b60405161007491906145c4565b60405180910390f35b600061008761397b565b898160000181905250888160200181905250878160400181905250868160600181905250858160800181905250848160a0018181525050838160c001819052506100cf6139c6565b6100d8846100f4565b90506100e48282610aca565b9250505098975050505050505050565b6100fc6139c6565b604080519081016040528061011284600061285f565b815260200161012284602061285f565b8152508160000181905250604080519081016040528061014384604061285f565b815260200161015384606061285f565b8152508160200181905250604080519081016040528061017484608061285f565b81526020016101848460a061285f565b815250816040018190525060408051908101604052806101a58460c061285f565b81526020016101b58460e061285f565b815250816060018190525060006102406105c08451038115156101d457fe5b0490508060405190808252806020026020018201604052801561021157816020015b6101fe613aa7565b8152602001906001900390816101f65790505b5082608001819052508060405190808252806020026020018201604052801561025457816020015b610241613aa7565b8152602001906001900390816102395790505b508260a001819052508060405190808252806020026020018201604052801561029757816020015b610284613aa7565b81526020019060019003908161027c5790505b508260c00181905250806040519080825280602002602001820160405280156102da57816020015b6102c7613aa7565b8152602001906001900390816102bf5790505b508260e001819052508060405190808252806020026020018201604052801561031d57816020015b61030a613aa7565b8152602001906001900390816103025790505b508261010001819052508060405190808252806020026020018201604052801561036157816020015b61034e613aa7565b8152602001906001900390816103465790505b50826101200181905250806040519080825280602002602001820160405280156103a557816020015b610392613aa7565b81526020019060019003908161038a5790505b50826101400181905250806040519080825280602002602001820160405280156103e957816020015b6103d6613aa7565b8152602001906001900390816103ce5790505b50826101600181905250806002026040519080825280602002602001820160405280156104255781602001602082028038833980820191505090505b5082610180018190525060008090505b818110156107b057604080519081016040528061045986604085026101000161285f565b815260200161046f86604085026101200161285f565b81525083608001518281518110151561048457fe5b9060200190602002018190525060408051908101604052806104af866040858701026101000161285f565b81526020016104c7866040858701026101200161285f565b8152508360a00151828151811015156104dc57fe5b90602001906020020181905250604080519081016040528061050a866040850260808702610100010161285f565b8152602001610525866040850260808702610120010161285f565b8152508360c001518281518110151561053a57fe5b906020019060200201819052506040805190810160405280610568866040850260c08702610100010161285f565b8152602001610583866040850260c08702610120010161285f565b8152508360e001518281518110151561059857fe5b9060200190602002018190525060408051908101604052806105c786604085026101008702610100010161285f565b81526020016105e386604085026101008702610120010161285f565b815250836101000151828151811015156105f957fe5b90602001906020020181905250604080519081016040528061062886604085026101408702610100010161285f565b815260200161064486604085026101408702610120010161285f565b8152508361012001518281518110151561065a57fe5b90602001906020020181905250604080519081016040528061068986604085026101808702610100010161285f565b81526020016106a586604085026101808702610120010161285f565b815250836101400151828151811015156106bb57fe5b9060200190602002018190525060408051908101604052806106ea86604085026101c08702610100010161285f565b815260200161070686604085026101c08702610120010161285f565b8152508361016001518281518110151561071c57fe5b9060200190602002018190525061074084602083026102008502610100010161285f565b600190048361018001518281518110151561075757fe5b906020019060200201818152505061077c84602083026102208502610100010161285f565b6001900483610180015183830181518110151561079557fe5b90602001906020020181815250508080600101915050610435565b506000610240820290506107c884826101000161285f565b60019004836101a0018181525050604080519081016040528060408051908101604052806107fa88866101200161285f565b815260200161080d88866101400161285f565b8152508152602001604080519081016040528061082e88866101600161285f565b815260200161084188866101800161285f565b81525081525083610200018190525061085e84826101a00161285f565b600190048361022001818152505061087a84826101c00161285f565b600190048361024001818152505061089684826101e00161285f565b60019004836102600181815250506108b284826102000161285f565b60019004836102800181815250506108ce84826102200161285f565b60019004836102a00181815250506108ea84826102400161285f565b60019004836102c001818152505061090684826102600161285f565b60019004836102e001818152505061091c613ac7565b600660405190808252806020026020018201604052801561095757816020015b610944613aa7565b81526020019060019003908161093c5790505b508160000181905250600660405190808252806020026020018201604052801561099b57816020015b610988613aa7565b8152602001906001900390816109805790505b50816020018190525060008090505b6006811015610a765760408051908101604052806109d1886040850287610280010161285f565b81526020016109e98860408502876102a0010161285f565b8152508260000151828151811015156109fe57fe5b906020019060200201819052506040805190810160405280610a2c886040856006010287610280010161285f565b8152602001610a478860408560060102876102a0010161285f565b815250826020015182815181101515610a5c57fe5b9060200190602002018190525080806001019150506109aa565b50610a898561030084610280010161285f565b60019004816040018181525050610aa885610300846102a0010161285f565b6001900481606001818152505080846103000181905250839350505050919050565b600080610b22846000015185602001518660400151876060015188608001518960a00151604051602001610b03969594939291906144e6565b6040516020818303038152906040528051906020012060019004612878565b9050610b2c613af0565b610b77828560000151866020015187604001518860600151604051602001610b58959493929190614768565b6040516020818303038152906040528051906020012060019004612878565b816040018181525050610beb816040015185608001518660a001518760c001518860e001518961010001518a61012001518b61014001518c6101600151604051602001610bcc999897969594939291906146a3565b6040516020818303038152906040528051906020012060019004612878565b816060018181525050600284610180015151811515610c0657fe5b04816000018181525050806000015160020a8160200181815250508060000151600202604051908082528060200260200182016040528015610c6257816020015b610c4f613b9f565b815260200190600190039081610c475790505b508160c0018190525060008090505b8160000151600202811015610d435784610180015181815181101515610c9357fe5b906020019060200201518260c0015182815181101515610caf57fe5b906020019060200201516001600281101515610cc757fe5b602002018181525050610d0385610180015182815181101515610ce657fe5b9060200190602002015183606001516128ad90919063ffffffff16565b8260c0015182815181101515610d1557fe5b906020019060200201516000600281101515610d2d57fe5b6020020181815250508080600101915050610c71565b5060008090505b8160000151600202811015610ff057610e75610e618360c0015183815181101515610d7157fe5b906020019060200201516001600281101515610d8957fe5b60200201516000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166383ec1a49856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e04919061465f565b604080518083038186803b158015610e1b57600080fd5b505afa158015610e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e5391908101906140de565b6128ed90919063ffffffff16565b83610100015161292890919063ffffffff16565b826101000181905250610fda610fc6610ef38460c0015184815181101515610e9957fe5b906020019060200201516000600281101515610eb157fe5b60200201518560c0015185815181101515610ec857fe5b906020019060200201516001600281101515610ee057fe5b602002015161296e90919063ffffffff16565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633844923b856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f69919061465f565b604080518083038186803b158015610f8057600080fd5b505afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fb891908101906140de565b6128ed90919063ffffffff16565b83610100015161292890919063ffffffff16565b8261010001819052508080600101915050610d4a565b506112be6112aa61114b61106e8460c00151856000015181518110151561101357fe5b90602001906020020151600060028110151561102b57fe5b60200201518560c00151600081518110151561104357fe5b90602001906020020151600060028110151561105b57fe5b602002015161296e90919063ffffffff16565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633844923b60018760000151600202016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110ee919061465f565b604080518083038186803b15801561110557600080fd5b505afa158015611119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061113d91908101906140de565b6128ed90919063ffffffff16565b61129c6111c28560c00151866000015181518110151561116757fe5b90602001906020020151600160028110151561117f57fe5b60200201518660c00151600081518110151561119757fe5b9060200190602002015160016002811015156111af57fe5b602002015161296e90919063ffffffff16565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633844923b87600001516002026040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161123f919061465f565b604080518083038186803b15801561125657600080fd5b505afa15801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061128e91908101906140de565b6128ed90919063ffffffff16565b61292890919063ffffffff16565b82610100015161292890919063ffffffff16565b81610100018190525061133f6113006112ec866101a001516112de6129a5565b6128ed90919063ffffffff16565b83610100015161292890919063ffffffff16565b6113318660400151611323856060015189606001516128ed90919063ffffffff16565b61292890919063ffffffff16565b612a0d90919063ffffffff16565b1515611380576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113779061463f565b60405180910390fd5b61138d8160c00151612a35565b8160e001819052506113a78160e001518660400151612b2d565b8161016001819052506113c28160e001518660800151612b2d565b816101800181905250600181608001818152505060008090505b81602001518110156116155761145b6114478360e001518381518110151561140057fe5b90602001906020020151600060028110151561141857fe5b602002015188600001518481518110151561142f57fe5b906020019060200201516128ed90919063ffffffff16565b83610120015161292890919063ffffffff16565b8261012001819052506114d76114c38360e001518381518110151561147c57fe5b90602001906020020151600060028110151561149457fe5b60200201518860200151848151811015156114ab57fe5b906020019060200201516128ed90919063ffffffff16565b83610140015161292890919063ffffffff16565b82610140018190525061155461154083608001518461016001516002858115156114fd57fe5b0481518110151561150a57fe5b9060200190602002015160028581151561152057fe5b0660028110151561152d57fe5b60200201516128ed90919063ffffffff16565b836101a0015161292890919063ffffffff16565b826101a001819052506115d16115bd836080015184610180015160028581151561157a57fe5b0481518110151561158757fe5b9060200190602002015160028581151561159d57fe5b066002811015156115aa57fe5b60200201516128ed90919063ffffffff16565b836101c0015161292890919063ffffffff16565b826101c001819052506000811115611608576115fe8260400151836080015161296e90919063ffffffff16565b8260800181815250505b80806001019150506113dc565b5060018160a001818152505060008090505b81600001518110156119e4576116846116706116468460a00151612e07565b87608001518481518110151561165857fe5b906020019060200201516128ed90919063ffffffff16565b83610120015161292890919063ffffffff16565b8261012001819052506116de6116ca6116a08460a00151612e07565b8760a00151848151811015156116b257fe5b906020019060200201516128ed90919063ffffffff16565b83610140015161292890919063ffffffff16565b8261014001819052506117636117246116fa8460a00151612e07565b8760c001518481518110151561170c57fe5b906020019060200201516128ed90919063ffffffff16565b836101600151600081518110151561173857fe5b90602001906020020151600060028110151561175057fe5b602002015161292890919063ffffffff16565b826101600151600081518110151561177757fe5b90602001906020020151600060028110151561178f57fe5b60200201819052506117e86117d46117aa8460a00151612e07565b8760e00151848151811015156117bc57fe5b906020019060200201516128ed90919063ffffffff16565b83610200015161292890919063ffffffff16565b82610200018190525061186e61182f6118048460a00151612e07565b8761010001518481518110151561181757fe5b906020019060200201516128ed90919063ffffffff16565b836101800151600081518110151561184357fe5b90602001906020020151600060028110151561185b57fe5b602002015161292890919063ffffffff16565b826101800151600081518110151561188257fe5b90602001906020020151600060028110151561189a57fe5b60200201819052506118f46118e06118b58460a00151612e07565b876101200151848151811015156118c857fe5b906020019060200201516128ed90919063ffffffff16565b836101e0015161292890919063ffffffff16565b826101e0018190525061194f61193b6119108460a00151612e07565b8761014001518481518110151561192357fe5b906020019060200201516128ed90919063ffffffff16565b836101a0015161292890919063ffffffff16565b826101a001819052506119aa61199661196b8460a00151612e07565b8761016001518481518110151561197e57fe5b906020019060200201516128ed90919063ffffffff16565b836101c0015161292890919063ffffffff16565b826101c001819052506119ce82606001518360a0015161296e90919063ffffffff16565b8260a00181815250508080600101915050611627565b50611a17611a038260a0015187606001516128ed90919063ffffffff16565b82610200015161292890919063ffffffff16565b816102000181905250611a55611a418260a00151611a33612e33565b6128ed90919063ffffffff16565b826101e0015161292890919063ffffffff16565b816101e00181905250611a66613bc1565b611a9d8260600151604051602001611a7e919061465f565b6040516020818303038152906040528051906020012060019004612878565b816000018181525050600181602001516000604081101515611abb57fe5b6020020181815250506001816101000181815250506000600190505b6040811015611b7057611b108260000151836020015160018403604081101515611afd57fe5b602002015161296e90919063ffffffff16565b826020015182604081101515611b2257fe5b602002018181525050611b59826020015182604081101515611b4057fe5b6020020151836101000151612e9b90919063ffffffff16565b826101000181815250508080600101915050611ad7565b50611ba88160000151604051602001611b89919061465f565b6040516020818303038152906040528051906020012060019004612878565b8160400181815250506040805190810160405280611bd460028460400151612ed290919063ffffffff16565b8152602001611bf160038460400151612ed290919063ffffffff16565b8152508160600181905250611c538160400151611c4583606001516001600281101515611c1a57fe5b602002015184606001516000600281101515611c3257fe5b6020020151612e9b90919063ffffffff16565b61296e90919063ffffffff16565b8160a0018181525050611ce4611c918260a00151611c836401000000008560a0015161296e90919063ffffffff16565b6128ad90919063ffffffff16565b611cd6611cc284606001516000600281101515611caa57fe5b602002015185604001516128ad90919063ffffffff16565b84610100015161296e90919063ffffffff16565b6128ad90919063ffffffff16565b81610100018181525050611d0b8161010001518661022001516128ad90919063ffffffff16565b8160e001818152505060008090505b6020811015611dc357611d508160020a83606001516000600281101515611d3d57fe5b602002015161296e90919063ffffffff16565b826080015182604081101515611d6257fe5b602002018181525050611d988160020a83606001516001600281101515611d8557fe5b602002015161296e90919063ffffffff16565b826080015160208301604081101515611dad57fe5b6020020181815250508080600101915050611d1a565b50611e028160400151866102000151604051602001611de392919061467a565b6040516020818303038152906040528051906020012060019004612878565b8160c0018181525050611e90611e53611e2c8360c001518460c0015161296e90919063ffffffff16565b8761020001516001600281101515611e4057fe5b60200201516128ed90919063ffffffff16565b611e828360c001518861020001516000600281101515611e6f57fe5b60200201516128ed90919063ffffffff16565b61292890919063ffffffff16565b816101200181905250611ea1613c2d565b611f1f611ef4611eb5886102600151612e07565b8561018001516000815181101515611ec957fe5b906020019060200201516000600281101515611ee157fe5b60200201516128ed90919063ffffffff16565b611f11886102800151866101e001516128ed90919063ffffffff16565b61292890919063ffffffff16565b8160200181905250611f7b611f4e611f3b886102600151612e07565b89606001516128ed90919063ffffffff16565b611f6d886102a00151611f5f612e33565b6128ed90919063ffffffff16565b61292890919063ffffffff16565b81604001819052506121136120e661204a611f9a896102600151612e07565b61203c611fcc87606001516001600281101515611fb357fe5b60200201518961012001516128ed90919063ffffffff16565b61202e611fef89606001516000600281101515611fe557fe5b6020020151612e07565b8a6101600151600081518110151561200357fe5b90602001906020020151600060028110151561201b57fe5b60200201516128ed90919063ffffffff16565b61292890919063ffffffff16565b6128ed90919063ffffffff16565b6120d88961028001516120ca6120858860600151600160028110151561206c57fe5b60200201518a61014001516128ed90919063ffffffff16565b6120bc6120a88a60600151600060028110151561209e57fe5b6020020151612e07565b8b61020001516128ed90919063ffffffff16565b61292890919063ffffffff16565b6128ed90919063ffffffff16565b61292890919063ffffffff16565b612105886102c001516120f7612e33565b6128ed90919063ffffffff16565b61292890919063ffffffff16565b816060018190525061216e61214361212f886102600151612e07565b856101a001516128ed90919063ffffffff16565b612160886102a00151866101c001516128ed90919063ffffffff16565b61292890919063ffffffff16565b81608001819052506122486121a061218a886102c00151612e07565b612192612e33565b6128ed90919063ffffffff16565b61223a6121c2896102e001516121b46129a5565b6128ed90919063ffffffff16565b61222c6121e18860a001518c610260015161296e90919063ffffffff16565b61221e6121f2896101200151612f3f565b6122108a60e00151612202612e33565b6128ed90919063ffffffff16565b61292890919063ffffffff16565b6128ed90919063ffffffff16565b61292890919063ffffffff16565b61292890919063ffffffff16565b8160a001819052506122936040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508860a00151612f94565b8160c001819052506122ec6122c26122af886102600151612e07565b8960c001516128ed90919063ffffffff16565b6122de8861028001518460c001516128ed90919063ffffffff16565b61292890919063ffffffff16565b8160e0018190525061234f8260c0015182602001518360400151846060015185608001518660a001518760e0015160405160200161233097969594939291906147bc565b6040516020818303038152906040528051906020012060019004612878565b81600001818152505085610260015181600001511415156123a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239c906145ff565b60405180910390fd5b6123ad613c9d565b6123e482600001516040516020016123c5919061465f565b6040516020818303038152906040528051906020012060019004612878565b81608001818152505061240b81608001516123fd6129a5565b6128ed90919063ffffffff16565b81602001819052506040805190808252806020026020018201604052801561244d57816020015b61243a613aa7565b8152602001906001900390816124325790505b50816040018190525060008090505b60408110156126265761255a61248785602001518360408110151561247d57fe5b6020020151613004565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633844923b846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124fd919061465f565b604080518083038186803b15801561251457600080fd5b505afa158015612528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061254c91908101906140de565b6128ed90919063ffffffff16565b82604001518281518110151561256c57fe5b906020019060200201819052506126116125fe6125d486608001518460408110151561259457fe5b60200201516125c688604001518960200151876040811015156125b357fe5b602002015161296e90919063ffffffff16565b612e9b90919063ffffffff16565b8460400151848151811015156125e657fe5b906020019060200201516128ed90919063ffffffff16565b836060015161292890919063ffffffff16565b8260600181905250808060010191505061245c565b506126a581606001516126976126586126428760400151612e07565b61264a61303a565b6128ed90919063ffffffff16565b6126896126768860c001518d602001516128ed90919063ffffffff16565b8c6000015161292890919063ffffffff16565b61292890919063ffffffff16565b61292890919063ffffffff16565b81600001819052506126ea6126d76126c1896102400151612e07565b6126c96129a5565b6128ed90919063ffffffff16565b826000015161292890919063ffffffff16565b816000018190525061272461271188610220015183602001516128ed90919063ffffffff16565b826000015161292890919063ffffffff16565b81600001819052506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166397fa72ae8260400151836020015184600001518b610300015186608001516040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127bf959493929190614563565b60206040518083038186803b1580156127d757600080fd5b505afa1580156127eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061280f91908101906140b5565b1515612850576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128479061461f565b60405180910390fd5b60019550505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001828115156128a557fe5b069050919050565b6000818310156128e15782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103016128e5565b8183035b905092915050565b6128f5613ce0565b604051835181526020840151602082015282604082015260408260608360075afa151561292157600080fd5b5092915050565b612930613ce0565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561296757600080fd5b5092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561299a57fe5b828409905092915050565b6129ad613ce0565b60408051908101604052807f01b7de3dcf359928dd19f643d54dc487478b68a5b2634f9f1903c9fb78331aef60010281526020017f2bda7d3ae6a557c716477c108be0d0f94abc6c4dc6b1bd93caccbcceaaa71d6b600102815250905090565b600081600001518360000151148015612a2d575081602001518360200151145b905092915050565b6060600060028351811515612a4657fe5b04905060008160020a905080604051908082528060200260200182016040528015612a8b57816020015b612a78613b9f565b815260200190600190039081612a705790505b50925060008090505b6002811015612b25576060612ab38483028560018501026001896130a1565b905060008090505b83811015612b16578181815181101515612ad157fe5b906020019060200201518682815181101515612ae957fe5b9060200190602002015184600281101515612b0057fe5b6020020181815250508080600101915050612abb565b50508080600101915050612a94565b505050919050565b60606000835190506000600282811515612b4357fe5b04905080604051908082528060200260200182016040528015612b8057816020015b612b6d613d00565b815260200190600190039081612b655790505b5092506060612b90856000613256565b9050606083604051908082528060200260200182016040528015612bc35781602001602082028038833980820191505090505b50905060008090505b6002811015612dfc5760008090505b85811015612c43578886828803811515612bf157fe5b06815181101515612bfe57fe5b9060200190602002015182600281101515612c1557fe5b60200201518382815181101515612c2857fe5b90602001906020020181815250508080600101915050612bdb565b50612c4d826134e4565b9150606084604051908082528060200260200182016040528015612c8b57816020015b612c78613aa7565b815260200190600190039081612c705790505b509050600060029050612c9d81613004565b905060008090505b86811015612d7e57612d5682612d48612cf9888b8601815181101515612cc757fe5b906020019060200201518a8c8701815181101515612ce157fe5b906020019060200201516128ed90919063ffffffff16565b612d3a8986815181101515612d0a57fe5b906020019060200201518b87815181101515612d2257fe5b906020019060200201516128ed90919063ffffffff16565b61292890919063ffffffff16565b6128ed90919063ffffffff16565b8382815181101515612d6457fe5b906020019060200201819052508080600101915050612ca5565b50612d8a826001613256565b915060008090505b86811015612dec578281815181101515612da857fe5b906020019060200201518982815181101515612dc057fe5b9060200190602002015185600281101515612dd757fe5b60200201819052508080600101915050612d92565b5050508080600101915050612bcc565b505050505092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b612e3b613ce0565b60408051908101604052807f077da99d806abd13c9f15ece5398525119d11e11e9836b2ee7d23f6159ad87d460010281526020017f01485efa927f2ad41bff567eec88f32fb0a0f706588b4e41a8d587d008b7f875600102815250905090565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001801515612ec757fe5b828408905092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515612f3357600080fd5b80519250505092915050565b612f47613ce0565b6040805190810160405280836000015181526020018360200151600190047f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47036001028152509050919050565b612f9c613ce0565b612ffc7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001612fd39291906144be565b6040516020818303038152906040528051906020012060019004811515612ff657fe5b0661370c565b905092915050565b60006130338260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103612ed2565b9050919050565b613042613ce0565b60408051908101604052807e715f13ea08d6b51bedcde3599d8e12163e090921309d5aafc9b5bfaadbcda060010281526020017f27aceab598af7bf3d16ca9d40fe186c489382c21bb9d22b19cb3af8b751b959f600102815250905090565b6060600085850360020a9050806040519080825280602002602001820160405280156130dc5781602001602082028038833980820191505090505b5091508585141561310e57838260008151811015156130f757fe5b90602001906020020181815250508191505061324e565b600185039450606061315e8787613158878a81518110151561312c57fe5b90602001906020020151600060028110151561314457fe5b60200201518961296e90919063ffffffff16565b876130a1565b905060606131aa88886131a4888b81518110151561317857fe5b90602001906020020151600160028110151561319057fe5b60200201518a61296e90919063ffffffff16565b886130a1565b905060008090505b6002848115156131be57fe5b048110156132495782818151811015156131d457fe5b9060200190602002015185828151811015156131ec57fe5b9060200190602002018181525050818181518110151561320857fe5b906020019060200201518560028681151561321f57fe5b04830181518110151561322e57fe5b906020019060200201818152505080806001019150506131b2565b505050505b949350505050565b6060600083519050600181141561327057839150506134de565b600060028281151561327e57fe5b061415156132c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132b8906145df565b60405180910390fd5b60006133058263100000008115156132d557fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd612ed290919063ffffffff16565b905060006001905084156133235761331c82613004565b9150600290505b61332c81613004565b9050606061334461333e8860006137b2565b87613256565b9050606061335c6133568960016137b2565b88613256565b90506000600190508560405190808252806020026020018201604052801561339e57816020015b61338b613aa7565b8152602001906001900390816133835790505b50965060008090505b6002878115156133b357fe5b048110156134d6576133c3613ce0565b6133ed8385848151811015156133d557fe5b906020019060200201516128ed90919063ffffffff16565b905061342b8661341d83888681518110151561340557fe5b9060200190602002015161292890919063ffffffff16565b6128ed90919063ffffffff16565b898381518110151561343957fe5b9060200190602002018190525061348a8661347c61345684612f3f565b888681518110151561346457fe5b9060200190602002015161292890919063ffffffff16565b6128ed90919063ffffffff16565b8960028a81151561349757fe5b0484018151811015156134a657fe5b906020019060200201819052506134c6878461296e90919063ffffffff16565b92505080806001019150506133a7565b505050505050505b92915050565b606060008251905060018114156134fe5782915050613707565b600060028281151561350c57fe5b0614151561354f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613546906145df565b60405180910390fd5b600061359382631000000081151561356357fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd612ed290919063ffffffff16565b905060606135aa6135a5866000613865565b6134e4565b905060606135c16135bc876001613865565b6134e4565b9050600060019050846040519080825280602002602001820160405280156135f85781602001602082028038833980820191505090505b50955060008090505b60028681151561360d57fe5b0481101561370057600061364183858481518110151561362957fe5b9060200190602002015161296e90919063ffffffff16565b905061366d81868481518110151561365557fe5b90602001906020020151612e9b90919063ffffffff16565b888381518110151561367b57fe5b90602001906020020181815250506136b381868481518110151561369b57fe5b906020019060200201516128ad90919063ffffffff16565b886002898115156136c057fe5b0484018151811015156136cf57fe5b90602001906020020181815250506136f0868461296e90919063ffffffff16565b9250508080600101915050613601565b5050505050505b919050565b613714613ce0565b60005b60011561378f576000600361372d85600361390e565b01905061376981600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd470181151561376357fe5b0461390e565b91508061377783600261390e565b1415613783575061378f565b60018401935050613717565b604080519081016040528084600102815260200182600102815250915050919050565b6060600283518115156137c157fe5b046040519080825280602002602001820160405280156137fb57816020015b6137e8613aa7565b8152602001906001900390816137e05790505b50905060008090505b6002845181151561381157fe5b0481101561385e578383826002020181518110151561382c57fe5b90602001906020020151828281518110151561384457fe5b906020019060200201819052508080600101915050613804565b5092915050565b60606002835181151561387457fe5b046040519080825280602002602001820160405280156138a35781602001602082028038833980820191505090505b50905060008090505b600284518115156138b957fe5b0481101561390757838382600202018151811015156138d457fe5b9060200190602002015182828151811015156138ec57fe5b906020019060200201818152505080806001019150506138ac565b5092915050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561396f57600080fd5b80519250505092915050565b610120604051908101604052806060815260200160608152602001606081526020016139a5613aa7565b815260200160608152602001600081526020016139c0613aa7565b81525090565b610460604051908101604052806139db613aa7565b81526020016139e8613aa7565b81526020016139f5613aa7565b8152602001613a02613aa7565b8152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001613a63613d00565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001613aa1613d2e565b81525090565b604080519081016040528060008019168152602001600080191681525090565b608060405190810160405280606081526020016060815260200160008152602001600081525090565b610300604051908101604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016060815260200160608152602001613b3d613aa7565b8152602001613b4a613aa7565b8152602001613b57613aa7565b81526020016060815260200160608152602001613b72613aa7565b8152602001613b7f613aa7565b8152602001613b8c613aa7565b8152602001613b99613aa7565b81525090565b6040805190810160405280600290602082028038833980820191505090505090565b6111406040519081016040528060008152602001613bdd613d57565b815260200160008152602001613bf1613b9f565b8152602001613bfe613d57565b815260200160008152602001600081526020016000815260200160008152602001613c27613aa7565b81525090565b6101e06040519081016040528060008152602001613c49613aa7565b8152602001613c56613aa7565b8152602001613c63613aa7565b8152602001613c70613aa7565b8152602001613c7d613aa7565b8152602001613c8a613aa7565b8152602001613c97613aa7565b81525090565b61010060405190810160405280613cb2613aa7565b8152602001613cbf613aa7565b815260200160608152602001613cd3613aa7565b8152602001600081525090565b604080519081016040528060008019168152602001600080191681525090565b6080604051908101604052806002905b613d18613aa7565b815260200190600190039081613d105790505090565b608060405190810160405280606081526020016060815260200160008152602001600081525090565b61080060405190810160405280604090602082028038833980820191505090505090565b600082601f8301121515613d8e57600080fd5b8135613da1613d9c8261485b565b61482e565b91508181835260208401935060208101905083856040840282011115613dc657600080fd5b60005b83811015613df65781613ddc8882613e92565b845260208401935060408301925050600181019050613dc9565b5050505092915050565b6000613e0c825161496a565b905092915050565b6000613e208235614976565b905092915050565b6000613e348251614976565b905092915050565b600082601f8301121515613e4f57600080fd5b8135613e62613e5d82614883565b61482e565b91508082526020830160208301858383011115613e7e57600080fd5b613e8983828461498a565b50505092915050565b600060408284031215613ea457600080fd5b613eae604061482e565b90506000613ebe84828501613e14565b6000830152506020613ed284828501613e14565b60208301525092915050565b600060408284031215613ef057600080fd5b613efa604061482e565b90506000613f0a84828501613e14565b6000830152506020613f1e84828501613e14565b60208301525092915050565b600060408284031215613f3c57600080fd5b613f46604061482e565b90506000613f5684828501613e28565b6000830152506020613f6a84828501613e28565b60208301525092915050565b6000613f828235614980565b905092915050565b600080600080600080600080610140898b031215613fa757600080fd5b600089013567ffffffffffffffff811115613fc157600080fd5b613fcd8b828c01613d7b565b985050602089013567ffffffffffffffff811115613fea57600080fd5b613ff68b828c01613d7b565b975050604089013567ffffffffffffffff81111561401357600080fd5b61401f8b828c01613d7b565b96505060606140308b828c01613ede565b95505060a089013567ffffffffffffffff81111561404d57600080fd5b6140598b828c01613d7b565b94505060c061406a8b828c01613f76565b93505060e061407b8b828c01613ede565b92505061012089013567ffffffffffffffff81111561409957600080fd5b6140a58b828c01613e3c565b9150509295985092959890939650565b6000602082840312156140c757600080fd5b60006140d584828501613e00565b91505092915050565b6000604082840312156140f057600080fd5b60006140fe84828501613f2a565b91505092915050565b600061411383836143c1565b60408301905092915050565b614128816148c6565b6141328184614901565b925061413d826148af565b60005b8281101561416b57614153858351614107565b945061415e826148e7565b9150600181019050614140565b5050505050565b600061417d826148d1565b614187818561490c565b9350614192836148b9565b60005b828110156141c0576141a8868351614107565b95506141b3826148f4565b9150600181019050614195565b50849250505092915050565b60006141d7826148d1565b6141e1818561491d565b93506141ec836148b9565b60005b8281101561421a57614202868351614107565b955061420d826148f4565b91506001810190506141ef565b50849250505092915050565b61422f8161494a565b82525050565b61423e81614956565b82525050565b600061424f826148dc565b614259818561493f565b9350614269818560208601614999565b80840191505092915050565b6000614282601f8361492e565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b60006142c2602a8361492e565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b600061432860288361492e565b91507f496e6e65722070726f647563742070726f6f6620766572696669636174696f6e60008301527f206661696c65642e0000000000000000000000000000000000000000000000006020830152604082019050919050565b600061438e601d8361492e565b91507f5265636f76657279206661696c75726520666f7220425e77202a20412e0000006000830152602082019050919050565b6040820160008201516143d76000850182614235565b5060208201516143ea6020850182614235565b50505050565b6040820160008201516144066000850182614235565b5060208201516144196020850182614235565b50505050565b6000608083016000830151848203600086015261443c8282614172565b915050602083015184820360208601526144568282614172565b915050604083015161446b6040860182614489565b50606083015161447e6060860182614489565b508091505092915050565b61449281614960565b82525050565b6144a181614960565b82525050565b6144b86144b382614960565b6149cc565b82525050565b60006144ca8285614244565b91506144d682846144a7565b6020820191508190509392505050565b600060e082019050818103600083015261450081896141cc565b9050818103602083015261451481886141cc565b9050818103604083015261452881876141cc565b905061453760608301866143f0565b81810360a083015261454981856141cc565b905061455860c0830184614498565b979650505050505050565b600060e082019050818103600083015261457d81886141cc565b905061458c60208301876143f0565b61459960608301866143f0565b81810360a08301526145ab818561441f565b90506145ba60c0830184614498565b9695505050505050565b60006020820190506145d96000830184614226565b92915050565b600060208201905081810360008301526145f881614275565b9050919050565b60006020820190508181036000830152614618816142b5565b9050919050565b600060208201905081810360008301526146388161431b565b9050919050565b6000602082019050818103600083015261465881614381565b9050919050565b60006020820190506146746000830184614498565b92915050565b600060a08201905061468f6000830185614498565b61469c602083018461411f565b9392505050565b6000610120820190506146b9600083018c614498565b81810360208301526146cb818b6141cc565b905081810360408301526146df818a6141cc565b905081810360608301526146f381896141cc565b9050818103608083015261470781886141cc565b905081810360a083015261471b81876141cc565b905081810360c083015261472f81866141cc565b905081810360e083015261474381856141cc565b905081810361010083015261475881846141cc565b90509a9950505050505050505050565b60006101208201905061477e6000830188614498565b61478b60208301876143f0565b61479860608301866143f0565b6147a560a08301856143f0565b6147b260e08301846143f0565b9695505050505050565b60006101a0820190506147d2600083018a614498565b6147df60208301896143f0565b6147ec60608301886143f0565b6147f960a08301876143f0565b61480660e08301866143f0565b6148146101208301856143f0565b6148226101608301846143f0565b98975050505050505050565b6000604051905081810181811067ffffffffffffffff8211171561485157600080fd5b8060405250919050565b600067ffffffffffffffff82111561487257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561489a57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000602082019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156149b757808201518184015260208101905061499c565b838111156149c6576000848401525b50505050565b600081905091905056fea265627a7a723058209a07f736f25bbaaf7b362199e61850075fbfd34f4ad7e30a9780c56dace6b7056c6578706572696d656e74616cf50037",
  "sourceMap": "118:20107:6:-;;;1304:79;8:9:-1;5:2;;;30:1;27;20:12;5:2;1304:79:6;;;;;;;;;;;;;;;;;;;;;;1372:3;1346:2;;:30;;;;;;;;;;;;;;;;;;1304:79;118:20107;;5:122:-1;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:105;;473:31;498:5;473:31;;;462:42;;456:53;;;;516:128;;596:42;589:5;585:54;574:65;;568:76;;;;118:20107:6;;;;;;;",
  "deployedSourceMap": "118:20107:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;118:20107:6;;;;;;;;;;;;;;;;;;;;1389:628;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1625:4;1641:32;;:::i;:::-;1699:3;1683:9;:13;;:19;;;;1766:3;1750:9;:13;;:19;;;;1793:1;1779:9;:11;;:15;;;;1818:1;1804:9;:11;;:15;;;;1843:1;1829:9;:11;;:15;;;;1872:5;1854:9;:15;;:23;;;;;1901:1;1887:9;:11;;:15;;;;1912:30;;:::i;:::-;1945:18;1957:5;1945:11;:18::i;:::-;1912:51;;1980:30;1987:9;1998:11;1980:6;:30::i;:::-;1973:37;;;;1389:628;;;;;;;;;;:::o;16752:3471::-;16814:24;;:::i;:::-;16861:56;;;;;;;;;16875:19;16887:3;16892:1;16875:11;:19::i;:::-;16861:56;;;;16896:20;16908:3;16913:2;16896:11;:20::i;:::-;16861:56;;;16850:5;:8;;:67;;;;16938:57;;;;;;;;;16952:20;16964:3;16969:2;16952:11;:20::i;:::-;16938:57;;;;16974:20;16986:3;16991:2;16974:11;:20::i;:::-;16938:57;;;16927:5;:8;;:68;;;;17015:59;;;;;;;;;17029:21;17041:3;17046;17029:11;:21::i;:::-;17015:59;;;;17052:21;17064:3;17069;17052:11;:21::i;:::-;17015:59;;;17005:5;:7;;:69;;;;17094:59;;;;;;;;;17108:21;17120:3;17125;17108:11;:21::i;:::-;17094:59;;;;17131:21;17143:3;17148;17131:11;:21::i;:::-;17094:59;;;17084:5;:7;;:69;;;;17164:9;17198:3;17190:4;17177:3;:10;:17;17176:25;;;;;;;;17164:37;;17244:1;17224:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17211:5;:10;;:35;;;;17289:1;17269:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17256:5;:10;;:35;;;;17334:1;17314:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17301:5;:10;;:35;;;;17377:1;17357:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17346:5;:8;;:33;;;;17422:1;17402:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17389:5;:10;;:35;;;;17465:1;17445:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17434:5;:8;;:33;;;;17510:1;17490:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17477:5;:10;;:35;;;;17555:1;17535:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17522:5;:10;;:35;;;;17595:1;17591;:5;17577:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17577:20:6;;;;17567:5;:7;;:30;;;;17612:9;17624:1;17612:13;;17607:1183;17631:1;17627;:5;17607:1183;;;17669:77;;;;;;;;;17683:30;17695:3;17710:2;17706:1;:6;17700:3;:12;17683:11;:30::i;:::-;17669:77;;;;17715:30;17727:3;17742:2;17738:1;:6;17732:3;:12;17715:11;:30::i;:::-;17669:77;;;17653:5;:10;;;17664:1;17653:13;;;;;;;;;;;;;;;;;:93;;;;17776:89;;;;;;;;;17790:36;17802:3;17823:2;17818:1;17814;:5;17813:12;17807:3;:18;17790:11;:36::i;:::-;17776:89;;;;17828:36;17840:3;17861:2;17856:1;17852;:5;17851:12;17845:3;:18;17828:11;:36::i;:::-;17776:89;;;17760:5;:10;;;17771:1;17760:13;;;;;;;;;;;;;;;;;:105;;;;17895:97;;;;;;;;;17909:40;17921:3;17946:2;17942:1;:6;17936:3;17932:1;:7;17926:3;:13;:22;17909:11;:40::i;:::-;17895:97;;;;17951:40;17963:3;17988:2;17984:1;:6;17978:3;17974:1;:7;17968:3;:13;:22;17951:11;:40::i;:::-;17895:97;;;17879:5;:10;;;17890:1;17879:13;;;;;;;;;;;;;;;;;:113;;;;18020:97;;;;;;;;;18034:40;18046:3;18071:2;18067:1;:6;18061:3;18057:1;:7;18051:3;:13;:22;18034:11;:40::i;:::-;18020:97;;;;18076:40;18088:3;18113:2;18109:1;:6;18103:3;18099:1;:7;18093:3;:13;:22;18076:11;:40::i;:::-;18020:97;;;18006:5;:8;;;18015:1;18006:11;;;;;;;;;;;;;;;;;:111;;;;18147:97;;;;;;;;;18161:40;18173:3;18198:2;18194:1;:6;18188:3;18184:1;:7;18178:3;:13;:22;18161:11;:40::i;:::-;18147:97;;;;18203:40;18215:3;18240:2;18236:1;:6;18230:3;18226:1;:7;18220:3;:13;:22;18203:11;:40::i;:::-;18147:97;;;18131:5;:10;;;18142:1;18131:13;;;;;;;;;;;;;;;;;:113;;;;18272:97;;;;;;;;;18286:40;18298:3;18323:2;18319:1;:6;18313:3;18309:1;:7;18303:3;:13;:22;18286:11;:40::i;:::-;18272:97;;;;18328:40;18340:3;18365:2;18361:1;:6;18355:3;18351:1;:7;18345:3;:13;:22;18328:11;:40::i;:::-;18272:97;;;18258:5;:8;;;18267:1;18258:11;;;;;;;;;;;;;;;;;:111;;;;18399:97;;;;;;;;;18413:40;18425:3;18450:2;18446:1;:6;18440:3;18436:1;:7;18430:3;:13;:22;18413:11;:40::i;:::-;18399:97;;;;18455:40;18467:3;18492:2;18488:1;:6;18482:3;18478:1;:7;18472:3;:13;:22;18455:11;:40::i;:::-;18399:97;;;18383:5;:10;;;18394:1;18383:13;;;;;;;;;;;;;;;;;:113;;;;18526:97;;;;;;;;;18540:40;18552:3;18577:2;18573:1;:6;18567:3;18563:1;:7;18557:3;:13;:22;18540:11;:40::i;:::-;18526:97;;;;18582:40;18594:3;18619:2;18615:1;:6;18609:3;18605:1;:7;18599:3;:13;:22;18582:11;:40::i;:::-;18526:97;;;18510:5;:10;;;18521:1;18510:13;;;;;;;;;;;;;;;;;:113;;;;18658:40;18670:3;18695:2;18691:1;:6;18685:3;18681:1;:7;18675:3;:13;:22;18658:11;:40::i;:::-;18650:49;;;18637:5;:7;;;18645:1;18637:10;;;;;;;;;;;;;;;;;:62;;;;;18738:40;18750:3;18775:2;18771:1;:6;18765:3;18761:1;:7;18755:3;:13;:22;18738:11;:40::i;:::-;18730:49;;;18713:5;:7;;;18725:1;18721;:5;18713:14;;;;;;;;;;;;;;;;;:66;;;;;17634:3;;;;;;;17607:1183;;;;18799:16;18822:3;18818:1;:7;18799:26;;18855:32;18867:3;18878:8;18872:3;:14;18855:11;:32::i;:::-;18847:41;;;18835:5;:9;;:53;;;;;18899:183;;;;;;;;;18917:81;;;;;;;;;18931:32;18943:3;18954:8;18948:3;:14;18931:11;:32::i;:::-;18917:81;;;;18965:32;18977:3;18988:8;18982:3;:14;18965:11;:32::i;:::-;18917:81;;;18899:183;;;;19000:81;;;;;;;;;19014:32;19026:3;19037:8;19031:3;:14;19014:11;:32::i;:::-;19000:81;;;;19048:32;19060:3;19071:8;19065:3;:14;19048:11;:32::i;:::-;19000:81;;;18899:183;;;:5;:14;;:183;;;;19113:32;19125:3;19136:8;19130:3;:14;19113:11;:32::i;:::-;19105:41;;;19092:5;:10;;:54;;;;;19175:32;19187:3;19198:8;19192:3;:14;19175:11;:32::i;:::-;19167:41;;;19156:5;:8;;:52;;;;;19237:32;19249:3;19260:8;19254:3;:14;19237:11;:32::i;:::-;19229:41;;;19219:5;:7;;:51;;;;;19301:32;19313:3;19324:8;19318:3;:14;19301:11;:32::i;:::-;19293:41;;;19280:5;:10;;:54;;;;;19364:32;19376:3;19387:8;19381:3;:14;19364:11;:32::i;:::-;19356:41;;;19344:5;:9;;:53;;;;;19427:32;19439:3;19450:8;19444:3;:14;19427:11;:32::i;:::-;19419:41;;;19407:5;:9;;:53;;;;;19492:32;19504:3;19515:8;19509:3;:14;19492:11;:32::i;:::-;19484:41;;;19470:5;:11;;:55;;;;;19536:53;;:::i;:::-;19632:1;19612:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19599:7;:10;;:35;;;;19677:1;19657:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19644:7;:10;;:35;;;;19694:9;19706:1;19694:13;;19689:326;19713:1;19709;:5;19689:326;;;19764:99;;;;;;;;;19778:41;19790:3;19816:2;19812:1;:6;19801:8;19795:3;:14;:23;19778:11;:41::i;:::-;19764:99;;;;19821:41;19833:3;19859:2;19855:1;:6;19844:8;19838:3;:14;:23;19821:11;:41::i;:::-;19764:99;;;19748:7;:10;;;19759:1;19748:13;;;;;;;;;;;;;;;;;:115;;;;19893:111;;;;;;;;;19907:47;19919:3;19951:2;19946:1;19942;:5;19941:12;19930:8;19924:3;:14;:29;19907:11;:47::i;:::-;19893:111;;;;19956:47;19968:3;20000:2;19995:1;19991;:5;19990:12;19979:8;19973:3;:14;:29;19956:11;:47::i;:::-;19893:111;;;19877:7;:10;;;19888:1;19877:13;;;;;;;;;;;;;;;;;:127;;;;19716:3;;;;;;;19689:326;;;;20044:42;20056:3;20078:7;20067:8;20061:3;:14;:24;20044:11;:42::i;:::-;20036:51;;;20024:7;:9;;:63;;;;;20117:42;20129:3;20151:7;20140:8;20134:3;:14;:24;20117:11;:42::i;:::-;20109:51;;;20097:7;:9;;:63;;;;;20186:7;20170:5;:13;;:23;;;;20211:5;20204:12;;;;;16752:3471;;;:::o;3531:7992::-;3630:4;3646:21;3670:122;3699:9;:13;;;3714:9;:13;;;3729:9;:11;;;3742:9;:11;;;3755:9;:11;;;3768:9;:15;;;3688:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3688:96:6;;;3678:107;;;;;;3670:116;;;:120;:122::i;:::-;3646:146;;3803:38;;:::i;:::-;3871:89;3900:13;3915:5;:8;;;3925:5;:8;;;3935:5;:7;;;3944:5;:7;;;3889:63;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3889:63:6;;;3879:74;;;;;;3871:83;;;:87;:89::i;:::-;3851:15;:17;;:109;;;;;3990:147;4019:15;:17;;;4038:5;:10;;;4050:5;:10;;;4062:5;:10;;;4074:5;:8;;;4084:5;:10;;;4096:5;:8;;;4106:5;:10;;;4118:5;:10;;;4008:121;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4008:121:6;;;3998:132;;;;;;3990:141;;;:145;:147::i;:::-;3970:15;:17;;:167;;;;;4184:1;4167:5;:7;;;:14;:18;;;;;;;;4147:15;:17;;:38;;;;;4220:15;:17;;;4215:1;:22;4195:15;:17;;:42;;;;;4288:15;:17;;;4284:1;:21;4267:39;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4247:15;:17;;:59;;;;4321:9;4333:1;4321:13;;4316:241;4344:15;:17;;;4340:1;:21;4336:1;:25;4316:241;;;4408:5;:7;;;4416:1;4408:10;;;;;;;;;;;;;;;;;;4382:15;:17;;;4400:1;4382:20;;;;;;;;;;;;;;;;;;4403:1;4382:23;;;;;;;;;;;;:36;;;;;4458:33;4480:5;:7;;;4488:1;4480:10;;;;;;;;;;;;;;;;;;4458:15;:17;;;:21;;:33;;;;:::i;:::-;4432:15;:17;;;4450:1;4432:20;;;;;;;;;;;;;;;;;;4453:1;4432:23;;;;;;;;;;;;:59;;;;;4363:3;;;;;;;4316:241;;;;4572:9;4584:1;4572:13;;4567:292;4595:15;:17;;;4591:1;:21;4587:1;:25;4567:292;;;4656:63;4681:37;4694:15;:17;;;4712:1;4694:20;;;;;;;;;;;;;;;;;;4715:1;4694:23;;;;;;;;;;;;;4681:2;;;;;;;;;;;:5;;;4687:1;4681:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4681:8:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4681:8:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4681:8:6;;;;;;;;;:12;;:37;;;;:::i;:::-;4656:15;:20;;;:24;;:63;;;;:::i;:::-;4633:15;:20;;:86;;;;4756:92;4781:66;4794:52;4822:15;:17;;;4840:1;4822:20;;;;;;;;;;;;;;;;;;4843:1;4822:23;;;;;;;;;;;;;4794:15;:17;;;4812:1;4794:20;;;;;;;;;;;;;;;;;;4815:1;4794:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;4781:2;;;;;;;;;;;:5;;;4787:1;4781:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4781:8:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4781:8:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4781:8:6;;;;;;;;;:12;;:66;;;;:::i;:::-;4756:15;:20;;;:24;;:92;;;;:::i;:::-;4733:15;:20;;:115;;;;4614:3;;;;;;;4567:292;;;;4891:240;4916:214;5023:106;5060:68;5088:15;:17;;;5106:15;:17;;;5088:36;;;;;;;;;;;;;;;;;;5125:1;5088:39;;;;;;;;;;;;;5060:15;:17;;;5078:1;5060:20;;;;;;;;;;;;;;;;;;5081:1;5060:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;5023:2;;;;;;;;;;;:5;;;5053:1;5033:15;:17;;;5029:1;:21;:25;5023:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5023:32:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5023:32:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5023:32:6;;;;;;;;;:36;;:106;;;;:::i;:::-;4916:102;4949:68;4977:15;:17;;;4995:15;:17;;;4977:36;;;;;;;;;;;;;;;;;;5014:1;4977:39;;;;;;;;;;;;;4949:15;:17;;;4967:1;4949:20;;;;;;;;;;;;;;;;;;4970:1;4949:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;4916:2;;;;;;;;;;;:5;;;4926:15;:17;;;4922:1;:21;4916:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4916:28:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4916:28:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4916:28:6;;;;;;;;;:32;;:102;;;;:::i;:::-;:106;;:214;;;;:::i;:::-;4891:15;:20;;;:24;;:240;;;;:::i;:::-;4868:15;:20;;:263;;;;5149:98;5196:50;5221:24;5235:5;:9;;;5221;:7;:9::i;:::-;:13;;:24;;;;:::i;:::-;5196:15;:20;;;:24;;:50;;;;:::i;:::-;5149:43;5184:5;:7;;;5149:30;5161:15;:17;;;5149:5;:7;;;:11;;:30;;;;:::i;:::-;:34;;:43;;;;:::i;:::-;:46;;:98;;;;:::i;:::-;5141:140;;;;;;;;;;;;;;;;;;;;;;;;5312:38;5332:15;:17;;;5312:19;:38::i;:::-;5292:15;:17;;:58;;;;5382:52;5403:15;:17;;;5422:9;:11;;;5382:20;:52::i;:::-;5361:15;:18;;:73;;;;5465:52;5486:15;:17;;;5505:9;:11;;;5465:20;:52::i;:::-;5444:15;:18;;:73;;;;5550:1;5527:15;:20;;:24;;;;;5566:9;5578:1;5566:13;;5561:640;5585:15;:17;;;5581:1;:21;5561:640;;;5646:71;5671:45;5692:15;:17;;;5710:1;5692:20;;;;;;;;;;;;;;;;;;5713:1;5692:23;;;;;;;;;;;;;5671:9;:13;;;5685:1;5671:16;;;;;;;;;;;;;;;;;;:20;;:45;;;;:::i;:::-;5646:15;:20;;;:24;;:71;;;;:::i;:::-;5623:15;:20;;:94;;;;5754:71;5779:45;5800:15;:17;;;5818:1;5800:20;;;;;;;;;;;;;;;;;;5821:1;5800:23;;;;;;;;;;;;;5779:9;:13;;;5793:1;5779:16;;;;;;;;;;;;;;;;;;:20;;:45;;;;:::i;:::-;5754:15;:20;;;:24;;:71;;;;:::i;:::-;5731:15;:20;;:94;;;;5862:84;5887:58;5924:15;:20;;;5887:15;:18;;;5910:1;5906;:5;;;;;;;;5887:25;;;;;;;;;;;;;;;;;;5917:1;5913;:5;;;;;;;;5887:32;;;;;;;;;;;;;:36;;:58;;;;:::i;:::-;5862:15;:20;;;:24;;:84;;;;:::i;:::-;5839:15;:20;;:107;;;;5983:84;6008:58;6045:15;:20;;;6008:15;:18;;;6031:1;6027;:5;;;;;;;;6008:25;;;;;;;;;;;;;;;;;;6038:1;6034;:5;;;;;;;;6008:32;;;;;;;;;;;;;:36;;:58;;;;:::i;:::-;5983:15;:20;;;:24;;:84;;;;:::i;:::-;5960:15;:20;;:107;;;;6089:1;6085;:5;6081:110;;;6133:43;6158:15;:17;;;6133:15;:20;;;:24;;:43;;;;:::i;:::-;6110:15;:20;;:66;;;;;6081:110;5604:3;;;;;;;5561:640;;;;6233:1;6210:15;:20;;:24;;;;;6249:9;6261:1;6249:13;;6244:1008;6268:15;:17;;;6264:1;:21;6244:1008;;;6329:71;6354:45;6372:26;:15;:20;;;:24;:26::i;:::-;6354:5;:10;;;6365:1;6354:13;;;;;;;;;;;;;;;;;;:17;;:45;;;;:::i;:::-;6329:15;:20;;;:24;;:71;;;;:::i;:::-;6306:15;:20;;:94;;;;6437:71;6462:45;6480:26;:15;:20;;;:24;:26::i;:::-;6462:5;:10;;;6473:1;6462:13;;;;;;;;;;;;;;;;;;:17;;:45;;;;:::i;:::-;6437:15;:20;;;:24;;:71;;;;:::i;:::-;6414:15;:20;;:94;;;;6549:75;6578:45;6596:26;:15;:20;;;:24;:26::i;:::-;6578:5;:10;;;6589:1;6578:13;;;;;;;;;;;;;;;;;;:17;;:45;;;;:::i;:::-;6549:15;:18;;;6568:1;6549:21;;;;;;;;;;;;;;;;;;6571:1;6549:24;;;;;;;;;;;;;:28;;:75;;;;:::i;:::-;6522:15;:18;;;6541:1;6522:21;;;;;;;;;;;;;;;;;;6544:1;6522:24;;;;;;;;;;;;:102;;;;6659:67;6682:43;6698:26;:15;:20;;;:24;:26::i;:::-;6682:5;:8;;;6691:1;6682:11;;;;;;;;;;;;;;;;;;:15;;:43;;;;:::i;:::-;6659:15;:18;;;:22;;:67;;;;:::i;:::-;6638:15;:18;;:88;;;;6767:75;6796:45;6814:26;:15;:20;;;:24;:26::i;:::-;6796:5;:10;;;6807:1;6796:13;;;;;;;;;;;;;;;;;;:17;;:45;;;;:::i;:::-;6767:15;:18;;;6786:1;6767:21;;;;;;;;;;;;;;;;;;6789:1;6767:24;;;;;;;;;;;;;:28;;:75;;;;:::i;:::-;6740:15;:18;;;6759:1;6740:21;;;;;;;;;;;;;;;;;;6762:1;6740:24;;;;;;;;;;;;:102;;;;6877:67;6900:43;6916:26;:15;:20;;;:24;:26::i;:::-;6900:5;:8;;;6909:1;6900:11;;;;;;;;;;;;;;;;;;:15;;:43;;;;:::i;:::-;6877:15;:18;;;:22;;:67;;;;:::i;:::-;6856:15;:18;;:88;;;;6981:71;7006:45;7024:26;:15;:20;;;:24;:26::i;:::-;7006:5;:10;;;7017:1;7006:13;;;;;;;;;;;;;;;;;;:17;;:45;;;;:::i;:::-;6981:15;:20;;;:24;;:71;;;;:::i;:::-;6958:15;:20;;:94;;;;7089:71;7114:45;7132:26;:15;:20;;;:24;:26::i;:::-;7114:5;:10;;;7125:1;7114:13;;;;;;;;;;;;;;;;;;:17;;:45;;;;:::i;:::-;7089:15;:20;;;:24;;:71;;;;:::i;:::-;7066:15;:20;;:94;;;;7198:43;7223:15;:17;;;7198:15;:20;;;:24;;:43;;;;:::i;:::-;7175:15;:20;;:66;;;;;6287:3;;;;;;;6244:1008;;;;7282:61;7305:37;7321:15;:20;;;7305:9;:11;;;:15;;:37;;;;:::i;:::-;7282:15;:18;;;:22;;:61;;;;:::i;:::-;7261:15;:18;;:82;;;;7374:59;7397:35;7411:15;:20;;;7397:9;:7;:9::i;:::-;:13;;:35;;;;:::i;:::-;7374:15;:18;;;:22;;:59;;;;:::i;:::-;7353:15;:18;;:80;;;;7444:42;;:::i;:::-;7518:55;7547:15;:17;;;7536:29;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7536:29:6;;;7526:40;;;;;;7518:49;;;:53;:55::i;:::-;7496:17;:19;;:77;;;;;7609:1;7583:17;:20;;;7604:1;7583:23;;;;;;;;;;;;:27;;;;;7642:1;7620:17;:19;;:23;;;;;7658:9;7670:1;7658:13;;7653:220;7677:2;7673:1;:6;7653:220;;;7726:52;7758:17;:19;;;7726:17;:20;;;7751:1;7747;:5;7726:27;;;;;;;;;;;;;:31;;:52;;;;:::i;:::-;7700:17;:20;;;7721:1;7700:23;;;;;;;;;;;;:78;;;;;7814:48;7838:17;:20;;;7859:1;7838:23;;;;;;;;;;;;;7814:17;:19;;;:23;;:48;;;;:::i;:::-;7792:17;:19;;:70;;;;;7681:3;;;;;;;7653:220;;;;7904:57;7933:17;:19;;;7922:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7922:31:6;;;7912:42;;;;;;7904:51;;;:55;:57::i;:::-;7882:17;:19;;:79;;;;;7971;;;;;;;;;7995:26;8019:1;7995:17;:19;;;:23;;:26;;;;:::i;:::-;7971:79;;;;8023:26;8047:1;8023:17;:19;;;:23;;:26;;;;:::i;:::-;7971:79;;;:17;:20;;:79;;;;8085:77;8142:17;:19;;;8085:52;8113:17;:20;;;8134:1;8113:23;;;;;;;;;;;;;8085:17;:20;;;8106:1;8085:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;8060:17;:22;;:102;;;;;8194:142;8272:63;8312:17;:22;;;8272:35;8299:7;8272:17;:22;;;:26;;:35;;;;:::i;:::-;:39;;:63;;;;:::i;:::-;8194:73;8218:48;8242:17;:20;;;8263:1;8242:23;;;;;;;;;;;;;8218:17;:19;;;:23;;:48;;;;:::i;:::-;8194:17;:19;;;:23;;:73;;;;:::i;:::-;:77;;:142;;;;:::i;:::-;8172:17;:19;;:164;;;;;8368:35;8383:17;:19;;;8368:5;:10;;;:14;;:35;;;;:::i;:::-;8346:17;:19;;:57;;;;;8444:9;8456:1;8444:13;;8439:227;8463:2;8459:1;:6;8439:227;;;8526:35;8559:1;8554;:6;8526:17;:20;;;8547:1;8526:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8486:17;:34;;;8521:1;8486:37;;;;;;;;;;;;:75;;;;;8620:35;8653:1;8648;:6;8620:17;:20;;;8641:1;8620:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;8575:17;:34;;;8614:2;8610:1;:6;8575:42;;;;;;;;;;;;:80;;;;;8467:3;;;;;;;8439:227;;;;8698:73;8727:17;:19;;;8748:5;:14;;;8716:47;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8716:47:6;;;8706:58;;;;;;8698:67;;;:71;:73::i;:::-;8676:17;:19;;:95;;;;;8807:115;8854:67;8876:44;8900:17;:19;;;8876:17;:19;;;:23;;:44;;;;:::i;:::-;8854:5;:14;;;8869:1;8854:17;;;;;;;;;;;;;:21;;:67;;;;:::i;:::-;8807:42;8829:17;:19;;;8807:5;:14;;;8822:1;8807:17;;;;;;;;;;;;;:21;;:42;;;;:::i;:::-;:46;;:115;;;;:::i;:::-;8781:17;:23;;:141;;;;8959:40;;:::i;:::-;9032:83;9071:43;9100:13;:5;:7;;;:11;:13::i;:::-;9071:15;:18;;;9090:1;9071:21;;;;;;;;;;;;;;;;;;9093:1;9071:24;;;;;;;;;;;;;:28;;:43;;;;:::i;:::-;9032:34;9055:5;:10;;;9032:15;:18;;;:22;;:34;;;;:::i;:::-;:38;;:83;;;;:::i;:::-;9009:16;:20;;:106;;;;9148:60;9177:30;9193:13;:5;:7;;;:11;:13::i;:::-;9177:9;:11;;;:15;;:30;;;;:::i;:::-;9148:24;9162:5;:9;;;9148;:7;:9::i;:::-;:13;;:24;;;;:::i;:::-;:28;;:60;;;;:::i;:::-;9125:16;:20;;:83;;;;9325:293;9354:263;9483:133;9602:13;:5;:7;;;:11;:13::i;:::-;9483:114;9547:49;9572:17;:20;;;9593:1;9572:23;;;;;;;;;;;;;9547:15;:20;;;:24;;:49;;;;:::i;:::-;9483:59;9512:29;:17;:20;;;9533:1;9512:23;;;;;;;;;;;;;:27;:29::i;:::-;9483:15;:18;;;9502:1;9483:21;;;;;;;;;;;;;;;;;;9505:1;9483:24;;;;;;;;;;;;;:28;;:59;;;;:::i;:::-;:63;;:114;;;;:::i;:::-;:118;;:133;;;;:::i;:::-;9354:124;9467:5;:10;;;9354:108;9412:49;9437:17;:20;;;9458:1;9437:23;;;;;;;;;;;;;9412:15;:20;;;:24;;:49;;;;:::i;:::-;9354:53;9377:29;:17;:20;;;9398:1;9377:23;;;;;;;;;;;;;:27;:29::i;:::-;9354:15;:18;;;:22;;:53;;;;:::i;:::-;:57;;:108;;;;:::i;:::-;:112;;:124;;;;:::i;:::-;:128;;:263;;;;:::i;:::-;9325:24;9339:5;:9;;;9325;:7;:9::i;:::-;:13;;:24;;;;:::i;:::-;:28;;:293;;;;:::i;:::-;9302:16;:20;;:316;;;;9651:80;9691:39;9716:13;:5;:7;;;:11;:13::i;:::-;9691:15;:20;;;:24;;:39;;;;:::i;:::-;9651:35;9676:5;:9;;;9651:15;:20;;;:24;;:35;;;;:::i;:::-;:39;;:80;;;;:::i;:::-;9628:16;:20;;:103;;;;9764:176;9909:30;9923:15;:5;:9;;;:13;:15::i;:::-;9909:9;:7;:9::i;:::-;:13;;:30;;;;:::i;:::-;9764:140;9877:26;9891:5;:11;;;9877:9;:7;:9::i;:::-;:13;;:26;;;;:::i;:::-;9764:108;9838:33;9850:15;:20;;;9838:5;:7;;;:11;;:33;;;;:::i;:::-;9764:69;9803:29;:17;:23;;;:27;:29::i;:::-;9764:34;9778:17;:19;;;9764:9;:7;:9::i;:::-;:13;;:34;;;;:::i;:::-;:38;;:69;;;;:::i;:::-;:73;;:108;;;;:::i;:::-;:112;;:140;;;;:::i;:::-;:144;;:176;;;;:::i;:::-;9741:16;:20;;:199;;;;9976:40;;;;;;;;;;;;;;;;;;;10000:9;:15;;;9976:13;:40::i;:::-;9950:16;:23;;:66;;;;10049:75;10093:30;10109:13;:5;:7;;;:11;:13::i;:::-;10093:9;:11;;;:15;;:30;;;;:::i;:::-;10049:39;10077:5;:10;;;10049:16;:23;;;:27;;:39;;;;:::i;:::-;:43;;:75;;;;:::i;:::-;10026:16;:20;;:98;;;;10156:189;10185:17;:19;;;10206:16;:20;;;10228:16;:20;;;10250:16;:20;;;10272:16;:20;;;10294:16;:20;;;10316:16;:20;;;10174:163;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10174:163:6;;;10164:174;;;;;;10156:183;;;:187;:189::i;:::-;10135:16;:18;;:210;;;;;10385:5;:7;;;10363:16;:18;;;:29;10355:84;;;;;;;;;;;;;;;;;;;;;;;;10450:34;;:::i;:::-;10512:56;10541:16;:18;;;10530:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10530:30:6;;;10520:41;;;;;;10512:50;;;:54;:56::i;:::-;10494:13;:15;;:74;;;;;10598:30;10612:13;:15;;;10598:9;:7;:9::i;:::-;:13;;:30;;;;:::i;:::-;10578:13;:17;;:50;;;;10682:2;10662:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;10638:13;:21;;:47;;;;10700:9;10712:1;10700:13;;10695:318;10719:2;10715:1;:6;10695:318;;;10769:43;10782:29;:17;:20;;;10803:1;10782:23;;;;;;;;;;;;;:27;:29::i;:::-;10769:2;;;;;;;;;;;:5;;;10775:1;10769:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10769:8:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10769:8:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10769:8:6;;;;;;;;;:12;;:43;;;;:::i;:::-;10742:13;:21;;;10764:1;10742:24;;;;;;;;;;;;;;;;;:70;;;;10852:150;10880:121;10909:91;10962:17;:34;;;10997:1;10962:37;;;;;;;;;;;;;10909:48;10937:17;:19;;;10909:17;:20;;;10930:1;10909:23;;;;;;;;;;;;;:27;;:48;;;;:::i;:::-;:52;;:91;;;;:::i;:::-;10880:13;:21;;;10902:1;10880:24;;;;;;;;;;;;;;;;;;:28;;:121;;;;:::i;:::-;10852:13;:23;;;:27;;:150;;;;:::i;:::-;10826:13;:23;;:176;;;;10723:3;;;;;;;10695:318;;;;11040:119;11135:13;:23;;;11040:90;11092:37;11103:25;:17;:19;;;:23;:25::i;:::-;11092:6;:4;:6::i;:::-;:10;;:37;;;;:::i;:::-;11040:47;11053:33;11066:17;:19;;;11053:5;:8;;;:12;;:33;;;;:::i;:::-;11040:5;:8;;;:12;;:47;;;;:::i;:::-;:51;;:90;;;;:::i;:::-;:94;;:119;;;;:::i;:::-;11022:13;:15;;:137;;;;11187:50;11207:29;11221:14;:5;:8;;;:12;:14::i;:::-;11207:9;:7;:9::i;:::-;:13;;:29;;;;:::i;:::-;11187:13;:15;;;:19;;:50;;;;:::i;:::-;11169:13;:15;;:68;;;;11265:54;11285:33;11307:5;:10;;;11285:13;:17;;;:21;;:33;;;;:::i;:::-;11265:13;:15;;;:19;;:54;;;;:::i;:::-;11247:13;:15;;:72;;;;11337:2;;;;;;;;;;;:21;;;11359:13;:21;;;11382:13;:17;;;11401:13;:15;;;11418:5;:13;;;11433;:15;;;11337:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11337:112:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11337:112:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11337:112:6;;;;;;;;;11329:165;;;;;;;;;;;;;;;;;;;;;;;;11512:4;11505:11;;;;;;;3531:7992;;;;:::o;4701:266:4:-;4774:14;4838:4;4832:11;4894:5;4887:4;4880:5;4876:16;4872:28;4866:35;4863:1;4856:46;4949:1;4943:8;4933:18;;4809:152;;;;;:::o;639:95::-;686:7;110:66;712:1;:15;;;;;;;;705:22;;639:95;;;:::o;740:127::-;798:7;829:1;824;:6;;:36;;859:1;855;110:66;841:15;:19;824:36;;;837:1;833;:5;824:36;817:43;;740:127;;;;:::o;2704:382::-;2769:16;;:::i;:::-;2835:4;2829:11;2869:1;2863:8;2860:1;2853:19;2919:4;2916:1;2912:12;2906:19;2899:4;2896:1;2892:12;2885:41;2960:1;2953:4;2950:1;2946:12;2939:23;3019:4;3016:1;3010:4;3007:1;3001:4;2996:3;2985:39;2978:47;2975:2;;;3054:1;3051;3044:12;2975:2;2806:274;;;;;:::o;2242:456::-;2316:16;;:::i;:::-;2382:4;2376:11;2416:2;2410:9;2407:1;2400:20;2468:4;2464:2;2460:13;2454:20;2447:4;2444:1;2440:12;2433:42;2515:2;2509:9;2502:4;2499:1;2495:12;2488:31;2567:4;2563:2;2559:13;2553:20;2546:4;2543:1;2539:12;2532:42;2631:4;2628:1;2622:4;2619:1;2613:4;2608:3;2597:39;2590:47;2587:2;;;2666:1;2663;2656:12;2587:2;2353:339;;;;;:::o;408:116::-;466:7;110:66;492:25;;;;;;;502:1;499;492:25;485:32;;408:116;;;;:::o;3643:219::-;3679:14;;:::i;:::-;3712:143;;;;;;;;;3720:66;3712:143;;;;;;3788:66;3712:143;;;;;3705:150;;3643:219;:::o;3281:131::-;3354:4;3385:2;:4;;;3377:2;:4;;;:12;:28;;;;;3401:2;:4;;;3393:2;:4;;;:12;3377:28;3370:35;;3281:131;;;;:::o;11529:446:6:-;11604:26;11642:9;11665:1;11654;:8;:12;;;;;;;;11642:24;;11676:9;11693:1;11688;:6;11676:18;;11730:1;11713:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11704:28;;11747:9;11759:1;11747:13;;11742:227;11766:1;11762;:5;11742:227;;;11788:21;11812:46;11837:1;11833;:5;11850:1;11845;11841;:5;11840:11;11853:1;11856;11812:20;:46::i;:::-;11788:70;;11877:9;11889:1;11877:13;;11872:87;11896:1;11892;:5;11872:87;;;11937:4;11942:1;11937:7;;;;;;;;;;;;;;;;;;11922:6;11929:1;11922:9;;;;;;;;;;;;;;;;;;11932:1;11922:12;;;;;;;;;;;;:22;;;;;11899:3;;;;;;;11872:87;;;;11742:227;11769:3;;;;;;;11742:227;;;;11529:446;;;;;:::o;12886:1498::-;12998:32;13279:12;13294:8;:15;13279:30;;13319:12;13341:1;13334:4;:8;;;;;;;;13319:23;;13384:4;13361:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;13352:37;;13471:31;13505:16;13509:4;13515:5;13505:3;:16::i;:::-;13471:50;;13532:29;13578:4;13564:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13564:19:6;;;;13532:51;;13598:9;13610:1;13598:13;;13593:785;13617:1;13613;:5;13593:785;;;13644:9;13656:1;13644:13;;13639:148;13663:4;13659:1;:8;13639:148;;;13710:8;13732:4;13727:1;13720:4;:8;13719:17;;;;;;;;13710:27;;;;;;;;;;;;;;;;;;13738:1;13710:30;;;;;;;;;;;;;13692:12;13705:1;13692:15;;;;;;;;;;;;;;;;;:48;;;;;13669:3;;;;;;;13639:148;;;;13816:17;13820:12;13816:3;:17::i;:::-;13801:32;;13847:34;13904:4;13884:25;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;13847:62;;13923:20;13946:1;13923:24;;13976:18;:12;:16;:18::i;:::-;13961:33;;14013:9;14025:1;14013:13;;14008:199;14032:4;14028:1;:8;14008:199;;;14090:102;14179:12;14090:84;14127:46;14150:12;14167:4;14163:1;:8;14150:22;;;;;;;;;;;;;;;;;;14127:8;14140:4;14136:1;:8;14127:18;;;;;;;;;;;;;;;;;;:22;;:46;;;;:::i;:::-;14090:32;14106:12;14119:1;14106:15;;;;;;;;;;;;;;;;;;14090:8;14099:1;14090:11;;;;;;;;;;;;;;;;;;:15;;:32;;;;:::i;:::-;:36;;:84;;;;:::i;:::-;:88;;:102;;;;:::i;:::-;14073:11;14085:1;14073:14;;;;;;;;;;;;;;;;;:119;;;;14038:3;;;;;;;14008:199;;;;14235:22;14239:11;14252:4;14235:3;:22::i;:::-;14221:36;;14276:9;14288:1;14276:13;;14271:97;14295:4;14291:1;:8;14271:97;;;14339:11;14351:1;14339:14;;;;;;;;;;;;;;;;;;14324:6;14331:1;14324:9;;;;;;;;;;;;;;;;;;14334:1;14324:12;;;;;;;;;;;;:29;;;;14301:3;;;;;;;14271:97;;;;13593:785;;13620:3;;;;;;;13593:785;;;;12886:1498;;;;;;;;:::o;873:95:4:-;920:7;960:1;110:66;946:15;939:22;;873:95;;;:::o;3418:219::-;3454:14;;:::i;:::-;3487:143;;;;;;;;;3495:66;3487:143;;;;;;3563:66;3487:143;;;;;3480:150;;3418:219;:::o;286:116::-;344:7;110:66;370:25;;;;;;;380:1;377;370:25;363:32;;286:116;;;;:::o;974:580::-;1042:14;1068:13;110:66;1068:27;;1143:4;1137:11;1171:4;1168:1;1161:15;1210:4;1203;1200:1;1196:12;1189:26;1249:4;1242;1239:1;1235:12;1228:26;1288:4;1281;1278:1;1274:12;1267:26;1327:8;1320:4;1317:1;1313:12;1306:30;1370:5;1363:4;1360:1;1356:12;1349:27;1433:4;1430:1;1424:4;1421:1;1415:4;1410:3;1399:39;1392:47;1389:2;;;1491:1;1488;1481:12;1389:2;1536:1;1530:8;1520:18;;1114:434;;;;;;:::o;3092:183::-;3146:14;;:::i;:::-;3179:49;;;;;;;;;3187:1;:3;;;3179:49;;;;3222:1;:3;;;3214:12;;;213:66;3200:26;3192:35;;3179:49;;;3172:56;;3092:183;;;:::o;4514:181::-;4586:14;;:::i;:::-;4619:69;213:66;4662:5;4669:1;4645:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4645:26:4;;;4635:37;;;;;;4627:46;;;:60;;;;;;;;4619:7;:69::i;:::-;4612:76;;4514:181;;;;:::o;530:103::-;577:7;603:23;607:1;624;110:66;610:15;603:3;:23::i;:::-;596:30;;530:103;;;:::o;3291:234:6:-;3330:20;;:::i;:::-;3369:149;;;;;;;;;3383:66;3369:149;;;;;;3451:66;3369:149;;;;;3362:156;;3291:234;:::o;11981:899::-;12107:23;12292:12;12323:8;12313:7;:18;12307:1;:25;12292:40;;12390:4;12376:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;12376:19:6;;;;12367:28;;12421:8;12410:7;:19;12406:94;;;12457:5;12445:6;12452:1;12445:9;;;;;;;;;;;;;;;;;:17;;;;;12483:6;12476:13;;;;;12406:94;12529:1;12519:7;:11;12509:21;;12541;12565:68;12586:8;12596:7;12605:24;12615:1;12617:7;12615:10;;;;;;;;;;;;;;;;;;12626:1;12615:13;;;;;;;;;;;;;12605:5;:9;;:24;;;;:::i;:::-;12631:1;12565:20;:68::i;:::-;12541:92;;12643:22;12668:68;12689:8;12699:7;12708:24;12718:1;12720:7;12718:10;;;;;;;;;;;;;;;;;;12729:1;12718:13;;;;;;;;;;;;;12708:5;:9;;:24;;;;:::i;:::-;12734:1;12668:20;:68::i;:::-;12643:93;;12751:9;12763:1;12751:13;;12746:128;12777:1;12770:4;:8;;;;;;;;12766:1;:12;12746:128;;;12811:4;12816:1;12811:7;;;;;;;;;;;;;;;;;;12799:6;12806:1;12799:9;;;;;;;;;;;;;;;;;:19;;;;;12855:5;12861:1;12855:8;;;;;;;;;;;;;;;;;;12832:6;12850:1;12843:4;:8;;;;;;;;12839:1;:12;12832:20;;;;;;;;;;;;;;;;;:31;;;;;12780:3;;;;;;;12746:128;;;;11981:899;;;;;;;;;;:::o;14390:1029::-;14470:29;14511:12;14526:5;:12;14511:27;;14560:1;14552:4;:9;14548:52;;;14584:5;14577:12;;;;;14548:52;14629:1;14624;14617:4;:8;;;;;;;;:13;14609:57;;;;;;;;;;;;;;;;;;;;;;;;14677:13;14693:23;14711:4;14703:5;:12;;;;;;;;238:66;14693:9;;:23;;;;:::i;:::-;14677:39;;14726:20;14749:1;14726:24;;14764:7;14760:87;;;14795:11;:5;:9;:11::i;:::-;14787:19;;14835:1;14820:16;;14760:87;14871:18;:12;:16;:18::i;:::-;14856:33;;14899:27;14929:31;14933:17;14941:5;14948:1;14933:7;:17::i;:::-;14952:7;14929:3;:31::i;:::-;14899:61;;14970:26;14999:31;15003:17;15011:5;15018:1;15003:7;:17::i;:::-;15022:7;14999:3;:31::i;:::-;14970:60;;15040:17;15060:1;15040:21;;15100:4;15080:25;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15071:34;;15120:9;15132:1;15120:13;;15115:298;15146:1;15139:4;:8;;;;;;;;15135:1;:12;15115:298;;;15168:25;;:::i;:::-;15196:21;15207:9;15196:3;15200:1;15196:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;15168:49;;15243:35;15265:12;15243:17;15255:4;15243;15248:1;15243:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;:21;;:35;;;;:::i;:::-;15231:6;15238:1;15231:9;;;;;;;;;;;;;;;;;:47;;;;15315:41;15343:12;15315:23;15327:10;:4;:8;:10::i;:::-;15315:4;15320:1;15315:7;;;;;;;;;;;;;;;;;;:11;;:23;;;;:::i;:::-;:27;;:41;;;;:::i;:::-;15292:6;15310:1;15303:4;:8;;;;;;;;15299:1;:12;15292:20;;;;;;;;;;;;;;;;;:64;;;;15382:20;15396:5;15382:9;:13;;:20;;;;:::i;:::-;15370:32;;15115:298;15149:3;;;;;;;15115:298;;;;14390:1029;;;;;;;;;;;:::o;15725:739::-;15785:23;15820:12;15835:5;:12;15820:27;;15869:1;15861:4;:9;15857:52;;;15893:5;15886:12;;;;;15857:52;15938:1;15933;15926:4;:8;;;;;;;;:13;15918:57;;;;;;;;;;;;;;;;;;;;;;;;15986:13;16002:23;16020:4;16012:5;:12;;;;;;;;238:66;16002:9;;:23;;;;:::i;:::-;15986:39;;16035:21;16059:22;16063:17;16071:5;16078:1;16063:7;:17::i;:::-;16059:3;:22::i;:::-;16035:46;;16091:20;16114:22;16118:17;16126:5;16133:1;16118:7;:17::i;:::-;16114:3;:22::i;:::-;16091:45;;16146:17;16166:1;16146:21;;16200:4;16186:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16186:19:6;;;;16177:28;;16220:9;16232:1;16220:13;;16215:243;16246:1;16239:4;:8;;;;;;;;16235:1;:12;16215:243;;;16268:12;16283:21;16294:9;16283:3;16287:1;16283:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;16268:36;;16330:17;16342:4;16330;16335:1;16330:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;16318:6;16325:1;16318:9;;;;;;;;;;;;;;;;;:29;;;;;16384:17;16396:4;16384;16389:1;16384:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;16361:6;16379:1;16372:4;:8;;;;;;;;16368:1;:12;16361:20;;;;;;;;;;;;;;;;;:40;;;;;16427:20;16441:5;16427:9;:13;;:20;;;;:::i;:::-;16415:32;;16215:243;16249:3;;;;;;;16215:243;;;;15725:739;;;;;;;;;:::o;3868:467:4:-;3922:14;;:::i;:::-;3948:9;3967:311;3974:4;3967:311;;;3994:16;4033:1;4013:17;4022:4;4028:1;4013:8;:17::i;:::-;:21;3994:40;;4120:41;4129:8;4159:1;4154;213:66;4140:15;4139:21;;;;;;;;4120:8;:41::i;:::-;4116:45;;4197:8;4179:14;4188:1;4191;4179:8;:14::i;:::-;:26;4175:70;;;4225:5;;;4175:70;4266:1;4258:9;;;;3967:311;;;;4294:34;;;;;;;;;4310:4;4302:13;;4294:34;;;;4325:1;4317:10;;4294:34;;;4287:41;;;3868:467;;;:::o;15425:294:6:-;15511:29;15596:1;15581:5;:12;:16;;;;;;;;15561:37;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15552:46;;15613:9;15625:1;15613:13;;15608:105;15647:1;15632:5;:12;:16;;;;;;;;15628:1;:20;15608:105;;;15681:5;15695:6;15691:1;15687;:5;:14;15681:21;;;;;;;;;;;;;;;;;;15669:6;15676:1;15669:9;;;;;;;;;;;;;;;;;:33;;;;15650:3;;;;;;;15608:105;;;;15425:294;;;;:::o;16470:276::-;16550:23;16623:1;16608:5;:12;:16;;;;;;;;16594:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16594:31:6;;;;16585:40;;16640:9;16652:1;16640:13;;16635:105;16674:1;16659:5;:12;:16;;;;;;;;16655:1;:20;16635:105;;;16708:5;16722:6;16718:1;16714;:5;:14;16708:21;;;;;;;;;;;;;;;;;;16696:6;16703:1;16696:9;;;;;;;;;;;;;;;;;:33;;;;;16677:3;;;;;;;16635:105;;;;16470:276;;;;:::o;1560:610:4:-;1633:14;1684:13;213:66;1684:27;;1759:4;1753:11;1787:4;1784:1;1777:15;1826:4;1819;1816:1;1812:12;1805:26;1865:4;1858;1855:1;1851:12;1844:26;1904:4;1897;1894:1;1890:12;1883:26;1943:8;1936:4;1933:1;1929:12;1922:30;1986:5;1979:4;1976:1;1972:12;1965:27;2049:4;2046:1;2040:4;2037:1;2031:4;2026:3;2015:39;2008:47;2005:2;;;2107:1;2104;2097:12;2005:2;2152:1;2146:8;2136:18;;1730:434;;;;;;:::o;118:20107:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;118:20107:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;118:20107:6;;;;:::o;36:770:-1:-;;174:3;167:4;159:6;155:17;151:27;144:35;141:2;;;192:1;189;182:12;141:2;229:6;216:20;251:101;266:85;344:6;266:85;;;251:101;;;242:110;;369:5;394:6;387:5;380:21;424:4;416:6;412:17;402:27;;446:4;441:3;437:14;430:21;;499:6;546:3;538:4;530:6;526:17;521:3;517:27;514:36;511:2;;;563:1;560;553:12;511:2;588:1;573:227;598:6;595:1;592:13;573:227;;;656:3;678:58;732:3;720:10;678:58;;;673:3;666:71;760:4;755:3;751:14;744:21;;788:4;783:3;779:14;772:21;;630:170;620:1;617;613:9;608:14;;573:227;;;577:14;134:672;;;;;;;;814:116;;889:36;917:6;911:13;889:36;;;880:45;;874:56;;;;;937:118;;1004:46;1042:6;1029:20;1004:46;;;995:55;;989:66;;;;;1062:122;;1140:39;1171:6;1165:13;1140:39;;;1131:48;;1125:59;;;;;1192:440;;1293:3;1286:4;1278:6;1274:17;1270:27;1263:35;1260:2;;;1311:1;1308;1301:12;1260:2;1348:6;1335:20;1370:64;1385:48;1426:6;1385:48;;;1370:64;;;1361:73;;1454:6;1447:5;1440:21;1490:4;1482:6;1478:17;1523:4;1516:5;1512:16;1558:3;1549:6;1544:3;1540:16;1537:25;1534:2;;;1575:1;1572;1565:12;1534:2;1585:41;1619:6;1614:3;1609;1585:41;;;1253:379;;;;;;;;1667:456;;1777:4;1765:9;1760:3;1756:19;1752:30;1749:2;;;1795:1;1792;1785:12;1749:2;1813:20;1828:4;1813:20;;;1804:29;;1880:1;1911:49;1956:3;1947:6;1936:9;1932:22;1911:49;;;1905:3;1898:5;1894:15;1887:74;1843:129;2019:2;2052:49;2097:3;2088:6;2077:9;2073:22;2052:49;;;2045:4;2038:5;2034:16;2027:75;1982:131;1743:380;;;;;2157:460;;2271:4;2259:9;2254:3;2250:19;2246:30;2243:2;;;2289:1;2286;2279:12;2243:2;2307:20;2322:4;2307:20;;;2298:29;;2374:1;2405:49;2450:3;2441:6;2430:9;2426:22;2405:49;;;2399:3;2392:5;2388:15;2381:74;2337:129;2513:2;2546:49;2591:3;2582:6;2571:9;2567:22;2546:49;;;2539:4;2532:5;2528:16;2521:75;2476:131;2237:380;;;;;2651:493;;2776:4;2764:9;2759:3;2755:19;2751:30;2748:2;;;2794:1;2791;2784:12;2748:2;2812:20;2827:4;2812:20;;;2803:29;;2879:1;2910:60;2966:3;2957:6;2946:9;2942:22;2910:60;;;2904:3;2897:5;2893:15;2886:85;2842:140;3029:2;3062:60;3118:3;3109:6;3098:9;3094:22;3062:60;;;3055:4;3048:5;3044:16;3037:86;2992:142;2742:402;;;;;3151:118;;3218:46;3256:6;3243:20;3218:46;;;3209:55;;3203:66;;;;;3276:2037;;;;;;;;;3742:3;3730:9;3721:7;3717:23;3713:33;3710:2;;;3759:1;3756;3749:12;3710:2;3822:1;3811:9;3807:17;3794:31;3845:18;3837:6;3834:30;3831:2;;;3877:1;3874;3867:12;3831:2;3897:99;3988:7;3979:6;3968:9;3964:22;3897:99;;;3887:109;;3773:229;4061:2;4050:9;4046:18;4033:32;4085:18;4077:6;4074:30;4071:2;;;4117:1;4114;4107:12;4071:2;4137:99;4228:7;4219:6;4208:9;4204:22;4137:99;;;4127:109;;4012:230;4301:2;4290:9;4286:18;4273:32;4325:18;4317:6;4314:30;4311:2;;;4357:1;4354;4347:12;4311:2;4377:99;4468:7;4459:6;4448:9;4444:22;4377:99;;;4367:109;;4252:230;4513:2;4531:78;4601:7;4592:6;4581:9;4577:22;4531:78;;;4521:88;;4492:123;4674:3;4663:9;4659:19;4646:33;4699:18;4691:6;4688:30;4685:2;;;4731:1;4728;4721:12;4685:2;4751:99;4842:7;4833:6;4822:9;4818:22;4751:99;;;4741:109;;4625:231;4887:3;4906:53;4951:7;4942:6;4931:9;4927:22;4906:53;;;4896:63;;4866:99;4996:3;5015:78;5085:7;5076:6;5065:9;5061:22;5015:78;;;5005:88;;4975:124;5158:3;5147:9;5143:19;5130:33;5183:18;5175:6;5172:30;5169:2;;;5215:1;5212;5205:12;5169:2;5235:62;5289:7;5280:6;5269:9;5265:22;5235:62;;;5225:72;;5109:194;3704:1609;;;;;;;;;;;;5320:257;;5432:2;5420:9;5411:7;5407:23;5403:32;5400:2;;;5448:1;5445;5438:12;5400:2;5483:1;5500:61;5553:7;5544:6;5533:9;5529:22;5500:61;;;5490:71;;5462:105;5394:183;;;;;5584:313;;5724:2;5712:9;5703:7;5699:23;5695:32;5692:2;;;5740:1;5737;5730:12;5692:2;5775:1;5792:89;5873:7;5864:6;5853:9;5849:22;5792:89;;;5782:99;;5754:133;5686:211;;;;;5905:259;;6033:91;6120:3;6113:5;6033:91;;;6153:4;6148:3;6144:14;6130:28;;6026:138;;;;;6231:743;6402:69;6465:5;6402:69;;;6484:105;6582:6;6577:3;6484:105;;;6477:112;;6609:71;6674:5;6609:71;;;6701:1;6686:276;6711:6;6708:1;6705:13;6686:276;;;6758:105;6859:3;6850:6;6844:13;6758:105;;;6751:112;;6880:75;6948:6;6880:75;;;6870:85;;6733:1;6730;6726:9;6721:14;;6686:276;;;6690:14;6381:593;;;;;7039:753;;7212:71;7277:5;7212:71;;;7296:97;7386:6;7381:3;7296:97;;;7289:104;;7413:73;7480:5;7413:73;;;7507:1;7492:278;7517:6;7514:1;7511:13;7492:278;;;7564:105;7665:3;7656:6;7650:13;7564:105;;;7557:112;;7686:77;7756:6;7686:77;;;7676:87;;7539:1;7536;7532:9;7527:14;;7492:278;;;7496:14;7783:3;7776:10;;7191:601;;;;;;;7857:773;;8040:71;8105:5;8040:71;;;8124:107;8224:6;8219:3;8124:107;;;8117:114;;8251:73;8318:5;8251:73;;;8345:1;8330:278;8355:6;8352:1;8349:13;8330:278;;;8402:105;8503:3;8494:6;8488:13;8402:105;;;8395:112;;8524:77;8594:6;8524:77;;;8514:87;;8377:1;8374;8370:9;8365:14;;8330:278;;;8334:14;8621:3;8614:10;;8019:611;;;;;;;8638:111;8715:28;8737:5;8715:28;;;8710:3;8703:41;8697:52;;;8756:110;8829:31;8854:5;8829:31;;;8824:3;8817:44;8811:55;;;8873:360;;9003:39;9036:5;9003:39;;;9054:89;9136:6;9131:3;9054:89;;;9047:96;;9148:52;9193:6;9188:3;9181:4;9174:5;9170:16;9148:52;;;9221:6;9216:3;9212:16;9205:23;;8983:250;;;;;;9241:364;;9401:67;9465:2;9460:3;9401:67;;;9394:74;;9501:66;9497:1;9492:3;9488:11;9481:87;9596:2;9591:3;9587:12;9580:19;;9387:218;;;;9614:465;;9774:67;9838:2;9833:3;9774:67;;;9767:74;;9874:66;9870:1;9865:3;9861:11;9854:87;9975:66;9970:2;9965:3;9961:12;9954:88;10070:2;10065:3;10061:12;10054:19;;9760:319;;;;10088:465;;10248:67;10312:2;10307:3;10248:67;;;10241:74;;10348:66;10344:1;10339:3;10335:11;10328:87;10449:66;10444:2;10439:3;10435:12;10428:88;10544:2;10539:3;10535:12;10528:19;;10234:319;;;;10562:364;;10722:67;10786:2;10781:3;10722:67;;;10715:74;;10822:66;10818:1;10813:3;10809:11;10802:87;10917:2;10912:3;10908:12;10901:19;;10708:218;;;;10985:450;11114:4;11109:3;11105:14;11193:3;11186:5;11182:15;11176:22;11204:61;11260:3;11255;11251:13;11238:11;11204:61;;;11134:137;11340:4;11333:5;11329:16;11323:23;11352:62;11408:4;11403:3;11399:14;11386:11;11352:62;;;11281:139;11087:348;;;;11493:460;11632:4;11627:3;11623:14;11711:3;11704:5;11700:15;11694:22;11722:61;11778:3;11773;11769:13;11756:11;11722:61;;;11652:137;11858:4;11851:5;11847:16;11841:23;11870:62;11926:4;11921:3;11917:14;11904:11;11870:62;;;11799:139;11605:348;;;;12061:1087;;12228:4;12223:3;12219:14;12308:3;12301:5;12297:15;12291:22;12358:3;12352:4;12348:14;12342:3;12337;12333:13;12326:37;12378:140;12513:4;12500:11;12378:140;;;12370:148;;12248:282;12600:4;12593:5;12589:16;12583:23;12652:3;12646:4;12642:14;12635:4;12630:3;12626:14;12619:38;12672:140;12807:4;12794:11;12672:140;;;12664:148;;12540:284;12893:4;12886:5;12882:16;12876:23;12905:62;12961:4;12956:3;12952:14;12939:11;12905:62;;;12834:139;13042:4;13035:5;13031:16;13025:23;13054:62;13110:4;13105:3;13101:14;13088:11;13054:62;;;12983:139;13139:4;13132:11;;12201:947;;;;;;13155:110;13228:31;13253:5;13228:31;;;13223:3;13216:44;13210:55;;;13272:120;13355:31;13380:5;13355:31;;;13350:3;13343:44;13337:55;;;13399:159;13500:52;13520:31;13545:5;13520:31;;;13500:52;;;13495:3;13488:65;13482:76;;;13565:405;;13739:95;13830:3;13821:6;13739:95;;;13732:102;;13845:75;13916:3;13907:6;13845:75;;;13942:2;13937:3;13933:12;13926:19;;13962:3;13955:10;;13720:250;;;;;;13977:1759;;14633:3;14622:9;14618:19;14610:27;;14684:9;14678:4;14674:20;14670:1;14659:9;14655:17;14648:47;14709:146;14850:4;14841:6;14709:146;;;14701:154;;14903:9;14897:4;14893:20;14888:2;14877:9;14873:18;14866:48;14928:146;15069:4;15060:6;14928:146;;;14920:154;;15122:9;15116:4;15112:20;15107:2;15096:9;15092:18;15085:48;15147:146;15288:4;15279:6;15147:146;;;15139:154;;15304:118;15418:2;15407:9;15403:18;15394:6;15304:118;;;15471:9;15465:4;15461:20;15455:3;15444:9;15440:19;15433:49;15496:146;15637:4;15628:6;15496:146;;;15488:154;;15653:73;15721:3;15710:9;15706:19;15697:6;15653:73;;;14604:1132;;;;;;;;;;15743:1248;;16219:3;16208:9;16204:19;16196:27;;16270:9;16264:4;16260:20;16256:1;16245:9;16241:17;16234:47;16295:146;16436:4;16427:6;16295:146;;;16287:154;;16452:118;16566:2;16555:9;16551:18;16542:6;16452:118;;;16581;16695:2;16684:9;16680:18;16671:6;16581:118;;;16748:9;16742:4;16738:20;16732:3;16721:9;16717:19;16710:49;16773:124;16892:4;16883:6;16773:124;;;16765:132;;16908:73;16976:3;16965:9;16961:19;16952:6;16908:73;;;16190:801;;;;;;;;;16998:201;;17110:2;17099:9;17095:18;17087:26;;17124:65;17186:1;17175:9;17171:17;17162:6;17124:65;;;17081:118;;;;;17206:407;;17397:2;17386:9;17382:18;17374:26;;17447:9;17441:4;17437:20;17433:1;17422:9;17418:17;17411:47;17472:131;17598:4;17472:131;;;17464:139;;17368:245;;;;17620:407;;17811:2;17800:9;17796:18;17788:26;;17861:9;17855:4;17851:20;17847:1;17836:9;17832:17;17825:47;17886:131;18012:4;17886:131;;;17878:139;;17782:245;;;;18034:407;;18225:2;18214:9;18210:18;18202:26;;18275:9;18269:4;18265:20;18261:1;18250:9;18246:17;18239:47;18300:131;18426:4;18300:131;;;18292:139;;18196:245;;;;18448:407;;18639:2;18628:9;18624:18;18616:26;;18689:9;18683:4;18679:20;18675:1;18664:9;18660:17;18653:47;18714:131;18840:4;18714:131;;;18706:139;;18610:245;;;;18862:213;;18980:2;18969:9;18965:18;18957:26;;18994:71;19062:1;19051:9;19047:17;19038:6;18994:71;;;18951:124;;;;;19082:493;;19312:3;19301:9;19297:19;19289:27;;19327:71;19395:1;19384:9;19380:17;19371:6;19327:71;;;19409:156;19561:2;19550:9;19546:18;19537:6;19409:156;;;19283:292;;;;;;19582:2899;;20628:3;20617:9;20613:19;20605:27;;20643:71;20711:1;20700:9;20696:17;20687:6;20643:71;;;20762:9;20756:4;20752:20;20747:2;20736:9;20732:18;20725:48;20787:146;20928:4;20919:6;20787:146;;;20779:154;;20981:9;20975:4;20971:20;20966:2;20955:9;20951:18;20944:48;21006:146;21147:4;21138:6;21006:146;;;20998:154;;21200:9;21194:4;21190:20;21185:2;21174:9;21170:18;21163:48;21225:146;21366:4;21357:6;21225:146;;;21217:154;;21420:9;21414:4;21410:20;21404:3;21393:9;21389:19;21382:49;21445:146;21586:4;21577:6;21445:146;;;21437:154;;21640:9;21634:4;21630:20;21624:3;21613:9;21609:19;21602:49;21665:146;21806:4;21797:6;21665:146;;;21657:154;;21860:9;21854:4;21850:20;21844:3;21833:9;21829:19;21822:49;21885:146;22026:4;22017:6;21885:146;;;21877:154;;22080:9;22074:4;22070:20;22064:3;22053:9;22049:19;22042:49;22105:146;22246:4;22237:6;22105:146;;;22097:154;;22300:9;22294:4;22290:20;22284:3;22273:9;22269:19;22262:49;22325:146;22466:4;22457:6;22325:146;;;22317:154;;20599:1882;;;;;;;;;;;;;22488:1028;;22902:3;22891:9;22887:19;22879:27;;22917:71;22985:1;22974:9;22970:17;22961:6;22917:71;;;22999:118;23113:2;23102:9;23098:18;23089:6;22999:118;;;23128;23242:2;23231:9;23227:18;23218:6;23128:118;;;23257:119;23371:3;23360:9;23356:19;23347:6;23257:119;;;23387;23501:3;23490:9;23486:19;23477:6;23387:119;;;22873:643;;;;;;;;;23523:1436;;24085:3;24074:9;24070:19;24062:27;;24100:71;24168:1;24157:9;24153:17;24144:6;24100:71;;;24182:118;24296:2;24285:9;24281:18;24272:6;24182:118;;;24311;24425:2;24414:9;24410:18;24401:6;24311:118;;;24440:119;24554:3;24543:9;24539:19;24530:6;24440:119;;;24570;24684:3;24673:9;24669:19;24660:6;24570:119;;;24700;24814:3;24803:9;24799:19;24790:6;24700:119;;;24830;24944:3;24933:9;24929:19;24920:6;24830:119;;;24056:903;;;;;;;;;;;24966:256;;25028:2;25022:9;25012:19;;25066:4;25058:6;25054:17;25165:6;25153:10;25150:22;25129:18;25117:10;25114:34;25111:62;25108:2;;;25186:1;25183;25176:12;25108:2;25206:10;25202:2;25195:22;25006:216;;;;;25229:279;;25409:18;25401:6;25398:30;25395:2;;;25441:1;25438;25431:12;25395:2;25470:4;25462:6;25458:17;25450:25;;25498:4;25492;25488:15;25480:23;;25332:176;;;;25515:258;;25658:18;25650:6;25647:30;25644:2;;;25690:1;25687;25680:12;25644:2;25734:4;25730:9;25723:4;25715:6;25711:17;25707:33;25699:41;;25763:4;25757;25753:15;25745:23;;25581:192;;;;25782:125;;25894:6;25883:17;;25875:32;;;;25918:138;;26044:4;26036:6;26032:17;26021:28;;26013:43;;;;26065:113;;26170:3;26160:13;;26154:24;;;;26185:124;;26298:5;26292:12;26282:22;;26276:33;;;;26316:92;;26397:5;26391:12;26381:22;;26375:33;;;;26416:137;;26542:4;26534:6;26530:17;26519:28;;26512:41;;;;26562:139;;26690:4;26682:6;26678:17;26667:28;;26660:41;;;;26710:161;;26862:3;26847:18;;26840:31;;;;;26880:189;;27021:6;27016:3;27009:19;27058:4;27053:3;27049:14;27034:29;;27002:67;;;;;27078:199;;27229:6;27224:3;27217:19;27266:4;27261:3;27257:14;27242:29;;27210:67;;;;;27286:163;;27401:6;27396:3;27389:19;27438:4;27433:3;27429:14;27414:29;;27382:67;;;;;27458:145;;27594:3;27579:18;;27572:31;;;;;27611:92;;27691:5;27684:13;27677:21;27666:32;;27660:43;;;;27710:79;;27779:5;27768:16;;27762:27;;;;27796:79;;27865:5;27854:16;;27848:27;;;;27882:92;;27962:5;27955:13;27948:21;27937:32;;27931:43;;;;27981:79;;28050:5;28039:16;;28033:27;;;;28067:79;;28136:5;28125:16;;28119:27;;;;28154:145;28235:6;28230:3;28225;28212:30;28291:1;28282:6;28277:3;28273:16;28266:27;28205:94;;;;28308:268;28373:1;28380:101;28394:6;28391:1;28388:13;28380:101;;;28470:1;28465:3;28461:11;28455:18;28451:1;28446:3;28442:11;28435:39;28416:2;28413:1;28409:10;28404:15;;28380:101;;;28496:6;28493:1;28490:13;28487:2;;;28561:1;28552:6;28547:3;28543:16;28536:27;28487:2;28357:219;;;;;28584:74;;28648:5;28637:16;;28631:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\nimport \"./InnerProductVerifier.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n    using Utils for Utils.G1Point;\n\n    uint256 constant UNITY = 0x14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd; // primitive 2^28th root of unity modulo q.\n\n    InnerProductVerifier ip;\n\n    struct ZetherStatement {\n        Utils.G1Point[] CLn;\n        Utils.G1Point[] CRn;\n        Utils.G1Point[] C;\n        Utils.G1Point D;\n        Utils.G1Point[] y;\n        uint256 epoch;\n        Utils.G1Point u;\n    }\n\n    struct ZetherProof {\n        Utils.G1Point BA;\n        Utils.G1Point BS;\n        Utils.G1Point A;\n        Utils.G1Point B;\n\n        Utils.G1Point[] CLnG;\n        Utils.G1Point[] CRnG;\n        Utils.G1Point[] C_0G;\n        Utils.G1Point[] DG;\n        Utils.G1Point[] y_0G;\n        Utils.G1Point[] gG;\n        Utils.G1Point[] C_XG;\n        Utils.G1Point[] y_XG;\n\n        uint256[] f;\n        uint256 z_A;\n        uint256 z_C;\n        uint256 z_E;\n\n        Utils.G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_r;\n        uint256 s_b;\n        uint256 s_tau;\n\n        InnerProductVerifier.InnerProductProof ipProof;\n    }\n\n    constructor(address _ip) public {\n        ip = InnerProductVerifier(_ip);\n    }\n\n    function verifyTransfer(Utils.G1Point[] memory CLn, Utils.G1Point[] memory CRn, Utils.G1Point[] memory C, Utils.G1Point memory D, Utils.G1Point[] memory y, uint256 epoch, Utils.G1Point memory u, bytes memory proof) public view returns (bool) {\n        ZetherStatement memory statement;\n        statement.CLn = CLn; // do i need to allocate / set size?!\n        statement.CRn = CRn;\n        statement.C = C;\n        statement.D = D;\n        statement.y = y;\n        statement.epoch = epoch;\n        statement.u = u;\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[64] ys;\n        uint256 z;\n        uint256[2] zs; // [z^2, z^3]\n        uint256[64] twoTimesZSquared;\n        uint256 zSum;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        Utils.G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        Utils.G1Point A_y;\n        Utils.G1Point A_D;\n        Utils.G1Point A_b;\n        Utils.G1Point A_X;\n        Utils.G1Point A_t;\n        Utils.G1Point gEpoch;\n        Utils.G1Point A_u;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 m;\n        uint256 N;\n        uint256 v;\n        uint256 w;\n        uint256 vPow;\n        uint256 wPow;\n        uint256[2][] f; // could just allocate extra space in the proof?\n        uint256[2][] r; // each poly is an array of length N. evaluations of prods\n        Utils.G1Point temp;\n        Utils.G1Point CLnR;\n        Utils.G1Point CRnR;\n        Utils.G1Point[2][] CR;\n        Utils.G1Point[2][] yR;\n        Utils.G1Point C_XR;\n        Utils.G1Point y_XR;\n        Utils.G1Point gR;\n        Utils.G1Point DR;\n    }\n\n    struct IPAuxiliaries {\n        Utils.G1Point P;\n        Utils.G1Point u_x;\n        Utils.G1Point[] hPrimes;\n        Utils.G1Point hPrimeSum;\n        uint256 o;\n    }\n\n    function gSum() internal pure returns (Utils.G1Point memory) {\n        return Utils.G1Point(0x00715f13ea08d6b51bedcde3599d8e12163e090921309d5aafc9b5bfaadbcda0, 0x27aceab598af7bf3d16ca9d40fe186c489382c21bb9d22b19cb3af8b751b959f);\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) internal view returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.C, statement.D, statement.y, statement.epoch))).mod();\n\n        AnonAuxiliaries memory anonAuxiliaries;\n        anonAuxiliaries.v = uint256(keccak256(abi.encode(statementHash, proof.BA, proof.BS, proof.A, proof.B))).mod();\n        anonAuxiliaries.w = uint256(keccak256(abi.encode(anonAuxiliaries.v, proof.CLnG, proof.CRnG, proof.C_0G, proof.DG, proof.y_0G, proof.gG, proof.C_XG, proof.y_XG))).mod();\n        anonAuxiliaries.m = proof.f.length / 2;\n        anonAuxiliaries.N = 2 ** anonAuxiliaries.m;\n        anonAuxiliaries.f = new uint256[2][](2 * anonAuxiliaries.m);\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) {\n            anonAuxiliaries.f[k][1] = proof.f[k];\n            anonAuxiliaries.f[k][0] = anonAuxiliaries.w.sub(proof.f[k]); // is it wasteful to store / keep all these in memory?\n        }\n\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) {\n            anonAuxiliaries.temp = anonAuxiliaries.temp.add(ip.gs(k).mul(anonAuxiliaries.f[k][1]));\n            anonAuxiliaries.temp = anonAuxiliaries.temp.add(ip.hs(k).mul(anonAuxiliaries.f[k][1].mul(anonAuxiliaries.f[k][0])));\n        }\n        anonAuxiliaries.temp = anonAuxiliaries.temp.add(ip.hs(2 * anonAuxiliaries.m).mul(anonAuxiliaries.f[0][1].mul(anonAuxiliaries.f[anonAuxiliaries.m][1])).add(ip.hs(2 * anonAuxiliaries.m + 1).mul(anonAuxiliaries.f[0][0].mul(anonAuxiliaries.f[anonAuxiliaries.m][0]))));\n        require(proof.B.mul(anonAuxiliaries.w).add(proof.A).eq(anonAuxiliaries.temp.add(Utils.h().mul(proof.z_A))), \"Recovery failure for B^w * A.\");\n\n        anonAuxiliaries.r = assemblePolynomials(anonAuxiliaries.f);\n\n        anonAuxiliaries.CR = assembleConvolutions(anonAuxiliaries.r, statement.C);\n        anonAuxiliaries.yR = assembleConvolutions(anonAuxiliaries.r, statement.y);\n        anonAuxiliaries.vPow = 1;\n        for (uint256 i = 0; i < anonAuxiliaries.N; i++) {\n            anonAuxiliaries.CLnR = anonAuxiliaries.CLnR.add(statement.CLn[i].mul(anonAuxiliaries.r[i][0]));\n            anonAuxiliaries.CRnR = anonAuxiliaries.CRnR.add(statement.CRn[i].mul(anonAuxiliaries.r[i][0]));\n            anonAuxiliaries.C_XR = anonAuxiliaries.C_XR.add(anonAuxiliaries.CR[i / 2][i % 2].mul(anonAuxiliaries.vPow));\n            anonAuxiliaries.y_XR = anonAuxiliaries.y_XR.add(anonAuxiliaries.yR[i / 2][i % 2].mul(anonAuxiliaries.vPow));\n            if (i > 0) {\n                anonAuxiliaries.vPow = anonAuxiliaries.vPow.mul(anonAuxiliaries.v);\n            }\n        }\n        anonAuxiliaries.wPow = 1;\n        for (uint256 k = 0; k < anonAuxiliaries.m; k++) {\n            anonAuxiliaries.CLnR = anonAuxiliaries.CLnR.add(proof.CLnG[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CRnR = anonAuxiliaries.CRnR.add(proof.CRnG[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CR[0][0] = anonAuxiliaries.CR[0][0].add(proof.C_0G[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.DR = anonAuxiliaries.DR.add(proof.DG[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.yR[0][0] = anonAuxiliaries.yR[0][0].add(proof.y_0G[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.gR = anonAuxiliaries.gR.add(proof.gG[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.C_XR = anonAuxiliaries.C_XR.add(proof.C_XG[k].mul(anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.y_XR = anonAuxiliaries.y_XR.add(proof.y_XG[k].mul(anonAuxiliaries.wPow.neg()));\n\n            anonAuxiliaries.wPow = anonAuxiliaries.wPow.mul(anonAuxiliaries.w);\n        }\n        anonAuxiliaries.DR = anonAuxiliaries.DR.add(statement.D.mul(anonAuxiliaries.wPow));\n        anonAuxiliaries.gR = anonAuxiliaries.gR.add(Utils.g().mul(anonAuxiliaries.wPow));\n\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(anonAuxiliaries.w))).mod();\n        zetherAuxiliaries.ys[0] = 1;\n        zetherAuxiliaries.k = 1;\n        for (uint256 i = 1; i < 64; i++) {\n            zetherAuxiliaries.ys[i] = zetherAuxiliaries.ys[i - 1].mul(zetherAuxiliaries.y);\n            zetherAuxiliaries.k = zetherAuxiliaries.k.add(zetherAuxiliaries.ys[i]);\n        }\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs = [zetherAuxiliaries.z.exp(2), zetherAuxiliaries.z.exp(3)];\n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = zetherAuxiliaries.k.mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** 32).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.t = proof.tHat.sub(zetherAuxiliaries.k); // t = tHat - delta(y, z)\n        for (uint256 i = 0; i < 32; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + 32] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.tCommits))).mod();\n        zetherAuxiliaries.tEval = proof.tCommits[0].mul(zetherAuxiliaries.x).add(proof.tCommits[1].mul(zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = anonAuxiliaries.gR.mul(proof.s_sk).add(anonAuxiliaries.yR[0][0].mul(proof.c.neg()));\n        sigmaAuxiliaries.A_D = Utils.g().mul(proof.s_r).add(statement.D.mul(proof.c.neg())); // add(mul(anonAuxiliaries.gR, proof.s_r), mul(anonAuxiliaries.DR, proof.c.neg()));\n        sigmaAuxiliaries.A_b = Utils.g().mul(proof.s_b).add(anonAuxiliaries.DR.mul(zetherAuxiliaries.zs[0].neg()).add(anonAuxiliaries.CRnR.mul(zetherAuxiliaries.zs[1])).mul(proof.s_sk).add(anonAuxiliaries.CR[0][0].mul(zetherAuxiliaries.zs[0].neg()).add(anonAuxiliaries.CLnR.mul(zetherAuxiliaries.zs[1])).mul(proof.c.neg())));\n        sigmaAuxiliaries.A_X = anonAuxiliaries.y_XR.mul(proof.s_r).add(anonAuxiliaries.C_XR.mul(proof.c.neg()));\n        sigmaAuxiliaries.A_t = Utils.g().mul(zetherAuxiliaries.t).add(zetherAuxiliaries.tEval.neg()).mul(proof.c.mul(anonAuxiliaries.wPow)).add(Utils.h().mul(proof.s_tau)).add(Utils.g().mul(proof.s_b.neg()));\n        sigmaAuxiliaries.gEpoch = Utils.mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = sigmaAuxiliaries.gEpoch.mul(proof.s_sk).add(statement.u.mul(proof.c.neg()));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(zetherAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_D, sigmaAuxiliaries.A_b, sigmaAuxiliaries.A_X, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_u))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = Utils.h().mul(ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = new Utils.G1Point[](64);\n        for (uint256 i = 0; i < 64; i++) {\n            ipAuxiliaries.hPrimes[i] = ip.hs(i).mul(zetherAuxiliaries.ys[i].inv());\n            ipAuxiliaries.hPrimeSum = ipAuxiliaries.hPrimeSum.add(ipAuxiliaries.hPrimes[i].mul(zetherAuxiliaries.ys[i].mul(zetherAuxiliaries.z).add(zetherAuxiliaries.twoTimesZSquared[i])));\n        }\n        ipAuxiliaries.P = proof.BA.add(proof.BS.mul(zetherAuxiliaries.x)).add(gSum().mul(zetherAuxiliaries.z.neg())).add(ipAuxiliaries.hPrimeSum);\n        ipAuxiliaries.P = ipAuxiliaries.P.add(Utils.h().mul(proof.mu.neg()));\n        ipAuxiliaries.P = ipAuxiliaries.P.add(ipAuxiliaries.u_x.mul(proof.tHat));\n        require(ip.verifyInnerProduct(ipAuxiliaries.hPrimes, ipAuxiliaries.u_x, ipAuxiliaries.P, proof.ipProof, ipAuxiliaries.o), \"Inner product proof verification failed.\");\n\n        return true;\n    }\n\n    function assemblePolynomials(uint256[2][] memory f) internal view returns (uint256[2][] memory result) {\n        uint256 m = f.length / 2;\n        uint256 N = 2 ** m;\n        result = new uint256[2][](N);\n        for (uint256 i = 0; i < 2; i++) {\n            uint256[] memory half = recursivePolynomials(i * m, (i + 1) * m, 1, f);\n            for (uint256 j = 0; j < N; j++) {\n                result[j][i] = half[j];\n            }\n        }\n    }\n\n    function recursivePolynomials(uint256 baseline, uint256 current, uint256 accum, uint256[2][] memory f) internal view returns (uint256[] memory result) {\n        // have to do a bunch of re-allocating because solidity won't let me have something which is internal and also modifies (internal) state. (?)\n        uint256 size = 2 ** (current - baseline); // size is at least 2...\n        result = new uint256[](size);\n\n        if (current == baseline) {\n            result[0] = accum;\n            return result;\n        }\n        current = current - 1;\n\n        uint256[] memory left = recursivePolynomials(baseline, current, accum.mul(f[current][0]), f);\n        uint256[] memory right = recursivePolynomials(baseline, current, accum.mul(f[current][1]), f);\n        for (uint256 i = 0; i < size / 2; i++) {\n            result[i] = left[i];\n            result[i + size / 2] = right[i];\n        }\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, Utils.G1Point[] memory base) internal view returns (Utils.G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new Utils.G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        Utils.G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            Utils.G1Point[] memory inverse_fft = new Utils.G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = base_fft[j].mul(exponent_fft[j]).add(base_fft[j + half].mul(exponent_fft[j + half])).mul(compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n    }\n\n    function fft(Utils.G1Point[] memory input, bool inverse) internal view returns (Utils.G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        Utils.G1Point[] memory even = fft(extract(input, 0), inverse);\n        Utils.G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new Utils.G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            Utils.G1Point memory temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp).mul(compensation);\n            result[i + size / 2] = even[i].add(temp.neg()).mul(compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(Utils.G1Point[] memory input, uint256 parity) internal pure returns (Utils.G1Point[] memory result) {\n        result = new Utils.G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.BA = Utils.G1Point(Utils.slice(arr, 0), Utils.slice(arr, 32));\n        proof.BS = Utils.G1Point(Utils.slice(arr, 64), Utils.slice(arr, 96));\n        proof.A = Utils.G1Point(Utils.slice(arr, 128), Utils.slice(arr, 160));\n        proof.B = Utils.G1Point(Utils.slice(arr, 192), Utils.slice(arr, 224));\n\n        uint256 m = (arr.length - 1472) / 576;\n        proof.CLnG = new Utils.G1Point[](m);\n        proof.CRnG = new Utils.G1Point[](m);\n        proof.C_0G = new Utils.G1Point[](m);\n        proof.DG = new Utils.G1Point[](m);\n        proof.y_0G = new Utils.G1Point[](m);\n        proof.gG = new Utils.G1Point[](m);\n        proof.C_XG = new Utils.G1Point[](m);\n        proof.y_XG = new Utils.G1Point[](m);\n        proof.f = new uint256[](2 * m);\n        for (uint256 k = 0; k < m; k++) {\n            proof.CLnG[k] = Utils.G1Point(Utils.slice(arr, 256 + k * 64), Utils.slice(arr, 288 + k * 64));\n            proof.CRnG[k] = Utils.G1Point(Utils.slice(arr, 256 + (m + k) * 64), Utils.slice(arr, 288 + (m + k) * 64));\n            proof.C_0G[k] = Utils.G1Point(Utils.slice(arr, 256 + m * 128 + k * 64), Utils.slice(arr, 288 + m * 128 + k * 64));\n            proof.DG[k] = Utils.G1Point(Utils.slice(arr, 256 + m * 192 + k * 64), Utils.slice(arr, 288 + m * 192 + k * 64));\n            proof.y_0G[k] = Utils.G1Point(Utils.slice(arr, 256 + m * 256 + k * 64), Utils.slice(arr, 288 + m * 256 + k * 64));\n            proof.gG[k] = Utils.G1Point(Utils.slice(arr, 256 + m * 320 + k * 64), Utils.slice(arr, 288 + m * 320 + k * 64));\n            proof.C_XG[k] = Utils.G1Point(Utils.slice(arr, 256 + m * 384 + k * 64), Utils.slice(arr, 288 + m * 384 + k * 64));\n            proof.y_XG[k] = Utils.G1Point(Utils.slice(arr, 256 + m * 448 + k * 64), Utils.slice(arr, 288 + m * 448 + k * 64));\n            proof.f[k] = uint256(Utils.slice(arr, 256 + m * 512 + k * 32));\n            proof.f[k + m] = uint256(Utils.slice(arr, 256 + m * 544 + k * 32));\n        }\n        uint256 starting = m * 576;\n        proof.z_A = uint256(Utils.slice(arr, 256 + starting));\n\n        proof.tCommits = [Utils.G1Point(Utils.slice(arr, 288 + starting), Utils.slice(arr, 320 + starting)), Utils.G1Point(Utils.slice(arr, 352 + starting), Utils.slice(arr, 384 + starting))];\n        proof.tHat = uint256(Utils.slice(arr, 416 + starting));\n        proof.mu = uint256(Utils.slice(arr, 448 + starting));\n\n        proof.c = uint256(Utils.slice(arr, 480 + starting));\n        proof.s_sk = uint256(Utils.slice(arr, 512 + starting));\n        proof.s_r = uint256(Utils.slice(arr, 544 + starting));\n        proof.s_b = uint256(Utils.slice(arr, 576 + starting));\n        proof.s_tau = uint256(Utils.slice(arr, 608 + starting));\n\n        InnerProductVerifier.InnerProductProof memory ipProof;\n        ipProof.ls = new Utils.G1Point[](6);\n        ipProof.rs = new Utils.G1Point[](6);\n        for (uint256 i = 0; i < 6; i++) { // 2^6 = 64.\n            ipProof.ls[i] = Utils.G1Point(Utils.slice(arr, 640 + starting + i * 64), Utils.slice(arr, 672 + starting + i * 64));\n            ipProof.rs[i] = Utils.G1Point(Utils.slice(arr, 640 + starting + (6 + i) * 64), Utils.slice(arr, 672 + starting + (6 + i) * 64));\n        }\n        ipProof.a = uint256(Utils.slice(arr, 640 + starting + 6 * 128));\n        ipProof.b = uint256(Utils.slice(arr, 672 + starting + 6 * 128));\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-28T00:57:52.327Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
