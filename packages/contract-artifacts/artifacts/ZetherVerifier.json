{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "baseSize",
      "outputs": [
        {
          "name": "size",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "size",
          "type": "uint256"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "extendBase",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "C",
          "type": "bytes32[2][]"
        },
        {
          "name": "D",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2][]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2][]\"},{\"name\":\"C\",\"type\":\"bytes32[2][]\"},{\"name\":\"D\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseSize\",\"outputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"extendBase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x0a8fcd9f60c29d4e0114dd2f632688845d0e505943b3bc514698fd91da377ee6\",\"urls\":[\"bzzr://84371071fa5f1d7eba148701bb8d49c9e2de726fd0feb8669bf4754da418e44b\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0xe05f1efab2c451daed60eacc06d118cbbd4348ccf402a3b95afeff1df868b500\",\"urls\":[\"bzzr://b3d7f409b42c14f202c9d0688150fbb3e5ce552c1bf6a73edb195157716c4324\"]}},\"version\":1}",
  "bytecode": "0x60806040526200001f60026200025d640100000000026401000000009004565b6006906040620000319291906200059b565b503480156200003f57600080fd5b506200008f6040805190810160405280600181526020017f470000000000000000000000000000000000000000000000000000000000000081525062000312640100000000026401000000009004565b60026000820151816000015560208201518160010155905050620000f76040805190810160405280600181526020017f560000000000000000000000000000000000000000000000000000000000000081525062000312640100000000026401000000009004565b6004600082015181600001556020820151816001015590505060008090505b604081101562000256576000620001726040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508362000395640100000000026401000000009004565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506001620002066040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508362000395640100000000026401000000009004565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050808060010191505062000116565b506200073d565b62000267620005e0565b60018160006040811015156200027957fe5b602002018181525050818160016040811015156200029357fe5b6020020181815250506000600290505b60408110156200030c57620002e6838360018403604081101515620002c457fe5b60200201516200041b64010000000002620035fa179091906401000000009004565b8282604081101515620002f557fe5b6020020181815250508080600101915050620002a3565b50919050565b6200031c62000604565b6200038e7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360405160200162000354919062000698565b60405160208183030381529060405280519060200120600190048115156200037857fe5b0662000453640100000000026401000000009004565b9050919050565b6200039f62000604565b620004137f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001620003d9929190620006b1565b6040516020818303038152906040528051906020012060019004811515620003fd57fe5b0662000453640100000000026401000000009004565b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156200044857fe5b828409905092915050565b6200045d62000604565b60005b600115620005105760006003620004888560036200052d640100000000026401000000009004565b019050620004d681600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515620004c057fe5b046200052d640100000000026401000000009004565b915080620004f58360026200052d640100000000026401000000009004565b141562000503575062000510565b6001840193505062000460565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156200058f57600080fd5b80519250505092915050565b8260408101928215620005cd579160200282015b82811115620005cc578251825591602001919060010190620005af565b5b509050620005dc91906200061e565b5090565b61080060405190810160405280604090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6200064391905b808211156200063f57600081600090555060010162000625565b5090565b90565b60006200065382620006dd565b6200065f8185620006e8565b935062000671818560208601620006fd565b80840191505092915050565b620006926200068c82620006f3565b62000733565b82525050565b6000620006a6828462000646565b915081905092915050565b6000620006bf828562000646565b9150620006cd82846200067d565b6020820191508190509392505050565b600081519050919050565b600081905092915050565b6000819050919050565b60005b838110156200071d57808201518184015260208101905062000700565b838111156200072d576000848401525b50505050565b6000819050919050565b615a0b806200074d6000396000f3fe608060405260043610610051576000357c0100000000000000000000000000000000000000000000000000000000900480631659e67d146100565780634e8ee0e214610093578063a00547ab146100be575b600080fd5b34801561006257600080fd5b5061007d60048036036100789190810190614d5d565b6100da565b60405161008a9190615484565b60405180910390f35b34801561009f57600080fd5b506100a861056a565b6040516100b5919061557f565b60405180910390f35b6100d860048036036100d39190810190614e88565b610576565b005b60006100e461449c565b6000865190508060008054905010151515610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b906154df565b60405180910390fd5b8060405190808252806020026020018201604052801561016e57816020015b61015b6144e7565b8152602001906001900390816101535790505b508260000181905250806040519080825280602002602001820160405280156101b157816020015b61019e6144e7565b8152602001906001900390816101965790505b508260200181905250806040519080825280602002602001820160405280156101f457816020015b6101e16144e7565b8152602001906001900390816101d95790505b5082604001819052508060405190808252806020026020018201604052801561023757816020015b6102246144e7565b81526020019060019003908161021c5790505b50826080018190525060008090505b8181101561049b5760408051908101604052808d8381518110151561026757fe5b90602001906020020151600060028110151561027f57fe5b60200201516001900481526020018d8381518110151561029b57fe5b9060200190602002015160016002811015156102b357fe5b6020020151600190048152508360000151828151811015156102d157fe5b9060200190602002018190525060408051908101604052808c838151811015156102f757fe5b90602001906020020151600060028110151561030f57fe5b60200201516001900481526020018c8381518110151561032b57fe5b90602001906020020151600160028110151561034357fe5b60200201516001900481525083602001518281518110151561036157fe5b9060200190602002018190525060408051908101604052808b8381518110151561038757fe5b90602001906020020151600060028110151561039f57fe5b60200201516001900481526020018b838151811015156103bb57fe5b9060200190602002015160016002811015156103d357fe5b6020020151600190048152508360400151828151811015156103f157fe5b906020019060200201819052506040805190810160405280898381518110151561041757fe5b90602001906020020151600060028110151561042f57fe5b6020020151600190048152602001898381518110151561044b57fe5b90602001906020020151600160028110151561046357fe5b60200201516001900481525083608001518281518110151561048157fe5b906020019060200201819052508080600101915050610246565b5060408051908101604052808960006002811015156104b657fe5b60200201516001900481526020018960016002811015156104d357fe5b6020020151600190048152508260600181905250858260a0018181525050604080519081016040528086600060028110151561050b57fe5b602002015160019004815260200186600160028110151561052857fe5b6020020151600190048152508260c00181905250610544614501565b61054d8561069f565b90506105598382610f88565b935050505098975050505050505050565b60008080549050905090565b6000808054905090505b8181101561069b5760006105c96040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508361349f565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050600161064c6040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508361349f565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508080600101915050610580565b5050565b6106a7614501565b60408051908101604052806106bd84600061350f565b81526020016106cd84602061350f565b815250816020018190525060408051908101604052806106ee84604061350f565b81526020016106fe84606061350f565b8152508160400181905250604080519081016040528061071f84608061350f565b815260200161072f8460a061350f565b815250816060018190525060408051908101604052806107508460c061350f565b81526020016107608460e061350f565b81525081608001819052506040805190810160405280604080519081016040528061078d8661010061350f565b815260200161079e8661012061350f565b815250815260200160408051908101604052806107bd8661014061350f565b81526020016107ce8661016061350f565b8152508152508160a001819052506107e88261018061350f565b816101000181815250506107fe826101a061350f565b8160c0018181525050610813826101c061350f565b8160e0018181525050610824614593565b610830836101e061350f565b8160000181815250506108458361020061350f565b81602001818152505061085a8361022061350f565b816040018181525050808261014001819052506108756145b5565b60008090505b60068110156109355760408051908101604052806108a087604085026102400161350f565b81526020016108b687604085026102600161350f565b8152508260000151826006811015156108cb57fe5b602002018190525060408051908101604052806108f287604085600601026102400161350f565b815260200161090b87604085600601026102600161350f565b81525082602001518260068110151561092057fe5b6020020181905250808060010191505061087b565b506109488460806006026102400161350f565b8160400181815250506109638460806006026102600161350f565b8160600181815250508083610160018190525061097e6145eb565b600060c06102a06105808851030381151561099557fe5b04905060408051908101604052806109af8861058061350f565b81526020016109c0886105a061350f565b815250826000018190525060408051908101604052806109e2886105c061350f565b81526020016109f3886105e061350f565b81525082602001819052506040805190810160405280610a158861060061350f565b8152602001610a268861062061350f565b81525082604001819052506040805190810160405280610a488861064061350f565b8152602001610a598861066061350f565b81525082606001819052506040805190810160405280610a7b8861068061350f565b8152602001610a8c886106a061350f565b81525082608001819052506040805190810160405280610aae886106c061350f565b8152602001610abf886106e061350f565b8152508260a001819052506040805190810160405280610ae18861070061350f565b8152602001610af28861072061350f565b8152508260c001819052506040805190810160405280610b148861074061350f565b8152602001610b258861076061350f565b8152508260e001819052506040805190810160405280610b478861078061350f565b8152602001610b58886107a061350f565b8152508261010001819052506040805190810160405280610b7b886107c061350f565b8152602001610b8c886107e061350f565b81525082610120018190525060018103604051908082528060200260200182016040528015610bd557816020015b610bc26146a5565b815260200190600190039081610bba5790505b5082610180018190525060008090505b60018203811015610c8c57610c0187826020026108000161350f565b83610180015182815181101515610c1457fe5b906020019060200201516000600281101515610c2c57fe5b602002018181525050610c4b876020836001860301026108000161350f565b83610180015182815181101515610c5e57fe5b906020019060200201516001600281101515610c7657fe5b6020020181815250508080600101915050610be5565b50600281811515610c9957fe5b04604051908082528060200260200182016040528015610cd357816020015b610cc06146c7565b815260200190600190039081610cb85790505b50826101400181905250600281811515610ce957fe5b04604051908082528060200260200182016040528015610d2357816020015b610d106146c7565b815260200190600190039081610d085790505b5082610160018190525060008090505b600282811515610d3f57fe5b04811015610f16576040805190810160405280610d65896040858701026107c00161350f565b8152602001610d7d896040858701026107e00161350f565b81525083610140015182815181101515610d9357fe5b906020019060200201516000600281101515610dab57fe5b60200201819052506040805190810160405280610dd48960408502606087026107c0010161350f565b8152602001610def8960408502606087026107e0010161350f565b81525083610140015182815181101515610e0557fe5b906020019060200201516001600281101515610e1d57fe5b60200201819052506040805190810160405280610e468960408502608087026107c0010161350f565b8152602001610e618960408502608087026107e0010161350f565b81525083610160015182815181101515610e7757fe5b906020019060200201516000600281101515610e8f57fe5b60200201819052506040805190810160405280610eb8896040850260a087026107c0010161350f565b8152602001610ed3896040850260a087026107e0010161350f565b81525083610160015182815181101515610ee957fe5b906020019060200201516001600281101515610f0157fe5b60200201819052508080600101915050610d33565b5080856000018181525050610f328660c083026107c00161350f565b826101a0018181525050610f4d8660c083026107e00161350f565b826101c0018181525050610f688660c083026108000161350f565b826101e00181815250508185610120018190525084945050505050919050565b6000610f926146f5565b611031610fea856000015186602001518760400151886060015189608001518a60a00151604051602001610fcb96959493929190615407565b6040516020818303038152906040528051906020012060019004613528565b846020015185604001518660600151876080015160405160200161101295949392919061568c565b6040516020818303038152906040528051906020012060019004613528565b816000018181525050611047816000015161355d565b81602001819052506110868160000151604051602001611067919061557f565b6040516020818303038152906040528051906020012060019004613528565b8160400181815250506110aa816040015182604001516135fa90919063ffffffff16565b816060015160006003811015156110bd57fe5b6020020181815250506000600190505b600381101561112e5761110682604001518360600151600184036003811015156110f357fe5b60200201516135fa90919063ffffffff16565b82606001518260038110151561111857fe5b60200201818152505080806001019150506110cd565b5060008090505b6002604081151561114257fe5b048110156111f6576111778160020a8360600151600060038110151561116457fe5b60200201516135fa90919063ffffffff16565b82608001518260408110151561118957fe5b6020020181815250506111bf8160020a836060015160016003811015156111ac57fe5b60200201516135fa90919063ffffffff16565b8260800151600260408115156111d157fe5b0483016040811015156111e057fe5b6020020181815250508080600101915050611135565b5061123481604001518460a0015160405160200161121592919061559a565b6040516020818303038152906040528051906020012060019004613528565b8161012001818152505061129581604001516112878360600151600160038110151561125c57fe5b60200201518460600151600060038110151561127457fe5b602002015161363190919063ffffffff16565b6135fa90919063ffffffff16565b8160a00181815250506113386112de8260a001516112d0600260408115156112b957fe5b0460020a8560a001516135fa90919063ffffffff16565b61366890919063ffffffff16565b61132a61130f846060015160006003811015156112f757fe5b6020020151856040015161366890919063ffffffff16565b61131c85602001516136a8565b6135fa90919063ffffffff16565b61366890919063ffffffff16565b8160c00181815250506113ac61136a8460a00151600060028110151561135a57fe5b60200201518361012001516136f3565b6113a78560a00151600160028110151561138057fe5b60200201516113a28561012001518661012001516135fa90919063ffffffff16565b6136f3565b61372e565b8160e001819052506113d08160c0015184610100015161366890919063ffffffff16565b816101000181815250506113e26145eb565b83610120015190506113f2614761565b6113fa6147cc565b60c06040519081016040528084600001518152602001846020015181526020018460400151815260200184606001518152602001846080015181526020018460a0015181525090506114a4846101200151828560c001518660e001518761010001518861012001518961014001518a61016001516040516020016114859897969594939291906155c3565b6040516020818303038152906040528051906020012060019004613528565b82600001818152505085600001516040519080825280602002602001820160405280156114eb57816020015b6114d86146a5565b8152602001906001900390816114d05790505b50826020018190525081600001518260200151600081518110151561150c57fe5b90602001906020020151600060028110151561152457fe5b60200201818152505081600001518260200151600081518110151561154557fe5b90602001906020020151600160028110151561155d57fe5b6020020181815250506000600190505b866000015181101561179a578361018001516001820381518110151561158f57fe5b9060200190602002015160006002811015156115a757fe5b60200201518360200151828151811015156115be57fe5b9060200190602002015160006002811015156115d657fe5b602002018181525050836101800151600182038151811015156115f557fe5b90602001906020020151600160028110151561160d57fe5b602002015183602001518281518110151561162457fe5b90602001906020020151600160028110151561163c57fe5b6020020181815250506116b583602001518281518110151561165a57fe5b90602001906020020151600060028110151561167257fe5b60200201518460200151600081518110151561168a57fe5b9060200190602002015160006002811015156116a257fe5b602002015161366890919063ffffffff16565b836020015160008151811015156116c857fe5b9060200190602002015160006002811015156116e057fe5b6020020181815250506117598360200151828151811015156116fe57fe5b90602001906020020151600160028110151561171657fe5b60200201518460200151600081518110151561172e57fe5b90602001906020020151600160028110151561174657fe5b602002015161366890919063ffffffff16565b8360200151600081518110151561176c57fe5b90602001906020020151600160028110151561178457fe5b602002018181525050808060010191505061156d565b506117a36147fb565b60008090505b87600001518110156118be576118318261182c6000848154811015156117cb57fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505087602001518581518110151561180a57fe5b90602001906020020151600060028110151561182257fe5b60200201516136f3565b61372e565b91506118af826118aa60018481548110151561184957fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505087602001518581518110151561188857fe5b9060200190602002015160016002811015156118a057fe5b60200201516136f3565b61372e565b915080806001019150506117a9565b5061191e6118e16118d7866020015186600001516136f3565b866000015161372e565b61191983611914600460408051908101604052908160008201548152602001600182015481525050896101a001516136f3565b61372e565b613774565b151561195f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119569061553f565b60405180910390fd5b60008090505b8760000151811015611aee576119f66119b985602001518381518110151561198957fe5b9060200190602002015160006002811015156119a157fe5b6020020151866000015161366890919063ffffffff16565b8560200151838151811015156119cb57fe5b9060200190602002015160006002811015156119e357fe5b60200201516135fa90919063ffffffff16565b846020015182815181101515611a0857fe5b906020019060200201516000600281101515611a2057fe5b602002018181525050611aae611a71856020015183815181101515611a4157fe5b906020019060200201516001600281101515611a5957fe5b6020020151866000015161366890919063ffffffff16565b856020015183815181101515611a8357fe5b906020019060200201516001600281101515611a9b57fe5b60200201516135fa90919063ffffffff16565b846020015182815181101515611ac057fe5b906020019060200201516001600281101515611ad857fe5b6020020181815250508080600101915050611965565b506040805190810160405280600081526020016000815250905060008090505b8760000151811015611c2357611b9682611b91600084815481101515611b3057fe5b906000526020600020906002020160408051908101604052908160008201548152602001600182015481525050876020015185815181101515611b6f57fe5b906020019060200201516000600281101515611b8757fe5b60200201516136f3565b61372e565b9150611c1482611c0f600184815481101515611bae57fe5b906000526020600020906002020160408051908101604052908160008201548152602001600182015481525050876020015185815181101515611bed57fe5b906020019060200201516001600281101515611c0557fe5b60200201516136f3565b61372e565b91508080600101915050611b0e565b50611c83611c46611c3c866040015186600001516136f3565b866060015161372e565b611c7e83611c79600460408051908101604052908160008201548152602001600182015481525050896101c001516136f3565b61372e565b613774565b1515611cc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbb906154ff565b60405180910390fd5b826000015183602001516000815181101515611cdc57fe5b906020019060200201516000600281101515611cf457fe5b602002018181525050826000015183602001516000815181101515611d1557fe5b906020019060200201516001600281101515611d2d57fe5b6020020181815250506000600190505b8760000151811015611f6a5784610180015160018203815181101515611d5f57fe5b906020019060200201516000600281101515611d7757fe5b6020020151846020015182815181101515611d8e57fe5b906020019060200201516000600281101515611da657fe5b60200201818152505084610180015160018203815181101515611dc557fe5b906020019060200201516001600281101515611ddd57fe5b6020020151846020015182815181101515611df457fe5b906020019060200201516001600281101515611e0c57fe5b602002018181525050611e85846020015182815181101515611e2a57fe5b906020019060200201516000600281101515611e4257fe5b602002015185602001516000815181101515611e5a57fe5b906020019060200201516000600281101515611e7257fe5b602002015161366890919063ffffffff16565b84602001516000815181101515611e9857fe5b906020019060200201516000600281101515611eb057fe5b602002018181525050611f29846020015182815181101515611ece57fe5b906020019060200201516001600281101515611ee657fe5b602002015185602001516000815181101515611efe57fe5b906020019060200201516001600281101515611f1657fe5b602002015161366890919063ffffffff16565b84602001516000815181101515611f3c57fe5b906020019060200201516001600281101515611f5457fe5b6020020181815250508080600101915050611d3d565b50611f7d8360200151896040015161379c565b8360c00181905250611f978360200151896080015161379c565b8360e00181905250611fc7611fb4896060015185600001516136f3565b611fc2866101000151613a55565b61372e565b836040018190525060008090505b60028860000151811515611fe557fe5b0481101561220a5760008090505b60028110156121fc5760008090505b60028110156120b257612078866020015182856002020181518110151561202557fe5b906020019060200201518360028110151561203c57fe5b60200201518760a001518360028110151561205357fe5b60200201518460028110151561206557fe5b602002015161363190919063ffffffff16565b8660a001518260028110151561208a57fe5b60200201518360028110151561209c57fe5b6020020181815250508080600101915050612002565b506121208560c00151838151811015156120c857fe5b90602001906020020151826002811015156120df57fe5b602002015161211b886101400151858151811015156120fa57fe5b906020019060200201518460028110151561211157fe5b6020020151613a55565b61372e565b8560c001518381518110151561213257fe5b906020019060200201518260028110151561214957fe5b60200201819052506121be8560e001518381518110151561216657fe5b906020019060200201518260028110151561217d57fe5b60200201516121b98861016001518581518110151561219857fe5b90602001906020020151846002811015156121af57fe5b6020020151613a55565b61372e565b8560e00151838151811015156121d057fe5b90602001906020020151826002811015156121e757fe5b60200201819052508080600101915050611ff3565b508080600101915050611fd5565b506122728360a00151600060028110151561222157fe5b6020020151600160028110151561223457fe5b60200201518460a00151600060028110151561224c57fe5b6020020151600060028110151561225f57fe5b60200201516135fa90919063ffffffff16565b8360a00151600060028110151561228557fe5b6020020151600060028110151561229857fe5b6020020181815250506123088360a0015160016002811015156122b757fe5b602002015160016002811015156122ca57fe5b60200201518460a0015160016002811015156122e257fe5b602002015160006002811015156122f557fe5b60200201516135fa90919063ffffffff16565b8360a00151600160028110151561231b57fe5b6020020151600060028110151561232e57fe5b60200201818152505061241e6123a960008081548110151561234c57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508560a00151600060028110151561238c57fe5b6020020151600060028110151561239f57fe5b60200201516136f3565b612419600160008154811015156123bc57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508660a0015160016002811015156123fc57fe5b6020020151600060028110151561240f57fe5b60200201516136f3565b61372e565b905061247f6124426124388660a0015186600001516136f3565b866080015161372e565b61247a83612475600460408051908101604052908160008201548152602001600182015481525050896101e001516136f3565b61372e565b613774565b15156124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b79061551f565b60405180910390fd5b60008090505b87600001518110156125af57612532846060015161252d8b60000151848151811015156124ef57fe5b9060200190602002015187602001518581518110151561250b57fe5b90602001906020020151600060028110151561252357fe5b60200201516136f3565b61372e565b846060018190525061259a84608001516125958b602001518481518110151561255757fe5b9060200190602002015187602001518581518110151561257357fe5b90602001906020020151600060028110151561258b57fe5b60200201516136f3565b61372e565b846080018190525080806001019150506124c6565b506125ca83606001516125c58660c00151613a55565b61372e565b83606001819052506125ec83608001516125e78660e00151613a55565b61372e565b836080018190525061263861262560026040805190810160405290816000820154815260200160018201548152505085600001516136f3565b612633866101200151613a55565b61372e565b836101000181905250612649614593565b8761014001519050612659614815565b6126668260000151613ace565b81600001818152505061269c61268586610100015184604001516136f3565b612697876040015184600001516136f3565b61372e565b81604001819052506126fc6126ba86610100015184602001516136f3565b6126f78760e0015160008151811015156126d057fe5b9060200190602002015160006002811015156126e857fe5b602002015184600001516136f3565b61372e565b81602001819052506127476040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508b60a0015161349f565b816060018190525061277b612764826060015184602001516136f3565b6127768c60c0015184600001516136f3565b61372e565b81608001819052506128756127fb6127f18760e00151600081518110151561279f57fe5b9060200190602002015160006002811015156127b757fe5b60200201518860e0015160008151811015156127cf57fe5b9060200190602002015160016002811015156127e757fe5b602002015161372e565b84604001516136f3565b6128706128668860c00151600081518110151561281457fe5b90602001906020020151600060028110151561282c57fe5b60200201518960c00151600081518110151561284457fe5b90602001906020020151600160028110151561285c57fe5b602002015161372e565b84600001516136f3565b61372e565b8160a001819052506129ca61295b6129026128e56128ce8960c00151600081518110151561289f57fe5b9060200190602002015160006002811015156128b757fe5b60200201516128c98860000151613ace565b6136f3565b6128e08a6040015188602001516136f3565b61372e565b8a6060015160006003811015156128f857fe5b60200201516136f3565b61295661293961291a8a6060015188600001516136f3565b6129348b6080015161292f8a60200151613ace565b6136f3565b61372e565b8b60600151600160038110151561294c57fe5b60200201516136f3565b61372e565b6129c56129926129738d6060015187600001516136f3565b61298d8e608001516129888960200151613ace565b6136f3565b61372e565b6129c089600001518c6060015160026003811015156129ad57fe5b60200201516135fa90919063ffffffff16565b6136f3565b61372e565b8160c00181905250612a846129e28260c00151613a55565b612a7f612a5f612a2c612a1a6002604080519081016040529081600082015481526020016001820154815250508d61010001516136f3565b612a278d60e00151613a55565b61372e565b612a5a6004604080519081016040529081600082015481526020016001820154815250508f60c001516136f3565b61372e565b612a7a896000015187600001516135fa90919063ffffffff16565b6136f3565b61372e565b8160e00181905250600160028a60000151811515612a9e57fe5b0403604051908082528060200260200182016040528015612ad957816020015b612ac66146c7565b815260200190600190039081612abe5790505b508161010001819052506000600190505b60028a60000151811515612afa57fe5b04811015612c7b57612b82612b418760e0015183815181101515612b1a57fe5b906020019060200201516000600281101515612b3257fe5b602002015185604001516136f3565b612b7d8860c0015184815181101515612b5657fe5b906020019060200201516000600281101515612b6e57fe5b602002015185600001516136f3565b61372e565b82610100015160018303815181101515612b9857fe5b906020019060200201516000600281101515612bb057fe5b6020020181905250612c38612bf78760e0015183815181101515612bd057fe5b906020019060200201516001600281101515612be857fe5b602002015185604001516136f3565b612c338860c0015184815181101515612c0c57fe5b906020019060200201516001600281101515612c2457fe5b602002015185600001516136f3565b61372e565b82610100015160018303815181101515612c4e57fe5b906020019060200201516001600281101515612c6657fe5b60200201819052508080600101915050612aea565b506000612cda86600001518360200151846040015185608001518660a001518760e00151886101000151604051602001612cbb97969594939291906156e0565b6040516020818303038152906040528051906020012060019004613528565b90508961014001516000015181141515612d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d20906154bf565b60405180910390fd5b612d3161488c565b612d7b84600001518c61010001518d60c001518e60e00151604051602001612d5c9493929190615759565b6040516020818303038152906040528051906020012060019004613528565b816080018181525050612db260026040805190810160405290816000820154815260200160018201548152505082608001516136f3565b8160000181905250612e336001805480602002602001604051908101604052809291908181526020016000905b82821015612e2557838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612ddf565b505050508a60200151613afa565b8160200181905250612e5a612e508a602001518b60400151613b76565b8a60800151613bdd565b8160400181905250612f13612e858c60200151612e808e604001518d61012001516136f3565b61372e565b612f0e612efc6000805480602002602001604051908101604052809291908181526020016000905b82821015612ef357838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612ead565b50505050613c56565b612f098d60400151613ace565b6136f3565b61372e565b8160600181905250612f78612f54612f4f6004604080519081016040529081600082015481526020016001820154815250508e60e001516136f3565b613a55565b612f738360600151612f6e85602001518660400151613ca3565b61372e565b61372e565b8160600181905250612fa08160600151612f9b83600001518e61010001516136f3565b61372e565b8160600181905250612fb06145b5565b8b6101600151905060008090505b60068110156130fd5761302e8360800151836000015183600681101515612fe157fe5b6020020151846020015184600681101515612ff857fe5b602002015160405160200161300f93929190615655565b6040516020818303038152906040528051906020012060019004613528565b83608001818152505082608001518360a001518260068110151561304e57fe5b60200201818152505060006130668460800151613d07565b90506130e76130a284600001518460068110151561308057fe5b602002015161309d60028860800151613d3d90919063ffffffff16565b6136f3565b6130e26130d88660200151866006811015156130ba57fe5b60200201516130d3600287613d3d90919063ffffffff16565b6136f3565b876060015161372e565b61372e565b8460600181905250508080600101915050612fbe565b5060018260c00151600060408110151561311357fe5b60200201818152505060008090505b60068110156131945761316b8360a001518260068110151561314057fe5b60200201518460c00151600060408110151561315857fe5b60200201516135fa90919063ffffffff16565b8360c00151600060408110151561317e57fe5b6020020181815250508080600101915050613122565b5061319d6148ef565b6131bd8360c0015160006040811015156131b357fe5b6020020151613d07565b8360c0015160006040811015156131d057fe5b60200201818152505060008090505b600260408115156131ec57fe5b048110156132ff5760008090505b6040828260019060020a020110156132f35760008160019060020a0283019050838160408110151561322857fe5b602002015115156132e75760006132808760a001518460016006030360068110151561325057fe5b60200201518860a001518560016006030360068110151561326d57fe5b60200201516135fa90919063ffffffff16565b90506132ab818860c001518660408110151561329857fe5b60200201516135fa90919063ffffffff16565b8760c00151836040811015156132bd57fe5b602002018181525050600185836040811015156132d657fe5b602002019015159081151581525050505b508060010190506131fa565b508060010190506131df565b506133086147fb565b6133106147fb565b60008090505b60408110156133d9576133838361337e60008481548110151561333557fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508960c001518560408110151561337457fe5b60200201516136f3565b61372e565b92506133ca826133c588602001518460408110151561339e57fe5b60200201518960c00151856001604003036040811015156133bb57fe5b60200201516136f3565b61372e565b91508080600101915050613316565b506133e26147fb565b6134366134096133f68588604001516136f3565b6134048589606001516136f3565b61372e565b613431886000015161342c89606001518a604001516135fa90919063ffffffff16565b6136f3565b61372e565b9050613446866060015182613774565b1515613487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161347e9061555f565b60405180910390fd5b60019e50505050505050505050505050505092915050565b6134a76147fb565b6135077f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016134de9291906153df565b604051602081830303815290604052805190602001206001900481151561350157fe5b06613daa565b905092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018281151561355557fe5b069050919050565b613565614913565b600181600060408110151561357657fe5b6020020181815250508181600160408110151561358f57fe5b6020020181815250506000600290505b60408110156135f4576135d08383600184036040811015156135bd57fe5b60200201516135fa90919063ffffffff16565b82826040811015156135de57fe5b602002018181525050808060010191505061359f565b50919050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561362657fe5b828409905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561365d57fe5b828408905092915050565b60008183101561369c5782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103016136a0565b8183035b905092915050565b600080600090505b60408110156136ed576136de83826040811015156136ca57fe5b60200201518361363190919063ffffffff16565b915080806001019150506136b0565b50919050565b6136fb6147fb565b604051835181526020840151602082015282604082015260408260608360075afa151561372757600080fd5b5092915050565b6137366147fb565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561376d57600080fd5b5092915050565b600081600001518360000151148015613794575081602001518360200151145b905092915050565b606060008351905060006002828115156137b257fe5b049050806040519080825280602002602001820160405280156137ef57816020015b6137dc6146c7565b8152602001906001900390816137d45790505b50925060606137ff856000613e4a565b90506060836040519080825280602002602001820160405280156138325781602001602082028038833980820191505090505b50905060008090505b6002811015613a475760008090505b858110156138b257888682880381151561386057fe5b0681518110151561386d57fe5b906020019060200201518260028110151561388457fe5b6020020151838281518110151561389757fe5b9060200190602002018181525050808060010191505061384a565b506138bc826140ab565b91506060846040519080825280602002602001820160405280156138fa57816020015b6138e76144e7565b8152602001906001900390816138df5790505b50905060006002905061390c81613d07565b905060008090505b868110156139c9576139a161399b61395a888481518110151561393357fe5b90602001906020020151888581518110151561394b57fe5b906020019060200201516136f3565b613996898b860181518110151561396d57fe5b90602001906020020151898c870181518110151561398757fe5b906020019060200201516136f3565b61372e565b836136f3565b83828151811015156139af57fe5b906020019060200201819052508080600101915050613914565b506139d5826001613e4a565b915060008090505b86811015613a375782818151811015156139f357fe5b906020019060200201518982815181101515613a0b57fe5b9060200190602002015185600281101515613a2257fe5b602002018190525080806001019150506139dd565b505050808060010191505061383b565b508494505050505092915050565b613a5d6147fb565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478460200151811515613aa157fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b613b02614937565b60008090505b6040811015613b6f57613b4c8482815181101515613b2257fe5b90602001906020020151613b478584604081101515613b3d57fe5b6020020151613d07565b6136f3565b8282604081101515613b5a57fe5b60200201819052508080600101915050613b08565b5092915050565b613b7e614913565b60008090505b6040811015613bd657613bb2838583604081101515613b9f57fe5b60200201516135fa90919063ffffffff16565b8282604081101515613bc057fe5b6020020181815250508080600101915050613b84565b5092915050565b613be5614913565b60008090505b6040811015613c4f57613c2b8382604081101515613c0557fe5b60200201518583604081101515613c1857fe5b602002015161363190919063ffffffff16565b8282604081101515613c3957fe5b6020020181815250508080600101915050613beb565b5092915050565b613c5e6147fb565b60008090505b6040811015613c9d57613c8e828483815181101515613c7f57fe5b9060200190602002015161372e565b91508080600101915050613c64565b50919050565b613cab6147fb565b60008090505b6040811015613d0057613cf182613cec8684604081101515613ccf57fe5b60200201518685604081101515613ce257fe5b60200201516136f3565b61372e565b91508080600101915050613cb1565b5092915050565b6000613d368260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103613d3d565b9050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515613d9e57600080fd5b80519250505092915050565b613db26147fb565b60005b600115613e2d5760006003613dcb8560036142d3565b019050613e0781600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515613e0157fe5b046142d3565b915080613e158360026142d3565b1415613e215750613e2d565b60018401935050613db5565b604080519081016040528084815260200182815250915050919050565b60606000835190506001811415613e6457839150506140a5565b6000600282811515613e7257fe5b06141515613eb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613eac9061549f565b60405180910390fd5b6000613ef9826310000000811515613ec957fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd613d3d90919063ffffffff16565b90506000600190508415613f1757613f1082613d07565b9150600290505b613f2081613d07565b90506060613f38613f32886000614340565b87613e4a565b90506060613f50613f4a896001614340565b88613e4a565b905060006001905085604051908082528060200260200182016040528015613f9257816020015b613f7f6144e7565b815260200190600190039081613f775790505b50965060008090505b600287811515613fa757fe5b0481101561409d57613fb76147fb565b613fd88483815181101515613fc857fe5b90602001906020020151846136f3565b9050614004613ffe8684815181101515613fee57fe5b906020019060200201518361372e565b876136f3565b898381518110151561401257fe5b9060200190602002018190525061405161404b868481518110151561403357fe5b9060200190602002015161404684613a55565b61372e565b876136f3565b8960028a81151561405e57fe5b04840181518110151561406d57fe5b9060200190602002018190525061408d87846135fa90919063ffffffff16565b9250508080600101915050613f9b565b505050505050505b92915050565b606060008251905060018114156140c557829150506142ce565b60006002828115156140d357fe5b06141515614116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161410d9061549f565b60405180910390fd5b600061415a82631000000081151561412a57fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd613d3d90919063ffffffff16565b9050606061417161416c8660006143f3565b6140ab565b905060606141886141838760016143f3565b6140ab565b9050600060019050846040519080825280602002602001820160405280156141bf5781602001602082028038833980820191505090505b50955060008090505b6002868115156141d457fe5b048110156142c75760006142088385848151811015156141f057fe5b906020019060200201516135fa90919063ffffffff16565b905061423481868481518110151561421c57fe5b9060200190602002015161363190919063ffffffff16565b888381518110151561424257fe5b906020019060200201818152505061427a81868481518110151561426257fe5b9060200190602002015161366890919063ffffffff16565b8860028981151561428757fe5b04840181518110151561429657fe5b90602001906020020181815250506142b786846135fa90919063ffffffff16565b92505080806001019150506141c8565b5050505050505b919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561433457600080fd5b80519250505092915050565b60606002835181151561434f57fe5b0460405190808252806020026020018201604052801561438957816020015b6143766144e7565b81526020019060019003908161436e5790505b50905060008090505b6002845181151561439f57fe5b048110156143ec57838382600202018151811015156143ba57fe5b9060200190602002015182828151811015156143d257fe5b906020019060200201819052508080600101915050614392565b5092915050565b60606002835181151561440257fe5b046040519080825280602002602001820160405280156144315781602001602082028038833980820191505090505b50905060008090505b6002845181151561444757fe5b04811015614495578383826002020181518110151561446257fe5b90602001906020020151828281518110151561447a57fe5b9060200190602002018181525050808060010191505061443a565b5092915050565b610120604051908101604052806060815260200160608152602001606081526020016144c66144e7565b815260200160608152602001600081526020016144e16144e7565b81525090565b604080519081016040528060008152602001600081525090565b6108e0604051908101604052806000815260200161451d6144e7565b815260200161452a6144e7565b81526020016145376144e7565b81526020016145446144e7565b81526020016145516146c7565b8152602001600081526020016000815260200160008152602001614573614966565b8152602001614580614a20565b815260200161458d614a42565b81525090565b6060604051908101604052806000815260200160008152602001600081525090565b610340604051908101604052806145ca614a78565b81526020016145d7614a78565b815260200160008152602001600081525090565b610340604051908101604052806146006144e7565b815260200161460d6144e7565b815260200161461a6144e7565b81526020016146276144e7565b81526020016146346144e7565b81526020016146416144e7565b815260200161464e6144e7565b815260200161465b6144e7565b81526020016146686144e7565b81526020016146756144e7565b81526020016060815260200160608152602001606081526020016000815260200160008152602001600081525090565b6040805190810160405280600290602082028038833980820191505090505090565b6080604051908101604052806002905b6146df6144e7565b8152602001906001900390816146d75790505090565b6111606040519081016040528060008152602001614711614aa7565b815260200160008152602001614725614acb565b8152602001614732614aa7565b8152602001600081526020016000815260200161474d6144e7565b815260200160008152602001600081525090565b6102006040519081016040528060008152602001606081526020016147846144e7565b81526020016147916144e7565b815260200161479e6144e7565b81526020016147ab614aee565b815260200160608152602001606081526020016147c66144e7565b81525090565b610180604051908101604052806006905b6147e56144e7565b8152602001906001900390816147dd5790505090565b604080519081016040528060008152602001600081525090565b61020060405190810160405280600081526020016148316144e7565b815260200161483e6144e7565b815260200161484b6144e7565b81526020016148586144e7565b81526020016148656144e7565b81526020016148726144e7565b815260200161487f6144e7565b8152602001606081525090565b612160604051908101604052806148a16144e7565b81526020016148ae614b1c565b81526020016148bb614aa7565b81526020016148c86144e7565b8152602001600081526020016148dc614b4b565b81526020016148e9614aa7565b81525090565b61080060405190810160405280604090602082028038833980820191505090505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6149506144e7565b8152602001906001900390816149485790505090565b6103406040519081016040528061497b6144e7565b81526020016149886144e7565b81526020016149956144e7565b81526020016149a26144e7565b81526020016149af6144e7565b81526020016149bc6144e7565b81526020016149c96144e7565b81526020016149d66144e7565b81526020016149e36144e7565b81526020016149f06144e7565b81526020016060815260200160608152602001606081526020016000815260200160008152602001600081525090565b6060604051908101604052806000815260200160008152602001600081525090565b61034060405190810160405280614a57614a78565b8152602001614a64614a78565b815260200160008152602001600081525090565b610180604051908101604052806006905b614a916144e7565b815260200190600190039081614a895790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b6080604051908101604052806002905b614b066146a5565b815260200190600190039081614afe5790505090565b611000604051908101604052806040905b614b356144e7565b815260200190600190039081614b2d5790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b600082601f8301121515614b8157600080fd5b8135614b94614b8f826157cb565b61579e565b91508181835260208401935060208101905083856040840282011115614bb957600080fd5b60005b83811015614be95781614bcf8882614bf3565b845260208401935060408301925050600181019050614bbc565b5050505092915050565b600082601f8301121515614c0657600080fd5b6002614c19614c14826157f3565b61579e565b91508183856020840282011115614c2f57600080fd5b60005b83811015614c5f5781614c458882614cdf565b845260208401935060208301925050600181019050614c32565b5050505092915050565b600082601f8301121515614c7c57600080fd5b6002614c8f614c8a82615815565b61579e565b91508183856020840282011115614ca557600080fd5b60005b83811015614cd55781614cbb8882614cdf565b845260208401935060208301925050600181019050614ca8565b5050505092915050565b6000614ceb8235615971565b905092915050565b600082601f8301121515614d0657600080fd5b8135614d19614d1482615837565b61579e565b91508082526020830160208301858383011115614d3557600080fd5b614d40838284615985565b50505092915050565b6000614d55823561597b565b905092915050565b600080600080600080600080610140898b031215614d7a57600080fd5b600089013567ffffffffffffffff811115614d9457600080fd5b614da08b828c01614b6e565b985050602089013567ffffffffffffffff811115614dbd57600080fd5b614dc98b828c01614b6e565b975050604089013567ffffffffffffffff811115614de657600080fd5b614df28b828c01614b6e565b9650506060614e038b828c01614c69565b95505060a089013567ffffffffffffffff811115614e2057600080fd5b614e2c8b828c01614b6e565b94505060c0614e3d8b828c01614d49565b93505060e0614e4e8b828c01614c69565b92505061012089013567ffffffffffffffff811115614e6c57600080fd5b614e788b828c01614cf3565b9150509295985092959890939650565b600060208284031215614e9a57600080fd5b6000614ea884828501614d49565b91505092915050565b6000614ebd8383614f3b565b60808301905092915050565b6000614ed5838361534c565b60408301905092915050565b6000614eec82615891565b614ef681856158fc565b9350614f0183615863565b60005b82811015614f2f57614f17868351614eb1565b9550614f22826158c8565b9150600181019050614f04565b50849250505092915050565b614f448161589c565b614f4e818461590d565b9250614f5982615870565b60005b82811015614f8757614f6f858351614ec9565b9450614f7a826158d5565b9150600181019050614f5c565b5050505050565b614f978161589c565b614fa18184615918565b9250614fac82615870565b60005b82811015614fda57614fc2858351614ec9565b9450614fcd826158d5565b9150600181019050614faf565b5050505050565b614fea816158a7565b614ff48184615923565b9250614fff8261587a565b60005b8281101561502d57615015858351614ec9565b9450615020826158e2565b9150600181019050615002565b5050505050565b600061503f826158b2565b615049818561592e565b935061505483615884565b60005b828110156150825761506a868351614ec9565b9550615075826158ef565b9150600181019050615057565b50849250505092915050565b6150978161595b565b82525050565b60006150a8826158bd565b6150b28185615950565b93506150c2818560208601615994565b80840191505092915050565b60006150db601f8361593f565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b600061511b602a8361593f565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b600061518160428361593f565b91507f496e61646571756174652073746f72656420766563746f72206261736521204360008301527f616c6c20657874656e644261736520616e64207468656e20747279206167616960208301527f6e2e0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600061520d601d8361593f565b91507f5265636f76657279206661696c75726520666f7220555e77202a20562e0000006000830152602082019050919050565b600061524d60218361593f565b91507f496e646578206f70706f736974652070617269747920636865636b206661696c60008301527f2e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006152b3601d8361593f565b91507f5265636f76657279206661696c75726520666f7220515e77202a20502e0000006000830152602082019050919050565b60006152f360258361593f565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600082015161536260008501826153aa565b50602082015161537560208501826153aa565b50505050565b60408201600082015161539160008501826153aa565b5060208201516153a460208501826153aa565b50505050565b6153b381615967565b82525050565b6153c281615967565b82525050565b6153d96153d482615967565b6159c7565b82525050565b60006153eb828561509d565b91506153f782846153c8565b6020820191508190509392505050565b600060e08201905081810360008301526154218189615034565b905081810360208301526154358188615034565b905081810360408301526154498187615034565b9050615458606083018661537b565b81810360a083015261546a8185615034565b905061547960c08301846153b9565b979650505050505050565b6000602082019050615499600083018461508e565b92915050565b600060208201905081810360008301526154b8816150ce565b9050919050565b600060208201905081810360008301526154d88161510e565b9050919050565b600060208201905081810360008301526154f881615174565b9050919050565b6000602082019050818103600083015261551881615200565b9050919050565b6000602082019050818103600083015261553881615240565b9050919050565b60006020820190508181036000830152615558816152a6565b9050919050565b60006020820190508181036000830152615578816152e6565b9050919050565b600060208201905061559460008301846153b9565b92915050565b600060a0820190506155af60008301856153b9565b6155bc6020830184614f8e565b9392505050565b60006102e0820190506155d9600083018b6153b9565b6155e6602083018a614fe1565b6155f46101a083018961537b565b6156026101e083018861537b565b61561061022083018761537b565b61561e61026083018661537b565b8181036102a08301526156318185614ee1565b90508181036102c08301526156468184614ee1565b90509998505050505050505050565b600060a08201905061566a60008301866153b9565b615677602083018561537b565b615684606083018461537b565b949350505050565b6000610120820190506156a260008301886153b9565b6156af602083018761537b565b6156bc606083018661537b565b6156c960a083018561537b565b6156d660e083018461537b565b9695505050505050565b6000610180820190506156f6600083018a6153b9565b615703602083018961537b565b615710606083018861537b565b61571d60a083018761537b565b61572a60e083018661537b565b61573861012083018561537b565b81810361016083015261574b8184614ee1565b905098975050505050505050565b600060808201905061576e60008301876153b9565b61577b60208301866153b9565b61578860408301856153b9565b61579560608301846153b9565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156157c157600080fd5b8060405250919050565b600067ffffffffffffffff8211156157e257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561580a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561582c57600080fd5b602082029050919050565b600067ffffffffffffffff82111561584e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b6000819050919050565b6000602082019050919050565b600081519050919050565b600060029050919050565b600060069050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156159b2578082015181840152602081019050615997565b838111156159c1576000848401525b50505050565b600081905091905056fea265627a7a723058206884bb63a107852c58650b469e15d3e2c190e9c62566a51c65d79f7457ac2d946c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610051576000357c0100000000000000000000000000000000000000000000000000000000900480631659e67d146100565780634e8ee0e214610093578063a00547ab146100be575b600080fd5b34801561006257600080fd5b5061007d60048036036100789190810190614d5d565b6100da565b60405161008a9190615484565b60405180910390f35b34801561009f57600080fd5b506100a861056a565b6040516100b5919061557f565b60405180910390f35b6100d860048036036100d39190810190614e88565b610576565b005b60006100e461449c565b6000865190508060008054905010151515610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b906154df565b60405180910390fd5b8060405190808252806020026020018201604052801561016e57816020015b61015b6144e7565b8152602001906001900390816101535790505b508260000181905250806040519080825280602002602001820160405280156101b157816020015b61019e6144e7565b8152602001906001900390816101965790505b508260200181905250806040519080825280602002602001820160405280156101f457816020015b6101e16144e7565b8152602001906001900390816101d95790505b5082604001819052508060405190808252806020026020018201604052801561023757816020015b6102246144e7565b81526020019060019003908161021c5790505b50826080018190525060008090505b8181101561049b5760408051908101604052808d8381518110151561026757fe5b90602001906020020151600060028110151561027f57fe5b60200201516001900481526020018d8381518110151561029b57fe5b9060200190602002015160016002811015156102b357fe5b6020020151600190048152508360000151828151811015156102d157fe5b9060200190602002018190525060408051908101604052808c838151811015156102f757fe5b90602001906020020151600060028110151561030f57fe5b60200201516001900481526020018c8381518110151561032b57fe5b90602001906020020151600160028110151561034357fe5b60200201516001900481525083602001518281518110151561036157fe5b9060200190602002018190525060408051908101604052808b8381518110151561038757fe5b90602001906020020151600060028110151561039f57fe5b60200201516001900481526020018b838151811015156103bb57fe5b9060200190602002015160016002811015156103d357fe5b6020020151600190048152508360400151828151811015156103f157fe5b906020019060200201819052506040805190810160405280898381518110151561041757fe5b90602001906020020151600060028110151561042f57fe5b6020020151600190048152602001898381518110151561044b57fe5b90602001906020020151600160028110151561046357fe5b60200201516001900481525083608001518281518110151561048157fe5b906020019060200201819052508080600101915050610246565b5060408051908101604052808960006002811015156104b657fe5b60200201516001900481526020018960016002811015156104d357fe5b6020020151600190048152508260600181905250858260a0018181525050604080519081016040528086600060028110151561050b57fe5b602002015160019004815260200186600160028110151561052857fe5b6020020151600190048152508260c00181905250610544614501565b61054d8561069f565b90506105598382610f88565b935050505098975050505050505050565b60008080549050905090565b6000808054905090505b8181101561069b5760006105c96040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508361349f565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050600161064c6040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508361349f565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508080600101915050610580565b5050565b6106a7614501565b60408051908101604052806106bd84600061350f565b81526020016106cd84602061350f565b815250816020018190525060408051908101604052806106ee84604061350f565b81526020016106fe84606061350f565b8152508160400181905250604080519081016040528061071f84608061350f565b815260200161072f8460a061350f565b815250816060018190525060408051908101604052806107508460c061350f565b81526020016107608460e061350f565b81525081608001819052506040805190810160405280604080519081016040528061078d8661010061350f565b815260200161079e8661012061350f565b815250815260200160408051908101604052806107bd8661014061350f565b81526020016107ce8661016061350f565b8152508152508160a001819052506107e88261018061350f565b816101000181815250506107fe826101a061350f565b8160c0018181525050610813826101c061350f565b8160e0018181525050610824614593565b610830836101e061350f565b8160000181815250506108458361020061350f565b81602001818152505061085a8361022061350f565b816040018181525050808261014001819052506108756145b5565b60008090505b60068110156109355760408051908101604052806108a087604085026102400161350f565b81526020016108b687604085026102600161350f565b8152508260000151826006811015156108cb57fe5b602002018190525060408051908101604052806108f287604085600601026102400161350f565b815260200161090b87604085600601026102600161350f565b81525082602001518260068110151561092057fe5b6020020181905250808060010191505061087b565b506109488460806006026102400161350f565b8160400181815250506109638460806006026102600161350f565b8160600181815250508083610160018190525061097e6145eb565b600060c06102a06105808851030381151561099557fe5b04905060408051908101604052806109af8861058061350f565b81526020016109c0886105a061350f565b815250826000018190525060408051908101604052806109e2886105c061350f565b81526020016109f3886105e061350f565b81525082602001819052506040805190810160405280610a158861060061350f565b8152602001610a268861062061350f565b81525082604001819052506040805190810160405280610a488861064061350f565b8152602001610a598861066061350f565b81525082606001819052506040805190810160405280610a7b8861068061350f565b8152602001610a8c886106a061350f565b81525082608001819052506040805190810160405280610aae886106c061350f565b8152602001610abf886106e061350f565b8152508260a001819052506040805190810160405280610ae18861070061350f565b8152602001610af28861072061350f565b8152508260c001819052506040805190810160405280610b148861074061350f565b8152602001610b258861076061350f565b8152508260e001819052506040805190810160405280610b478861078061350f565b8152602001610b58886107a061350f565b8152508261010001819052506040805190810160405280610b7b886107c061350f565b8152602001610b8c886107e061350f565b81525082610120018190525060018103604051908082528060200260200182016040528015610bd557816020015b610bc26146a5565b815260200190600190039081610bba5790505b5082610180018190525060008090505b60018203811015610c8c57610c0187826020026108000161350f565b83610180015182815181101515610c1457fe5b906020019060200201516000600281101515610c2c57fe5b602002018181525050610c4b876020836001860301026108000161350f565b83610180015182815181101515610c5e57fe5b906020019060200201516001600281101515610c7657fe5b6020020181815250508080600101915050610be5565b50600281811515610c9957fe5b04604051908082528060200260200182016040528015610cd357816020015b610cc06146c7565b815260200190600190039081610cb85790505b50826101400181905250600281811515610ce957fe5b04604051908082528060200260200182016040528015610d2357816020015b610d106146c7565b815260200190600190039081610d085790505b5082610160018190525060008090505b600282811515610d3f57fe5b04811015610f16576040805190810160405280610d65896040858701026107c00161350f565b8152602001610d7d896040858701026107e00161350f565b81525083610140015182815181101515610d9357fe5b906020019060200201516000600281101515610dab57fe5b60200201819052506040805190810160405280610dd48960408502606087026107c0010161350f565b8152602001610def8960408502606087026107e0010161350f565b81525083610140015182815181101515610e0557fe5b906020019060200201516001600281101515610e1d57fe5b60200201819052506040805190810160405280610e468960408502608087026107c0010161350f565b8152602001610e618960408502608087026107e0010161350f565b81525083610160015182815181101515610e7757fe5b906020019060200201516000600281101515610e8f57fe5b60200201819052506040805190810160405280610eb8896040850260a087026107c0010161350f565b8152602001610ed3896040850260a087026107e0010161350f565b81525083610160015182815181101515610ee957fe5b906020019060200201516001600281101515610f0157fe5b60200201819052508080600101915050610d33565b5080856000018181525050610f328660c083026107c00161350f565b826101a0018181525050610f4d8660c083026107e00161350f565b826101c0018181525050610f688660c083026108000161350f565b826101e00181815250508185610120018190525084945050505050919050565b6000610f926146f5565b611031610fea856000015186602001518760400151886060015189608001518a60a00151604051602001610fcb96959493929190615407565b6040516020818303038152906040528051906020012060019004613528565b846020015185604001518660600151876080015160405160200161101295949392919061568c565b6040516020818303038152906040528051906020012060019004613528565b816000018181525050611047816000015161355d565b81602001819052506110868160000151604051602001611067919061557f565b6040516020818303038152906040528051906020012060019004613528565b8160400181815250506110aa816040015182604001516135fa90919063ffffffff16565b816060015160006003811015156110bd57fe5b6020020181815250506000600190505b600381101561112e5761110682604001518360600151600184036003811015156110f357fe5b60200201516135fa90919063ffffffff16565b82606001518260038110151561111857fe5b60200201818152505080806001019150506110cd565b5060008090505b6002604081151561114257fe5b048110156111f6576111778160020a8360600151600060038110151561116457fe5b60200201516135fa90919063ffffffff16565b82608001518260408110151561118957fe5b6020020181815250506111bf8160020a836060015160016003811015156111ac57fe5b60200201516135fa90919063ffffffff16565b8260800151600260408115156111d157fe5b0483016040811015156111e057fe5b6020020181815250508080600101915050611135565b5061123481604001518460a0015160405160200161121592919061559a565b6040516020818303038152906040528051906020012060019004613528565b8161012001818152505061129581604001516112878360600151600160038110151561125c57fe5b60200201518460600151600060038110151561127457fe5b602002015161363190919063ffffffff16565b6135fa90919063ffffffff16565b8160a00181815250506113386112de8260a001516112d0600260408115156112b957fe5b0460020a8560a001516135fa90919063ffffffff16565b61366890919063ffffffff16565b61132a61130f846060015160006003811015156112f757fe5b6020020151856040015161366890919063ffffffff16565b61131c85602001516136a8565b6135fa90919063ffffffff16565b61366890919063ffffffff16565b8160c00181815250506113ac61136a8460a00151600060028110151561135a57fe5b60200201518361012001516136f3565b6113a78560a00151600160028110151561138057fe5b60200201516113a28561012001518661012001516135fa90919063ffffffff16565b6136f3565b61372e565b8160e001819052506113d08160c0015184610100015161366890919063ffffffff16565b816101000181815250506113e26145eb565b83610120015190506113f2614761565b6113fa6147cc565b60c06040519081016040528084600001518152602001846020015181526020018460400151815260200184606001518152602001846080015181526020018460a0015181525090506114a4846101200151828560c001518660e001518761010001518861012001518961014001518a61016001516040516020016114859897969594939291906155c3565b6040516020818303038152906040528051906020012060019004613528565b82600001818152505085600001516040519080825280602002602001820160405280156114eb57816020015b6114d86146a5565b8152602001906001900390816114d05790505b50826020018190525081600001518260200151600081518110151561150c57fe5b90602001906020020151600060028110151561152457fe5b60200201818152505081600001518260200151600081518110151561154557fe5b90602001906020020151600160028110151561155d57fe5b6020020181815250506000600190505b866000015181101561179a578361018001516001820381518110151561158f57fe5b9060200190602002015160006002811015156115a757fe5b60200201518360200151828151811015156115be57fe5b9060200190602002015160006002811015156115d657fe5b602002018181525050836101800151600182038151811015156115f557fe5b90602001906020020151600160028110151561160d57fe5b602002015183602001518281518110151561162457fe5b90602001906020020151600160028110151561163c57fe5b6020020181815250506116b583602001518281518110151561165a57fe5b90602001906020020151600060028110151561167257fe5b60200201518460200151600081518110151561168a57fe5b9060200190602002015160006002811015156116a257fe5b602002015161366890919063ffffffff16565b836020015160008151811015156116c857fe5b9060200190602002015160006002811015156116e057fe5b6020020181815250506117598360200151828151811015156116fe57fe5b90602001906020020151600160028110151561171657fe5b60200201518460200151600081518110151561172e57fe5b90602001906020020151600160028110151561174657fe5b602002015161366890919063ffffffff16565b8360200151600081518110151561176c57fe5b90602001906020020151600160028110151561178457fe5b602002018181525050808060010191505061156d565b506117a36147fb565b60008090505b87600001518110156118be576118318261182c6000848154811015156117cb57fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505087602001518581518110151561180a57fe5b90602001906020020151600060028110151561182257fe5b60200201516136f3565b61372e565b91506118af826118aa60018481548110151561184957fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505087602001518581518110151561188857fe5b9060200190602002015160016002811015156118a057fe5b60200201516136f3565b61372e565b915080806001019150506117a9565b5061191e6118e16118d7866020015186600001516136f3565b866000015161372e565b61191983611914600460408051908101604052908160008201548152602001600182015481525050896101a001516136f3565b61372e565b613774565b151561195f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119569061553f565b60405180910390fd5b60008090505b8760000151811015611aee576119f66119b985602001518381518110151561198957fe5b9060200190602002015160006002811015156119a157fe5b6020020151866000015161366890919063ffffffff16565b8560200151838151811015156119cb57fe5b9060200190602002015160006002811015156119e357fe5b60200201516135fa90919063ffffffff16565b846020015182815181101515611a0857fe5b906020019060200201516000600281101515611a2057fe5b602002018181525050611aae611a71856020015183815181101515611a4157fe5b906020019060200201516001600281101515611a5957fe5b6020020151866000015161366890919063ffffffff16565b856020015183815181101515611a8357fe5b906020019060200201516001600281101515611a9b57fe5b60200201516135fa90919063ffffffff16565b846020015182815181101515611ac057fe5b906020019060200201516001600281101515611ad857fe5b6020020181815250508080600101915050611965565b506040805190810160405280600081526020016000815250905060008090505b8760000151811015611c2357611b9682611b91600084815481101515611b3057fe5b906000526020600020906002020160408051908101604052908160008201548152602001600182015481525050876020015185815181101515611b6f57fe5b906020019060200201516000600281101515611b8757fe5b60200201516136f3565b61372e565b9150611c1482611c0f600184815481101515611bae57fe5b906000526020600020906002020160408051908101604052908160008201548152602001600182015481525050876020015185815181101515611bed57fe5b906020019060200201516001600281101515611c0557fe5b60200201516136f3565b61372e565b91508080600101915050611b0e565b50611c83611c46611c3c866040015186600001516136f3565b866060015161372e565b611c7e83611c79600460408051908101604052908160008201548152602001600182015481525050896101c001516136f3565b61372e565b613774565b1515611cc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbb906154ff565b60405180910390fd5b826000015183602001516000815181101515611cdc57fe5b906020019060200201516000600281101515611cf457fe5b602002018181525050826000015183602001516000815181101515611d1557fe5b906020019060200201516001600281101515611d2d57fe5b6020020181815250506000600190505b8760000151811015611f6a5784610180015160018203815181101515611d5f57fe5b906020019060200201516000600281101515611d7757fe5b6020020151846020015182815181101515611d8e57fe5b906020019060200201516000600281101515611da657fe5b60200201818152505084610180015160018203815181101515611dc557fe5b906020019060200201516001600281101515611ddd57fe5b6020020151846020015182815181101515611df457fe5b906020019060200201516001600281101515611e0c57fe5b602002018181525050611e85846020015182815181101515611e2a57fe5b906020019060200201516000600281101515611e4257fe5b602002015185602001516000815181101515611e5a57fe5b906020019060200201516000600281101515611e7257fe5b602002015161366890919063ffffffff16565b84602001516000815181101515611e9857fe5b906020019060200201516000600281101515611eb057fe5b602002018181525050611f29846020015182815181101515611ece57fe5b906020019060200201516001600281101515611ee657fe5b602002015185602001516000815181101515611efe57fe5b906020019060200201516001600281101515611f1657fe5b602002015161366890919063ffffffff16565b84602001516000815181101515611f3c57fe5b906020019060200201516001600281101515611f5457fe5b6020020181815250508080600101915050611d3d565b50611f7d8360200151896040015161379c565b8360c00181905250611f978360200151896080015161379c565b8360e00181905250611fc7611fb4896060015185600001516136f3565b611fc2866101000151613a55565b61372e565b836040018190525060008090505b60028860000151811515611fe557fe5b0481101561220a5760008090505b60028110156121fc5760008090505b60028110156120b257612078866020015182856002020181518110151561202557fe5b906020019060200201518360028110151561203c57fe5b60200201518760a001518360028110151561205357fe5b60200201518460028110151561206557fe5b602002015161363190919063ffffffff16565b8660a001518260028110151561208a57fe5b60200201518360028110151561209c57fe5b6020020181815250508080600101915050612002565b506121208560c00151838151811015156120c857fe5b90602001906020020151826002811015156120df57fe5b602002015161211b886101400151858151811015156120fa57fe5b906020019060200201518460028110151561211157fe5b6020020151613a55565b61372e565b8560c001518381518110151561213257fe5b906020019060200201518260028110151561214957fe5b60200201819052506121be8560e001518381518110151561216657fe5b906020019060200201518260028110151561217d57fe5b60200201516121b98861016001518581518110151561219857fe5b90602001906020020151846002811015156121af57fe5b6020020151613a55565b61372e565b8560e00151838151811015156121d057fe5b90602001906020020151826002811015156121e757fe5b60200201819052508080600101915050611ff3565b508080600101915050611fd5565b506122728360a00151600060028110151561222157fe5b6020020151600160028110151561223457fe5b60200201518460a00151600060028110151561224c57fe5b6020020151600060028110151561225f57fe5b60200201516135fa90919063ffffffff16565b8360a00151600060028110151561228557fe5b6020020151600060028110151561229857fe5b6020020181815250506123088360a0015160016002811015156122b757fe5b602002015160016002811015156122ca57fe5b60200201518460a0015160016002811015156122e257fe5b602002015160006002811015156122f557fe5b60200201516135fa90919063ffffffff16565b8360a00151600160028110151561231b57fe5b6020020151600060028110151561232e57fe5b60200201818152505061241e6123a960008081548110151561234c57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508560a00151600060028110151561238c57fe5b6020020151600060028110151561239f57fe5b60200201516136f3565b612419600160008154811015156123bc57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508660a0015160016002811015156123fc57fe5b6020020151600060028110151561240f57fe5b60200201516136f3565b61372e565b905061247f6124426124388660a0015186600001516136f3565b866080015161372e565b61247a83612475600460408051908101604052908160008201548152602001600182015481525050896101e001516136f3565b61372e565b613774565b15156124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b79061551f565b60405180910390fd5b60008090505b87600001518110156125af57612532846060015161252d8b60000151848151811015156124ef57fe5b9060200190602002015187602001518581518110151561250b57fe5b90602001906020020151600060028110151561252357fe5b60200201516136f3565b61372e565b846060018190525061259a84608001516125958b602001518481518110151561255757fe5b9060200190602002015187602001518581518110151561257357fe5b90602001906020020151600060028110151561258b57fe5b60200201516136f3565b61372e565b846080018190525080806001019150506124c6565b506125ca83606001516125c58660c00151613a55565b61372e565b83606001819052506125ec83608001516125e78660e00151613a55565b61372e565b836080018190525061263861262560026040805190810160405290816000820154815260200160018201548152505085600001516136f3565b612633866101200151613a55565b61372e565b836101000181905250612649614593565b8761014001519050612659614815565b6126668260000151613ace565b81600001818152505061269c61268586610100015184604001516136f3565b612697876040015184600001516136f3565b61372e565b81604001819052506126fc6126ba86610100015184602001516136f3565b6126f78760e0015160008151811015156126d057fe5b9060200190602002015160006002811015156126e857fe5b602002015184600001516136f3565b61372e565b81602001819052506127476040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508b60a0015161349f565b816060018190525061277b612764826060015184602001516136f3565b6127768c60c0015184600001516136f3565b61372e565b81608001819052506128756127fb6127f18760e00151600081518110151561279f57fe5b9060200190602002015160006002811015156127b757fe5b60200201518860e0015160008151811015156127cf57fe5b9060200190602002015160016002811015156127e757fe5b602002015161372e565b84604001516136f3565b6128706128668860c00151600081518110151561281457fe5b90602001906020020151600060028110151561282c57fe5b60200201518960c00151600081518110151561284457fe5b90602001906020020151600160028110151561285c57fe5b602002015161372e565b84600001516136f3565b61372e565b8160a001819052506129ca61295b6129026128e56128ce8960c00151600081518110151561289f57fe5b9060200190602002015160006002811015156128b757fe5b60200201516128c98860000151613ace565b6136f3565b6128e08a6040015188602001516136f3565b61372e565b8a6060015160006003811015156128f857fe5b60200201516136f3565b61295661293961291a8a6060015188600001516136f3565b6129348b6080015161292f8a60200151613ace565b6136f3565b61372e565b8b60600151600160038110151561294c57fe5b60200201516136f3565b61372e565b6129c56129926129738d6060015187600001516136f3565b61298d8e608001516129888960200151613ace565b6136f3565b61372e565b6129c089600001518c6060015160026003811015156129ad57fe5b60200201516135fa90919063ffffffff16565b6136f3565b61372e565b8160c00181905250612a846129e28260c00151613a55565b612a7f612a5f612a2c612a1a6002604080519081016040529081600082015481526020016001820154815250508d61010001516136f3565b612a278d60e00151613a55565b61372e565b612a5a6004604080519081016040529081600082015481526020016001820154815250508f60c001516136f3565b61372e565b612a7a896000015187600001516135fa90919063ffffffff16565b6136f3565b61372e565b8160e00181905250600160028a60000151811515612a9e57fe5b0403604051908082528060200260200182016040528015612ad957816020015b612ac66146c7565b815260200190600190039081612abe5790505b508161010001819052506000600190505b60028a60000151811515612afa57fe5b04811015612c7b57612b82612b418760e0015183815181101515612b1a57fe5b906020019060200201516000600281101515612b3257fe5b602002015185604001516136f3565b612b7d8860c0015184815181101515612b5657fe5b906020019060200201516000600281101515612b6e57fe5b602002015185600001516136f3565b61372e565b82610100015160018303815181101515612b9857fe5b906020019060200201516000600281101515612bb057fe5b6020020181905250612c38612bf78760e0015183815181101515612bd057fe5b906020019060200201516001600281101515612be857fe5b602002015185604001516136f3565b612c338860c0015184815181101515612c0c57fe5b906020019060200201516001600281101515612c2457fe5b602002015185600001516136f3565b61372e565b82610100015160018303815181101515612c4e57fe5b906020019060200201516001600281101515612c6657fe5b60200201819052508080600101915050612aea565b506000612cda86600001518360200151846040015185608001518660a001518760e00151886101000151604051602001612cbb97969594939291906156e0565b6040516020818303038152906040528051906020012060019004613528565b90508961014001516000015181141515612d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d20906154bf565b60405180910390fd5b612d3161488c565b612d7b84600001518c61010001518d60c001518e60e00151604051602001612d5c9493929190615759565b6040516020818303038152906040528051906020012060019004613528565b816080018181525050612db260026040805190810160405290816000820154815260200160018201548152505082608001516136f3565b8160000181905250612e336001805480602002602001604051908101604052809291908181526020016000905b82821015612e2557838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612ddf565b505050508a60200151613afa565b8160200181905250612e5a612e508a602001518b60400151613b76565b8a60800151613bdd565b8160400181905250612f13612e858c60200151612e808e604001518d61012001516136f3565b61372e565b612f0e612efc6000805480602002602001604051908101604052809291908181526020016000905b82821015612ef357838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612ead565b50505050613c56565b612f098d60400151613ace565b6136f3565b61372e565b8160600181905250612f78612f54612f4f6004604080519081016040529081600082015481526020016001820154815250508e60e001516136f3565b613a55565b612f738360600151612f6e85602001518660400151613ca3565b61372e565b61372e565b8160600181905250612fa08160600151612f9b83600001518e61010001516136f3565b61372e565b8160600181905250612fb06145b5565b8b6101600151905060008090505b60068110156130fd5761302e8360800151836000015183600681101515612fe157fe5b6020020151846020015184600681101515612ff857fe5b602002015160405160200161300f93929190615655565b6040516020818303038152906040528051906020012060019004613528565b83608001818152505082608001518360a001518260068110151561304e57fe5b60200201818152505060006130668460800151613d07565b90506130e76130a284600001518460068110151561308057fe5b602002015161309d60028860800151613d3d90919063ffffffff16565b6136f3565b6130e26130d88660200151866006811015156130ba57fe5b60200201516130d3600287613d3d90919063ffffffff16565b6136f3565b876060015161372e565b61372e565b8460600181905250508080600101915050612fbe565b5060018260c00151600060408110151561311357fe5b60200201818152505060008090505b60068110156131945761316b8360a001518260068110151561314057fe5b60200201518460c00151600060408110151561315857fe5b60200201516135fa90919063ffffffff16565b8360c00151600060408110151561317e57fe5b6020020181815250508080600101915050613122565b5061319d6148ef565b6131bd8360c0015160006040811015156131b357fe5b6020020151613d07565b8360c0015160006040811015156131d057fe5b60200201818152505060008090505b600260408115156131ec57fe5b048110156132ff5760008090505b6040828260019060020a020110156132f35760008160019060020a0283019050838160408110151561322857fe5b602002015115156132e75760006132808760a001518460016006030360068110151561325057fe5b60200201518860a001518560016006030360068110151561326d57fe5b60200201516135fa90919063ffffffff16565b90506132ab818860c001518660408110151561329857fe5b60200201516135fa90919063ffffffff16565b8760c00151836040811015156132bd57fe5b602002018181525050600185836040811015156132d657fe5b602002019015159081151581525050505b508060010190506131fa565b508060010190506131df565b506133086147fb565b6133106147fb565b60008090505b60408110156133d9576133838361337e60008481548110151561333557fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508960c001518560408110151561337457fe5b60200201516136f3565b61372e565b92506133ca826133c588602001518460408110151561339e57fe5b60200201518960c00151856001604003036040811015156133bb57fe5b60200201516136f3565b61372e565b91508080600101915050613316565b506133e26147fb565b6134366134096133f68588604001516136f3565b6134048589606001516136f3565b61372e565b613431886000015161342c89606001518a604001516135fa90919063ffffffff16565b6136f3565b61372e565b9050613446866060015182613774565b1515613487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161347e9061555f565b60405180910390fd5b60019e50505050505050505050505050505092915050565b6134a76147fb565b6135077f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016134de9291906153df565b604051602081830303815290604052805190602001206001900481151561350157fe5b06613daa565b905092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018281151561355557fe5b069050919050565b613565614913565b600181600060408110151561357657fe5b6020020181815250508181600160408110151561358f57fe5b6020020181815250506000600290505b60408110156135f4576135d08383600184036040811015156135bd57fe5b60200201516135fa90919063ffffffff16565b82826040811015156135de57fe5b602002018181525050808060010191505061359f565b50919050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561362657fe5b828409905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561365d57fe5b828408905092915050565b60008183101561369c5782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103016136a0565b8183035b905092915050565b600080600090505b60408110156136ed576136de83826040811015156136ca57fe5b60200201518361363190919063ffffffff16565b915080806001019150506136b0565b50919050565b6136fb6147fb565b604051835181526020840151602082015282604082015260408260608360075afa151561372757600080fd5b5092915050565b6137366147fb565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561376d57600080fd5b5092915050565b600081600001518360000151148015613794575081602001518360200151145b905092915050565b606060008351905060006002828115156137b257fe5b049050806040519080825280602002602001820160405280156137ef57816020015b6137dc6146c7565b8152602001906001900390816137d45790505b50925060606137ff856000613e4a565b90506060836040519080825280602002602001820160405280156138325781602001602082028038833980820191505090505b50905060008090505b6002811015613a475760008090505b858110156138b257888682880381151561386057fe5b0681518110151561386d57fe5b906020019060200201518260028110151561388457fe5b6020020151838281518110151561389757fe5b9060200190602002018181525050808060010191505061384a565b506138bc826140ab565b91506060846040519080825280602002602001820160405280156138fa57816020015b6138e76144e7565b8152602001906001900390816138df5790505b50905060006002905061390c81613d07565b905060008090505b868110156139c9576139a161399b61395a888481518110151561393357fe5b90602001906020020151888581518110151561394b57fe5b906020019060200201516136f3565b613996898b860181518110151561396d57fe5b90602001906020020151898c870181518110151561398757fe5b906020019060200201516136f3565b61372e565b836136f3565b83828151811015156139af57fe5b906020019060200201819052508080600101915050613914565b506139d5826001613e4a565b915060008090505b86811015613a375782818151811015156139f357fe5b906020019060200201518982815181101515613a0b57fe5b9060200190602002015185600281101515613a2257fe5b602002018190525080806001019150506139dd565b505050808060010191505061383b565b508494505050505092915050565b613a5d6147fb565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478460200151811515613aa157fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b613b02614937565b60008090505b6040811015613b6f57613b4c8482815181101515613b2257fe5b90602001906020020151613b478584604081101515613b3d57fe5b6020020151613d07565b6136f3565b8282604081101515613b5a57fe5b60200201819052508080600101915050613b08565b5092915050565b613b7e614913565b60008090505b6040811015613bd657613bb2838583604081101515613b9f57fe5b60200201516135fa90919063ffffffff16565b8282604081101515613bc057fe5b6020020181815250508080600101915050613b84565b5092915050565b613be5614913565b60008090505b6040811015613c4f57613c2b8382604081101515613c0557fe5b60200201518583604081101515613c1857fe5b602002015161363190919063ffffffff16565b8282604081101515613c3957fe5b6020020181815250508080600101915050613beb565b5092915050565b613c5e6147fb565b60008090505b6040811015613c9d57613c8e828483815181101515613c7f57fe5b9060200190602002015161372e565b91508080600101915050613c64565b50919050565b613cab6147fb565b60008090505b6040811015613d0057613cf182613cec8684604081101515613ccf57fe5b60200201518685604081101515613ce257fe5b60200201516136f3565b61372e565b91508080600101915050613cb1565b5092915050565b6000613d368260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103613d3d565b9050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515613d9e57600080fd5b80519250505092915050565b613db26147fb565b60005b600115613e2d5760006003613dcb8560036142d3565b019050613e0781600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515613e0157fe5b046142d3565b915080613e158360026142d3565b1415613e215750613e2d565b60018401935050613db5565b604080519081016040528084815260200182815250915050919050565b60606000835190506001811415613e6457839150506140a5565b6000600282811515613e7257fe5b06141515613eb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613eac9061549f565b60405180910390fd5b6000613ef9826310000000811515613ec957fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd613d3d90919063ffffffff16565b90506000600190508415613f1757613f1082613d07565b9150600290505b613f2081613d07565b90506060613f38613f32886000614340565b87613e4a565b90506060613f50613f4a896001614340565b88613e4a565b905060006001905085604051908082528060200260200182016040528015613f9257816020015b613f7f6144e7565b815260200190600190039081613f775790505b50965060008090505b600287811515613fa757fe5b0481101561409d57613fb76147fb565b613fd88483815181101515613fc857fe5b90602001906020020151846136f3565b9050614004613ffe8684815181101515613fee57fe5b906020019060200201518361372e565b876136f3565b898381518110151561401257fe5b9060200190602002018190525061405161404b868481518110151561403357fe5b9060200190602002015161404684613a55565b61372e565b876136f3565b8960028a81151561405e57fe5b04840181518110151561406d57fe5b9060200190602002018190525061408d87846135fa90919063ffffffff16565b9250508080600101915050613f9b565b505050505050505b92915050565b606060008251905060018114156140c557829150506142ce565b60006002828115156140d357fe5b06141515614116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161410d9061549f565b60405180910390fd5b600061415a82631000000081151561412a57fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd613d3d90919063ffffffff16565b9050606061417161416c8660006143f3565b6140ab565b905060606141886141838760016143f3565b6140ab565b9050600060019050846040519080825280602002602001820160405280156141bf5781602001602082028038833980820191505090505b50955060008090505b6002868115156141d457fe5b048110156142c75760006142088385848151811015156141f057fe5b906020019060200201516135fa90919063ffffffff16565b905061423481868481518110151561421c57fe5b9060200190602002015161363190919063ffffffff16565b888381518110151561424257fe5b906020019060200201818152505061427a81868481518110151561426257fe5b9060200190602002015161366890919063ffffffff16565b8860028981151561428757fe5b04840181518110151561429657fe5b90602001906020020181815250506142b786846135fa90919063ffffffff16565b92505080806001019150506141c8565b5050505050505b919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561433457600080fd5b80519250505092915050565b60606002835181151561434f57fe5b0460405190808252806020026020018201604052801561438957816020015b6143766144e7565b81526020019060019003908161436e5790505b50905060008090505b6002845181151561439f57fe5b048110156143ec57838382600202018151811015156143ba57fe5b9060200190602002015182828151811015156143d257fe5b906020019060200201819052508080600101915050614392565b5092915050565b60606002835181151561440257fe5b046040519080825280602002602001820160405280156144315781602001602082028038833980820191505090505b50905060008090505b6002845181151561444757fe5b04811015614495578383826002020181518110151561446257fe5b90602001906020020151828281518110151561447a57fe5b9060200190602002018181525050808060010191505061443a565b5092915050565b610120604051908101604052806060815260200160608152602001606081526020016144c66144e7565b815260200160608152602001600081526020016144e16144e7565b81525090565b604080519081016040528060008152602001600081525090565b6108e0604051908101604052806000815260200161451d6144e7565b815260200161452a6144e7565b81526020016145376144e7565b81526020016145446144e7565b81526020016145516146c7565b8152602001600081526020016000815260200160008152602001614573614966565b8152602001614580614a20565b815260200161458d614a42565b81525090565b6060604051908101604052806000815260200160008152602001600081525090565b610340604051908101604052806145ca614a78565b81526020016145d7614a78565b815260200160008152602001600081525090565b610340604051908101604052806146006144e7565b815260200161460d6144e7565b815260200161461a6144e7565b81526020016146276144e7565b81526020016146346144e7565b81526020016146416144e7565b815260200161464e6144e7565b815260200161465b6144e7565b81526020016146686144e7565b81526020016146756144e7565b81526020016060815260200160608152602001606081526020016000815260200160008152602001600081525090565b6040805190810160405280600290602082028038833980820191505090505090565b6080604051908101604052806002905b6146df6144e7565b8152602001906001900390816146d75790505090565b6111606040519081016040528060008152602001614711614aa7565b815260200160008152602001614725614acb565b8152602001614732614aa7565b8152602001600081526020016000815260200161474d6144e7565b815260200160008152602001600081525090565b6102006040519081016040528060008152602001606081526020016147846144e7565b81526020016147916144e7565b815260200161479e6144e7565b81526020016147ab614aee565b815260200160608152602001606081526020016147c66144e7565b81525090565b610180604051908101604052806006905b6147e56144e7565b8152602001906001900390816147dd5790505090565b604080519081016040528060008152602001600081525090565b61020060405190810160405280600081526020016148316144e7565b815260200161483e6144e7565b815260200161484b6144e7565b81526020016148586144e7565b81526020016148656144e7565b81526020016148726144e7565b815260200161487f6144e7565b8152602001606081525090565b612160604051908101604052806148a16144e7565b81526020016148ae614b1c565b81526020016148bb614aa7565b81526020016148c86144e7565b8152602001600081526020016148dc614b4b565b81526020016148e9614aa7565b81525090565b61080060405190810160405280604090602082028038833980820191505090505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6149506144e7565b8152602001906001900390816149485790505090565b6103406040519081016040528061497b6144e7565b81526020016149886144e7565b81526020016149956144e7565b81526020016149a26144e7565b81526020016149af6144e7565b81526020016149bc6144e7565b81526020016149c96144e7565b81526020016149d66144e7565b81526020016149e36144e7565b81526020016149f06144e7565b81526020016060815260200160608152602001606081526020016000815260200160008152602001600081525090565b6060604051908101604052806000815260200160008152602001600081525090565b61034060405190810160405280614a57614a78565b8152602001614a64614a78565b815260200160008152602001600081525090565b610180604051908101604052806006905b614a916144e7565b815260200190600190039081614a895790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b6080604051908101604052806002905b614b066146a5565b815260200190600190039081614afe5790505090565b611000604051908101604052806040905b614b356144e7565b815260200190600190039081614b2d5790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b600082601f8301121515614b8157600080fd5b8135614b94614b8f826157cb565b61579e565b91508181835260208401935060208101905083856040840282011115614bb957600080fd5b60005b83811015614be95781614bcf8882614bf3565b845260208401935060408301925050600181019050614bbc565b5050505092915050565b600082601f8301121515614c0657600080fd5b6002614c19614c14826157f3565b61579e565b91508183856020840282011115614c2f57600080fd5b60005b83811015614c5f5781614c458882614cdf565b845260208401935060208301925050600181019050614c32565b5050505092915050565b600082601f8301121515614c7c57600080fd5b6002614c8f614c8a82615815565b61579e565b91508183856020840282011115614ca557600080fd5b60005b83811015614cd55781614cbb8882614cdf565b845260208401935060208301925050600181019050614ca8565b5050505092915050565b6000614ceb8235615971565b905092915050565b600082601f8301121515614d0657600080fd5b8135614d19614d1482615837565b61579e565b91508082526020830160208301858383011115614d3557600080fd5b614d40838284615985565b50505092915050565b6000614d55823561597b565b905092915050565b600080600080600080600080610140898b031215614d7a57600080fd5b600089013567ffffffffffffffff811115614d9457600080fd5b614da08b828c01614b6e565b985050602089013567ffffffffffffffff811115614dbd57600080fd5b614dc98b828c01614b6e565b975050604089013567ffffffffffffffff811115614de657600080fd5b614df28b828c01614b6e565b9650506060614e038b828c01614c69565b95505060a089013567ffffffffffffffff811115614e2057600080fd5b614e2c8b828c01614b6e565b94505060c0614e3d8b828c01614d49565b93505060e0614e4e8b828c01614c69565b92505061012089013567ffffffffffffffff811115614e6c57600080fd5b614e788b828c01614cf3565b9150509295985092959890939650565b600060208284031215614e9a57600080fd5b6000614ea884828501614d49565b91505092915050565b6000614ebd8383614f3b565b60808301905092915050565b6000614ed5838361534c565b60408301905092915050565b6000614eec82615891565b614ef681856158fc565b9350614f0183615863565b60005b82811015614f2f57614f17868351614eb1565b9550614f22826158c8565b9150600181019050614f04565b50849250505092915050565b614f448161589c565b614f4e818461590d565b9250614f5982615870565b60005b82811015614f8757614f6f858351614ec9565b9450614f7a826158d5565b9150600181019050614f5c565b5050505050565b614f978161589c565b614fa18184615918565b9250614fac82615870565b60005b82811015614fda57614fc2858351614ec9565b9450614fcd826158d5565b9150600181019050614faf565b5050505050565b614fea816158a7565b614ff48184615923565b9250614fff8261587a565b60005b8281101561502d57615015858351614ec9565b9450615020826158e2565b9150600181019050615002565b5050505050565b600061503f826158b2565b615049818561592e565b935061505483615884565b60005b828110156150825761506a868351614ec9565b9550615075826158ef565b9150600181019050615057565b50849250505092915050565b6150978161595b565b82525050565b60006150a8826158bd565b6150b28185615950565b93506150c2818560208601615994565b80840191505092915050565b60006150db601f8361593f565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b600061511b602a8361593f565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b600061518160428361593f565b91507f496e61646571756174652073746f72656420766563746f72206261736521204360008301527f616c6c20657874656e644261736520616e64207468656e20747279206167616960208301527f6e2e0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600061520d601d8361593f565b91507f5265636f76657279206661696c75726520666f7220555e77202a20562e0000006000830152602082019050919050565b600061524d60218361593f565b91507f496e646578206f70706f736974652070617269747920636865636b206661696c60008301527f2e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006152b3601d8361593f565b91507f5265636f76657279206661696c75726520666f7220515e77202a20502e0000006000830152602082019050919050565b60006152f360258361593f565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600082015161536260008501826153aa565b50602082015161537560208501826153aa565b50505050565b60408201600082015161539160008501826153aa565b5060208201516153a460208501826153aa565b50505050565b6153b381615967565b82525050565b6153c281615967565b82525050565b6153d96153d482615967565b6159c7565b82525050565b60006153eb828561509d565b91506153f782846153c8565b6020820191508190509392505050565b600060e08201905081810360008301526154218189615034565b905081810360208301526154358188615034565b905081810360408301526154498187615034565b9050615458606083018661537b565b81810360a083015261546a8185615034565b905061547960c08301846153b9565b979650505050505050565b6000602082019050615499600083018461508e565b92915050565b600060208201905081810360008301526154b8816150ce565b9050919050565b600060208201905081810360008301526154d88161510e565b9050919050565b600060208201905081810360008301526154f881615174565b9050919050565b6000602082019050818103600083015261551881615200565b9050919050565b6000602082019050818103600083015261553881615240565b9050919050565b60006020820190508181036000830152615558816152a6565b9050919050565b60006020820190508181036000830152615578816152e6565b9050919050565b600060208201905061559460008301846153b9565b92915050565b600060a0820190506155af60008301856153b9565b6155bc6020830184614f8e565b9392505050565b60006102e0820190506155d9600083018b6153b9565b6155e6602083018a614fe1565b6155f46101a083018961537b565b6156026101e083018861537b565b61561061022083018761537b565b61561e61026083018661537b565b8181036102a08301526156318185614ee1565b90508181036102c08301526156468184614ee1565b90509998505050505050505050565b600060a08201905061566a60008301866153b9565b615677602083018561537b565b615684606083018461537b565b949350505050565b6000610120820190506156a260008301886153b9565b6156af602083018761537b565b6156bc606083018661537b565b6156c960a083018561537b565b6156d660e083018461537b565b9695505050505050565b6000610180820190506156f6600083018a6153b9565b615703602083018961537b565b615710606083018861537b565b61571d60a083018761537b565b61572a60e083018661537b565b61573861012083018561537b565b81810361016083015261574b8184614ee1565b905098975050505050505050565b600060808201905061576e60008301876153b9565b61577b60208301866153b9565b61578860408301856153b9565b61579560608301846153b9565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156157c157600080fd5b8060405250919050565b600067ffffffffffffffff8211156157e257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561580a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561582c57600080fd5b602082029050919050565b600067ffffffffffffffff82111561584e57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b6000819050919050565b6000602082019050919050565b600081519050919050565b600060029050919050565b600060069050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156159b2578082015181840152602081019050615997565b838111156159c1576000848401525b50505050565b600081905091905056fea265627a7a723058206884bb63a107852c58650b469e15d3e2c190e9c62566a51c65d79f7457ac2d946c6578706572696d656e74616cf50037",
  "sourceMap": "81:28463:5:-;;;688:9;695:1;688:6;;;:9;;;:::i;:::-;670:27;;;;;;;;:::i;:::-;;1970:208;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:208:5;2005:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;2001:1;:16;;;;;;;;;;;;;;;;;;;2031:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;2027:1;:16;;;;;;;;;;;;;;;;;;;2058:9;2070:1;2058:13;;2053:119;162:2;2073:1;:5;2053:119;;;2099:2;2107:15;;;;;;;;;;;;;;;;;;;2120:1;2107:7;;;:15;;;:::i;:::-;2099:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2099:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:2;2145:15;;;;;;;;;;;;;;;;;;;2158:1;2145:7;;;:15;;;:::i;:::-;2137:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2137:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2080:3;;;;;;;2053:119;;;;81:28463;;24884:236;24937:24;;:::i;:::-;24985:1;24973:6;24980:1;24973:9;;;;;;;;;;;;:13;;;;;25008:4;24996:6;25003:1;24996:9;;;;;;;;;;;;:16;;;;;25027:9;25039:1;25027:13;;25022:92;162:2;25042:1;:5;25022:92;;;25080:23;25098:4;25080:6;25091:1;25087;:5;25080:13;;;;;;;;;;;;;:17;;;;;;:23;;;;;:::i;:::-;25068:6;25075:1;25068:9;;;;;;;;;;;;:35;;;;;25049:3;;;;;;;25022:92;;;;24884:236;;;:::o;27975:206::-;28036:14;;:::i;:::-;28108:66;229:77;28151:5;28134:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28134:23:5;;;28124:34;;;;;;28116:43;;;:57;;;;;;;;28108:7;;;:66;;;:::i;:::-;28101:73;;27975:206;;;:::o;28187:355::-;28259:14;;:::i;:::-;28331:69;229:77;28374:5;28381:1;28357:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28357:26:5;;;28347:37;;;;;;28339:46;;;:60;;;;;;;;28331:7;;;:69;;;:::i;:::-;28324:76;;28187:355;;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;27481:488:5:-;27535:14;;:::i;:::-;27600:9;27619:311;27626:4;27619:311;;;27646:16;27685:1;27665:17;27674:4;27680:1;27665:8;;;:17;;;:::i;:::-;:21;27646:40;;27772:41;27781:8;27811:1;27806;229:77;27792:15;27791:21;;;;;;;;27772:8;;;:41;;;:::i;:::-;27768:45;;27849:8;27831:14;27840:1;27843;27831:8;;;:14;;;:::i;:::-;:26;27827:70;;;27877:5;;;27827:70;27918:1;27910:9;;;;27619:311;;;;27946:16;;;;;;;;;27954:4;27946:16;;;;27960:1;27946:16;;;27939:23;;;27481:488;;;:::o;26865:610::-;26938:14;26989:13;229:77;26989:27;;27064:4;27058:11;27092:4;27089:1;27082:15;27131:4;27124;27121:1;27117:12;27110:26;27170:4;27163;27160:1;27156:12;27149:26;27209:4;27202;27199:1;27195:12;27188:26;27248:8;27241:4;27238:1;27234:12;27227:30;27291:5;27284:4;27281:1;27277:12;27270:27;27354:4;27351:1;27345:4;27342:1;27336:4;27331:3;27320:39;27313:47;27310:2;;;27412:1;27409;27402:12;27310:2;27457:1;27451:8;27441:18;;27035:434;;;;;;:::o;81:28463::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:28463:5;;;;;;;",
  "deployedSourceMap": "81:28463:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3061:1215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3061:1215:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2184:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2184:90:5;;;:::i;:::-;;;;;;;;;;;;;;;;2280:775;;;;;;;;;;;;;;;;:::i;:::-;;3061:1215;3279:4;3295:32;;:::i;:::-;3337:12;3352:1;:8;3337:23;;3391:4;3378:2;:9;;;;:17;;3370:96;;;;;;;;;;;;;;;;;;;;;;;;3507:4;3493:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3477:9;:13;;:35;;;;3552:4;3538:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3522:9;:13;;:35;;;;3595:4;3581:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3567:9;:11;;:33;;;;3638:4;3624:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3610:9;:11;;:33;;;;3658:9;3670:1;3658:13;;3653:354;3677:4;3673:1;:8;3653:354;;;3721:47;;;;;;;;;3737:3;3741:1;3737:6;;;;;;;;;;;;;;;;;;3744:1;3737:9;;;;;;;;;;;;;3729:18;;;3721:47;;;;3757:3;3761:1;3757:6;;;;;;;;;;;;;;;;;;3764:1;3757:9;;;;;;;;;;;;;3749:18;;;3721:47;;;3702:9;:13;;;3716:1;3702:16;;;;;;;;;;;;;;;;;:66;;;;3801:47;;;;;;;;;3817:3;3821:1;3817:6;;;;;;;;;;;;;;;;;;3824:1;3817:9;;;;;;;;;;;;;3809:18;;;3801:47;;;;3837:3;3841:1;3837:6;;;;;;;;;;;;;;;;;;3844:1;3837:9;;;;;;;;;;;;;3829:18;;;3801:47;;;3782:9;:13;;;3796:1;3782:16;;;;;;;;;;;;;;;;;:66;;;;3879:43;;;;;;;;;3895:1;3897;3895:4;;;;;;;;;;;;;;;;;;3900:1;3895:7;;;;;;;;;;;;;3887:16;;;3879:43;;;;3913:1;3915;3913:4;;;;;;;;;;;;;;;;;;3918:1;3913:7;;;;;;;;;;;;;3905:16;;;3879:43;;;3862:9;:11;;;3874:1;3862:14;;;;;;;;;;;;;;;;;:60;;;;3953:43;;;;;;;;;3969:1;3971;3969:4;;;;;;;;;;;;;;;;;;3974:1;3969:7;;;;;;;;;;;;;3961:16;;;3953:43;;;;3987:1;3989;3987:4;;;;;;;;;;;;;;;;;;3992:1;3987:7;;;;;;;;;;;;;3979:16;;;3953:43;;;3936:9;:11;;;3948:1;3936:14;;;;;;;;;;;;;;;;;:60;;;;3683:3;;;;;;;3653:354;;;;4030:37;;;;;;;;;4046:1;4048;4046:4;;;;;;;;;;;;;4038:13;;;4030:37;;;;4061:1;4063;4061:4;;;;;;;;;;;;;4053:13;;;4030:37;;;4016:9;:11;;:51;;;;4095:5;4077:9;:15;;:23;;;;;4124:37;;;;;;;;;4140:1;4142;4140:4;;;;;;;;;;;;;4132:13;;;4124:37;;;;4155:1;4157;4155:4;;;;;;;;;;;;;4147:13;;;4124:37;;;4110:9;:11;;:51;;;;4171:30;;:::i;:::-;4204:18;4216:5;4204:11;:18::i;:::-;4171:51;;4239:30;4246:9;4257:11;4239:6;:30::i;:::-;4232:37;;;;;3061:1215;;;;;;;;;;:::o;2184:90::-;2227:12;2258:2;:9;;;;2251:16;;2184:90;:::o;2280:775::-;2924:9;2936:2;:9;;;;2924:21;;2919:130;2951:4;2947:1;:8;2919:130;;;2976:2;2984:15;;;;;;;;;;;;;;;;;;;2997:1;2984:7;:15::i;:::-;2976:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2976:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:2;3022:15;;;;;;;;;;;;;;;;;;;3035:1;3022:7;:15::i;:::-;3014:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3014:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2957:3;;;;;;;2919:130;;;;2280:775;:::o;20539:3193::-;20601:24;;:::i;:::-;20647:38;;;;;;;;;20655:13;20661:3;20666:1;20655:5;:13::i;:::-;20647:38;;;;20670:14;20676:3;20681:2;20670:5;:14::i;:::-;20647:38;;;20637:5;:7;;:48;;;;20705:39;;;;;;;;;20713:14;20719:3;20724:2;20713:5;:14::i;:::-;20705:39;;;;20729:14;20735:3;20740:2;20729:5;:14::i;:::-;20705:39;;;20695:5;:7;;:49;;;;20765:41;;;;;;;;;20773:15;20779:3;20784;20773:5;:15::i;:::-;20765:41;;;;20790:15;20796:3;20801;20790:5;:15::i;:::-;20765:41;;;20754:5;:8;;:52;;;;20827:41;;;;;;;;;20835:15;20841:3;20846;20835:5;:15::i;:::-;20827:41;;;;20852:15;20858:3;20863;20852:5;:15::i;:::-;20827:41;;;20816:5;:8;;:52;;;;20878:102;;;;;;;;;20895:41;;;;;;;;;20903:15;20909:3;20914;20903:5;:15::i;:::-;20895:41;;;;20920:15;20926:3;20931;20920:5;:15::i;:::-;20895:41;;;20878:102;;;;20938:41;;;;;;;;;20946:15;20952:3;20957;20946:5;:15::i;:::-;20938:41;;;;20963:15;20969:3;20974;20963:5;:15::i;:::-;20938:41;;;20878:102;;;:5;:13;;:102;;;;21000:15;21006:3;21011;21000:5;:15::i;:::-;20990:5;:7;;:25;;;;;21038:15;21044:3;21049;21038:5;:15::i;:::-;21025:5;:10;;:28;;;;;21074:15;21080:3;21085;21074:5;:15::i;:::-;21063:5;:8;;:26;;;;;21100:28;;:::i;:::-;21153:15;21159:3;21164;21153:5;:15::i;:::-;21138:10;:12;;:30;;;;;21194:15;21200:3;21205;21194:5;:15::i;:::-;21178:10;:13;;:31;;;;;21235:15;21241:3;21246;21235:5;:15::i;:::-;21219:10;:13;;:31;;;;;21279:10;21260:5;:16;;:29;;;;21300:32;;:::i;:::-;21347:9;21359:1;21347:13;;21342:233;191:1;21362;:5;21342:233;;;21404:59;;;;;;;;;21412:24;21418:3;21433:2;21429:1;:6;21423:3;:12;21412:5;:24::i;:::-;21404:59;;;;21438:24;21444:3;21459:2;21455:1;:6;21449:3;:12;21438:5;:24::i;:::-;21404:59;;;21388:7;:10;;;21399:1;21388:13;;;;;;;;;;;;:75;;;;21493:71;;;;;;;;;21501:30;21507:3;21528:2;21523:1;191;21519:5;21518:12;21512:3;:18;21501:5;:30::i;:::-;21493:71;;;;21533:30;21539:3;21560:2;21555:1;191;21551:5;21550:12;21544:3;:18;21533:5;:30::i;:::-;21493:71;;;21477:7;:10;;;21488:1;21477:13;;;;;;;;;;;;:87;;;;21369:3;;;;;;;21342:233;;;;21596:25;21602:3;21617;191:1;21613:7;21607:3;:13;21596:5;:25::i;:::-;21584:7;:9;;:37;;;;;21643:25;21649:3;21664;191:1;21660:7;21654:3;:13;21643:5;:25::i;:::-;21631:7;:9;;:37;;;;;21694:7;21678:5;:13;;:23;;;;21712:26;;:::i;:::-;21748:12;21791:3;21784;21777:4;21764:3;:10;:17;:23;21763:31;;;;;;;;21748:46;;21871:43;;;;;;;;;21879:16;21885:3;21890:4;21879:5;:16::i;:::-;21871:43;;;;21897:16;21903:3;21908:4;21897:5;:16::i;:::-;21871:43;;;21857:9;:11;;:57;;;;21938:43;;;;;;;;;21946:16;21952:3;21957:4;21946:5;:16::i;:::-;21938:43;;;;21964:16;21970:3;21975:4;21964:5;:16::i;:::-;21938:43;;;21924:9;:11;;:57;;;;22005:43;;;;;;;;;22013:16;22019:3;22024:4;22013:5;:16::i;:::-;22005:43;;;;22031:16;22037:3;22042:4;22031:5;:16::i;:::-;22005:43;;;21991:9;:11;;:57;;;;22072:43;;;;;;;;;22080:16;22086:3;22091:4;22080:5;:16::i;:::-;22072:43;;;;22098:16;22104:3;22109:4;22098:5;:16::i;:::-;22072:43;;;22058:9;:11;;:57;;;;22139:43;;;;;;;;;22147:16;22153:3;22158:4;22147:5;:16::i;:::-;22139:43;;;;22165:16;22171:3;22176:4;22165:5;:16::i;:::-;22139:43;;;22125:9;:11;;:57;;;;22206:43;;;;;;;;;22214:16;22220:3;22225:4;22214:5;:16::i;:::-;22206:43;;;;22232:16;22238:3;22243:4;22232:5;:16::i;:::-;22206:43;;;22192:9;:11;;:57;;;;22276:43;;;;;;;;;22284:16;22290:3;22295:4;22284:5;:16::i;:::-;22276:43;;;;22302:16;22308:3;22313:4;22302:5;:16::i;:::-;22276:43;;;22259:9;:14;;:60;;;;22346:43;;;;;;;;;22354:16;22360:3;22365:4;22354:5;:16::i;:::-;22346:43;;;;22372:16;22378:3;22383:4;22372:5;:16::i;:::-;22346:43;;;22329:9;:14;;:60;;;;22414:43;;;;;;;;;22422:16;22428:3;22433:4;22422:5;:16::i;:::-;22414:43;;;;22440:16;22446:3;22451:4;22440:5;:16::i;:::-;22414:43;;;22399:9;:12;;:58;;;;22482:43;;;;;;;;;22490:16;22496:3;22501:4;22490:5;:16::i;:::-;22482:43;;;;22508:16;22514:3;22519:4;22508:5;:16::i;:::-;22482:43;;;22467:9;:12;;:58;;;;22574:1;22567:4;:8;22550:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22536:9;:11;;:40;;;;22591:9;22603:1;22591:13;;22586:181;22617:1;22610:4;:8;22606:1;:12;22586:181;;;22659:25;22665:3;22682:1;22677:2;:6;22670:4;:13;22659:5;:25::i;:::-;22639:9;:11;;;22651:1;22639:14;;;;;;;;;;;;;;;;;;22654:1;22639:17;;;;;;;;;;;;:45;;;;;22718:38;22724:3;22753:2;22748:1;22744;22737:4;:8;:12;22736:19;22729:4;:26;22718:5;:38::i;:::-;22698:9;:11;;;22710:1;22698:14;;;;;;;;;;;;;;;;;;22713:1;22698:17;;;;;;;;;;;;:58;;;;;22620:3;;;;;;;22586:181;;;;22816:1;22809:4;:8;;;;;;;;22792:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22777:9;:12;;:41;;;;22867:1;22860:4;:8;;;;;;;;22843:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22828:9;:12;;:41;;;;22884:9;22896:1;22884:13;;22879:597;22910:1;22903:4;:8;;;;;;;;22899:1;:12;22879:597;;;22953:79;;;;;;;;;22961:34;22967:3;22992:2;22987:1;22980:4;:8;22979:15;22972:4;:22;22961:5;:34::i;:::-;22953:79;;;;22997:34;23003:3;23028:2;23023:1;23016:4;:8;23015:15;23008:4;:22;22997:5;:34::i;:::-;22953:79;;;22932:9;:12;;;22945:1;22932:15;;;;;;;;;;;;;;;;;;22948:1;22932:18;;;;;;;;;;;;:100;;;;23067:85;;;;;;;;;23075:37;23081:3;23109:2;23105:1;:6;23100:2;23093:4;:9;23086:4;:16;:25;23075:5;:37::i;:::-;23067:85;;;;23114:37;23120:3;23148:2;23144:1;:6;23139:2;23132:4;:9;23125:4;:16;:25;23114:5;:37::i;:::-;23067:85;;;23046:9;:12;;;23059:1;23046:15;;;;;;;;;;;;;;;;;;23062:1;23046:18;;;;;;;;;;;;:106;;;;23187:87;;;;;;;;;23195:38;23201:3;23230:2;23226:1;:6;23220:3;23213:4;:10;23206:4;:17;:26;23195:5;:38::i;:::-;23187:87;;;;23235:38;23241:3;23270:2;23266:1;:6;23260:3;23253:4;:10;23246:4;:17;:26;23235:5;:38::i;:::-;23187:87;;;23166:9;:12;;;23179:1;23166:15;;;;;;;;;;;;;;;;;;23182:1;23166:18;;;;;;;;;;;;:108;;;;23309:87;;;;;;;;;23317:38;23323:3;23352:2;23348:1;:6;23342:3;23335:4;:10;23328:4;:17;:26;23317:5;:38::i;:::-;23309:87;;;;23357:38;23363:3;23392:2;23388:1;:6;23382:3;23375:4;:10;23368:4;:17;:26;23357:5;:38::i;:::-;23309:87;;;23288:9;:12;;;23301:1;23288:15;;;;;;;;;;;;;;;;;;23304:1;23288:18;;;;;;;;;;;;:108;;;;22913:3;;;;;;;22879:597;;;;23498:4;23485:5;:10;;:17;;;;;23528:29;23534:3;23553;23546:4;:10;23539:4;:17;23528:5;:29::i;:::-;23513:9;:12;;:44;;;;;23582:29;23588:3;23607;23600:4;:10;23593:4;:17;23582:5;:29::i;:::-;23567:9;:12;;:44;;;;;23636:29;23642:3;23661;23654:4;:10;23647:4;:17;23636:5;:29::i;:::-;23621:9;:12;;:44;;;;;23694:9;23676:5;:15;;:27;;;;23720:5;23713:12;;;;;;20539:3193;;;:::o;5341:11385::-;5440:4;5456:42;;:::i;:::-;5530:198;5559:122;5588:9;:13;;;5603:9;:13;;;5618:9;:11;;;5631:9;:11;;;5644:9;:11;;;5657:9;:15;;;5577:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5577:96:5;;;5567:107;;;;;;5559:116;;;:120;:122::i;:::-;5683:5;:7;;;5692:5;:7;;;5701:5;:8;;;5711:5;:8;;;5548:172;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5548:172:5;;;5538:183;;;;;;5530:192;;;:196;:198::i;:::-;5508:17;:19;;:220;;;;;5761:27;5768:17;:19;;;5761:6;:27::i;:::-;5738:17;:20;;:50;;;;5820:57;5849:17;:19;;;5838:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5838:31:5;;;5828:42;;;;;;5820:51;;;:55;:57::i;:::-;5798:17;:19;;:79;;;;;5913:44;5937:17;:19;;;5913:17;:19;;;:23;;:44;;;;:::i;:::-;5887:17;:20;;;5908:1;5887:23;;;;;;;;;;;;:70;;;;;5972:9;5984:1;5972:13;;5967:135;5991:1;5987;:5;5967:135;;;6039:52;6071:17;:19;;;6039:17;:20;;;6064:1;6060;:5;6039:27;;;;;;;;;;;;;:31;;:52;;;;:::i;:::-;6013:17;:20;;;6034:1;6013:23;;;;;;;;;;;;:78;;;;;5994:3;;;;;;;5967:135;;;;6205:9;6217:1;6205:13;;6200:233;6228:1;162:2;6224:5;;;;;;;;6220:1;:9;6200:233;;;6290:35;6323:1;6318;:6;6290:17;:20;;;6311:1;6290:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;6250:17;:34;;;6285:1;6250:37;;;;;;;;;;;;:75;;;;;6387:35;6420:1;6415;:6;6387:17;:20;;;6408:1;6387:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;6339:17;:34;;;6382:1;162:2;6378:5;;;;;;;;6374:1;:9;6339:45;;;;;;;;;;;;:83;;;;;6231:3;;;;;;;6200:233;;;;6464:72;6493:17;:19;;;6514:5;:13;;;6482:46;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6482:46:5;;;6472:57;;;;;;6464:66;;;:70;:72::i;:::-;6442:17;:19;;:94;;;;;6572:77;6629:17;:19;;;6572:52;6600:17;:20;;;6621:1;6600:23;;;;;;;;;;;;;6572:17;:20;;;6593:1;6572:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;6547:17;:22;;:102;;;;;6681:160;6772:68;6817:17;:22;;;6772:40;6809:1;162:2;6805:5;;;;;;;;6799:1;:12;6772:17;:22;;;:26;;:40;;;;:::i;:::-;:44;;:68;;;;:::i;:::-;6681:86;6718:48;6742:17;:20;;;6763:1;6742:23;;;;;;;;;;;;;6718:17;:19;;;:23;;:48;;;;:::i;:::-;6681:32;6692:17;:20;;;6681:10;:32::i;:::-;:36;;:86;;;;:::i;:::-;:90;;:160;;;;:::i;:::-;6659:17;:19;;:182;;;;;6877:116;6881:42;6885:5;:13;;;6899:1;6885:16;;;;;;;;;;;;;6903:17;:19;;;6881:3;:42::i;:::-;6925:67;6929:5;:13;;;6943:1;6929:16;;;;;;;;;;;;;6947:44;6971:17;:19;;;6947:17;:19;;;:23;;:44;;;;:::i;:::-;6925:3;:67::i;:::-;6877:3;:116::i;:::-;6851:17;:23;;:142;;;;7051:32;7063:17;:19;;;7051:5;:7;;;:11;;:32;;;;:::i;:::-;7029:17;:19;;:54;;;;;7207:26;;:::i;:::-;7236:5;:15;;;7207:44;;7261:38;;:::i;:::-;7309:25;;:::i;:::-;:106;;;;;;;;;7338:9;:11;;;7309:106;;;;7351:9;:11;;;7309:106;;;;7364:9;:11;;;7309:106;;;;7377:9;:11;;;7309:106;;;;7390:9;:11;;;7309:106;;;;7403:9;:11;;;7309:106;;;;;7486:154;7515:17;:19;;;7536:7;7545:9;:14;;;7561:9;:14;;;7577:9;:12;;;7591:9;:12;;;7605:9;:12;;;7619:9;:12;;;7504:128;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7504:128:5;;;7494:139;;;;;;7486:148;;;:152;:154::i;:::-;7466:15;:17;;:174;;;;;7687:5;:10;;;7670:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7650:15;:17;;:48;;;;7734:15;:17;;;7708:15;:17;;;7726:1;7708:20;;;;;;;;;;;;;;;;;;7729:1;7708:23;;;;;;;;;;;;:43;;;;;7787:15;:17;;;7761:15;:17;;;7779:1;7761:20;;;;;;;;;;;;;;;;;;7782:1;7761:23;;;;;;;;;;;;:43;;;;;7819:6;7828:1;7819:10;;7814:355;7835:5;:10;;;7831:1;:14;7814:355;;;7892:9;:11;;;7908:1;7904;:5;7892:18;;;;;;;;;;;;;;;;;;7911:1;7892:21;;;;;;;;;;;;;7866:15;:17;;;7884:1;7866:20;;;;;;;;;;;;;;;;;;7887:1;7866:23;;;;;;;;;;;;:47;;;;;7953:9;:11;;;7969:1;7965;:5;7953:18;;;;;;;;;;;;;;;;;;7972:1;7953:21;;;;;;;;;;;;;7927:15;:17;;;7945:1;7927:20;;;;;;;;;;;;;;;;;;7948:1;7927:23;;;;;;;;;;;;:47;;;;;8014:52;8042:15;:17;;;8060:1;8042:20;;;;;;;;;;;;;;;;;;8063:1;8042:23;;;;;;;;;;;;;8014:15;:17;;;8032:1;8014:20;;;;;;;;;;;;;;;;;;8035:1;8014:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;7988:15;:17;;;8006:1;7988:20;;;;;;;;;;;;;;;;;;8009:1;7988:23;;;;;;;;;;;;:78;;;;;8106:52;8134:15;:17;;;8152:1;8134:20;;;;;;;;;;;;;;;;;;8155:1;8134:23;;;;;;;;;;;;;8106:15;:17;;;8124:1;8106:20;;;;;;;;;;;;;;;;;;8127:1;8106:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;8080:15;:17;;;8098:1;8080:20;;;;;;;;;;;;;;;;;;8101:1;8080:23;;;;;;;;;;;;:78;;;;;7847:3;;;;;;;7814:355;;;;8178:19;;:::i;:::-;8212:9;8224:1;8212:13;;8207:201;8231:5;:10;;;8227:1;:14;8207:201;;;8269:46;8273:4;8279:35;8283:2;8286:1;8283:5;;;;;;;;;;;;;;;;;;;;8279:35;;;;;;;;;;;;;;;;;;;;;;;;;;8290:15;:17;;;8308:1;8290:20;;;;;;;;;;;;;;;;;;8311:1;8290:23;;;;;;;;;;;;;8279:3;:35::i;:::-;8269:3;:46::i;:::-;8262:53;;8336:46;8340:4;8346:35;8350:2;8353:1;8350:5;;;;;;;;;;;;;;;;;;;;8346:35;;;;;;;;;;;;;;;;;;;;;;;;;;8357:15;:17;;;8375:1;8357:20;;;;;;;;;;;;;;;;;;8378:1;8357:23;;;;;;;;;;;;;8346:3;:35::i;:::-;8336:3;:46::i;:::-;8329:53;;8243:3;;;;;;;8207:201;;;;8426:90;8429:53;8433:35;8437:9;:11;;;8450:15;:17;;;8433:3;:35::i;:::-;8470:9;:11;;;8429:3;:53::i;:::-;8484:31;8488:4;8494:20;8498:1;8494:20;;;;;;;;;;;;;;;;;;;;;;;;;;8501:9;:12;;;8494:3;:20::i;:::-;8484:3;:31::i;:::-;8426:2;:90::i;:::-;8418:132;;;;;;;;;;;;;;;;;;;;;;;;8565:6;8574:1;8565:10;;8560:279;8581:5;:10;;;8577:1;:14;8560:279;;;8638:75;8666:46;8688:15;:17;;;8706:1;8688:20;;;;;;;;;;;;;;;;;;8709:1;8688:23;;;;;;;;;;;;;8666:15;:17;;;:21;;:46;;;;:::i;:::-;8638:15;:17;;;8656:1;8638:20;;;;;;;;;;;;;;;;;;8659:1;8638:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;8612:15;:17;;;8630:1;8612:20;;;;;;;;;;;;;;;;;;8633:1;8612:23;;;;;;;;;;;;:101;;;;;8753:75;8781:46;8803:15;:17;;;8821:1;8803:20;;;;;;;;;;;;;;;;;;8824:1;8803:23;;;;;;;;;;;;;8781:15;:17;;;:21;;:46;;;;:::i;:::-;8753:15;:17;;;8771:1;8753:20;;;;;;;;;;;;;;;;;;8774:1;8753:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;8727:15;:17;;;8745:1;8727:20;;;;;;;;;;;;;;;;;;8748:1;8727:23;;;;;;;;;;;;:101;;;;;8593:3;;;;;;;8560:279;;;;8855:13;;;;;;;;;8863:1;8855:13;;;;8866:1;8855:13;;;8848:20;;8883:9;8895:1;8883:13;;8878:247;8902:5;:10;;;8898:1;:14;8878:247;;;8986:46;8990:4;8996:35;9000:2;9003:1;9000:5;;;;;;;;;;;;;;;;;;;;8996:35;;;;;;;;;;;;;;;;;;;;;;;;;;9007:15;:17;;;9025:1;9007:20;;;;;;;;;;;;;;;;;;9028:1;9007:23;;;;;;;;;;;;;8996:3;:35::i;:::-;8986:3;:46::i;:::-;8979:53;;9053:46;9057:4;9063:35;9067:2;9070:1;9067:5;;;;;;;;;;;;;;;;;;;;9063:35;;;;;;;;;;;;;;;;;;;;;;;;;;9074:15;:17;;;9092:1;9074:20;;;;;;;;;;;;;;;;;;9095:1;9074:23;;;;;;;;;;;;;9063:3;:35::i;:::-;9053:3;:46::i;:::-;9046:53;;8914:3;;;;;;;8878:247;;;;9142:90;9145:53;9149:35;9153:9;:11;;;9166:15;:17;;;9149:3;:35::i;:::-;9186:9;:11;;;9145:3;:53::i;:::-;9200:31;9204:4;9210:20;9214:1;9210:20;;;;;;;;;;;;;;;;;;;;;;;;;;9217:9;:12;;;9210:3;:20::i;:::-;9200:3;:31::i;:::-;9142:2;:90::i;:::-;9134:132;;;;;;;;;;;;;;;;;;;;;;;;9303:15;:17;;;9277:15;:17;;;9295:1;9277:20;;;;;;;;;;;;;;;;;;9298:1;9277:23;;;;;;;;;;;;:43;;;;;9356:15;:17;;;9330:15;:17;;;9348:1;9330:20;;;;;;;;;;;;;;;;;;9351:1;9330:23;;;;;;;;;;;;:43;;;;;9388:6;9397:1;9388:10;;9383:426;9404:5;:10;;;9400:1;:14;9383:426;;;9532:9;:11;;;9548:1;9544;:5;9532:18;;;;;;;;;;;;;;;;;;9551:1;9532:21;;;;;;;;;;;;;9506:15;:17;;;9524:1;9506:20;;;;;;;;;;;;;;;;;;9527:1;9506:23;;;;;;;;;;;;:47;;;;;9593:9;:11;;;9609:1;9605;:5;9593:18;;;;;;;;;;;;;;;;;;9612:1;9593:21;;;;;;;;;;;;;9567:15;:17;;;9585:1;9567:20;;;;;;;;;;;;;;;;;;9588:1;9567:23;;;;;;;;;;;;:47;;;;;9654:52;9682:15;:17;;;9700:1;9682:20;;;;;;;;;;;;;;;;;;9703:1;9682:23;;;;;;;;;;;;;9654:15;:17;;;9672:1;9654:20;;;;;;;;;;;;;;;;;;9675:1;9654:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;9628:15;:17;;;9646:1;9628:20;;;;;;;;;;;;;;;;;;9649:1;9628:23;;;;;;;;;;;;:78;;;;;9746:52;9774:15;:17;;;9792:1;9774:20;;;;;;;;;;;;;;;;;;9795:1;9774:23;;;;;;;;;;;;;9746:15;:17;;;9764:1;9746:20;;;;;;;;;;;;;;;;;;9767:1;9746:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;9720:15;:17;;;9738:1;9720:20;;;;;;;;;;;;;;;;;;9741:1;9720:23;;;;;;;;;;;;:78;;;;;9416:3;;;;;;;9383:426;;;;9840:52;9861:15;:17;;;9880:9;:11;;;9840:20;:52::i;:::-;9819:15;:18;;:73;;;;10003:52;10024:15;:17;;;10043:9;:11;;;10003:20;:52::i;:::-;9982:15;:18;;:73;;;;10086:59;10090:35;10094:9;:11;;;10107:15;:17;;;10090:3;:35::i;:::-;10127:17;10131:9;:12;;;10127:3;:17::i;:::-;10086:3;:59::i;:::-;10065:15;:18;;:80;;;;10160:9;10172:1;10160:13;;10155:609;10192:1;10179:5;:10;;;:14;;;;;;;;10175:1;:18;10155:609;;;10328:9;10340:1;10328:13;;10323:431;10347:1;10343;:5;10323:431;;;10378:9;10390:1;10378:13;;10373:169;10397:1;10393;:5;10373:169;;;10458:65;10491:15;:17;;;10517:1;10513;10509;:5;:9;10491:28;;;;;;;;;;;;;;;;;;10520:1;10491:31;;;;;;;;;;;;;10458:15;:22;;;10481:1;10458:25;;;;;;;;;;;;;10484:1;10458:28;;;;;;;;;;;;;:32;;:65;;;;:::i;:::-;10427:15;:22;;;10450:1;10427:25;;;;;;;;;;;;;10453:1;10427:28;;;;;;;;;;;;:96;;;;;10400:3;;;;;;;10373:169;;;;10586:54;10590:15;:18;;;10609:1;10590:21;;;;;;;;;;;;;;;;;;10612:1;10590:24;;;;;;;;;;;;;10616:23;10620:9;:12;;;10633:1;10620:15;;;;;;;;;;;;;;;;;;10636:1;10620:18;;;;;;;;;;;;;10616:3;:23::i;:::-;10586:3;:54::i;:::-;10559:15;:18;;;10578:1;10559:21;;;;;;;;;;;;;;;;;;10581:1;10559:24;;;;;;;;;;;;:81;;;;10685:54;10689:15;:18;;;10708:1;10689:21;;;;;;;;;;;;;;;;;;10711:1;10689:24;;;;;;;;;;;;;10715:23;10719:9;:12;;;10732:1;10719:15;;;;;;;;;;;;;;;;;;10735:1;10719:18;;;;;;;;;;;;;10715:3;:23::i;:::-;10685:3;:54::i;:::-;10658:15;:18;;;10677:1;10658:21;;;;;;;;;;;;;;;;;;10680:1;10658:24;;;;;;;;;;;;:81;;;;10350:3;;;;;;;10323:431;;;;10195:3;;;;;;;10155:609;;;;10927:62;10960:15;:22;;;10983:1;10960:25;;;;;;;;;;;;;10986:1;10960:28;;;;;;;;;;;;;10927:15;:22;;;10950:1;10927:25;;;;;;;;;;;;;10953:1;10927:28;;;;;;;;;;;;;:32;;:62;;;;:::i;:::-;10896:15;:22;;;10919:1;10896:25;;;;;;;;;;;;;10922:1;10896:28;;;;;;;;;;;;:93;;;;;11030:62;11063:15;:22;;;11086:1;11063:25;;;;;;;;;;;;;11089:1;11063:28;;;;;;;;;;;;;11030:15;:22;;;11053:1;11030:25;;;;;;;;;;;;;11056:1;11030:28;;;;;;;;;;;;;:32;;:62;;;;:::i;:::-;10999:15;:22;;;11022:1;10999:25;;;;;;;;;;;;;11025:1;10999:28;;;;;;;;;;;;:93;;;;;11109:87;11113:40;11117:2;11120:1;11117:5;;;;;;;;;;;;;;;;;;;;11113:40;;;;;;;;;;;;;;;;;;;;;;;;;;11124:15;:22;;;11147:1;11124:25;;;;;;;;;;;;;11150:1;11124:28;;;;;;;;;;;;;11113:3;:40::i;:::-;11155;11159:2;11162:1;11159:5;;;;;;;;;;;;;;;;;;;;11155:40;;;;;;;;;;;;;;;;;;;;;;;;;;11166:15;:22;;;11189:1;11166:25;;;;;;;;;;;;;11192:1;11166:28;;;;;;;;;;;;;11155:3;:40::i;:::-;11109:3;:87::i;:::-;11102:94;;11215:90;11218:53;11222:35;11226:9;:11;;;11239:15;:17;;;11222:3;:35::i;:::-;11259:9;:11;;;11218:3;:53::i;:::-;11273:31;11277:4;11283:20;11287:1;11283:20;;;;;;;;;;;;;;;;;;;;;;;;;;11290:9;:12;;;11283:3;:20::i;:::-;11273:3;:31::i;:::-;11215:2;:90::i;:::-;11207:136;;;;;;;;;;;;;;;;;;;;;;;;11359:9;11371:1;11359:13;;11354:272;11378:5;:10;;;11374:1;:14;11354:272;;;11432:73;11436:15;:20;;;11458:46;11462:9;:13;;;11476:1;11462:16;;;;;;;;;;;;;;;;;;11480:15;:17;;;11498:1;11480:20;;;;;;;;;;;;;;;;;;11501:1;11480:23;;;;;;;;;;;;;11458:3;:46::i;:::-;11432:3;:73::i;:::-;11409:15;:20;;:96;;;;11542:73;11546:15;:20;;;11568:46;11572:9;:13;;;11586:1;11572:16;;;;;;;;;;;;;;;;;;11590:15;:17;;;11608:1;11590:20;;;;;;;;;;;;;;;;;;11611:1;11590:23;;;;;;;;;;;;;11568:3;:46::i;:::-;11542:3;:73::i;:::-;11519:15;:20;;:96;;;;11390:3;;;;;;;11354:272;;;;11658:46;11662:15;:20;;;11684:19;11688:9;:14;;;11684:3;:19::i;:::-;11658:3;:46::i;:::-;11635:15;:20;;:69;;;;11737:46;11741:15;:20;;;11763:19;11767:9;:14;;;11763:3;:19::i;:::-;11737:3;:46::i;:::-;11714:15;:20;;:69;;;;11815:49;11819:25;11823:1;11819:25;;;;;;;;;;;;;;;;;;;;;;;;;;11826:15;:17;;;11819:3;:25::i;:::-;11846:17;11850:9;:12;;;11846:3;:17::i;:::-;11815:3;:49::i;:::-;11794:15;:18;;:70;;;;11875:28;;:::i;:::-;11906:5;:16;;;11875:47;;11932:40;;:::i;:::-;12008:18;:10;:12;;;:16;:18::i;:::-;11982:16;:23;;:44;;;;;12059:93;12063:38;12067:15;:18;;;12087:10;:13;;;12063:3;:38::i;:::-;12103:48;12107:15;:18;;;12127:16;:23;;;12103:3;:48::i;:::-;12059:3;:93::i;:::-;12037:16;:19;;:115;;;;12184:99;12188:38;12192:15;:18;;;12212:10;:13;;;12188:3;:38::i;:::-;12228:54;12232:15;:18;;;12251:1;12232:21;;;;;;;;;;;;;;;;;;12254:1;12232:24;;;;;;;;;;;;;12258:16;:23;;;12228:3;:54::i;:::-;12184:3;:99::i;:::-;12162:16;:19;;:121;;;;12319:34;;;;;;;;;;;;;;;;;;;12337:9;:15;;;12319:7;:34::i;:::-;12293:16;:23;;:60;;;;12385:91;12389:43;12393:16;:23;;;12418:10;:13;;;12389:3;:43::i;:::-;12434:41;12438:9;:11;;;12451:16;:23;;;12434:3;:41::i;:::-;12385:3;:91::i;:::-;12363:16;:19;;:113;;;;12511:167;12515:75;12519:55;12523:15;:18;;;12542:1;12523:21;;;;;;;;;;;;;;;;;;12545:1;12523:24;;;;;;;;;;;;;12549:15;:18;;;12568:1;12549:21;;;;;;;;;;;;;;;;;;12571:1;12549:24;;;;;;;;;;;;;12519:3;:55::i;:::-;12576:10;:13;;;12515:3;:75::i;:::-;12592:85;12596:55;12600:15;:18;;;12619:1;12600:21;;;;;;;;;;;;;;;;;;12622:1;12600:24;;;;;;;;;;;;;12626:15;:18;;;12645:1;12626:21;;;;;;;;;;;;;;;;;;12648:1;12626:24;;;;;;;;;;;;;12596:3;:55::i;:::-;12653:16;:23;;;12592:3;:85::i;:::-;12511:3;:167::i;:::-;12486:16;:22;;:192;;;;12715:381;12719:253;12723:124;12727:94;12731:49;12735:15;:18;;;12754:1;12735:21;;;;;;;;;;;;;;;;;;12757:1;12735:24;;;;;;;;;;;;;12761:18;:10;:12;;;:16;:18::i;:::-;12731:3;:49::i;:::-;12782:38;12786:15;:18;;;12806:10;:13;;;12782:3;:38::i;:::-;12727:3;:94::i;:::-;12823:17;:20;;;12844:1;12823:23;;;;;;;;;;;;;12723:3;:124::i;:::-;12849:122;12853:92;12857:39;12861:15;:20;;;12883:10;:12;;;12857:3;:39::i;:::-;12898:46;12902:15;:20;;;12924:19;:10;:13;;;:17;:19::i;:::-;12898:3;:46::i;:::-;12853:3;:92::i;:::-;12947:17;:20;;;12968:1;12947:23;;;;;;;;;;;;;12849:3;:122::i;:::-;12719:3;:253::i;:::-;12974:121;12978:68;12982:27;12986:5;:8;;;12996:10;:12;;;12982:3;:27::i;:::-;13011:34;13015:5;:8;;;13025:19;:10;:13;;;:17;:19::i;:::-;13011:3;:34::i;:::-;12978:3;:68::i;:::-;13048:46;13076:15;:17;;;13048;:20;;;13069:1;13048:23;;;;;;;;;;;;;:27;;:46;;;;:::i;:::-;12974:3;:121::i;:::-;12715:3;:381::i;:::-;12688:16;:24;;:408;;;;13128:165;13132:29;13136:16;:24;;;13132:3;:29::i;:::-;13163:129;13167:87;13171:62;13175:27;13179:1;13175:27;;;;;;;;;;;;;;;;;;;;;;;;;;13182:17;:19;;;13175:3;:27::i;:::-;13204:28;13208:17;:23;;;13204:3;:28::i;:::-;13171:3;:62::i;:::-;13235:18;13239:1;13235:18;;;;;;;;;;;;;;;;;;;;;;;;;;13242:5;:10;;;13235:3;:18::i;:::-;13167:3;:87::i;:::-;13256:35;13273:15;:17;;;13256:10;:12;;;:16;;:35;;;;:::i;:::-;13163:3;:129::i;:::-;13128:3;:165::i;:::-;13106:16;:19;;:187;;;;13359:1;13355;13342:5;:10;;;:14;;;;;;;;:18;13325:36;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;13303:16;:19;;:58;;;;13376:9;13388:1;13376:13;;13371:358;13408:1;13395:5;:10;;;:14;;;;;;;;13391:1;:18;13371:358;;;13462:105;13466:44;13470:15;:18;;;13489:1;13470:21;;;;;;;;;;;;;;;;;;13492:1;13470:24;;;;;;;;;;;;;13496:10;:13;;;13466:3;:44::i;:::-;13512:54;13516:15;:18;;;13535:1;13516:21;;;;;;;;;;;;;;;;;;13538:1;13516:24;;;;;;;;;;;;;13542:16;:23;;;13512:3;:54::i;:::-;13462:3;:105::i;:::-;13430:16;:19;;;13454:1;13450;:5;13430:26;;;;;;;;;;;;;;;;;;13457:1;13430:29;;;;;;;;;;;;:137;;;;13613:105;13617:44;13621:15;:18;;;13640:1;13621:21;;;;;;;;;;;;;;;;;;13643:1;13621:24;;;;;;;;;;;;;13647:10;:13;;;13617:3;:44::i;:::-;13663:54;13667:15;:18;;;13686:1;13667:21;;;;;;;;;;;;;;;;;;13689:1;13667:24;;;;;;;;;;;;;13693:16;:23;;;13663:3;:54::i;:::-;13613:3;:105::i;:::-;13581:16;:19;;;13605:1;13601;:5;13581:26;;;;;;;;;;;;;;;;;;13608:1;13581:29;;;;;;;;;;;;:137;;;;13411:3;;;;;;;13371:358;;;;13739:17;13759:184;13788:15;:17;;;13807:16;:19;;;13828:16;:19;;;13849:16;:19;;;13870:16;:22;;;13894:16;:19;;;13915:16;:19;;;13777:158;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13777:158:5;;;13767:169;;;;;;13759:178;;;:182;:184::i;:::-;13739:204;;13974:5;:16;;;:18;;;13961:9;:31;13953:86;;;;;;;;;;;;;;;;;;;;;;;;14050:34;;:::i;:::-;14121:81;14150:10;:12;;;14164:5;:7;;;14173:5;:10;;;14185:5;:8;;;14139:55;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14139:55:5;;;14129:66;;;;;;14121:75;;;:79;:81::i;:::-;14094:13;:24;;:108;;;;;14244:32;14248:1;14244:32;;;;;;;;;;;;;;;;;;;;;;;;;;14251:13;:24;;;14244:3;:32::i;:::-;14226:13;:15;;:50;;;;14310:38;14323:2;14310:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14327:17;:20;;;14310:12;:38::i;:::-;14286:13;:21;;:62;;;;14379:96;14390:48;14396:17;:20;;;14418:17;:19;;;14390:5;:48::i;:::-;14440:17;:34;;;14379:10;:96::i;:::-;14358:13;:18;;:117;;;;14504:99;14508:47;14512:5;:7;;;14521:33;14525:5;:7;;;14534:17;:19;;;14521:3;:33::i;:::-;14508:3;:47::i;:::-;14557:45;14561:13;14571:2;14561:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;14576:25;:17;:19;;;:23;:25::i;:::-;14557:3;:45::i;:::-;14504:3;:99::i;:::-;14486:13;:15;;:117;;;;14631:99;14635:21;14639:16;14643:1;14639:16;;;;;;;;;;;;;;;;;;;;;;;;;;14646:5;:8;;;14639:3;:16::i;:::-;14635:3;:21::i;:::-;14658:71;14662:13;:15;;;14679:49;14686:13;:21;;;14709:13;:18;;;14679:6;:49::i;:::-;14658:3;:71::i;:::-;14631:3;:99::i;:::-;14613:13;:15;;:117;;;;14758:51;14762:13;:15;;;14779:29;14783:13;:15;;;14800:5;:7;;;14779:3;:29::i;:::-;14758:3;:51::i;:::-;14740:13;:15;;:69;;;;14864:32;;:::i;:::-;14899:5;:13;;;14864:48;;14927:9;14939:1;14927:13;;14922:466;191:1;14942;:5;14922:466;;;14995:92;15024:13;:24;;;15050:7;:10;;;15061:1;15050:13;;;;;;;;;;;;;15065:7;:10;;;15076:1;15065:13;;;;;;;;;;;;;15013:66;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15013:66:5;;;15003:77;;;;;;14995:86;;;:90;:92::i;:::-;14968:13;:24;;:119;;;;;15131:13;:24;;;15101:13;:24;;;15126:1;15101:27;;;;;;;;;;;;:54;;;;;15189:12;15204:30;:13;:24;;;:28;:30::i;:::-;15189:45;;15266:111;15270:51;15274:7;:10;;;15285:1;15274:13;;;;;;;;;;;;;15289:31;15318:1;15289:13;:24;;;:28;;:31;;;;:::i;:::-;15270:3;:51::i;:::-;15323:53;15327:31;15331:7;:10;;;15342:1;15331:13;;;;;;;;;;;;;15346:11;15355:1;15346:4;:8;;:11;;;;:::i;:::-;15327:3;:31::i;:::-;15360:13;:15;;;15323:3;:53::i;:::-;15266:3;:111::i;:::-;15248:13;:15;;:129;;;;14922:466;14949:3;;;;;;;14922:466;;;;15432:1;15398:13;:28;;;15427:1;15398:31;;;;;;;;;;;;:35;;;;;15448:9;15460:1;15448:13;;15443:155;191:1;15463;:5;15443:155;;;15523:64;15559:13;:24;;;15584:1;15559:27;;;;;;;;;;;;;15523:13;:28;;;15552:1;15523:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;15489:13;:28;;;15518:1;15489:31;;;;;;;;;;;;:98;;;;;15470:3;;;;;;;15443:155;;;;15607:21;;:::i;:::-;15672:37;:13;:28;;;15701:1;15672:31;;;;;;;;;;;;;:35;:37::i;:::-;15638:13;:28;;;15667:1;15638:31;;;;;;;;;;;;:71;;;;;15724:9;15736:1;15724:13;;15719:462;15745:1;162:2;15743:3;;;;;;;;15739:1;:7;15719:462;;;15772:9;15784:1;15772:13;;15767:404;162:2;15798:1;15793;15788;:6;;;;15787:12;:16;15767:404;;;15828:10;15851:1;15846;:6;;;;15841:1;:12;15828:25;;15876:6;15883:2;15876:10;;;;;;;;;;;;;15875:11;15871:286;;;15910:12;15925:76;15965:13;:24;;;15998:1;15994;191;15990:5;:9;15965:35;;;;;;;;;;;;;15925:13;:24;;;15958:1;15954;191;15950:5;:9;15925:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;15910:91;;16058:41;16094:4;16058:13;:28;;;16087:1;16058:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;16023:13;:28;;;16052:2;16023:32;;;;;;;;;;;;:76;;;;;16134:4;16121:6;16128:2;16121:10;;;;;;;;;;;;:17;;;;;;;;;;;15871:286;;15767:404;15805:3;;;;;15767:404;;;;15748:3;;;;;15719:462;;;;16191:20;;:::i;:::-;16221;;:::i;:::-;16256:9;16268:1;16256:13;;16251:224;162:2;16271:1;:5;16251:224;;;16305:55;16309:5;16316:43;16320:2;16323:1;16320:5;;;;;;;;;;;;;;;;;;;;16316:43;;;;;;;;;;;;;;;;;;;;;;;;;;16327:13;:28;;;16356:1;16327:31;;;;;;;;;;;;;16316:3;:43::i;:::-;16305:3;:55::i;:::-;16297:63;;16382:82;16386:5;16393:70;16397:13;:21;;;16419:1;16397:24;;;;;;;;;;;;;16423:13;:28;;;16460:1;16456;162:2;16452:5;:9;16423:39;;;;;;;;;;;;;16393:3;:70::i;:::-;16382:3;:82::i;:::-;16374:90;;16278:3;;;;;;;16251:224;;;;16484:21;;:::i;:::-;16508:102;16512:49;16516:21;16520:5;16527:7;:9;;;16516:3;:21::i;:::-;16539;16543:5;16550:7;:9;;;16539:3;:21::i;:::-;16512:3;:49::i;:::-;16563:46;16567:13;:15;;;16584:24;16598:7;:9;;;16584:7;:9;;;:13;;:24;;;;:::i;:::-;16563:3;:46::i;:::-;16508:3;:102::i;:::-;16484:126;;16628:27;16631:13;:15;;;16648:6;16628:2;:27::i;:::-;16620:77;;;;;;;;;;;;;;;;;;;;;;;;16715:4;16708:11;;;;;;;;;;;;;;;;5341:11385;;;;:::o;28187:355::-;28259:14;;:::i;:::-;28331:69;229:77;28374:5;28381:1;28357:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28357:26:5;;;28347:37;;;;;;28339:46;;;:60;;;;;;;;28331:7;:69::i;:::-;28324:76;;28187:355;;;;:::o;25324:295::-;25397:14;25490:4;25484:11;25546:5;25539:4;25532:5;25528:16;25524:28;25518:35;25515:1;25508:46;25601:1;25595:8;25585:18;;25461:152;;;;;:::o;727:95:3:-;774:7;117:77;800:1;:15;;;;;;;;793:22;;727:95;;;:::o;24884:236:5:-;24937:24;;:::i;:::-;24985:1;24973:6;24980:1;24973:9;;;;;;;;;;;;:13;;;;;25008:4;24996:6;25003:1;24996:9;;;;;;;;;;;;:16;;;;;25027:9;25039:1;25027:13;;25022:92;162:2;25042:1;:5;25022:92;;;25080:23;25098:4;25080:6;25091:1;25087;:5;25080:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;25068:6;25075:1;25068:9;;;;;;;;;;;;:35;;;;;25049:3;;;;;;;25022:92;;;;24884:236;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;374:::-;432:7;117:77;458:25;;;;;;;468:1;465;458:25;451:32;;374:116;;;;:::o;828:127::-;886:7;917:1;912;:6;;:36;;947:1;943;117:77;929:15;:19;912:36;;;925:1;921;:5;912:36;905:43;;828:127;;;;:::o;24182:180:5:-;24247:14;24278:9;24290:1;24278:13;;24273:83;162:2;24293:1;:5;24273:83;;;24328:17;24339:2;24342:1;24339:5;;;;;;;;;;;;;24328:6;:10;;:17;;;;:::i;:::-;24319:26;;24300:3;;;;;;;24273:83;;;;24182:180;;;:::o;26153:382::-;26218:16;;:::i;:::-;26284:4;26278:11;26318:1;26312:8;26309:1;26302:19;26368:4;26365:1;26361:12;26355:19;26348:4;26345:1;26341:12;26334:41;26409:1;26402:4;26399:1;26395:12;26388:23;26468:4;26465:1;26459:4;26456:1;26450:4;26445:3;26434:39;26427:47;26424:2;;;26503:1;26500;26493:12;26424:2;26255:274;;;;;:::o;25691:456::-;25765:16;;:::i;:::-;25831:4;25825:11;25865:2;25859:9;25856:1;25849:20;25917:4;25913:2;25909:13;25903:20;25896:4;25893:1;25889:12;25882:42;25964:2;25958:9;25951:4;25948:1;25944:12;25937:31;26016:4;26012:2;26008:13;26002:20;25995:4;25992:1;25988:12;25981:42;26080:4;26077:1;26071:4;26068:1;26062:4;26057:3;26046:39;26039:47;26036:2;;;26115:1;26112;26105:12;26036:2;25802:339;;;;;:::o;26728:131::-;26801:4;26832:2;:4;;;26824:2;:4;;;:12;:28;;;;;26848:2;:4;;;26840:2;:4;;;:12;26824:28;26817:35;;26728:131;;;;:::o;16732:1489::-;16838:26;17113:12;17128:8;:15;17113:30;;17153:12;17175:1;17168:4;:8;;;;;;;;17153:23;;17212:4;17195:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17186:31;;17299:25;17327:16;17331:4;17337:5;17327:3;:16::i;:::-;17299:44;;17354:29;17400:4;17386:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17386:19:5;;;;17354:51;;17420:9;17432:1;17420:13;;17415:777;17439:1;17435;:5;17415:777;;;17466:9;17478:1;17466:13;;17461:148;17485:4;17481:1;:8;17461:148;;;17532:8;17554:4;17549:1;17542:4;:8;17541:17;;;;;;;;17532:27;;;;;;;;;;;;;;;;;;17560:1;17532:30;;;;;;;;;;;;;17514:12;17527:1;17514:15;;;;;;;;;;;;;;;;;:48;;;;;17491:3;;;;;;;17461:148;;;;17638:17;17642:12;17638:3;:17::i;:::-;17623:32;;17669:28;17714:4;17700:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17669:50;;17733:20;17756:1;17733:24;;17786:18;:12;:16;:18::i;:::-;17771:33;;17823:9;17835:1;17823:13;;17818:203;17842:4;17838:1;:8;17818:203;;;17900:106;17904:87;17908:33;17912:8;17921:1;17912:11;;;;;;;;;;;;;;;;;;17925:12;17938:1;17925:15;;;;;;;;;;;;;;;;;;17908:3;:33::i;:::-;17943:47;17947:8;17960:4;17956:1;:8;17947:18;;;;;;;;;;;;;;;;;;17967:12;17984:4;17980:1;:8;17967:22;;;;;;;;;;;;;;;;;;17943:3;:47::i;:::-;17904:3;:87::i;:::-;17993:12;17900:3;:106::i;:::-;17883:11;17895:1;17883:14;;;;;;;;;;;;;;;;;:123;;;;17848:3;;;;;;;17818:203;;;;18049:22;18053:11;18066:4;18049:3;:22::i;:::-;18035:36;;18090:9;18102:1;18090:13;;18085:97;18109:4;18105:1;:8;18085:97;;;18153:11;18165:1;18153:14;;;;;;;;;;;;;;;;;;18138:6;18145:1;18138:9;;;;;;;;;;;;;;;;;;18148:1;18138:12;;;;;;;;;;;;:29;;;;18115:3;;;;;;;18085:97;;;;17415:777;;17442:3;;;;;;;17415:777;;;;18208:6;18201:13;;;;;;16732:1489;;;;:::o;26541:181::-;26595:14;;:::i;:::-;26628:47;;;;;;;;;26636:1;:3;;;26628:47;;;;229:77;26656:1;:3;;;:17;;;;;;;;229:77;26641:33;26628:47;;;26621:54;;26541:181;;;:::o;961:95:3:-;1008:7;1048:1;117:77;1034:15;1027:22;;961:95;;;:::o;23954:222:5:-;24042:24;;:::i;:::-;24083:9;24095:1;24083:13;;24078:92;162:2;24098:1;:5;24078:92;;;24136:23;24140:2;24143:1;24140:5;;;;;;;;;;;;;;;;;;24147:11;:2;24150:1;24147:5;;;;;;;;;;;;;:9;:11::i;:::-;24136:3;:23::i;:::-;24124:6;24131:1;24124:9;;;;;;;;;;;;:35;;;;24105:3;;;;;;;24078:92;;;;23954:222;;;;:::o;25126:192::-;25196:24;;:::i;:::-;25237:9;25249:1;25237:13;;25232:80;162:2;25252:1;:5;25232:80;;;25290:11;25299:1;25290;25292;25290:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;25278:6;25285:1;25278:9;;;;;;;;;;;;:23;;;;;25259:3;;;;;;;25232:80;;;;25126:192;;;;:::o;23738:210::-;23823:24;;:::i;:::-;23864:9;23876:1;23864:13;;23859:83;162:2;23879:1;:5;23859:83;;;23917:14;23926:1;23928;23926:4;;;;;;;;;;;;;23917:1;23919;23917:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;23905:6;23912:1;23905:9;;;;;;;;;;;;:26;;;;;23886:3;;;;;;;23859:83;;;;23738:210;;;;:::o;24368:177::-;24431:18;;:::i;:::-;24466:9;24478:1;24466:13;;24461:78;162:2;24481:1;:5;24461:78;;;24513:15;24517:3;24522:2;24525:1;24522:5;;;;;;;;;;;;;;;;;;24513:3;:15::i;:::-;24507:21;;24488:3;;;;;;;24461:78;;;;24368:177;;;:::o;24551:327::-;24634:21;;:::i;:::-;24672:9;24684:1;24672:13;;24667:205;162:2;24687:1;:5;24667:205;;;24831:30;24835:6;24843:17;24847:2;24850:1;24847:5;;;;;;;;;;;;;24854:2;24857:1;24854:5;;;;;;;;;;;;;24843:3;:17::i;:::-;24831:3;:30::i;:::-;24822:39;;24694:3;;;;;;;24667:205;;;;24551:327;;;;:::o;618:103:3:-;665:7;691:23;695:1;712;117:77;698:15;691:3;:23::i;:::-;684:30;;618:103;;;:::o;1062:580::-;1130:14;1156:13;117:77;1156:27;;1231:4;1225:11;1259:4;1256:1;1249:15;1298:4;1291;1288:1;1284:12;1277:26;1337:4;1330;1327:1;1323:12;1316:26;1376:4;1369;1366:1;1362:12;1355:26;1415:8;1408:4;1405:1;1401:12;1394:30;1458:5;1451:4;1448:1;1444:12;1437:27;1521:4;1518:1;1512:4;1509:1;1503:4;1498:3;1487:39;1480:47;1477:2;;;1579:1;1576;1569:12;1477:2;1624:1;1618:8;1608:18;;1202:434;;;;;;:::o;27481:488:5:-;27535:14;;:::i;:::-;27600:9;27619:311;27626:4;27619:311;;;27646:16;27685:1;27665:17;27674:4;27680:1;27665:8;:17::i;:::-;:21;27646:40;;27772:41;27781:8;27811:1;27806;229:77;27792:15;27791:21;;;;;;;;27772:8;:41::i;:::-;27768:45;;27849:8;27831:14;27840:1;27843;27831:8;:14::i;:::-;:26;27827:70;;;27877:5;;;27827:70;27918:1;27910:9;;;;27619:311;;;;27946:16;;;;;;;;;27954:4;27946:16;;;;27960:1;27946:16;;;27939:23;;;27481:488;;;:::o;18227:997::-;18301:23;18336:12;18351:5;:12;18336:27;;18385:1;18377:4;:9;18373:52;;;18409:5;18402:12;;;;;18373:52;18454:1;18449;18442:4;:8;;;;;;;;:13;18434:57;;;;;;;;;;;;;;;;;;;;;;;;18502:13;18518:23;18536:4;18528:5;:12;;;;;;;;337:76;18518:9;;:23;;;;:::i;:::-;18502:39;;18551:20;18574:1;18551:24;;18589:7;18585:87;;;18620:11;:5;:9;:11::i;:::-;18612:19;;18660:1;18645:16;;18585:87;18696:18;:12;:16;:18::i;:::-;18681:33;;18724:21;18748:31;18752:17;18760:5;18767:1;18752:7;:17::i;:::-;18771:7;18748:3;:31::i;:::-;18724:55;;18789:20;18812:31;18816:17;18824:5;18831:1;18816:7;:17::i;:::-;18835:7;18812:3;:31::i;:::-;18789:54;;18853:17;18873:1;18853:21;;18907:4;18893:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18884:28;;18927:9;18939:1;18927:13;;18922:296;18953:1;18946:4;:8;;;;;;;;18942:1;:12;18922:296;;;18975:19;;:::i;:::-;18997:22;19001:3;19005:1;19001:6;;;;;;;;;;;;;;;;;;19009:9;18997:3;:22::i;:::-;18975:44;;19045:37;19049:18;19053:4;19058:1;19053:7;;;;;;;;;;;;;;;;;;19062:4;19049:3;:18::i;:::-;19069:12;19045:3;:37::i;:::-;19033:6;19040:1;19033:9;;;;;;;;;;;;;;;;;:49;;;;19119:42;19123:23;19127:4;19132:1;19127:7;;;;;;;;;;;;;;;;;;19136:9;19140:4;19136:3;:9::i;:::-;19123:3;:23::i;:::-;19148:12;19119:3;:42::i;:::-;19096:6;19114:1;19107:4;:8;;;;;;;;19103:1;:12;19096:20;;;;;;;;;;;;;;;;;:65;;;;19187:20;19201:5;19187:9;:13;;:20;;;;:::i;:::-;19175:32;;18922:296;18956:3;;;;;;;18922:296;;;;18227:997;;;;;;;;;;;:::o;19512:739::-;19572:23;19607:12;19622:5;:12;19607:27;;19656:1;19648:4;:9;19644:52;;;19680:5;19673:12;;;;;19644:52;19725:1;19720;19713:4;:8;;;;;;;;:13;19705:57;;;;;;;;;;;;;;;;;;;;;;;;19773:13;19789:23;19807:4;19799:5;:12;;;;;;;;337:76;19789:9;;:23;;;;:::i;:::-;19773:39;;19822:21;19846:22;19850:17;19858:5;19865:1;19850:7;:17::i;:::-;19846:3;:22::i;:::-;19822:46;;19878:20;19901:22;19905:17;19913:5;19920:1;19905:7;:17::i;:::-;19901:3;:22::i;:::-;19878:45;;19933:17;19953:1;19933:21;;19987:4;19973:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19973:19:5;;;;19964:28;;20007:9;20019:1;20007:13;;20002:243;20033:1;20026:4;:8;;;;;;;;20022:1;:12;20002:243;;;20055:12;20070:21;20081:9;20070:3;20074:1;20070:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;20055:36;;20117:17;20129:4;20117;20122:1;20117:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;20105:6;20112:1;20105:9;;;;;;;;;;;;;;;;;:29;;;;;20171:17;20183:4;20171;20176:1;20171:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;20148:6;20166:1;20159:4;:8;;;;;;;;20155:1;:12;20148:20;;;;;;;;;;;;;;;;;:40;;;;;20214:20;20228:5;20214:9;:13;;:20;;;;:::i;:::-;20202:32;;20002:243;20036:3;;;;;;;20002:243;;;;19512:739;;;;;;;;;:::o;26865:610::-;26938:14;26989:13;229:77;26989:27;;27064:4;27058:11;27092:4;27089:1;27082:15;27131:4;27124;27121:1;27117:12;27110:26;27170:4;27163;27160:1;27156:12;27149:26;27209:4;27202;27199:1;27195:12;27188:26;27248:8;27241:4;27238:1;27234:12;27227:30;27291:5;27284:4;27281:1;27277:12;27270:27;27354:4;27351:1;27345:4;27342:1;27336:4;27331:3;27320:39;27313:47;27310:2;;;27412:1;27409;27402:12;27310:2;27457:1;27451:8;27441:18;;27035:434;;;;;;:::o;19230:276::-;19310:23;19383:1;19368:5;:12;:16;;;;;;;;19354:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19345:40;;19400:9;19412:1;19400:13;;19395:105;19434:1;19419:5;:12;:16;;;;;;;;19415:1;:20;19395:105;;;19468:5;19482:6;19478:1;19474;:5;:14;19468:21;;;;;;;;;;;;;;;;;;19456:6;19463:1;19456:9;;;;;;;;;;;;;;;;;:33;;;;19437:3;;;;;;;19395:105;;;;19230:276;;;;:::o;20257:::-;20337:23;20410:1;20395:5;:12;:16;;;;;;;;20381:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20381:31:5;;;;20372:40;;20427:9;20439:1;20427:13;;20422:105;20461:1;20446:5;:12;:16;;;;;;;;20442:1;:20;20422:105;;;20495:5;20509:6;20505:1;20501;:5;:14;20495:21;;;;;;;;;;;;;;;;;;20483:6;20490:1;20483:9;;;;;;;;;;;;;;;;;:33;;;;;20464:3;;;;;;;20422:105;;;;20257:276;;;;:::o;81:28463::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28463:5;;;;:::o;26:764:-1:-;;162:3;155:4;147:6;143:17;139:27;132:35;129:2;;;180:1;177;170:12;129:2;217:6;204:20;239:99;254:83;330:6;254:83;;;239:99;;;230:108;;355:5;380:6;373:5;366:21;410:4;402:6;398:17;388:27;;432:4;427:3;423:14;416:21;;485:6;532:3;524:4;516:6;512:17;507:3;503:27;500:36;497:2;;;549:1;546;539:12;497:2;574:1;559:225;584:6;581:1;578:13;559:225;;;642:3;664:56;716:3;704:10;664:56;;;659:3;652:69;744:4;739:3;735:14;728:21;;772:4;767:3;763:14;756:21;;616:168;606:1;603;599:9;594:14;;559:225;;;563:14;122:668;;;;;;;;817:607;;928:3;921:4;913:6;909:17;905:27;898:35;895:2;;;946:1;943;936:12;895:2;970:3;988:74;1003:58;1054:6;1003:58;;;988:74;;;979:83;;1079:5;1138:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:2;;;1202:1;1199;1192:12;1150:2;1227:1;1212:206;1237:6;1234:1;1231:13;1212:206;;;1295:3;1317:37;1350:3;1338:10;1317:37;;;1312:3;1305:50;1378:4;1373:3;1369:14;1362:21;;1406:4;1401:3;1397:14;1390:21;;1269:149;1259:1;1256;1252:9;1247:14;;1212:206;;;1216:14;888:536;;;;;;;;1451:615;;1566:3;1559:4;1551:6;1547:17;1543:27;1536:35;1533:2;;;1584:1;1581;1574:12;1533:2;1608:3;1626:78;1641:62;1696:6;1641:62;;;1626:78;;;1617:87;;1721:5;1780:6;1827:3;1819:4;1811:6;1807:17;1802:3;1798:27;1795:36;1792:2;;;1844:1;1841;1834:12;1792:2;1869:1;1854:206;1879:6;1876:1;1873:13;1854:206;;;1937:3;1959:37;1992:3;1980:10;1959:37;;;1954:3;1947:50;2020:4;2015:3;2011:14;2004:21;;2048:4;2043:3;2039:14;2032:21;;1911:149;1901:1;1898;1894:9;1889:14;;1854:206;;;1858:14;1526:540;;;;;;;;2074:118;;2141:46;2179:6;2166:20;2141:46;;;2132:55;;2126:66;;;;;2200:440;;2301:3;2294:4;2286:6;2282:17;2278:27;2271:35;2268:2;;;2319:1;2316;2309:12;2268:2;2356:6;2343:20;2378:64;2393:48;2434:6;2393:48;;;2378:64;;;2369:73;;2462:6;2455:5;2448:21;2498:4;2490:6;2486:17;2531:4;2524:5;2520:16;2566:3;2557:6;2552:3;2548:16;2545:25;2542:2;;;2583:1;2580;2573:12;2542:2;2593:41;2627:6;2622:3;2617;2593:41;;;2261:379;;;;;;;;2648:118;;2715:46;2753:6;2740:20;2715:46;;;2706:55;;2700:66;;;;;2773:2013;;;;;;;;;3227:3;3215:9;3206:7;3202:23;3198:33;3195:2;;;3244:1;3241;3234:12;3195:2;3307:1;3296:9;3292:17;3279:31;3330:18;3322:6;3319:30;3316:2;;;3362:1;3359;3352:12;3316:2;3382:97;3471:7;3462:6;3451:9;3447:22;3382:97;;;3372:107;;3258:227;3544:2;3533:9;3529:18;3516:32;3568:18;3560:6;3557:30;3554:2;;;3600:1;3597;3590:12;3554:2;3620:97;3709:7;3700:6;3689:9;3685:22;3620:97;;;3610:107;;3495:228;3782:2;3771:9;3767:18;3754:32;3806:18;3798:6;3795:30;3792:2;;;3838:1;3835;3828:12;3792:2;3858:97;3947:7;3938:6;3927:9;3923:22;3858:97;;;3848:107;;3733:228;3992:2;4010:76;4078:7;4069:6;4058:9;4054:22;4010:76;;;4000:86;;3971:121;4151:3;4140:9;4136:19;4123:33;4176:18;4168:6;4165:30;4162:2;;;4208:1;4205;4198:12;4162:2;4228:97;4317:7;4308:6;4297:9;4293:22;4228:97;;;4218:107;;4102:229;4362:3;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4341:99;4471:3;4490:76;4558:7;4549:6;4538:9;4534:22;4490:76;;;4480:86;;4450:122;4631:3;4620:9;4616:19;4603:33;4656:18;4648:6;4645:30;4642:2;;;4688:1;4685;4678:12;4642:2;4708:62;4762:7;4753:6;4742:9;4738:22;4708:62;;;4698:72;;4582:194;3189:1597;;;;;;;;;;;;4793:241;;4897:2;4885:9;4876:7;4872:23;4868:32;4865:2;;;4913:1;4910;4903:12;4865:2;4948:1;4965:53;5010:7;5001:6;4990:9;4986:22;4965:53;;;4955:63;;4927:97;4859:175;;;;;5042:335;;5208:129;5333:3;5326:5;5208:129;;;5366:4;5361:3;5357:14;5343:28;;5201:176;;;;;5386:259;;5514:91;5601:3;5594:5;5514:91;;;5634:4;5629:3;5625:14;5611:28;;5507:138;;;;;5734:925;;5955:90;6039:5;5955:90;;;6058:126;6177:6;6172:3;6058:126;;;6051:133;;6204:92;6290:5;6204:92;;;6317:1;6302:335;6327:6;6324:1;6321:13;6302:335;;;6374:143;6513:3;6504:6;6498:13;6374:143;;;6367:150;;6534:96;6623:6;6534:96;;;6524:106;;6349:1;6346;6342:9;6337:14;;6302:335;;;6306:14;6650:3;6643:10;;5934:725;;;;;;;6744:723;6905:69;6968:5;6905:69;;;6987:95;7075:6;7070:3;6987:95;;;6980:102;;7102:71;7167:5;7102:71;;;7194:1;7179:276;7204:6;7201:1;7198:13;7179:276;;;7251:105;7352:3;7343:6;7337:13;7251:105;;;7244:112;;7373:75;7441:6;7373:75;;;7363:85;;7226:1;7223;7219:9;7214:14;;7179:276;;;7183:14;6884:583;;;;;7552:743;7723:69;7786:5;7723:69;;;7805:105;7903:6;7898:3;7805:105;;;7798:112;;7930:71;7995:5;7930:71;;;8022:1;8007:276;8032:6;8029:1;8026:13;8007:276;;;8079:105;8180:3;8171:6;8165:13;8079:105;;;8072:112;;8201:75;8269:6;8201:75;;;8191:85;;8054:1;8051;8047:9;8042:14;;8007:276;;;8011:14;7702:593;;;;;8380:759;8555:73;8622:5;8555:73;;;8641:105;8739:6;8734:3;8641:105;;;8634:112;;8766:75;8835:5;8766:75;;;8862:1;8847:280;8872:6;8869:1;8866:13;8847:280;;;8919:105;9020:3;9011:6;9005:13;8919:105;;;8912:112;;9041:79;9113:6;9041:79;;;9031:89;;8894:1;8891;8887:9;8882:14;;8847:280;;;8851:14;8534:605;;;;;9222:773;;9405:71;9470:5;9405:71;;;9489:107;9589:6;9584:3;9489:107;;;9482:114;;9616:73;9683:5;9616:73;;;9710:1;9695:278;9720:6;9717:1;9714:13;9695:278;;;9767:105;9868:3;9859:6;9853:13;9767:105;;;9760:112;;9889:77;9959:6;9889:77;;;9879:87;;9742:1;9739;9735:9;9730:14;;9695:278;;;9699:14;9986:3;9979:10;;9384:611;;;;;;;10003:111;10080:28;10102:5;10080:28;;;10075:3;10068:41;10062:52;;;10121:360;;10251:39;10284:5;10251:39;;;10302:89;10384:6;10379:3;10302:89;;;10295:96;;10396:52;10441:6;10436:3;10429:4;10422:5;10418:16;10396:52;;;10469:6;10464:3;10460:16;10453:23;;10231:250;;;;;;10489:364;;10649:67;10713:2;10708:3;10649:67;;;10642:74;;10749:66;10745:1;10740:3;10736:11;10729:87;10844:2;10839:3;10835:12;10828:19;;10635:218;;;;10862:465;;11022:67;11086:2;11081:3;11022:67;;;11015:74;;11122:66;11118:1;11113:3;11109:11;11102:87;11223:66;11218:2;11213:3;11209:12;11202:88;11318:2;11313:3;11309:12;11302:19;;11008:319;;;;11336:566;;11496:67;11560:2;11555:3;11496:67;;;11489:74;;11596:66;11592:1;11587:3;11583:11;11576:87;11697:66;11692:2;11687:3;11683:12;11676:88;11798:66;11793:2;11788:3;11784:12;11777:88;11893:2;11888:3;11884:12;11877:19;;11482:420;;;;11911:364;;12071:67;12135:2;12130:3;12071:67;;;12064:74;;12171:66;12167:1;12162:3;12158:11;12151:87;12266:2;12261:3;12257:12;12250:19;;12057:218;;;;12284:465;;12444:67;12508:2;12503:3;12444:67;;;12437:74;;12544:66;12540:1;12535:3;12531:11;12524:87;12645:66;12640:2;12635:3;12631:12;12624:88;12740:2;12735:3;12731:12;12724:19;;12430:319;;;;12758:364;;12918:67;12982:2;12977:3;12918:67;;;12911:74;;13018:66;13014:1;13009:3;13005:11;12998:87;13113:2;13108:3;13104:12;13097:19;;12904:218;;;;13131:465;;13291:67;13355:2;13350:3;13291:67;;;13284:74;;13391:66;13387:1;13382:3;13378:11;13371:87;13492:66;13487:2;13482:3;13478:12;13471:88;13587:2;13582:3;13578:12;13571:19;;13277:319;;;;13673:450;13802:4;13797:3;13793:14;13881:3;13874:5;13870:15;13864:22;13892:61;13948:3;13943;13939:13;13926:11;13892:61;;;13822:137;14028:4;14021:5;14017:16;14011:23;14040:62;14096:4;14091:3;14087:14;14074:11;14040:62;;;13969:139;13775:348;;;;14199:460;14338:4;14333:3;14329:14;14417:3;14410:5;14406:15;14400:22;14428:61;14484:3;14479;14475:13;14462:11;14428:61;;;14358:137;14564:4;14557:5;14553:16;14547:23;14576:62;14632:4;14627:3;14623:14;14610:11;14576:62;;;14505:139;14311:348;;;;14666:110;14739:31;14764:5;14739:31;;;14734:3;14727:44;14721:55;;;14783:120;14866:31;14891:5;14866:31;;;14861:3;14854:44;14848:55;;;14910:159;15011:52;15031:31;15056:5;15031:31;;;15011:52;;;15006:3;14999:65;14993:76;;;15076:405;;15250:95;15341:3;15332:6;15250:95;;;15243:102;;15356:75;15427:3;15418:6;15356:75;;;15453:2;15448:3;15444:12;15437:19;;15473:3;15466:10;;15231:250;;;;;;15488:1759;;16144:3;16133:9;16129:19;16121:27;;16195:9;16189:4;16185:20;16181:1;16170:9;16166:17;16159:47;16220:146;16361:4;16352:6;16220:146;;;16212:154;;16414:9;16408:4;16404:20;16399:2;16388:9;16384:18;16377:48;16439:146;16580:4;16571:6;16439:146;;;16431:154;;16633:9;16627:4;16623:20;16618:2;16607:9;16603:18;16596:48;16658:146;16799:4;16790:6;16658:146;;;16650:154;;16815:118;16929:2;16918:9;16914:18;16905:6;16815:118;;;16982:9;16976:4;16972:20;16966:3;16955:9;16951:19;16944:49;17007:146;17148:4;17139:6;17007:146;;;16999:154;;17164:73;17232:3;17221:9;17217:19;17208:6;17164:73;;;16115:1132;;;;;;;;;;17254:201;;17366:2;17355:9;17351:18;17343:26;;17380:65;17442:1;17431:9;17427:17;17418:6;17380:65;;;17337:118;;;;;17462:407;;17653:2;17642:9;17638:18;17630:26;;17703:9;17697:4;17693:20;17689:1;17678:9;17674:17;17667:47;17728:131;17854:4;17728:131;;;17720:139;;17624:245;;;;17876:407;;18067:2;18056:9;18052:18;18044:26;;18117:9;18111:4;18107:20;18103:1;18092:9;18088:17;18081:47;18142:131;18268:4;18142:131;;;18134:139;;18038:245;;;;18290:407;;18481:2;18470:9;18466:18;18458:26;;18531:9;18525:4;18521:20;18517:1;18506:9;18502:17;18495:47;18556:131;18682:4;18556:131;;;18548:139;;18452:245;;;;18704:407;;18895:2;18884:9;18880:18;18872:26;;18945:9;18939:4;18935:20;18931:1;18920:9;18916:17;18909:47;18970:131;19096:4;18970:131;;;18962:139;;18866:245;;;;19118:407;;19309:2;19298:9;19294:18;19286:26;;19359:9;19353:4;19349:20;19345:1;19334:9;19330:17;19323:47;19384:131;19510:4;19384:131;;;19376:139;;19280:245;;;;19532:407;;19723:2;19712:9;19708:18;19700:26;;19773:9;19767:4;19763:20;19759:1;19748:9;19744:17;19737:47;19798:131;19924:4;19798:131;;;19790:139;;19694:245;;;;19946:407;;20137:2;20126:9;20122:18;20114:26;;20187:9;20181:4;20177:20;20173:1;20162:9;20158:17;20151:47;20212:131;20338:4;20212:131;;;20204:139;;20108:245;;;;20360:213;;20478:2;20467:9;20463:18;20455:26;;20492:71;20560:1;20549:9;20545:17;20536:6;20492:71;;;20449:124;;;;;20580:493;;20810:3;20799:9;20795:19;20787:27;;20825:71;20893:1;20882:9;20878:17;20869:6;20825:71;;;20907:156;21059:2;21048:9;21044:18;21035:6;20907:156;;;20781:292;;;;;;21080:2141;;21918:3;21907:9;21903:19;21895:27;;21933:71;22001:1;21990:9;21986:17;21977:6;21933:71;;;22015:160;22171:2;22160:9;22156:18;22147:6;22015:160;;;22186:119;22300:3;22289:9;22285:19;22276:6;22186:119;;;22316;22430:3;22419:9;22415:19;22406:6;22316:119;;;22446;22560:3;22549:9;22545:19;22536:6;22446:119;;;22576;22690:3;22679:9;22675:19;22666:6;22576:119;;;22744:9;22738:4;22734:20;22728:3;22717:9;22713:19;22706:49;22769:184;22948:4;22939:6;22769:184;;;22761:192;;23002:9;22996:4;22992:20;22986:3;22975:9;22971:19;22964:49;23027:184;23206:4;23197:6;23027:184;;;23019:192;;21889:1332;;;;;;;;;;;;23228:620;;23494:3;23483:9;23479:19;23471:27;;23509:71;23577:1;23566:9;23562:17;23553:6;23509:71;;;23591:118;23705:2;23694:9;23690:18;23681:6;23591:118;;;23720;23834:2;23823:9;23819:18;23810:6;23720:118;;;23465:383;;;;;;;23855:1028;;24269:3;24258:9;24254:19;24246:27;;24284:71;24352:1;24341:9;24337:17;24328:6;24284:71;;;24366:118;24480:2;24469:9;24465:18;24456:6;24366:118;;;24495;24609:2;24598:9;24594:18;24585:6;24495:118;;;24624:119;24738:3;24727:9;24723:19;24714:6;24624:119;;;24754;24868:3;24857:9;24853:19;24844:6;24754:119;;;24240:643;;;;;;;;;24890:1644;;25532:3;25521:9;25517:19;25509:27;;25547:71;25615:1;25604:9;25600:17;25591:6;25547:71;;;25629:118;25743:2;25732:9;25728:18;25719:6;25629:118;;;25758;25872:2;25861:9;25857:18;25848:6;25758:118;;;25887:119;26001:3;25990:9;25986:19;25977:6;25887:119;;;26017;26131:3;26120:9;26116:19;26107:6;26017:119;;;26147;26261:3;26250:9;26246:19;26237:6;26147:119;;;26315:9;26309:4;26305:20;26299:3;26288:9;26284:19;26277:49;26340:184;26519:4;26510:6;26340:184;;;26332:192;;25503:1031;;;;;;;;;;;26541:547;;26743:3;26732:9;26728:19;26720:27;;26758:71;26826:1;26815:9;26811:17;26802:6;26758:71;;;26840:72;26908:2;26897:9;26893:18;26884:6;26840:72;;;26923;26991:2;26980:9;26976:18;26967:6;26923:72;;;27006;27074:2;27063:9;27059:18;27050:6;27006:72;;;26714:374;;;;;;;;27095:256;;27157:2;27151:9;27141:19;;27195:4;27187:6;27183:17;27294:6;27282:10;27279:22;27258:18;27246:10;27243:34;27240:62;27237:2;;;27315:1;27312;27305:12;27237:2;27335:10;27331:2;27324:22;27135:216;;;;;27358:277;;27536:18;27528:6;27525:30;27522:2;;;27568:1;27565;27558:12;27522:2;27597:4;27589:6;27585:17;27577:25;;27625:4;27619;27615:15;27607:23;;27459:176;;;;27642:229;;27795:18;27787:6;27784:30;27781:2;;;27827:1;27824;27817:12;27781:2;27856:4;27848:6;27844:17;27836:25;;27718:153;;;;27878:233;;28035:18;28027:6;28024:30;28021:2;;;28067:1;28064;28057:12;28021:2;28096:4;28088:6;28084:17;28076:25;;27958:153;;;;28118:258;;28261:18;28253:6;28250:30;28247:2;;;28293:1;28290;28283:12;28247:2;28337:4;28333:9;28326:4;28318:6;28314:17;28310:33;28302:41;;28366:4;28360;28356:15;28348:23;;28184:192;;;;28385:157;;28530:4;28522:6;28518:17;28507:28;;28499:43;;;;28553:125;;28665:6;28654:17;;28646:32;;;;28689:129;;28805:6;28794:17;;28786:32;;;;28829:138;;28955:4;28947:6;28943:17;28932:28;;28924:43;;;;28976:143;;29108:5;29102:12;29092:22;;29086:33;;;;29126:113;;29231:3;29221:13;;29215:24;;;;29246:117;;29355:3;29345:13;;29339:24;;;;29370:124;;29483:5;29477:12;29467:22;;29461:33;;;;29501:92;;29582:5;29576:12;29566:22;;29560:33;;;;29601:158;;29748:4;29740:6;29736:17;29725:28;;29718:41;;;;29768:137;;29894:4;29886:6;29882:17;29871:28;;29864:41;;;;29914:141;;30044:4;30036:6;30032:17;30021:28;;30014:41;;;;30064:139;;30192:4;30184:6;30180:17;30169:28;;30162:41;;;;30212:218;;30382:6;30377:3;30370:19;30419:4;30414:3;30410:14;30395:29;;30363:67;;;;;30439:151;;30581:3;30566:18;;30559:31;;;;;30599:161;;30751:3;30736:18;;30729:31;;;;;30769:161;;30921:3;30906:18;;30899:31;;;;;30939:199;;31090:6;31085:3;31078:19;31127:4;31122:3;31118:14;31103:29;;31071:67;;;;;31147:163;;31262:6;31257:3;31250:19;31299:4;31294:3;31290:14;31275:29;;31243:67;;;;;31319:145;;31455:3;31440:18;;31433:31;;;;;31472:92;;31552:5;31545:13;31538:21;31527:32;;31521:43;;;;31571:79;;31640:5;31629:16;;31623:27;;;;31657:79;;31726:5;31715:16;;31709:27;;;;31743:79;;31812:5;31801:16;;31795:27;;;;31830:145;31911:6;31906:3;31901;31888:30;31967:1;31958:6;31953:3;31949:16;31942:27;31881:94;;;;31984:268;32049:1;32056:101;32070:6;32067:1;32064:13;32056:101;;;32146:1;32141:3;32137:11;32131:18;32127:1;32122:3;32118:11;32111:39;32092:2;32089:1;32085:10;32080:15;;32056:101;;;32172:6;32169:1;32166:13;32163:2;;;32237:1;32228:6;32223:3;32219:16;32212:27;32163:2;32033:219;;;;;32260:74;;32324:5;32313:16;;32307:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 64;\n    uint256 constant n = 6;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n    uint256 constant UNITY = 9334303377689037989442018753807510978357674015322511348041267794643984346845; // primitive 2^28th root of unity modulo GROUP_ORDER (not field!)\n\n    G1Point[] gs; // warning: this and the below are not statically sized anymore\n    G1Point[] hs; // need to push to these if large anonsets are used.\n    G1Point g;\n    G1Point h;\n\n    uint256[m] twos = powers(2);\n\n    struct ZetherStatement {\n        G1Point[] CLn;\n        G1Point[] CRn;\n        G1Point[] C;\n        G1Point D;\n        G1Point[] y;\n        uint256 epoch; // or uint8?\n        G1Point u;\n    }\n\n    struct ZetherProof {\n        uint256 size; // not strictly necessary, but...?\n        G1Point A;\n        G1Point S;\n        G1Point HL;\n        G1Point HR;\n        G1Point[2] commits;\n        uint256 tauX;\n        uint256 mu;\n        uint256 t;\n        AnonProof anonProof;\n        SigmaProof sigmaProof;\n        InnerProductProof ipProof;\n    }\n\n    struct AnonProof {\n        G1Point P;\n        G1Point Q;\n        G1Point U;\n        G1Point V;\n        G1Point X;\n        G1Point Y;\n        G1Point CLnG;\n        G1Point CRnG;\n        G1Point DG;\n        G1Point gG;\n        G1Point[2][] CG; // flipping the indexing order on this, 'cause...\n        G1Point[2][] yG; // assuming this one has the same size..., N / 2 by 2,\n        uint256[2][] f; // and that this has size N - 1 by 2.\n        uint256 zP;\n        uint256 zU;\n        uint256 zX;\n    }\n\n    struct SigmaProof {\n        uint256 c;\n        uint256 sX;\n        uint256 sR;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function baseSize() external view returns (uint256 size) {\n        return gs.length;\n    }\n\n    function extendBase(uint256 size) external payable {\n        // unfortunate, but necessary. essentially, we need vector bases of arbitrary (linear) length for large anonsets...\n        // could mitigate this by using the logarithmic tricks of Groth and Kohlweiss; see also BCC+15\n        // but this would cause problems elsewhere: N log N-sized proofs and N log^2(N) prove / verify time.\n        // the increase in proof size is paradoxical: while _f_ will become smaller (log N), you'll need more correction terms\n        // thus a linear persistent space overhead is not so bad in the grand scheme, and we deem this acceptable.\n        for (uint256 i = gs.length; i < size; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function verifyTransfer(bytes32[2][] memory CLn, bytes32[2][] memory CRn, bytes32[2][] memory C, bytes32[2] memory D, bytes32[2][] memory y, uint256 epoch, bytes32[2] memory u, bytes memory proof) view public returns (bool) {\n        ZetherStatement memory statement;\n        uint256 size = y.length;\n        require(gs.length >= size, \"Inadequate stored vector base! Call extendBase and then try again.\");\n\n        statement.CLn = new G1Point[](size);\n        statement.CRn = new G1Point[](size);\n        statement.C = new G1Point[](size);\n        statement.y = new G1Point[](size);\n        for (uint256 i = 0; i < size; i++) {\n            statement.CLn[i] = G1Point(uint256(CLn[i][0]), uint256(CLn[i][1]));\n            statement.CRn[i] = G1Point(uint256(CRn[i][0]), uint256(CRn[i][1]));\n            statement.C[i] = G1Point(uint256(C[i][0]), uint256(C[i][1]));\n            statement.y[i] = G1Point(uint256(y[i][0]), uint256(y[i][1]));\n        }\n        statement.D = G1Point(uint256(D[0]), uint256(D[1]));\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[3] zs; // [z^2, z^3, z^4]\n        uint256[m] twoTimesZSquared;\n        uint256 zSum;\n        uint256 k;\n        G1Point tEval;\n        uint256 t;\n        uint256 x;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 minusC;\n        G1Point Ay;\n        G1Point AD;\n        G1Point gEpoch;\n        G1Point Au;\n        G1Point ADiff;\n        G1Point cCommit;\n        G1Point At;\n        G1Point[2][] AC;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 w;\n        uint256[2][] f;\n        G1Point D2;\n        G1Point CLn2;\n        G1Point CRn2;\n        uint256[2][2] cycler; // should need no inline declaration / initialization. should be pre-allocated\n        G1Point[2][] C2;\n        G1Point[2][] y2;\n        G1Point g2;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 uChallenge;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) view internal returns (bool) {\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.C, statement.D, statement.y, statement.epoch))).mod(), proof.A, proof.S, proof.HL, proof.HR))).mod();\n        zetherAuxiliaries.ys = powers(zetherAuxiliaries.y);\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs[0] = zetherAuxiliaries.z.mul(zetherAuxiliaries.z);\n        for (uint256 i = 1; i < 3; i++) {\n            zetherAuxiliaries.zs[i] = zetherAuxiliaries.zs[i - 1].mul(zetherAuxiliaries.z);\n        }\n        // zetherAuxiliaries.twoTimesZSquared = times(twos, zetherAuxiliaries.zSquared);\n        for (uint256 i = 0; i < m / 2; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + m / 2] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.commits))).mod();\n\n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = sumScalars(zetherAuxiliaries.ys).mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** (m / 2)).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.tEval = add(mul(proof.commits[0], zetherAuxiliaries.x), mul(proof.commits[1], zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n        zetherAuxiliaries.t = proof.t.sub(zetherAuxiliaries.k);\n\n        // begin anon proof.\n        // length equality checks for anonProof members? or during deserialization?\n        AnonProof memory anonProof = proof.anonProof;\n        AnonAuxiliaries memory anonAuxiliaries;\n        G1Point[6] memory letters = [anonProof.P, anonProof.Q, anonProof.U, anonProof.V, anonProof.X, anonProof.Y]; // only purpose is to avoid stacktoodeep\n        anonAuxiliaries.w = uint256(keccak256(abi.encode(zetherAuxiliaries.x, letters, anonProof.CLnG, anonProof.CRnG, anonProof.DG, anonProof.gG, anonProof.CG, anonProof.yG))).mod();\n        anonAuxiliaries.f = new uint256[2][](proof.size);\n        anonAuxiliaries.f[0][0] = anonAuxiliaries.w;\n        anonAuxiliaries.f[0][1] = anonAuxiliaries.w;\n        for (uint i = 1; i < proof.size; i++) {\n            anonAuxiliaries.f[i][0] = anonProof.f[i - 1][0];\n            anonAuxiliaries.f[i][1] = anonProof.f[i - 1][1];\n            anonAuxiliaries.f[0][0] = anonAuxiliaries.f[0][0].sub(anonAuxiliaries.f[i][0]);\n            anonAuxiliaries.f[0][1] = anonAuxiliaries.f[0][1].sub(anonAuxiliaries.f[i][1]);\n        }\n        G1Point memory temp;\n        for (uint256 i = 0; i < proof.size; i++) {\n            temp = add(temp, mul(gs[i], anonAuxiliaries.f[i][0]));\n            temp = add(temp, mul(hs[i], anonAuxiliaries.f[i][1])); // commutative\n        }\n\n        require(eq(add(mul(anonProof.Q, anonAuxiliaries.w), anonProof.P), add(temp, mul(h, anonProof.zP))), \"Recovery failure for Q^w * P.\");\n        for (uint i = 0; i < proof.size; i++) {\n            anonAuxiliaries.f[i][0] = anonAuxiliaries.f[i][0].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.f[i][1] = anonAuxiliaries.f[i][1].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[i][1]));\n        }\n        temp = G1Point(0, 0);\n        for (uint256 i = 0; i < proof.size; i++) { // danger... gs and hs need to be big enough.\n            temp = add(temp, mul(gs[i], anonAuxiliaries.f[i][0]));\n            temp = add(temp, mul(hs[i], anonAuxiliaries.f[i][1])); // commutative\n        }\n        require(eq(add(mul(anonProof.U, anonAuxiliaries.w), anonProof.V), add(temp, mul(h, anonProof.zU))), \"Recovery failure for U^w * V.\");\n\n        anonAuxiliaries.f[0][0] = anonAuxiliaries.w;\n        anonAuxiliaries.f[0][1] = anonAuxiliaries.w;\n        for (uint i = 1; i < proof.size; i++) { // need to recompute these. contract too large if use another variable\n            anonAuxiliaries.f[i][0] = anonProof.f[i - 1][0];\n            anonAuxiliaries.f[i][1] = anonProof.f[i - 1][1];\n            anonAuxiliaries.f[0][0] = anonAuxiliaries.f[0][0].sub(anonAuxiliaries.f[i][0]);\n            anonAuxiliaries.f[0][1] = anonAuxiliaries.f[0][1].sub(anonAuxiliaries.f[i][1]);\n        }\n\n        anonAuxiliaries.C2 = assembleConvolutions(anonAuxiliaries.f, statement.C); // will internally include _two_ fourier transforms, and split even / odd, etc.\n        anonAuxiliaries.y2 = assembleConvolutions(anonAuxiliaries.f, statement.y);\n        anonAuxiliaries.D2 = add(mul(statement.D, anonAuxiliaries.w), neg(anonProof.DG));\n        for (uint256 i = 0; i < proof.size / 2; i++) { // order of loops can be switched...\n            // could use _two_ further nested loops inside this, but...\n            for (uint256 j = 0; j < 2; j++) {\n                for (uint256 k = 0; k < 2; k++) {\n                    anonAuxiliaries.cycler[k][j] = anonAuxiliaries.cycler[k][j].add(anonAuxiliaries.f[2 * i + k][j]);\n                }\n                anonAuxiliaries.C2[i][j] = add(anonAuxiliaries.C2[i][j], neg(anonProof.CG[i][j]));\n                anonAuxiliaries.y2[i][j] = add(anonAuxiliaries.y2[i][j], neg(anonProof.yG[i][j]));\n            }\n        }\n        // replace the leftmost column with the Hadamard of the left and right columns. just do the multiplication once...\n        anonAuxiliaries.cycler[0][0] = anonAuxiliaries.cycler[0][0].mul(anonAuxiliaries.cycler[0][1]);\n        anonAuxiliaries.cycler[1][0] = anonAuxiliaries.cycler[1][0].mul(anonAuxiliaries.cycler[1][1]);\n        temp = add(mul(gs[0], anonAuxiliaries.cycler[0][0]), mul(hs[0], anonAuxiliaries.cycler[1][0]));\n\n        require(eq(add(mul(anonProof.Y, anonAuxiliaries.w), anonProof.X), add(temp, mul(h, anonProof.zX))), \"Index opposite parity check fail.\");\n\n        for (uint256 i = 0; i < proof.size; i++) {\n            anonAuxiliaries.CLn2 = add(anonAuxiliaries.CLn2, mul(statement.CLn[i], anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.CRn2 = add(anonAuxiliaries.CRn2, mul(statement.CRn[i], anonAuxiliaries.f[i][0]));\n        }\n        anonAuxiliaries.CLn2 = add(anonAuxiliaries.CLn2, neg(anonProof.CLnG));\n        anonAuxiliaries.CRn2 = add(anonAuxiliaries.CRn2, neg(anonProof.CRnG));\n\n        anonAuxiliaries.g2 = add(mul(g, anonAuxiliaries.w), neg(anonProof.gG));\n\n        SigmaProof memory sigmaProof = proof.sigmaProof;\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.minusC = sigmaProof.c.neg();\n\n        sigmaAuxiliaries.AD = add(mul(anonAuxiliaries.g2, sigmaProof.sR), mul(anonAuxiliaries.D2, sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.Ay = add(mul(anonAuxiliaries.g2, sigmaProof.sX), mul(anonAuxiliaries.y2[0][0], sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.Au = add(mul(sigmaAuxiliaries.gEpoch, sigmaProof.sX), mul(statement.u, sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.ADiff = add(mul(add(anonAuxiliaries.y2[0][0], anonAuxiliaries.y2[0][1]), sigmaProof.sR), mul(add(anonAuxiliaries.C2[0][0], anonAuxiliaries.C2[0][1]), sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.cCommit = add(add(mul(add(mul(anonAuxiliaries.C2[0][0], sigmaProof.c.neg()), mul(anonAuxiliaries.D2, sigmaProof.sX)), zetherAuxiliaries.zs[0]), mul(add(mul(anonAuxiliaries.CLn2, sigmaProof.c), mul(anonAuxiliaries.CRn2, sigmaProof.sX.neg())), zetherAuxiliaries.zs[1])), mul(add(mul(proof.HL, sigmaProof.c), mul(proof.HR, sigmaProof.sX.neg())), zetherAuxiliaries.zs[2].mul(anonAuxiliaries.w)));\n        sigmaAuxiliaries.At = add(neg(sigmaAuxiliaries.cCommit), mul(add(add(mul(g, zetherAuxiliaries.t), neg(zetherAuxiliaries.tEval)), mul(h, proof.tauX)), sigmaProof.c.mul(anonAuxiliaries.w)));\n        sigmaAuxiliaries.AC = new G1Point[2][](proof.size / 2 - 1);\n        for (uint256 i = 1; i < proof.size / 2; i++) {\n            sigmaAuxiliaries.AC[i - 1][0] = add(mul(anonAuxiliaries.y2[i][0], sigmaProof.sR), mul(anonAuxiliaries.C2[i][0], sigmaAuxiliaries.minusC));\n            sigmaAuxiliaries.AC[i - 1][1] = add(mul(anonAuxiliaries.y2[i][1], sigmaProof.sR), mul(anonAuxiliaries.C2[i][1], sigmaAuxiliaries.minusC));\n        }\n\n        uint256 challenge = uint256(keccak256(abi.encode(anonAuxiliaries.w, sigmaAuxiliaries.Ay, sigmaAuxiliaries.AD, sigmaAuxiliaries.Au, sigmaAuxiliaries.ADiff, sigmaAuxiliaries.At, sigmaAuxiliaries.AC))).mod();\n        require(challenge == proof.sigmaProof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.uChallenge = uint256(keccak256(abi.encode(sigmaProof.c, proof.t, proof.tauX, proof.mu))).mod(); // uChallenge\n        ipAuxiliaries.u = mul(g, ipAuxiliaries.uChallenge);\n        ipAuxiliaries.hPrimes = hadamard_inv(hs, zetherAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(zetherAuxiliaries.ys, zetherAuxiliaries.z), zetherAuxiliaries.twoTimesZSquared);\n\n        ipAuxiliaries.P = add(add(proof.A, mul(proof.S, zetherAuxiliaries.x)), mul(sumPoints(gs), zetherAuxiliaries.z.neg()));\n        ipAuxiliaries.P = add(neg(mul(h, proof.mu)), add(ipAuxiliaries.P, commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp)));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u, proof.t));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.uChallenge = uint256(keccak256(abi.encode(ipAuxiliaries.uChallenge, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.uChallenge; // overwrites value\n            uint256 xInv = ipAuxiliaries.uChallenge.inv();\n            ipAuxiliaries.P = add(mul(ipProof.ls[i], ipAuxiliaries.uChallenge.exp(2)), add(mul(ipProof.rs[i], xInv.exp(2)), ipAuxiliaries.P));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, G1Point[] memory base) internal view returns (G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            G1Point[] memory inverse_fft = new G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = mul(add(mul(base_fft[j], exponent_fft[j]), mul(base_fft[j + half], exponent_fft[j + half])), compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n        return result;\n    }\n\n    function fft(G1Point[] memory input, bool inverse) internal view returns (G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        G1Point[] memory even = fft(extract(input, 0), inverse);\n        G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            G1Point memory temp = mul(odd[i], omega_run);\n            result[i] = mul(add(even[i], temp), compensation);\n            result[i + size / 2] = mul(add(even[i], neg(temp)), compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(G1Point[] memory input, uint256 parity) internal pure returns (G1Point[] memory result) {\n        result = new G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.A = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.S = G1Point(slice(arr, 64), slice(arr, 96));\n        proof.HL = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.HR = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.commits = [G1Point(slice(arr, 256), slice(arr, 288)), G1Point(slice(arr, 320), slice(arr, 352))];\n        proof.t = slice(arr, 384);\n        proof.tauX = slice(arr, 416);\n        proof.mu = slice(arr, 448);\n\n        SigmaProof memory sigmaProof;\n        sigmaProof.c = slice(arr, 480);\n        sigmaProof.sX = slice(arr, 512);\n        sigmaProof.sR = slice(arr, 544);\n        proof.sigmaProof = sigmaProof;\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 576 + i * 64), slice(arr, 608 + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 576 + (n + i) * 64), slice(arr, 608 + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 576 + n * 128);\n        ipProof.b = slice(arr, 608 + n * 128);\n        proof.ipProof = ipProof;\n\n        AnonProof memory anonProof;\n        uint256 size = (arr.length - 1408 - 672) / 192;  // warning: this and the below assume that n = 6!!!\n        anonProof.P = G1Point(slice(arr, 1408), slice(arr, 1440));\n        anonProof.Q = G1Point(slice(arr, 1472), slice(arr, 1504));\n        anonProof.U = G1Point(slice(arr, 1536), slice(arr, 1568));\n        anonProof.V = G1Point(slice(arr, 1600), slice(arr, 1632));\n        anonProof.X = G1Point(slice(arr, 1664), slice(arr, 1696));\n        anonProof.Y = G1Point(slice(arr, 1728), slice(arr, 1760));\n        anonProof.CLnG = G1Point(slice(arr, 1792), slice(arr, 1824));\n        anonProof.CRnG = G1Point(slice(arr, 1856), slice(arr, 1888));\n        anonProof.DG = G1Point(slice(arr, 1920), slice(arr, 1952));\n        anonProof.gG = G1Point(slice(arr, 1984), slice(arr, 2016));\n\n        anonProof.f = new uint256[2][](size - 1);\n        for (uint256 i = 0; i < size - 1; i++) {\n            anonProof.f[i][0] = slice(arr, 2048 + 32 * i);\n            anonProof.f[i][1] = slice(arr, 2048 + (size - 1 + i) * 32);\n        }\n\n        anonProof.CG = new G1Point[2][](size / 2);\n        anonProof.yG = new G1Point[2][](size / 2);\n        for (uint256 i = 0; i < size / 2; i++) {\n            anonProof.CG[i][0] = G1Point(slice(arr, 1984 + (size + i) * 64), slice(arr, 2016 + (size + i) * 64));\n            anonProof.CG[i][1] = G1Point(slice(arr, 1984 + size * 96 + i * 64), slice(arr, 2016 + size * 96 + i * 64));\n            anonProof.yG[i][0] = G1Point(slice(arr, 1984 + size * 128 + i * 64), slice(arr, 2016 + size * 128 + i * 64));\n            anonProof.yG[i][1] = G1Point(slice(arr, 1984 + size * 160 + i * 64), slice(arr, 2016 + size * 160 + i * 64));\n            // these are tricky, and can maybe be optimized further?\n        }\n        proof.size = size;\n\n        anonProof.zP = slice(arr, 1984 + size * 192);\n        anonProof.zU = slice(arr, 2016 + size * 192);\n        anonProof.zX = slice(arr, 2048 + size * 192);\n\n        proof.anonProof = anonProof;\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamard_inv(G1Point[] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) { // killed a silly initialization with the 0th indexes. [0x00, 0x00] will be treated as the zero point anyway\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) { // warning: function totally untested!\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) { // warning: function totally untested!\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) { // warning: function totally untested!\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n        // ^^^ important: i haven't tested this, i.e. whether it agrees with ProofUtils.paddedHash(input, i) (cf. also the go version)\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {},
      "links": {},
      "address": "0x244e29801A30e791f5338D5aAFFf67678d08f052",
      "transactionHash": "0xb2e1ae42248a5b5b95cb653dcbd87bafd2f012176cac30822645c40cc30b7d78"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1d870e77a8fAA172B1Dda8e3b72f295dBeb9Aef3",
      "transactionHash": "0xfeff4bb107b4a4f9d2a7187a2a5d2adb02b7d34967cbdf6f9cf534cfd3cf0dda"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-10-28T14:29:43.293Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}