{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "C",
          "type": "bytes32[2][]"
        },
        {
          "name": "D",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2][]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2][]\"},{\"name\":\"C\",\"type\":\"bytes32[2][]\"},{\"name\":\"D\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x3b410db08d55d9540e8e795474410304be456ca3a36beb8c209019344593b267\",\"urls\":[\"bzzr://f5eaba23ec02eb7c30ce30f795aa0d7b1ae29d61d8111e2955a0f505bd1b328a\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0xbbd88d4d194130d5f591d292b959760d24b14926e1c5dc0c5721a2aa6fb988d2\",\"urls\":[\"bzzr://174b608d3a71052490df702b7214e8b04ceeab3836623658b2d841b82f750311\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610048576000357c0100000000000000000000000000000000000000000000000000000000900480631659e67d1461004d575b600080fd5b610067600480360361006291908101906149c7565b61007d565b6040516100749190614efb565b60405180910390f35b60006100876141f4565b600086519050806040519080825280602002602001820160405280156100c757816020015b6100b461423f565b8152602001906001900390816100ac5790505b5082600001819052508060405190808252806020026020018201604052801561010a57816020015b6100f761423f565b8152602001906001900390816100ef5790505b5082602001819052508060405190808252806020026020018201604052801561014d57816020015b61013a61423f565b8152602001906001900390816101325790505b5082604001819052508060405190808252806020026020018201604052801561019057816020015b61017d61423f565b8152602001906001900390816101755790505b50826080018190525060008090505b818110156103f45760408051908101604052808d838151811015156101c057fe5b9060200190602002015160006002811015156101d857fe5b60200201516001900481526020018d838151811015156101f457fe5b90602001906020020151600160028110151561020c57fe5b60200201516001900481525083600001518281518110151561022a57fe5b9060200190602002018190525060408051908101604052808c8381518110151561025057fe5b90602001906020020151600060028110151561026857fe5b60200201516001900481526020018c8381518110151561028457fe5b90602001906020020151600160028110151561029c57fe5b6020020151600190048152508360200151828151811015156102ba57fe5b9060200190602002018190525060408051908101604052808b838151811015156102e057fe5b9060200190602002015160006002811015156102f857fe5b60200201516001900481526020018b8381518110151561031457fe5b90602001906020020151600160028110151561032c57fe5b60200201516001900481525083604001518281518110151561034a57fe5b906020019060200201819052506040805190810160405280898381518110151561037057fe5b90602001906020020151600060028110151561038857fe5b602002015160019004815260200189838151811015156103a457fe5b9060200190602002015160016002811015156103bc57fe5b6020020151600190048152508360800151828151811015156103da57fe5b90602001906020020181905250808060010191505061019f565b50604080519081016040528089600060028110151561040f57fe5b602002015160019004815260200189600160028110151561042c57fe5b6020020151600190048152508260600181905250858260a0018181525050604080519081016040528086600060028110151561046457fe5b602002015160019004815260200186600160028110151561048157fe5b6020020151600190048152508260c0018190525061049d614259565b6104a6856104c3565b90506104b28382611007565b935050505098975050505050505050565b6104cb614259565b60408051908101604052806104e1846000612f4d565b81526020016104f1846020612f4d565b81525081600001819052506040805190810160405280610512846040612f4d565b8152602001610522846060612f4d565b81525081602001819052506040805190810160405280610543846080612f4d565b81526020016105538460a0612f4d565b815250816040018190525060408051908101604052806105748460c0612f4d565b81526020016105848460e0612f4d565b815250816060018190525060408051908101604052806105a684610100612f4d565b81526020016105b784610120612f4d565b815250816080018190525060408051908101604052806105d984610140612f4d565b81526020016105ea84610160612f4d565b8152508160a00181905250604080519081016040528061060c84610180612f4d565b815260200161061d846101a0612f4d565b8152508160c00181905250604080519081016040528061063f846101c0612f4d565b8152602001610650846101e0612f4d565b8152508160e00181905250600061024061086084510381151561066f57fe5b049050806040519080825280602002602001820160405280156106ac57816020015b61069961423f565b8152602001906001900390816106915790505b50826101000181905250806040519080825280602002602001820160405280156106f057816020015b6106dd61423f565b8152602001906001900390816106d55790505b508261012001819052508060405190808252806020026020018201604052801561073457816020015b61072161423f565b8152602001906001900390816107195790505b508261014001819052508060405190808252806020026020018201604052801561077857816020015b61076561423f565b81526020019060019003908161075d5790505b50826101600181905250806040519080825280602002602001820160405280156107bc57816020015b6107a961423f565b8152602001906001900390816107a15790505b508261018001819052508060405190808252806020026020018201604052801561080057816020015b6107ed61423f565b8152602001906001900390816107e55790505b50826101a001819052508060405190808252806020026020018201604052801561084457816020015b61083161423f565b8152602001906001900390816108295790505b50826101c001819052508060405190808252806020026020018201604052801561088857816020015b61087561423f565b81526020019060019003908161086d5790505b50826101e00181905250806002026040519080825280602002602001820160405280156108c45781602001602082028038833980820191505090505b5082610200018190525060008090505b81811015610c4b5760408051908101604052806108f8866040850261020001612f4d565b815260200161090e866040850261022001612f4d565b8152508361010001518281518110151561092457fe5b90602001906020020181905250604080519081016040528061094f8660408587010261020001612f4d565b81526020016109678660408587010261022001612f4d565b8152508361012001518281518110151561097d57fe5b9060200190602002018190525060408051908101604052806109ab8660408502608087026102000101612f4d565b81526020016109c68660408502608087026102200101612f4d565b815250836101400151828151811015156109dc57fe5b906020019060200201819052506040805190810160405280610a0a866040850260c087026102000101612f4d565b8152602001610a25866040850260c087026102200101612f4d565b81525083610160015182815181101515610a3b57fe5b906020019060200201819052506040805190810160405280610a6a866040850261010087026102000101612f4d565b8152602001610a86866040850261010087026102200101612f4d565b81525083610180015182815181101515610a9c57fe5b906020019060200201819052506040805190810160405280610acb866040850261014087026102000101612f4d565b8152602001610ae7866040850261014087026102200101612f4d565b815250836101a0015182815181101515610afd57fe5b906020019060200201819052506040805190810160405280610b2c866040850261018087026102000101612f4d565b8152602001610b48866040850261018087026102200101612f4d565b815250836101c0015182815181101515610b5e57fe5b906020019060200201819052506040805190810160405280610b8d86604085026101c087026102000101612f4d565b8152602001610ba986604085026101c087026102200101612f4d565b815250836101e0015182815181101515610bbf57fe5b90602001906020020181905250610be3846020830261020085026102000101612f4d565b83610200015182815181101515610bf657fe5b9060200190602002018181525050610c1b846020830261022085026102000101612f4d565b836102000151838301815181101515610c3057fe5b906020019060200201818152505080806001019150506108d4565b50600061024082029050610c63848261020001612f4d565b83610220018181525050610c7b848261022001612f4d565b83610240018181525050610c93848261024001612f4d565b836102600181815250506040805190810160405280610cb6868461026001612f4d565b8152602001610cc9868461028001612f4d565b8152508361028001819052506040805190810160405280610cee86846102a001612f4d565b8152602001610d0186846102c001612f4d565b815250836102a001819052506040805190810160405280610d2686846102e001612f4d565b8152602001610d39868461030001612f4d565b815250836102c001819052506040805190810160405280610d5e868461032001612f4d565b8152602001610d71868461034001612f4d565b815250836102e0018190525060408051908101604052806040805190810160405280610da1888661036001612f4d565b8152602001610db4888661038001612f4d565b81525081526020016040805190810160405280610dd588866103a001612f4d565b8152602001610de888866103c001612f4d565b815250815250836103000181905250610e0584826103e001612f4d565b83610320018181525050610e1d848261040001612f4d565b83610340018181525050610e35848261042001612f4d565b83610360018181525050610e4d848261044001612f4d565b83610380018181525050610e65848261046001612f4d565b836103a0018181525050610e7d848261048001612f4d565b836103c0018181525050610e9584826104a001612f4d565b836103e0018181525050610ead84826104c001612f4d565b83610400018181525050610ec584826104e001612f4d565b83610420018181525050610edd848261050001612f4d565b83610440018181525050610eef6143b7565b60008090505b6006811015610fb7576040805190810160405280610f1c8860408502876105200101612f4d565b8152602001610f348860408502876105400101612f4d565b815250826000015182600681101515610f4957fe5b60200201819052506040805190810160405280610f728860408560060102876105200101612f4d565b8152602001610f8d8860408560060102876105400101612f4d565b815250826020015182600681101515610fa257fe5b60200201819052508080600101915050610ef5565b50610fcc856080600602846105200101612f4d565b816040018181525050610fe9856080600602846105400101612f4d565b81606001818152505080846104600181905250839350505050919050565b60008061105f846000015185602001518660400151876060015188608001518960a0015160405160200161104096959493929190614e7e565b6040516020818303038152906040528051906020012060019004612f66565b90506110696143ed565b6110cc82856000015186602001518760400151886060015189608001518a60a001518b60c001518c60e001516040516020016110ad9998979695949392919061516a565b6040516020818303038152906040528051906020012060019004612f66565b81604001818152505061114481604001518561010001518661012001518761014001518861016001518961018001518a6101a001518b6101c001518c6101e001516040516020016111259998979695949392919061501a565b6040516020818303038152906040528051906020012060019004612f66565b81606001818152505060028461020001515181151561115f57fe5b04816000018181525050806000015160020a81602001818152505080600001516002026040519080825280602002602001820160405280156111bb57816020015b6111a861449c565b8152602001906001900390816111a05790505b508160c0018190525060008090505b816000015160020281101561129c57846102000151818151811015156111ec57fe5b906020019060200201518260c001518281518110151561120857fe5b90602001906020020151600160028110151561122057fe5b60200201818152505061125c8561020001518281518110151561123f57fe5b906020019060200201518360600151612f9b90919063ffffffff16565b8260c001518281518110151561126e57fe5b90602001906020020151600060028110151561128657fe5b60200201818152505080806001019150506111ca565b5060008090505b81600001516002028110156113495761133382610100015161132e6000848154811015156112cd57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508560c001518581518110151561130c57fe5b90602001906020020151600160028110151561132457fe5b6020020151612fdb565b613016565b82610100018190525080806001019150506112a3565b506113ae61136c61136286606001518460600151612fdb565b8660400151613016565b6113a98361010001516113a4600460408051908101604052908160008201548152602001600182015481525050896102200151612fdb565b613016565b61305c565b15156113ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e690614f96565b60405180910390fd5b604080519081016040528060008152602001600081525081610100018190525060008090505b8160000151600202811015611511576114fb8261010001516114f660008481548110151561143f57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250506114f16114b48760c001518781518110151561148457fe5b90602001906020020151600160028110151561149c57fe5b60200201518860600151612f9b90919063ffffffff16565b8760c00151878151811015156114c657fe5b9060200190602002015160016002811015156114de57fe5b602002015161308490919063ffffffff16565b612fdb565b613016565b8261010001819052508080600101915050611415565b5061157661153461152a86608001518460600151612fdb565b8660a00151613016565b61157183610100015161156c600460408051908101604052908160008201548152602001600182015481525050896102400151612fdb565b613016565b61305c565b15156115b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ae90614f76565b60405180910390fd5b6117306116726000808154811015156115cc57fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505061166d8460c00151856000015181518110151561161257fe5b90602001906020020151600160028110151561162a57fe5b60200201518560c00151600081518110151561164257fe5b90602001906020020151600160028110151561165a57fe5b602002015161308490919063ffffffff16565b612fdb565b61172b6000600181548110151561168557fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250506117268560c0015186600001518151811015156116cb57fe5b9060200190602002015160006002811015156116e357fe5b60200201518660c0015160008151811015156116fb57fe5b90602001906020020151600060028110151561171357fe5b602002015161308490919063ffffffff16565b612fdb565b613016565b81610100018190525061179d61175b6117518660e001518460600151612fdb565b8660c00151613016565b611798836101000151611793600460408051908101604052908160008201548152602001600182015481525050896102600151612fdb565b613016565b61305c565b15156117de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d590614f56565b60405180910390fd5b6117eb8160c001516130bb565b8160e001819052506118058160e0015186604001516131b3565b8161016001819052506118208160e0015186608001516131b3565b81610180018190525060008090505b816020015181101561191c5761189c82610120015161189788600001518481518110151561185957fe5b906020019060200201518560e001518581518110151561187557fe5b90602001906020020151600060028110151561188d57fe5b6020020151612fdb565b613016565b8261012001819052506119068261014001516119018860200151848151811015156118c357fe5b906020019060200201518560e00151858151811015156118df57fe5b9060200190602002015160006002811015156118f757fe5b6020020151612fdb565b613016565b826101400181905250808060010191505061182f565b50600181608001818152505060008090505b8160200151811015611a4b5761199c826101a0015161199784610160015160028581151561195857fe5b0481518110151561196557fe5b9060200190602002015160028581151561197b57fe5b0660028110151561198857fe5b60200201518560800151612fdb565b613016565b826101a00181905250611a07826101c00151611a028461018001516002858115156119c357fe5b048151811015156119d057fe5b906020019060200201516002858115156119e657fe5b066002811015156119f357fe5b60200201518560800151612fdb565b613016565b826101c001819052506000811115611a3e57611a348260400151836080015161308490919063ffffffff16565b8260800181815250505b808060010191505061192e565b5060018160a001818152505060008090505b8160000151811015611d8e57611aa9826101200151611aa487610100015184815181101515611a8857fe5b90602001906020020151611a9f8660a00151613469565b612fdb565b613016565b826101200181905250611af2826101400151611aed87610120015184815181101515611ad157fe5b90602001906020020151611ae88660a00151613469565b612fdb565b613016565b826101400181905250611b668261016001516000815181101515611b1257fe5b906020019060200201516000600281101515611b2a57fe5b6020020151611b6187610140015184815181101515611b4557fe5b90602001906020020151611b5c8660a00151613469565b612fdb565b613016565b8261016001516000815181101515611b7a57fe5b906020019060200201516000600281101515611b9257fe5b6020020181905250611bda826102000151611bd587610160015184815181101515611bb957fe5b90602001906020020151611bd08660a00151613469565b612fdb565b613016565b826102000181905250611c4e8261018001516000815181101515611bfa57fe5b906020019060200201516000600281101515611c1257fe5b6020020151611c4987610180015184815181101515611c2d57fe5b90602001906020020151611c448660a00151613469565b612fdb565b613016565b8261018001516000815181101515611c6257fe5b906020019060200201516000600281101515611c7a57fe5b6020020181905250611cc2826101e00151611cbd876101a0015184815181101515611ca157fe5b90602001906020020151611cb88660a00151613469565b612fdb565b613016565b826101e00181905250611d0b826101a00151611d06876101c0015184815181101515611cea57fe5b90602001906020020151611d018660a00151613469565b612fdb565b613016565b826101a00181905250611d54826101c00151611d4f876101e0015184815181101515611d3357fe5b90602001906020020151611d4a8660a00151613469565b612fdb565b613016565b826101c00181905250611d7882606001518360a0015161308490919063ffffffff16565b8260a00181815250508080600101915050611a5d565b50611daf816102000151611daa87606001518460a00151612fdb565b613016565b816102000181905250611df4816101e00151611def6002604080519081016040529081600082015481526020016001820154815250508460a00151612fdb565b613016565b816101e00181905250611e056144be565b611e588260600151866102800151876102a00151886102c00151896102e00151604051602001611e39959493929190615116565b6040516020818303038152906040528051906020012060019004612f66565b816000018181525050611e6e8160000151613495565b8160200181905250611ead8160000151604051602001611e8e9190614fd6565b6040516020818303038152906040528051906020012060019004612f66565b8160400181815250506040805190810160405280611ed96002846040015161353290919063ffffffff16565b8152602001611ef66003846040015161353290919063ffffffff16565b8152508160600181905250611f588160400151611f4a83606001516001600281101515611f1f57fe5b602002015184606001516000600281101515611f3757fe5b602002015161359f90919063ffffffff16565b61308490919063ffffffff16565b8160a0018181525050611ffb611fa18260a00151611f9360026040811515611f7c57fe5b0460020a8560a0015161308490919063ffffffff16565b612f9b90919063ffffffff16565b611fed611fd284606001516000600281101515611fba57fe5b60200201518560400151612f9b90919063ffffffff16565b611fdf85602001516135d6565b61308490919063ffffffff16565b612f9b90919063ffffffff16565b81610100018181525050612022816101000151866103200151612f9b90919063ffffffff16565b8160e001818152505060008090505b6002604081151561203e57fe5b048110156120f2576120738160020a8360600151600060028110151561206057fe5b602002015161308490919063ffffffff16565b82608001518260408110151561208557fe5b6020020181815250506120bb8160020a836060015160016002811015156120a857fe5b602002015161308490919063ffffffff16565b8260800151600260408115156120cd57fe5b0483016040811015156120dc57fe5b6020020181815250508080600101915050612031565b506121318160400151866103000151604051602001612112929190614ff1565b6040516020818303038152906040528051906020012060019004612f66565b8160c00181815250506121a4612163866103000151600060028110151561215457fe5b60200201518360c00151612fdb565b61219f876103000151600160028110151561217a57fe5b602002015161219a8560c001518660c0015161308490919063ffffffff16565b612fdb565b613016565b8161012001819052506121b561452a565b6122186121cc846101e00151886103a00151612fdb565b61221385610180015160008151811015156121e357fe5b9060200190602002015160006002811015156121fb57fe5b602002015161220e8a6103800151613469565b612fdb565b613016565b8160200181905250612272612252600260408051908101604052908160008201548152602001600182015481525050886103c00151612fdb565b61226d89606001516122688a6103800151613469565b612fdb565b613016565b81604001819052506122bd6040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508860a00151613621565b81606001819052506122fb6122db8260600151886103a00151612fdb565b6122f68960c001516122f18a6103800151613469565b612fdb565b613016565b816080018190525061233b61231a846101c00151886103c00151612fdb565b612336856101a001516123318a6103800151613469565b612fdb565b613016565b8160c0018190525061245e6123e56123c861236e6123638761020001518b6102a00151613016565b8a6103a00151612fdb565b6123c36123b0886101600151600081518110151561238857fe5b9060200190602002015160006002811015156123a057fe5b60200201518c6102800151613016565b6123be8c6103800151613469565b612fdb565b613016565b846060015160006002811015156123db57fe5b6020020151612fdb565b61245961243c61240d6124028861014001518c6102e00151613016565b8b6103a00151612fdb565b6124376124248961012001518d6102c00151613016565b6124328d6103800151613469565b612fdb565b613016565b8560600151600160028110151561244f57fe5b6020020151612fdb565b613016565b8160e001819052506125126125086124e76124d46124a06002604080519081016040529081600082015481526020016001820154815250508760e00151612fdb565b6124cf6004604080519081016040529081600082015481526020016001820154815250508c6103400151612fdb565b613016565b6124e2866101200151613691565b613016565b6125038660a001518a610380015161308490919063ffffffff16565b612fdb565b8260e00151613016565b8161010001819052506125b561254d600260408051908101604052908160008201548152602001600182015481525050886103e00151612fdb565b6125b06125648661020001518a6103a00151612fdb565b6125ab876101600151600081518110151561257b57fe5b90602001906020020151600060028110151561259357fe5b60200201516125a68c6103800151613469565b612fdb565b613016565b613016565b81610120018190525061262d6125f0600260408051908101604052908160008201548152602001600182015481525050886104000151612fdb565b6126286126078661014001518a6103a00151612fdb565b61262387610120015161261e8c6103800151613469565b612fdb565b613016565b613016565b8161014001819052506126a5612668600460408051908101604052908160008201548152602001600182015481525050886104200151612fdb565b6126a061267f896102a001518a6103a00151612fdb565b61269b8a61028001516126968c6103800151613469565b612fdb565b613016565b613016565b81610160018190525061271d6126e0600460408051908101604052908160008201548152602001600182015481525050886104400151612fdb565b6127186126f7896102e001518a6103a00151612fdb565b6127138a6102c0015161270e8c6103800151613469565b612fdb565b613016565b613016565b8161018001819052506127988260c001518260200151836040015184608001518560c001518661010001518761012001518861014001518961016001518a61018001516040516020016127799a999897969594939291906151fa565b6040516020818303038152906040528051906020012060019004612f66565b81600001818152505085610380015181600001511415156127ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127e590614f36565b60405180910390fd5b6127f66145db565b61282d826000015160405160200161280e9190614fd6565b6040516020818303038152906040528051906020012060019004612f66565b8160800181815250506128646002604080519081016040529081600082015481526020016001820154815250508260800151612fdb565b81600001819052506128e56001805480602002602001604051908101604052809291908181526020016000905b828210156128d757838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612891565b50505050846020015161370a565b816020018190525061290c61290284602001518560400151613786565b84608001516137ed565b81604001819052506129de6129c761293989600001516129348b602001518860c00151612fdb565b613016565b6129c26129b06000805480602002602001604051908101604052809291908181526020016000905b828210156129a757838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612961565b50505050613866565b6129bd8860400151613469565b612fdb565b613016565b6129d9836020015184604001516138b3565b613016565b8160600181905250612a2a8160600151612a25600460408051908101604052908160008201548152602001600182015481525050612a208b6103600151613469565b612fdb565b613016565b8160600181905250612a528160600151612a4d83600001518a6103200151612fdb565b613016565b8160600181905250612a626143b7565b876104600151905060008090505b6006811015612baf57612ae08360800151836000015183600681101515612a9357fe5b6020020151846020015184600681101515612aaa57fe5b6020020151604051602001612ac1939291906150df565b6040516020818303038152906040528051906020012060019004612f66565b83608001818152505082608001518360a0015182600681101515612b0057fe5b6020020181815250506000612b188460800151613917565b9050612b998460600151612b94612b5c866000015186600681101515612b3a57fe5b6020020151612b5760028a6080015161353290919063ffffffff16565b612fdb565b612b8f876020015187600681101515612b7157fe5b6020020151612b8a60028861353290919063ffffffff16565b612fdb565b613016565b613016565b8460600181905250508080600101915050612a70565b5060018260c001516000604081101515612bc557fe5b60200201818152505060008090505b6006811015612c4657612c1d8360a0015182600681101515612bf257fe5b60200201518460c001516000604081101515612c0a57fe5b602002015161308490919063ffffffff16565b8360c001516000604081101515612c3057fe5b6020020181815250508080600101915050612bd4565b50612c4f61463e565b612c6f8360c001516000604081101515612c6557fe5b6020020151613917565b8360c001516000604081101515612c8257fe5b60200201818152505060008090505b60026040811515612c9e57fe5b04811015612db15760008090505b6040828260019060020a02011015612da55760008160019060020a02830190508381604081101515612cda57fe5b60200201511515612d99576000612d328760a0015184600160060303600681101515612d0257fe5b60200201518860a0015185600160060303600681101515612d1f57fe5b602002015161308490919063ffffffff16565b9050612d5d818860c0015186604081101515612d4a57fe5b602002015161308490919063ffffffff16565b8760c0015183604081101515612d6f57fe5b60200201818152505060018583604081101515612d8857fe5b602002019015159081151581525050505b50806001019050612cac565b50806001019050612c91565b50612dba614662565b612dc2614662565b60008090505b6040811015612e8b57612e3583612e30600084815481101515612de757fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508960c0015185604081101515612e2657fe5b6020020151612fdb565b613016565b9250612e7c82612e77886020015184604081101515612e5057fe5b60200201518960c0015185600160400303604081101515612e6d57fe5b6020020151612fdb565b613016565b91508080600101915050612dc8565b50612e94614662565b612ee8612ebb612ea8858860400151612fdb565b612eb6858960600151612fdb565b613016565b612ee38860000151612ede89606001518a6040015161308490919063ffffffff16565b612fdb565b613016565b9050612ef886606001518261305c565b1515612f39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3090614fb6565b60405180910390fd5b60019a505050505050505050505092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182811515612f9357fe5b069050919050565b600081831015612fcf5782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010301612fd3565b8183035b905092915050565b612fe3614662565b604051835181526020840151602082015282604082015260408260608360075afa151561300f57600080fd5b5092915050565b61301e614662565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561305557600080fd5b5092915050565b60008160000151836000015114801561307c575081602001518360200151145b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156130b057fe5b828409905092915050565b60606000600283518115156130cc57fe5b04905060008160020a90508060405190808252806020026020018201604052801561311157816020015b6130fe61449c565b8152602001906001900390816130f65790505b50925060008090505b60028110156131ab57606061313984830285600185010260018961394d565b905060008090505b8381101561319c57818181518110151561315757fe5b90602001906020020151868281518110151561316f57fe5b906020019060200201518460028110151561318657fe5b6020020181815250508080600101915050613141565b5050808060010191505061311a565b505050919050565b606060008351905060006002828115156131c957fe5b0490508060405190808252806020026020018201604052801561320657816020015b6131f361467c565b8152602001906001900390816131eb5790505b5092506060613216856000613b02565b90506060836040519080825280602002602001820160405280156132495781602001602082028038833980820191505090505b50905060008090505b600281101561345e5760008090505b858110156132c957888682880381151561327757fe5b0681518110151561328457fe5b906020019060200201518260028110151561329b57fe5b602002015183828151811015156132ae57fe5b90602001906020020181815250508080600101915050613261565b506132d382613d63565b915060608460405190808252806020026020018201604052801561331157816020015b6132fe61423f565b8152602001906001900390816132f65790505b50905060006002905061332381613917565b905060008090505b868110156133e0576133b86133b2613371888481518110151561334a57fe5b90602001906020020151888581518110151561336257fe5b90602001906020020151612fdb565b6133ad898b860181518110151561338457fe5b90602001906020020151898c870181518110151561339e57fe5b90602001906020020151612fdb565b613016565b83612fdb565b83828151811015156133c657fe5b90602001906020020181905250808060010191505061332b565b506133ec826001613b02565b915060008090505b8681101561344e57828181518110151561340a57fe5b90602001906020020151898281518110151561342257fe5b906020019060200201518560028110151561343957fe5b602002018190525080806001019150506133f4565b5050508080600101915050613252565b505050505092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b61349d6146aa565b60018160006040811015156134ae57fe5b602002018181525050818160016040811015156134c757fe5b6020020181815250506000600290505b604081101561352c576135088383600184036040811015156134f557fe5b602002015161308490919063ffffffff16565b828260408110151561351657fe5b60200201818152505080806001019150506134d7565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561359357600080fd5b80519250505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156135cb57fe5b828408905092915050565b600080600090505b604081101561361b5761360c83826040811015156135f857fe5b60200201518361359f90919063ffffffff16565b915080806001019150506135de565b50919050565b613629614662565b6136897f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001613660929190614e56565b604051602081830303815290604052805190602001206001900481151561368357fe5b06613f8b565b905092915050565b613699614662565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156136dd57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6137126146ce565b60008090505b604081101561377f5761375c848281518110151561373257fe5b90602001906020020151613757858460408110151561374d57fe5b6020020151613917565b612fdb565b828260408110151561376a57fe5b60200201819052508080600101915050613718565b5092915050565b61378e6146aa565b60008090505b60408110156137e6576137c28385836040811015156137af57fe5b602002015161308490919063ffffffff16565b82826040811015156137d057fe5b6020020181815250508080600101915050613794565b5092915050565b6137f56146aa565b60008090505b604081101561385f5761383b838260408110151561381557fe5b6020020151858360408110151561382857fe5b602002015161359f90919063ffffffff16565b828260408110151561384957fe5b60200201818152505080806001019150506137fb565b5092915050565b61386e614662565b60008090505b60408110156138ad5761389e82848381518110151561388f57fe5b90602001906020020151613016565b91508080600101915050613874565b50919050565b6138bb614662565b60008090505b604081101561391057613901826138fc86846040811015156138df57fe5b602002015186856040811015156138f257fe5b6020020151612fdb565b613016565b915080806001019150506138c1565b5092915050565b60006139468260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103613532565b9050919050565b6060600085850360020a9050806040519080825280602002602001820160405280156139885781602001602082028038833980820191505090505b509150858514156139ba57838260008151811015156139a357fe5b906020019060200201818152505081915050613afa565b6001850394506060613a0a8787613a04878a8151811015156139d857fe5b9060200190602002015160006002811015156139f057fe5b60200201518961308490919063ffffffff16565b8761394d565b90506060613a568888613a50888b815181101515613a2457fe5b906020019060200201516001600281101515613a3c57fe5b60200201518a61308490919063ffffffff16565b8861394d565b905060008090505b600284811515613a6a57fe5b04811015613af5578281815181101515613a8057fe5b906020019060200201518582815181101515613a9857fe5b90602001906020020181815250508181815181101515613ab457fe5b9060200190602002015185600286811515613acb57fe5b048301815181101515613ada57fe5b90602001906020020181815250508080600101915050613a5e565b505050505b949350505050565b60606000835190506001811415613b1c5783915050613d5d565b6000600282811515613b2a57fe5b06141515613b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b6490614f16565b60405180910390fd5b6000613bb1826310000000811515613b8157fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd61353290919063ffffffff16565b90506000600190508415613bcf57613bc882613917565b9150600290505b613bd881613917565b90506060613bf0613bea88600061402b565b87613b02565b90506060613c08613c0289600161402b565b88613b02565b905060006001905085604051908082528060200260200182016040528015613c4a57816020015b613c3761423f565b815260200190600190039081613c2f5790505b50965060008090505b600287811515613c5f57fe5b04811015613d5557613c6f614662565b613c908483815181101515613c8057fe5b9060200190602002015184612fdb565b9050613cbc613cb68684815181101515613ca657fe5b9060200190602002015183613016565b87612fdb565b8983815181101515613cca57fe5b90602001906020020181905250613d09613d038684815181101515613ceb57fe5b90602001906020020151613cfe84613691565b613016565b87612fdb565b8960028a811515613d1657fe5b048401815181101515613d2557fe5b90602001906020020181905250613d45878461308490919063ffffffff16565b9250508080600101915050613c53565b505050505050505b92915050565b60606000825190506001811415613d7d5782915050613f86565b6000600282811515613d8b57fe5b06141515613dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613dc590614f16565b60405180910390fd5b6000613e12826310000000811515613de257fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd61353290919063ffffffff16565b90506060613e29613e248660006140de565b613d63565b90506060613e40613e3b8760016140de565b613d63565b905060006001905084604051908082528060200260200182016040528015613e775781602001602082028038833980820191505090505b50955060008090505b600286811515613e8c57fe5b04811015613f7f576000613ec0838584815181101515613ea857fe5b9060200190602002015161308490919063ffffffff16565b9050613eec818684815181101515613ed457fe5b9060200190602002015161359f90919063ffffffff16565b8883815181101515613efa57fe5b9060200190602002018181525050613f32818684815181101515613f1a57fe5b90602001906020020151612f9b90919063ffffffff16565b88600289811515613f3f57fe5b048401815181101515613f4e57fe5b9060200190602002018181525050613f6f868461308490919063ffffffff16565b9250508080600101915050613e80565b5050505050505b919050565b613f93614662565b60005b60011561400e5760006003613fac856003614187565b019050613fe881600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515613fe257fe5b04614187565b915080613ff6836002614187565b1415614002575061400e565b60018401935050613f96565b604080519081016040528084815260200182815250915050919050565b60606002835181151561403a57fe5b0460405190808252806020026020018201604052801561407457816020015b61406161423f565b8152602001906001900390816140595790505b50905060008090505b6002845181151561408a57fe5b048110156140d757838382600202018151811015156140a557fe5b9060200190602002015182828151811015156140bd57fe5b90602001906020020181905250808060010191505061407d565b5092915050565b6060600283518115156140ed57fe5b0460405190808252806020026020018201604052801561411c5781602001602082028038833980820191505090505b50905060008090505b6002845181151561413257fe5b04811015614180578383826002020181518110151561414d57fe5b90602001906020020151828281518110151561416557fe5b90602001906020020181815250508080600101915050614125565b5092915050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156141e857600080fd5b80519250505092915050565b6101206040519081016040528060608152602001606081526020016060815260200161421e61423f565b8152602001606081526020016000815260200161423961423f565b81525090565b604080519081016040528060008152602001600081525090565b6109806040519081016040528061426e61423f565b815260200161427b61423f565b815260200161428861423f565b815260200161429561423f565b81526020016142a261423f565b81526020016142af61423f565b81526020016142bc61423f565b81526020016142c961423f565b815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200161432a61423f565b815260200161433761423f565b815260200161434461423f565b815260200161435161423f565b815260200161435e61467c565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016143b16146fd565b81525090565b610340604051908101604052806143cc614733565b81526020016143d9614733565b815260200160008152602001600081525090565b61030060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081526020016060815260200161443a61423f565b815260200161444761423f565b815260200161445461423f565b8152602001606081526020016060815260200161446f61423f565b815260200161447c61423f565b815260200161448961423f565b815260200161449661423f565b81525090565b6040805190810160405280600290602082028038833980820191505090505090565b61114060405190810160405280600081526020016144da614762565b8152602001600081526020016144ee61449c565b81526020016144fb614762565b81526020016000815260200160008152602001600081526020016000815260200161452461423f565b81525090565b610320604051908101604052806000815260200161454661423f565b815260200161455361423f565b815260200161456061423f565b815260200161456d61423f565b815260200161457a61423f565b815260200161458761423f565b815260200161459461423f565b81526020016145a161423f565b81526020016145ae61423f565b81526020016145bb61423f565b81526020016145c861423f565b81526020016145d561423f565b81525090565b612160604051908101604052806145f061423f565b81526020016145fd614786565b815260200161460a614762565b815260200161461761423f565b81526020016000815260200161462b6147b5565b8152602001614638614762565b81525090565b61080060405190810160405280604090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6080604051908101604052806002905b61469461423f565b81526020019060019003908161468c5790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6146e761423f565b8152602001906001900390816146df5790505090565b61034060405190810160405280614712614733565b815260200161471f614733565b815260200160008152602001600081525090565b610180604051908101604052806006905b61474c61423f565b8152602001906001900390816147445790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b61479f61423f565b8152602001906001900390816147975790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b600082601f83011215156147eb57600080fd5b81356147fe6147f9826152c6565b615299565b9150818183526020840193506020810190508385604084028201111561482357600080fd5b60005b838110156148535781614839888261485d565b845260208401935060408301925050600181019050614826565b5050505092915050565b600082601f830112151561487057600080fd5b600261488361487e826152ee565b615299565b9150818385602084028201111561489957600080fd5b60005b838110156148c957816148af8882614949565b84526020840193506020830192505060018101905061489c565b5050505092915050565b600082601f83011215156148e657600080fd5b60026148f96148f482615310565b615299565b9150818385602084028201111561490f57600080fd5b60005b8381101561493f57816149258882614949565b845260208401935060208301925050600181019050614912565b5050505092915050565b600061495582356153fe565b905092915050565b600082601f830112151561497057600080fd5b813561498361497e82615332565b615299565b9150808252602083016020830185838301111561499f57600080fd5b6149aa838284615412565b50505092915050565b60006149bf8235615408565b905092915050565b600080600080600080600080610140898b0312156149e457600080fd5b600089013567ffffffffffffffff8111156149fe57600080fd5b614a0a8b828c016147d8565b985050602089013567ffffffffffffffff811115614a2757600080fd5b614a338b828c016147d8565b975050604089013567ffffffffffffffff811115614a5057600080fd5b614a5c8b828c016147d8565b9650506060614a6d8b828c016148d3565b95505060a089013567ffffffffffffffff811115614a8a57600080fd5b614a968b828c016147d8565b94505060c0614aa78b828c016149b3565b93505060e0614ab88b828c016148d3565b92505061012089013567ffffffffffffffff811115614ad657600080fd5b614ae28b828c0161495d565b9150509295985092959890939650565b6000614afe8383614dc3565b60408301905092915050565b614b1381615375565b614b1d81846153b0565b9250614b288261535e565b60005b82811015614b5657614b3e858351614af2565b9450614b4982615396565b9150600181019050614b2b565b5050505050565b6000614b6882615380565b614b7281856153bb565b9350614b7d83615368565b60005b82811015614bab57614b93868351614af2565b9550614b9e826153a3565b9150600181019050614b80565b50849250505092915050565b614bc0816153e8565b82525050565b6000614bd18261538b565b614bdb81856153dd565b9350614beb818560208601615421565b80840191505092915050565b6000614c04601f836153cc565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b6000614c44602a836153cc565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b6000614caa601d836153cc565b91507f5265636f76657279206661696c75726520666f7220465e77202a20452e0000006000830152602082019050919050565b6000614cea601d836153cc565b91507f5265636f76657279206661696c75726520666f7220435e77202a20442e0000006000830152602082019050919050565b6000614d2a601d836153cc565b91507f5265636f76657279206661696c75726520666f7220425e77202a20412e0000006000830152602082019050919050565b6000614d6a6025836153cc565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b604082016000820151614dd96000850182614e21565b506020820151614dec6020850182614e21565b50505050565b604082016000820151614e086000850182614e21565b506020820151614e1b6020850182614e21565b50505050565b614e2a816153f4565b82525050565b614e39816153f4565b82525050565b614e50614e4b826153f4565b615454565b82525050565b6000614e628285614bc6565b9150614e6e8284614e3f565b6020820191508190509392505050565b600060e0820190508181036000830152614e988189614b5d565b90508181036020830152614eac8188614b5d565b90508181036040830152614ec08187614b5d565b9050614ecf6060830186614df2565b81810360a0830152614ee18185614b5d565b9050614ef060c0830184614e30565b979650505050505050565b6000602082019050614f106000830184614bb7565b92915050565b60006020820190508181036000830152614f2f81614bf7565b9050919050565b60006020820190508181036000830152614f4f81614c37565b9050919050565b60006020820190508181036000830152614f6f81614c9d565b9050919050565b60006020820190508181036000830152614f8f81614cdd565b9050919050565b60006020820190508181036000830152614faf81614d1d565b9050919050565b60006020820190508181036000830152614fcf81614d5d565b9050919050565b6000602082019050614feb6000830184614e30565b92915050565b600060a0820190506150066000830185614e30565b6150136020830184614b0a565b9392505050565b600061012082019050615030600083018c614e30565b8181036020830152615042818b614b5d565b90508181036040830152615056818a614b5d565b9050818103606083015261506a8189614b5d565b9050818103608083015261507e8188614b5d565b905081810360a08301526150928187614b5d565b905081810360c08301526150a68186614b5d565b905081810360e08301526150ba8185614b5d565b90508181036101008301526150cf8184614b5d565b90509a9950505050505050505050565b600060a0820190506150f46000830186614e30565b6151016020830185614df2565b61510e6060830184614df2565b949350505050565b60006101208201905061512c6000830188614e30565b6151396020830187614df2565b6151466060830186614df2565b61515360a0830185614df2565b61516060e0830184614df2565b9695505050505050565b600061022082019050615180600083018c614e30565b61518d602083018b614df2565b61519a606083018a614df2565b6151a760a0830189614df2565b6151b460e0830188614df2565b6151c2610120830187614df2565b6151d0610160830186614df2565b6151de6101a0830185614df2565b6151ec6101e0830184614df2565b9a9950505050505050505050565b600061026082019050615210600083018d614e30565b61521d602083018c614df2565b61522a606083018b614df2565b61523760a083018a614df2565b61524460e0830189614df2565b615252610120830188614df2565b615260610160830187614df2565b61526e6101a0830186614df2565b61527c6101e0830185614df2565b61528a610220830184614df2565b9b9a5050505050505050505050565b6000604051905081810181811067ffffffffffffffff821117156152bc57600080fd5b8060405250919050565b600067ffffffffffffffff8211156152dd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561530557600080fd5b602082029050919050565b600067ffffffffffffffff82111561532757600080fd5b602082029050919050565b600067ffffffffffffffff82111561534957600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000602082019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561543f578082015181840152602081019050615424565b8381111561544e576000848401525b50505050565b600081905091905056fea265627a7a72305820a241c0aa8af863b39fdad9b018dd2ef019258322911079d187503547662c02bf6c6578706572696d656e74616cf50037",
  "sourceMap": "81:28218:5:-;;;1854:208;8:9:-1;5:2;;;30:1;27;20:12;5:2;1854:208:5;1889:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1885:1;:16;;;;;;;;;;;;;;;;;;;1915:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1911:1;:16;;;;;;;;;;;;;;;;;;;1942:9;1954:1;1942:13;;1937:119;162:2;1957:1;:5;1937:119;;;1983:2;1991:15;;;;;;;;;;;;;;;;;;;2004:1;1991:7;;;:15;;;:::i;:::-;1983:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1983:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:2;2029:15;;;;;;;;;;;;;;;;;;;2042:1;2029:7;;;:15;;;:::i;:::-;2021:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2021:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1964:3;;;;;;;1937:119;;;;81:28218;;27943:167;28004:14;;:::i;:::-;28037:66;229:77;28080:5;28063:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28063:23:5;;;28053:34;;;;;;28045:43;;;:57;;;;;;;;28037:7;;;:66;;;:::i;:::-;28030:73;;27943:167;;;:::o;28116:181::-;28188:14;;:::i;:::-;28221:69;229:77;28264:5;28271:1;28247:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28247:26:5;;;28237:37;;;;;;28229:46;;;:60;;;;;;;;28221:7;;;:69;;;:::i;:::-;28214:76;;28116:181;;;;:::o;27488:449::-;27542:14;;:::i;:::-;27568:9;27587:311;27594:4;27587:311;;;27614:16;27653:1;27633:17;27642:4;27648:1;27633:8;;;:17;;;:::i;:::-;:21;27614:40;;27740:41;27749:8;27779:1;27774;229:77;27760:15;27759:21;;;;;;;;27740:8;;;:41;;;:::i;:::-;27736:45;;27817:8;27799:14;27808:1;27811;27799:8;;;:14;;;:::i;:::-;:26;27795:70;;;27845:5;;;27795:70;27886:1;27878:9;;;;27587:311;;;;27914:16;;;;;;;;;27922:4;27914:16;;;;27928:1;27914:16;;;27907:23;;;27488:449;;;:::o;26872:610::-;26945:14;26996:13;229:77;26996:27;;27071:4;27065:11;27099:4;27096:1;27089:15;27138:4;27131;27128:1;27124:12;27117:26;27177:4;27170;27167:1;27163:12;27156:26;27216:4;27209;27206:1;27202:12;27195:26;27255:8;27248:4;27245:1;27241:12;27234:30;27298:5;27291:4;27288:1;27284:12;27277:27;27361:4;27358:1;27352:4;27349:1;27343:4;27338:3;27327:39;27320:47;27317:2;;;27419:1;27416;27409:12;27317:2;27464:1;27458:8;27448:18;;27042:434;;;;;;:::o;81:28218::-;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:28218:5;;;;;;;",
  "deployedSourceMap": "81:28218:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:28218:5;;;;;;;;;;;;;;;;;;;;2068:1109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2286:4;2302:32;;:::i;:::-;2344:12;2359:1;:8;2344:23;;2408:4;2394:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2378:9;:13;;:35;;;;2453:4;2439:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2423:9;:13;;:35;;;;2496:4;2482:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2468:9;:11;;:33;;;;2539:4;2525:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2511:9;:11;;:33;;;;2559:9;2571:1;2559:13;;2554:354;2578:4;2574:1;:8;2554:354;;;2622:47;;;;;;;;;2638:3;2642:1;2638:6;;;;;;;;;;;;;;;;;;2645:1;2638:9;;;;;;;;;;;;;2630:18;;;2622:47;;;;2658:3;2662:1;2658:6;;;;;;;;;;;;;;;;;;2665:1;2658:9;;;;;;;;;;;;;2650:18;;;2622:47;;;2603:9;:13;;;2617:1;2603:16;;;;;;;;;;;;;;;;;:66;;;;2702:47;;;;;;;;;2718:3;2722:1;2718:6;;;;;;;;;;;;;;;;;;2725:1;2718:9;;;;;;;;;;;;;2710:18;;;2702:47;;;;2738:3;2742:1;2738:6;;;;;;;;;;;;;;;;;;2745:1;2738:9;;;;;;;;;;;;;2730:18;;;2702:47;;;2683:9;:13;;;2697:1;2683:16;;;;;;;;;;;;;;;;;:66;;;;2780:43;;;;;;;;;2796:1;2798;2796:4;;;;;;;;;;;;;;;;;;2801:1;2796:7;;;;;;;;;;;;;2788:16;;;2780:43;;;;2814:1;2816;2814:4;;;;;;;;;;;;;;;;;;2819:1;2814:7;;;;;;;;;;;;;2806:16;;;2780:43;;;2763:9;:11;;;2775:1;2763:14;;;;;;;;;;;;;;;;;:60;;;;2854:43;;;;;;;;;2870:1;2872;2870:4;;;;;;;;;;;;;;;;;;2875:1;2870:7;;;;;;;;;;;;;2862:16;;;2854:43;;;;2888:1;2890;2888:4;;;;;;;;;;;;;;;;;;2893:1;2888:7;;;;;;;;;;;;;2880:16;;;2854:43;;;2837:9;:11;;;2849:1;2837:14;;;;;;;;;;;;;;;;;:60;;;;2584:3;;;;;;;2554:354;;;;2931:37;;;;;;;;;2947:1;2949;2947:4;;;;;;;;;;;;;2939:13;;;2931:37;;;;2962:1;2964;2962:4;;;;;;;;;;;;;2954:13;;;2931:37;;;2917:9;:11;;:51;;;;2996:5;2978:9;:15;;:23;;;;;3025:37;;;;;;;;;3041:1;3043;3041:4;;;;;;;;;;;;;3033:13;;;3025:37;;;;3056:1;3058;3056:4;;;;;;;;;;;;;3048:13;;;3025:37;;;3011:9;:11;;:51;;;;3072:30;;:::i;:::-;3105:18;3117:5;3105:11;:18::i;:::-;3072:51;;3140:30;3147:9;3158:11;3140:6;:30::i;:::-;3133:37;;;;;2068:1109;;;;;;;;;;:::o;20137:3712::-;20199:24;;:::i;:::-;20246:38;;;;;;;;;20254:13;20260:3;20265:1;20254:5;:13::i;:::-;20246:38;;;;20269:14;20275:3;20280:2;20269:5;:14::i;:::-;20246:38;;;20235:5;:8;;:49;;;;20305:39;;;;;;;;;20313:14;20319:3;20324:2;20313:5;:14::i;:::-;20305:39;;;;20329:14;20335:3;20340:2;20329:5;:14::i;:::-;20305:39;;;20294:5;:8;;:50;;;;20364:41;;;;;;;;;20372:15;20378:3;20383;20372:5;:15::i;:::-;20364:41;;;;20389:15;20395:3;20400;20389:5;:15::i;:::-;20364:41;;;20354:5;:7;;:51;;;;20425:41;;;;;;;;;20433:15;20439:3;20444;20433:5;:15::i;:::-;20425:41;;;;20450:15;20456:3;20461;20450:5;:15::i;:::-;20425:41;;;20415:5;:7;;:51;;;;20486:41;;;;;;;;;20494:15;20500:3;20505;20494:5;:15::i;:::-;20486:41;;;;20511:15;20517:3;20522;20511:5;:15::i;:::-;20486:41;;;20476:5;:7;;:51;;;;20547:41;;;;;;;;;20555:15;20561:3;20566;20555:5;:15::i;:::-;20547:41;;;;20572:15;20578:3;20583;20572:5;:15::i;:::-;20547:41;;;20537:5;:7;;:51;;;;20608:41;;;;;;;;;20616:15;20622:3;20627;20616:5;:15::i;:::-;20608:41;;;;20633:15;20639:3;20644;20633:5;:15::i;:::-;20608:41;;;20598:5;:7;;:51;;;;20669:41;;;;;;;;;20677:15;20683:3;20688;20677:5;:15::i;:::-;20669:41;;;;20694:15;20700:3;20705;20694:5;:15::i;:::-;20669:41;;;20659:5;:7;;:51;;;;20721:9;20755:3;20747:4;20734:3;:10;:17;20733:25;;;;;;;;20721:37;;20795:1;20781:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20768:5;:10;;:29;;;;20834:1;20820:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20807:5;:10;;:29;;;;20873:1;20859:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20846:5;:10;;:29;;;;20910:1;20896:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20885:5;:8;;:27;;;;20949:1;20935:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20922:5;:10;;:29;;;;20986:1;20972:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20961:5;:8;;:27;;;;21025:1;21011:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20998:5;:10;;:29;;;;21064:1;21050:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21037:5;:10;;:29;;;;21104:1;21100;:5;21086:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21086:20:5;;;;21076:5;:7;;:30;;;;21121:9;21133:1;21121:13;;21116:1009;21140:1;21136;:5;21116:1009;;;21178:59;;;;;;;;;21186:24;21192:3;21207:2;21203:1;:6;21197:3;:12;21186:5;:24::i;:::-;21178:59;;;;21212:24;21218:3;21233:2;21229:1;:6;21223:3;:12;21212:5;:24::i;:::-;21178:59;;;21162:5;:10;;;21173:1;21162:13;;;;;;;;;;;;;;;;;:75;;;;21267:71;;;;;;;;;21275:30;21281:3;21302:2;21297:1;21293;:5;21292:12;21286:3;:18;21275:5;:30::i;:::-;21267:71;;;;21307:30;21313:3;21334:2;21329:1;21325;:5;21324:12;21318:3;:18;21307:5;:30::i;:::-;21267:71;;;21251:5;:10;;;21262:1;21251:13;;;;;;;;;;;;;;;;;:87;;;;21368:79;;;;;;;;;21376:34;21382:3;21407:2;21403:1;:6;21397:3;21393:1;:7;21387:3;:13;:22;21376:5;:34::i;:::-;21368:79;;;;21412:34;21418:3;21443:2;21439:1;:6;21433:3;21429:1;:7;21423:3;:13;:22;21412:5;:34::i;:::-;21368:79;;;21352:5;:10;;;21363:1;21352:13;;;;;;;;;;;;;;;;;:95;;;;21475:79;;;;;;;;;21483:34;21489:3;21514:2;21510:1;:6;21504:3;21500:1;:7;21494:3;:13;:22;21483:5;:34::i;:::-;21475:79;;;;21519:34;21525:3;21550:2;21546:1;:6;21540:3;21536:1;:7;21530:3;:13;:22;21519:5;:34::i;:::-;21475:79;;;21461:5;:8;;;21470:1;21461:11;;;;;;;;;;;;;;;;;:93;;;;21584:79;;;;;;;;;21592:34;21598:3;21623:2;21619:1;:6;21613:3;21609:1;:7;21603:3;:13;:22;21592:5;:34::i;:::-;21584:79;;;;21628:34;21634:3;21659:2;21655:1;:6;21649:3;21645:1;:7;21639:3;:13;:22;21628:5;:34::i;:::-;21584:79;;;21568:5;:10;;;21579:1;21568:13;;;;;;;;;;;;;;;;;:95;;;;21691:79;;;;;;;;;21699:34;21705:3;21730:2;21726:1;:6;21720:3;21716:1;:7;21710:3;:13;:22;21699:5;:34::i;:::-;21691:79;;;;21735:34;21741:3;21766:2;21762:1;:6;21756:3;21752:1;:7;21746:3;:13;:22;21735:5;:34::i;:::-;21691:79;;;21677:5;:8;;;21686:1;21677:11;;;;;;;;;;;;;;;;;:93;;;;21800:79;;;;;;;;;21808:34;21814:3;21839:2;21835:1;:6;21829:3;21825:1;:7;21819:3;:13;:22;21808:5;:34::i;:::-;21800:79;;;;21844:34;21850:3;21875:2;21871:1;:6;21865:3;21861:1;:7;21855:3;:13;:22;21844:5;:34::i;:::-;21800:79;;;21784:5;:10;;;21795:1;21784:13;;;;;;;;;;;;;;;;;:95;;;;21909:79;;;;;;;;;21917:34;21923:3;21948:2;21944:1;:6;21938:3;21934:1;:7;21928:3;:13;:22;21917:5;:34::i;:::-;21909:79;;;;21953:34;21959:3;21984:2;21980:1;:6;21974:3;21970:1;:7;21964:3;:13;:22;21953:5;:34::i;:::-;21909:79;;;21893:5;:10;;;21904:1;21893:13;;;;;;;;;;;;;;;;;:95;;;;22015:34;22021:3;22046:2;22042:1;:6;22036:3;22032:1;:7;22026:3;:13;:22;22015:5;:34::i;:::-;22002:5;:7;;;22010:1;22002:10;;;;;;;;;;;;;;;;;:47;;;;;22080:34;22086:3;22111:2;22107:1;:6;22101:3;22097:1;:7;22091:3;:13;:22;22080:5;:34::i;:::-;22063:5;:7;;;22075:1;22071;:5;22063:14;;;;;;;;;;;;;;;;;:51;;;;;21143:3;;;;;;;21116:1009;;;;22134:16;22157:3;22153:1;:7;22134:26;;22182;22188:3;22199:8;22193:3;:14;22182:5;:26::i;:::-;22170:5;:9;;:38;;;;;22230:26;22236:3;22247:8;22241:3;:14;22230:5;:26::i;:::-;22218:5;:9;;:38;;;;;22278:26;22284:3;22295:8;22289:3;:14;22278:5;:26::i;:::-;22266:5;:9;;:38;;;;;22330:63;;;;;;;;;22338:26;22344:3;22355:8;22349:3;:14;22338:5;:26::i;:::-;22330:63;;;;22366:26;22372:3;22383:8;22377:3;:14;22366:5;:26::i;:::-;22330:63;;;22315:5;:12;;:78;;;;22418:63;;;;;;;;;22426:26;22432:3;22443:8;22437:3;:14;22426:5;:26::i;:::-;22418:63;;;;22454:26;22460:3;22471:8;22465:3;:14;22454:5;:26::i;:::-;22418:63;;;22403:5;:12;;:78;;;;22508:63;;;;;;;;;22516:26;22522:3;22533:8;22527:3;:14;22516:5;:26::i;:::-;22508:63;;;;22544:26;22550:3;22561:8;22555:3;:14;22544:5;:26::i;:::-;22508:63;;;22491:5;:14;;:80;;;;22598:63;;;;;;;;;22606:26;22612:3;22623:8;22617:3;:14;22606:5;:26::i;:::-;22598:63;;;;22634:26;22640:3;22651:8;22645:3;:14;22634:5;:26::i;:::-;22598:63;;;22581:5;:14;;:80;;;;22672:147;;;;;;;;;22690:63;;;;;;;;;22698:26;22704:3;22715:8;22709:3;:14;22698:5;:26::i;:::-;22690:63;;;;22726:26;22732:3;22743:8;22737:3;:14;22726:5;:26::i;:::-;22690:63;;;22672:147;;;;22755:63;;;;;;;;;22763:26;22769:3;22780:8;22774:3;:14;22763:5;:26::i;:::-;22755:63;;;;22791:26;22797:3;22808:8;22802:3;:14;22791:5;:26::i;:::-;22755:63;;;22672:147;;;:5;:14;;:147;;;;22842:26;22848:3;22859:8;22853:3;:14;22842:5;:26::i;:::-;22829:5;:10;;:39;;;;;22891:27;22897:3;22909:8;22902:4;:15;22891:5;:27::i;:::-;22878:5;:10;;:40;;;;;22939:27;22945:3;22957:8;22950:4;:15;22939:5;:27::i;:::-;22928:5;:8;;:38;;;;;22987:27;22993:3;23005:8;22998:4;:15;22987:5;:27::i;:::-;22977:5;:7;;:37;;;;;23037:27;23043:3;23055:8;23048:4;:15;23037:5;:27::i;:::-;23024:5;:10;;:40;;;;;23086:27;23092:3;23104:8;23097:4;:15;23086:5;:27::i;:::-;23074:5;:9;;:39;;;;;23143:27;23149:3;23161:8;23154:4;:15;23143:5;:27::i;:::-;23123:5;:17;;:47;;;;;23196:27;23202:3;23214:8;23207:4;:15;23196:5;:27::i;:::-;23180:5;:13;;:43;;;;;23254:27;23260:3;23272:8;23265:4;:15;23254:5;:27::i;:::-;23233:5;:18;;:48;;;;;23308:27;23314:3;23326:8;23319:4;:15;23308:5;:27::i;:::-;23291:5;:14;;:44;;;;;23346:32;;:::i;:::-;23393:9;23405:1;23393:13;;23388:281;191:1;23408;:5;23388:281;;;23450:83;;;;;;;;;23458:36;23464:3;23491:2;23487:1;:6;23476:8;23469:4;:15;:24;23458:5;:36::i;:::-;23450:83;;;;23496:36;23502:3;23529:2;23525:1;:6;23514:8;23507:4;:15;:24;23496:5;:36::i;:::-;23450:83;;;23434:7;:10;;;23445:1;23434:13;;;;;;;;;;;;:99;;;;23563:95;;;;;;;;;23571:42;23577:3;23610:2;23605:1;191;23601:5;23600:12;23589:8;23582:4;:15;:30;23571:5;:42::i;:::-;23563:95;;;;23615:42;23621:3;23654:2;23649:1;191;23645:5;23644:12;23633:8;23626:4;:15;:30;23615:5;:42::i;:::-;23563:95;;;23547:7;:10;;;23558:1;23547:13;;;;;;;;;;;;:111;;;;23415:3;;;;;;;23388:281;;;;23690:37;23696:3;23723;191:1;23719:7;23708:8;23701:4;:15;:25;23690:5;:37::i;:::-;23678:7;:9;;:49;;;;;23749:37;23755:3;23782;191:1;23778:7;23767:8;23760:4;:15;:25;23749:5;:37::i;:::-;23737:7;:9;;:49;;;;;23812:7;23796:5;:13;;:23;;;;23837:5;23830:12;;;;;20137:3712;;;:::o;4513:10477::-;4612:4;4628:21;4652:122;4681:9;:13;;;4696:9;:13;;;4711:9;:11;;;4724:9;:11;;;4737:9;:11;;;4750:9;:15;;;4670:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4670:96:5;;;4660:107;;;;;;4652:116;;;:120;:122::i;:::-;4628:146;;4785:38;;:::i;:::-;4853:125;4882:13;4897:5;:8;;;4907:5;:8;;;4917:5;:7;;;4926:5;:7;;;4935:5;:7;;;4944:5;:7;;;4953:5;:7;;;4962:5;:7;;;4871:99;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4871:99:5;;;4861:110;;;;;;4853:119;;;:123;:125::i;:::-;4833:15;:17;;:145;;;;;5008:147;5037:15;:17;;;5056:5;:10;;;5068:5;:10;;;5080:5;:10;;;5092:5;:8;;;5102:5;:10;;;5114:5;:8;;;5124:5;:10;;;5136:5;:10;;;5026:121;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5026:121:5;;;5016:132;;;;;;5008:141;;;:145;:147::i;:::-;4988:15;:17;;:167;;;;;5202:1;5185:5;:7;;;:14;:18;;;;;;;;5165:15;:17;;:38;;;;;5238:15;:17;;;5233:1;:22;5213:15;:17;;:42;;;;;5306:15;:17;;;5302:1;:21;5285:39;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5265:15;:17;;:59;;;;5339:9;5351:1;5339:13;;5334:186;5362:15;:17;;;5358:1;:21;5354:1;:25;5334:186;;;5426:5;:7;;;5434:1;5426:10;;;;;;;;;;;;;;;;;;5400:15;:17;;;5418:1;5400:20;;;;;;;;;;;;;;;;;;5421:1;5400:23;;;;;;;;;;;;:36;;;;;5476:33;5498:5;:7;;;5506:1;5498:10;;;;;;;;;;;;;;;;;;5476:15;:17;;;:21;;:33;;;;:::i;:::-;5450:15;:17;;;5468:1;5450:20;;;;;;;;;;;;;;;;;;5471:1;5450:23;;;;;;;;;;;;:59;;;;;5381:3;;;;;;;5334:186;;;;5535:9;5547:1;5535:13;;5530:162;5558:15;:17;;;5554:1;:21;5550:1;:25;5530:162;;;5619:62;5623:15;:20;;;5645:35;5649:2;5652:1;5649:5;;;;;;;;;;;;;;;;;;;;5645:35;;;;;;;;;;;;;;;;;;;;;;;;;;5656:15;:17;;;5674:1;5656:20;;;;;;;;;;;;;;;;;;5677:1;5656:23;;;;;;;;;;;;;5645:3;:35::i;:::-;5619:3;:62::i;:::-;5596:15;:20;;:85;;;;5577:3;;;;;;;5530:162;;;;5709:95;5712:45;5716:31;5720:5;:7;;;5729:15;:17;;;5716:3;:31::i;:::-;5749:5;:7;;;5712:3;:45::i;:::-;5759:44;5763:15;:20;;;5785:17;5789:1;5785:17;;;;;;;;;;;;;;;;;;;;;;;;;;5792:5;:9;;;5785:3;:17::i;:::-;5759:3;:44::i;:::-;5709:2;:95::i;:::-;5701:137;;;;;;;;;;;;;;;;;;;;;;;;5872:13;;;;;;;;;5880:1;5872:13;;;;5883:1;5872:13;;;5849:15;:20;;:36;;;;5900:9;5912:1;5900:13;;5895:260;5923:15;:17;;;5919:1;:21;5915:1;:25;5895:260;;;6030:114;6034:15;:20;;;6056:87;6060:2;6063:1;6060:5;;;;;;;;;;;;;;;;;;;;6056:87;;;;;;;;;;;;;;;;;;;;;;;;;;6067:75;6095:46;6117:15;:17;;;6135:1;6117:20;;;;;;;;;;;;;;;;;;6138:1;6117:23;;;;;;;;;;;;;6095:15;:17;;;:21;;:46;;;;:::i;:::-;6067:15;:17;;;6085:1;6067:20;;;;;;;;;;;;;;;;;;6088:1;6067:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;6056:3;:87::i;:::-;6030:3;:114::i;:::-;6007:15;:20;;:137;;;;5942:3;;;;;;;5895:260;;;;6172:95;6175:45;6179:31;6183:5;:7;;;6192:15;:17;;;6179:3;:31::i;:::-;6212:5;:7;;;6175:3;:45::i;:::-;6222:44;6226:15;:20;;;6248:17;6252:1;6248:17;;;;;;;;;;;;;;;;;;;;;;;;;;6255:5;:9;;;6248:3;:17::i;:::-;6222:3;:44::i;:::-;6172:2;:95::i;:::-;6164:137;;;;;;;;;;;;;;;;;;;;;;;;6335:167;6339:80;6343:2;6346:1;6343:5;;;;;;;;;;;;;;;;;;;;6339:80;;;;;;;;;;;;;;;;;;;;;;;;;;6350:68;6378:15;:17;;;6396:15;:17;;;6378:36;;;;;;;;;;;;;;;;;;6415:1;6378:39;;;;;;;;;;;;;6350:15;:17;;;6368:1;6350:20;;;;;;;;;;;;;;;;;;6371:1;6350:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;6339:3;:80::i;:::-;6421;6425:2;6428:1;6425:5;;;;;;;;;;;;;;;;;;;;6421:80;;;;;;;;;;;;;;;;;;;;;;;;;;6432:68;6460:15;:17;;;6478:15;:17;;;6460:36;;;;;;;;;;;;;;;;;;6497:1;6460:39;;;;;;;;;;;;;6432:15;:17;;;6450:1;6432:20;;;;;;;;;;;;;;;;;;6453:1;6432:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;6421:3;:80::i;:::-;6335:3;:167::i;:::-;6312:15;:20;;:190;;;;6520:95;6523:45;6527:31;6531:5;:7;;;6540:15;:17;;;6527:3;:31::i;:::-;6560:5;:7;;;6523:3;:45::i;:::-;6570:44;6574:15;:20;;;6596:17;6600:1;6596:17;;;;;;;;;;;;;;;;;;;;;;;;;;6603:5;:9;;;6596:3;:17::i;:::-;6570:3;:44::i;:::-;6520:2;:95::i;:::-;6512:137;;;;;;;;;;;;;;;;;;;;;;;;6680:38;6700:15;:17;;;6680:19;:38::i;:::-;6660:15;:17;;:58;;;;6750:52;6771:15;:17;;;6790:9;:11;;;6750:20;:52::i;:::-;6729:15;:18;;:73;;;;6833:52;6854:15;:17;;;6873:9;:11;;;6833:20;:52::i;:::-;6812:15;:18;;:73;;;;6900:9;6912:1;6900:13;;6895:279;6919:15;:17;;;6915:1;:21;6895:279;;;6980:73;6984:15;:20;;;7006:46;7010:9;:13;;;7024:1;7010:16;;;;;;;;;;;;;;;;;;7028:15;:17;;;7046:1;7028:20;;;;;;;;;;;;;;;;;;7049:1;7028:23;;;;;;;;;;;;;7006:3;:46::i;:::-;6980:3;:73::i;:::-;6957:15;:20;;:96;;;;7090:73;7094:15;:20;;;7116:46;7120:9;:13;;;7134:1;7120:16;;;;;;;;;;;;;;;;;;7138:15;:17;;;7156:1;7138:20;;;;;;;;;;;;;;;;;;7159:1;7138:23;;;;;;;;;;;;;7116:3;:46::i;:::-;7090:3;:73::i;:::-;7067:15;:20;;:96;;;;6938:3;;;;;;;6895:279;;;;7206:1;7183:15;:20;;:24;;;;;7222:9;7234:1;7222:13;;7217:428;7241:15;:17;;;7237:1;:21;7217:428;;;7302:86;7306:15;:20;;;7328:59;7332:15;:18;;;7355:1;7351;:5;;;;;;;;7332:25;;;;;;;;;;;;;;;;;;7362:1;7358;:5;;;;;;;;7332:32;;;;;;;;;;;;;7366:15;:20;;;7328:3;:59::i;:::-;7302:3;:86::i;:::-;7279:15;:20;;:109;;;;7425:86;7429:15;:20;;;7451:59;7455:15;:18;;;7478:1;7474;:5;;;;;;;;7455:25;;;;;;;;;;;;;;;;;;7485:1;7481;:5;;;;;;;;7455:32;;;;;;;;;;;;;7489:15;:20;;;7451:3;:59::i;:::-;7425:3;:86::i;:::-;7402:15;:20;;:109;;;;7533:1;7529;:5;7525:110;;;7577:43;7602:15;:17;;;7577:15;:20;;;:24;;:43;;;;:::i;:::-;7554:15;:20;;:66;;;;;7525:110;7260:3;;;;;;;7217:428;;;;7677:1;7654:15;:20;;:24;;;;;7693:9;7705:1;7693:13;;7688:1024;7712:15;:17;;;7708:1;:21;7688:1024;;;7773:73;7777:15;:20;;;7799:46;7803:5;:10;;;7814:1;7803:13;;;;;;;;;;;;;;;;;;7818:26;:15;:20;;;:24;:26::i;:::-;7799:3;:46::i;:::-;7773:3;:73::i;:::-;7750:15;:20;;:96;;;;7883:73;7887:15;:20;;;7909:46;7913:5;:10;;;7924:1;7913:13;;;;;;;;;;;;;;;;;;7928:26;:15;:20;;;:24;:26::i;:::-;7909:3;:46::i;:::-;7883:3;:73::i;:::-;7860:15;:20;;:96;;;;7997:77;8001:15;:18;;;8020:1;8001:21;;;;;;;;;;;;;;;;;;8023:1;8001:24;;;;;;;;;;;;;8027:46;8031:5;:10;;;8042:1;8031:13;;;;;;;;;;;;;;;;;;8046:26;:15;:20;;;:24;:26::i;:::-;8027:3;:46::i;:::-;7997:3;:77::i;:::-;7970:15;:18;;;7989:1;7970:21;;;;;;;;;;;;;;;;;;7992:1;7970:24;;;;;;;;;;;;:104;;;;8109:69;8113:15;:18;;;8133:44;8137:5;:8;;;8146:1;8137:11;;;;;;;;;;;;;;;;;;8150:26;:15;:20;;;:24;:26::i;:::-;8133:3;:44::i;:::-;8109:3;:69::i;:::-;8088:15;:18;;:90;;;;8219:77;8223:15;:18;;;8242:1;8223:21;;;;;;;;;;;;;;;;;;8245:1;8223:24;;;;;;;;;;;;;8249:46;8253:5;:10;;;8264:1;8253:13;;;;;;;;;;;;;;;;;;8268:26;:15;:20;;;:24;:26::i;:::-;8249:3;:46::i;:::-;8219:3;:77::i;:::-;8192:15;:18;;;8211:1;8192:21;;;;;;;;;;;;;;;;;;8214:1;8192:24;;;;;;;;;;;;:104;;;;8331:69;8335:15;:18;;;8355:44;8359:5;:8;;;8368:1;8359:11;;;;;;;;;;;;;;;;;;8372:26;:15;:20;;;:24;:26::i;:::-;8355:3;:44::i;:::-;8331:3;:69::i;:::-;8310:15;:18;;:90;;;;8437:73;8441:15;:20;;;8463:46;8467:5;:10;;;8478:1;8467:13;;;;;;;;;;;;;;;;;;8482:26;:15;:20;;;:24;:26::i;:::-;8463:3;:46::i;:::-;8437:3;:73::i;:::-;8414:15;:20;;:96;;;;8547:73;8551:15;:20;;;8573:46;8577:5;:10;;;8588:1;8577:13;;;;;;;;;;;;;;;;;;8592:26;:15;:20;;;:24;:26::i;:::-;8573:3;:46::i;:::-;8547:3;:73::i;:::-;8524:15;:20;;:96;;;;8658:43;8683:15;:17;;;8658:15;:20;;;:24;;:43;;;;:::i;:::-;8635:15;:20;;:66;;;;;7731:3;;;;;;;7688:1024;;;;8742:63;8746:15;:18;;;8766:38;8770:9;:11;;;8783:15;:20;;;8766:3;:38::i;:::-;8742:3;:63::i;:::-;8721:15;:18;;:84;;;;8836:53;8840:15;:18;;;8860:28;8864:1;8860:28;;;;;;;;;;;;;;;;;;;;;;;;;;8867:15;:20;;;8860:3;:28::i;:::-;8836:3;:53::i;:::-;8815:15;:18;;:74;;;;8900:42;;:::i;:::-;8974:115;9003:15;:17;;;9022:5;:12;;;9036:5;:12;;;9050:5;:14;;;9066:5;:14;;;8992:89;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8992:89:5;;;8982:100;;;;;;8974:109;;;:113;:115::i;:::-;8952:17;:19;;:137;;;;;9122:27;9129:17;:19;;;9122:6;:27::i;:::-;9099:17;:20;;:50;;;;9181:57;9210:17;:19;;;9199:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9199:31:5;;;9189:42;;;;;;9181:51;;;:55;:57::i;:::-;9159:17;:19;;:79;;;;;9248;;;;;;;;;9272:26;9296:1;9272:17;:19;;;:23;;:26;;;;:::i;:::-;9248:79;;;;9300:26;9324:1;9300:17;:19;;;:23;;:26;;;;:::i;:::-;9248:79;;;:17;:20;;:79;;;;9370:77;9427:17;:19;;;9370:52;9398:17;:20;;;9419:1;9398:23;;;;;;;;;;;;;9370:17;:20;;;9391:1;9370:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;9345:17;:22;;:102;;;;;9479:160;9570:68;9615:17;:22;;;9570:40;9607:1;162:2;9603:5;;;;;;;;9597:1;:12;9570:17;:22;;;:26;;:40;;;;:::i;:::-;:44;;:68;;;;:::i;:::-;9479:86;9516:48;9540:17;:20;;;9561:1;9540:23;;;;;;;;;;;;;9516:17;:19;;;:23;;:48;;;;:::i;:::-;9479:32;9490:17;:20;;;9479:10;:32::i;:::-;:36;;:86;;;;:::i;:::-;:90;;:160;;;;:::i;:::-;9457:17;:19;;:182;;;;;9671:35;9686:17;:19;;;9671:5;:10;;;:14;;:35;;;;:::i;:::-;9649:17;:19;;:57;;;;;9721:9;9733:1;9721:13;;9716:233;9744:1;162:2;9740:5;;;;;;;;9736:1;:9;9716:233;;;9806:35;9839:1;9834;:6;9806:17;:20;;;9827:1;9806:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;9766:17;:34;;;9801:1;9766:37;;;;;;;;;;;;:75;;;;;9903:35;9936:1;9931;:6;9903:17;:20;;;9924:1;9903:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;9855:17;:34;;;9898:1;162:2;9894:5;;;;;;;;9890:1;:9;9855:45;;;;;;;;;;;;:83;;;;;9747:3;;;;;;;9716:233;;;;9981:73;10010:17;:19;;;10031:5;:14;;;9999:47;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9999:47:5;;;9989:58;;;;;;9981:67;;;:71;:73::i;:::-;9959:17;:19;;:95;;;;;10090:118;10094:43;10098:5;:14;;;10113:1;10098:17;;;;;;;;;;;;;10117;:19;;;10094:3;:43::i;:::-;10139:68;10143:5;:14;;;10158:1;10143:17;;;;;;;;;;;;;10162:44;10186:17;:19;;;10162:17;:19;;;:23;;:44;;;;:::i;:::-;10139:3;:68::i;:::-;10090:3;:118::i;:::-;10064:17;:23;;:144;;;;10245:40;;:::i;:::-;10318:86;10322:35;10326:15;:18;;;10346:5;:10;;;10322:3;:35::i;:::-;10359:44;10363:15;:18;;;10382:1;10363:21;;;;;;;;;;;;;;;;;;10385:1;10363:24;;;;;;;;;;;;;10389:13;:5;:7;;;:11;:13::i;:::-;10359:3;:44::i;:::-;10318:3;:86::i;:::-;10295:16;:20;;:109;;;;10437:55;10441:17;10445:1;10441:17;;;;;;;;;;;;;;;;;;;;;;;;;;10448:5;:9;;;10441:3;:17::i;:::-;10460:31;10464:9;:11;;;10477:13;:5;:7;;;:11;:13::i;:::-;10460:3;:31::i;:::-;10437:3;:55::i;:::-;10414:16;:20;;:78;;;;10612:34;;;;;;;;;;;;;;;;;;;10630:9;:15;;;10612:7;:34::i;:::-;10586:16;:23;;:60;;;;10679:78;10683:40;10687:16;:23;;;10712:5;:10;;;10683:3;:40::i;:::-;10725:31;10729:9;:11;;;10742:13;:5;:7;;;:11;:13::i;:::-;10725:3;:31::i;:::-;10679:3;:78::i;:::-;10656:16;:20;;:101;;;;10790:83;10794:36;10798:15;:20;;;10820:5;:9;;;10794:3;:36::i;:::-;10832:40;10836:15;:20;;;10858:13;:5;:7;;;:11;:13::i;:::-;10832:3;:40::i;:::-;10790:3;:83::i;:::-;10767:16;:20;;:106;;;;10911:317;10915:154;10919:124;10923:54;10927:37;10931:15;:18;;;10951:5;:12;;;10927:3;:37::i;:::-;10966:5;:10;;;10923:3;:54::i;:::-;10979:63;10983:43;10987:15;:18;;;11006:1;10987:21;;;;;;;;;;;;;;;;;;11009:1;10987:24;;;;;;;;;;;;;11013:5;:12;;;10983:3;:43::i;:::-;11028:13;:5;:7;;;:11;:13::i;:::-;10979:3;:63::i;:::-;10919:3;:124::i;:::-;11045:17;:20;;;11066:1;11045:23;;;;;;;;;;;;;10915:3;:154::i;:::-;11071:156;11075:126;11079:58;11083:41;11087:15;:20;;;11109:5;:14;;;11083:3;:41::i;:::-;11126:5;:10;;;11079:3;:58::i;:::-;11139:61;11143:41;11147:15;:20;;;11169:5;:14;;;11143:3;:41::i;:::-;11186:13;:5;:7;;;:11;:13::i;:::-;11139:3;:61::i;:::-;11075:3;:126::i;:::-;11203:17;:20;;;11224:1;11203:23;;;;;;;;;;;;;11071:3;:156::i;:::-;10911:3;:317::i;:::-;10883:16;:25;;:345;;;;11261:159;11265:127;11269:87;11273:52;11277:27;11281:1;11277:27;;;;;;;;;;;;;;;;;;;;;;;;;;11284:17;:19;;;11277:3;:27::i;:::-;11306:18;11310:1;11306:18;;;;;;;;;;;;;;;;;;;;;;;;;;11313:5;:10;;;11306:3;:18::i;:::-;11273:3;:52::i;:::-;11327:28;11331:17;:23;;;11327:3;:28::i;:::-;11269:3;:87::i;:::-;11358:33;11370:15;:20;;;11358:5;:7;;;:11;;:33;;;;:::i;:::-;11265:3;:127::i;:::-;11394:16;:25;;;11261:3;:159::i;:::-;11238:16;:20;;:182;;;;11454:118;11458:25;11462:1;11458:25;;;;;;;;;;;;;;;;;;;;;;;;;;11465:5;:17;;;11458:3;:25::i;:::-;11485:86;11489:35;11493:15;:18;;;11513:5;:10;;;11489:3;:35::i;:::-;11526:44;11530:15;:18;;;11549:1;11530:21;;;;;;;;;;;;;;;;;;11552:1;11530:24;;;;;;;;;;;;;11556:13;:5;:7;;;:11;:13::i;:::-;11526:3;:44::i;:::-;11485:3;:86::i;:::-;11454:3;:118::i;:::-;11430:16;:21;;:142;;;;11607:112;11611:21;11615:1;11611:21;;;;;;;;;;;;;;;;;;;;;;;;;;11618:5;:13;;;11611:3;:21::i;:::-;11634:84;11638:37;11642:15;:20;;;11664:5;:10;;;11638:3;:37::i;:::-;11677:40;11681:15;:20;;;11703:13;:5;:7;;;:11;:13::i;:::-;11677:3;:40::i;:::-;11634:3;:84::i;:::-;11607:3;:112::i;:::-;11582:16;:22;;:137;;;;11757:101;11761:26;11765:1;11761:26;;;;;;;;;;;;;;;;;;;;;;;;;;11768:5;:18;;;11761:3;:26::i;:::-;11789:68;11793:29;11797:5;:12;;;11811:5;:10;;;11793:3;:29::i;:::-;11824:32;11828:5;:12;;;11842:13;:5;:7;;;:11;:13::i;:::-;11824:3;:32::i;:::-;11789:3;:68::i;:::-;11757:3;:101::i;:::-;11729:16;:25;;:129;;;;11898:101;11902:22;11906:1;11902:22;;;;;;;;;;;;;;;;;;;;;;;;;;11909:5;:14;;;11902:3;:22::i;:::-;11926:72;11930:31;11934:5;:14;;;11950:5;:10;;;11930:3;:31::i;:::-;11963:34;11967:5;:14;;;11983:13;:5;:7;;;:11;:13::i;:::-;11963:3;:34::i;:::-;11926:3;:72::i;:::-;11898:3;:101::i;:::-;11868:16;:27;;:131;;;;12031:270;12060:17;:19;;;12081:16;:20;;;12103:16;:20;;;12125:16;:20;;;12147:16;:20;;;12169:16;:20;;;12191:16;:21;;;12214:16;:22;;;12238:16;:25;;;12265:16;:27;;;12049:244;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12049:244:5;;;12039:255;;;;;;12031:264;;;:268;:270::i;:::-;12010:16;:18;;:291;;;;;12341:5;:7;;;12319:16;:18;;;:29;12311:84;;;;;;;;;;;;;;;;;;;;;;;;12406:34;;:::i;:::-;12468:56;12497:16;:18;;;12486:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12486:30:5;;;12476:41;;;;;;12468:50;;;:54;:56::i;:::-;12450:13;:15;;:74;;;;;12554:23;12558:1;12554:23;;;;;;;;;;;;;;;;;;;;;;;;;;12561:13;:15;;;12554:3;:23::i;:::-;12534:13;:17;;:43;;;;12611:37;12623:2;12611:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12627:17;:20;;;12611:11;:37::i;:::-;12587:13;:21;;:61;;;;12679:96;12690:48;12696:17;:20;;;12718:17;:19;;;12690:5;:48::i;:::-;12740:17;:34;;;12679:10;:96::i;:::-;12658:13;:18;;:117;;;;12803:157;12807:101;12811:49;12815:5;:8;;;12825:34;12829:5;:8;;;12839:17;:19;;;12825:3;:34::i;:::-;12811:3;:49::i;:::-;12862:45;12866:13;12876:2;12866:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;12881:25;:17;:19;;;:23;:25::i;:::-;12862:3;:45::i;:::-;12807:3;:101::i;:::-;12910:49;12917:13;:21;;;12940:13;:18;;;12910:6;:49::i;:::-;12803:3;:157::i;:::-;12785:13;:15;;:175;;;;12988:44;12992:13;:15;;;13009:22;13013:1;13009:22;;;;;;;;;;;;;;;;;;;;;;;;;;13016:14;:5;:8;;;:12;:14::i;:::-;13009:3;:22::i;:::-;12988:3;:44::i;:::-;12970:13;:15;;:62;;;;13060:56;13064:13;:15;;;13081:34;13085:13;:17;;;13104:5;:10;;;13081:3;:34::i;:::-;13060:3;:56::i;:::-;13042:13;:15;;:74;;;;13171:32;;:::i;:::-;13206:5;:13;;;13171:48;;13234:9;13246:1;13234:13;;13229:421;191:1;13249;:5;13229:421;;;13293:83;13322:13;:15;;;13339:7;:10;;;13350:1;13339:13;;;;;;;;;;;;;13354:7;:10;;;13365:1;13354:13;;;;;;;;;;;;;13311:57;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13311:57:5;;;13301:68;;;;;;13293:77;;;:81;:83::i;:::-;13275:13;:15;;:101;;;;;13420:13;:15;;;13390:13;:24;;;13415:1;13390:27;;;;;;;;;;;;:45;;;;;13469:12;13484:21;:13;:15;;;:19;:21::i;:::-;13469:36;;13537:102;13541:13;:15;;;13558:80;13562:42;13566:7;:10;;;13577:1;13566:13;;;;;;;;;;;;;13581:22;13601:1;13581:13;:15;;;:19;;:22;;;;:::i;:::-;13562:3;:42::i;:::-;13606:31;13610:7;:10;;;13621:1;13610:13;;;;;;;;;;;;;13625:11;13634:1;13625:4;:8;;:11;;;;:::i;:::-;13606:3;:31::i;:::-;13558:3;:80::i;:::-;13537:3;:102::i;:::-;13519:13;:15;;:120;;;;13229:421;13256:3;;;;;;;13229:421;;;;13694:1;13660:13;:28;;;13689:1;13660:31;;;;;;;;;;;;:35;;;;;13710:9;13722:1;13710:13;;13705:155;191:1;13725;:5;13705:155;;;13785:64;13821:13;:24;;;13846:1;13821:27;;;;;;;;;;;;;13785:13;:28;;;13814:1;13785:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;13751:13;:28;;;13780:1;13751:31;;;;;;;;;;;;:98;;;;;13732:3;;;;;;;13705:155;;;;13869:21;;:::i;:::-;13934:37;:13;:28;;;13963:1;13934:31;;;;;;;;;;;;;:35;:37::i;:::-;13900:13;:28;;;13929:1;13900:31;;;;;;;;;;;;:71;;;;;13986:9;13998:1;13986:13;;13981:462;14007:1;162:2;14005:3;;;;;;;;14001:1;:7;13981:462;;;14034:9;14046:1;14034:13;;14029:404;162:2;14060:1;14055;14050;:6;;;;14049:12;:16;14029:404;;;14090:10;14113:1;14108;:6;;;;14103:1;:12;14090:25;;14138:6;14145:2;14138:10;;;;;;;;;;;;;14137:11;14133:286;;;14172:12;14187:76;14227:13;:24;;;14260:1;14256;191;14252:5;:9;14227:35;;;;;;;;;;;;;14187:13;:24;;;14220:1;14216;191;14212:5;:9;14187:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;14172:91;;14320:41;14356:4;14320:13;:28;;;14349:1;14320:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;14285:13;:28;;;14314:2;14285:32;;;;;;;;;;;;:76;;;;;14396:4;14383:6;14390:2;14383:10;;;;;;;;;;;;:17;;;;;;;;;;;14133:286;;14029:404;14067:3;;;;;14029:404;;;;14010:3;;;;;13981:462;;;;14453:20;;:::i;:::-;14483;;:::i;:::-;14518:9;14530:1;14518:13;;14513:224;162:2;14533:1;:5;14513:224;;;14567:55;14571:5;14578:43;14582:2;14585:1;14582:5;;;;;;;;;;;;;;;;;;;;14578:43;;;;;;;;;;;;;;;;;;;;;;;;;;14589:13;:28;;;14618:1;14589:31;;;;;;;;;;;;;14578:3;:43::i;:::-;14567:3;:55::i;:::-;14559:63;;14644:82;14648:5;14655:70;14659:13;:21;;;14681:1;14659:24;;;;;;;;;;;;;14685:13;:28;;;14722:1;14718;162:2;14714:5;:9;14685:39;;;;;;;;;;;;;14655:3;:70::i;:::-;14644:3;:82::i;:::-;14636:90;;14540:3;;;;;;;14513:224;;;;14746:21;;:::i;:::-;14770:104;14774:49;14778:21;14782:5;14789:7;:9;;;14778:3;:21::i;:::-;14801;14805:5;14812:7;:9;;;14801:3;:21::i;:::-;14774:3;:49::i;:::-;14825:48;14829:13;:17;;;14848:24;14862:7;:9;;;14848:7;:9;;;:13;;:24;;;;:::i;:::-;14825:3;:48::i;:::-;14770:3;:104::i;:::-;14746:128;;14892:27;14895:13;:15;;;14912:6;14892:2;:27::i;:::-;14884:77;;;;;;;;;;;;;;;;;;;;;;;;14979:4;14972:11;;;;;;;;;;;;4513:10477;;;;:::o;25331:295::-;25404:14;25497:4;25491:11;25553:5;25546:4;25539:5;25535:16;25531:28;25525:35;25522:1;25515:46;25608:1;25602:8;25592:18;;25468:152;;;;;:::o;720:95:3:-;767:7;110:77;793:1;:15;;;;;;;;786:22;;720:95;;;:::o;821:127::-;879:7;910:1;905;:6;;:36;;940:1;936;110:77;922:15;:19;905:36;;;918:1;914;:5;905:36;898:43;;821:127;;;;:::o;26160:382:5:-;26225:16;;:::i;:::-;26291:4;26285:11;26325:1;26319:8;26316:1;26309:19;26375:4;26372:1;26368:12;26362:19;26355:4;26352:1;26348:12;26341:41;26416:1;26409:4;26406:1;26402:12;26395:23;26475:4;26472:1;26466:4;26463:1;26457:4;26452:3;26441:39;26434:47;26431:2;;;26510:1;26507;26500:12;26431:2;26262:274;;;;;:::o;25698:456::-;25772:16;;:::i;:::-;25838:4;25832:11;25872:2;25866:9;25863:1;25856:20;25924:4;25920:2;25916:13;25910:20;25903:4;25900:1;25896:12;25889:42;25971:2;25965:9;25958:4;25955:1;25951:12;25944:31;26023:4;26019:2;26015:13;26009:20;26002:4;25999:1;25995:12;25988:42;26087:4;26084:1;26078:4;26075:1;26069:4;26064:3;26053:39;26046:47;26043:2;;;26122:1;26119;26112:12;26043:2;25809:339;;;;;:::o;26735:131::-;26808:4;26839:2;:4;;;26831:2;:4;;;:12;:28;;;;;26855:2;:4;;;26847:2;:4;;;:12;26831:28;26824:35;;26735:131;;;;:::o;489:116:3:-;547:7;110:77;573:25;;;;;;;583:1;580;573:25;566:32;;489:116;;;;:::o;14996:446:5:-;15071:26;15109:9;15132:1;15121;:8;:12;;;;;;;;15109:24;;15143:9;15160:1;15155;:6;15143:18;;15197:1;15180:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15171:28;;15214:9;15226:1;15214:13;;15209:227;15233:1;15229;:5;15209:227;;;15255:21;15279:46;15304:1;15300;:5;15317:1;15312;15308;:5;15307:11;15320:1;15323;15279:20;:46::i;:::-;15255:70;;15344:9;15356:1;15344:13;;15339:87;15363:1;15359;:5;15339:87;;;15404:4;15409:1;15404:7;;;;;;;;;;;;;;;;;;15389:6;15396:1;15389:9;;;;;;;;;;;;;;;;;;15399:1;15389:12;;;;;;;;;;;;:22;;;;;15366:3;;;;;;;15339:87;;;;15209:227;15236:3;;;;;;;15209:227;;;;14996:446;;;;;:::o;16353:1466::-;16459:26;16734:12;16749:8;:15;16734:30;;16774:12;16796:1;16789:4;:8;;;;;;;;16774:23;;16833:4;16816:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16807:31;;16920:25;16948:16;16952:4;16958:5;16948:3;:16::i;:::-;16920:44;;16975:29;17021:4;17007:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17007:19:5;;;;16975:51;;17041:9;17053:1;17041:13;;17036:777;17060:1;17056;:5;17036:777;;;17087:9;17099:1;17087:13;;17082:148;17106:4;17102:1;:8;17082:148;;;17153:8;17175:4;17170:1;17163:4;:8;17162:17;;;;;;;;17153:27;;;;;;;;;;;;;;;;;;17181:1;17153:30;;;;;;;;;;;;;17135:12;17148:1;17135:15;;;;;;;;;;;;;;;;;:48;;;;;17112:3;;;;;;;17082:148;;;;17259:17;17263:12;17259:3;:17::i;:::-;17244:32;;17290:28;17335:4;17321:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17290:50;;17354:20;17377:1;17354:24;;17407:18;:12;:16;:18::i;:::-;17392:33;;17444:9;17456:1;17444:13;;17439:203;17463:4;17459:1;:8;17439:203;;;17521:106;17525:87;17529:33;17533:8;17542:1;17533:11;;;;;;;;;;;;;;;;;;17546:12;17559:1;17546:15;;;;;;;;;;;;;;;;;;17529:3;:33::i;:::-;17564:47;17568:8;17581:4;17577:1;:8;17568:18;;;;;;;;;;;;;;;;;;17588:12;17605:4;17601:1;:8;17588:22;;;;;;;;;;;;;;;;;;17564:3;:47::i;:::-;17525:3;:87::i;:::-;17614:12;17521:3;:106::i;:::-;17504:11;17516:1;17504:14;;;;;;;;;;;;;;;;;:123;;;;17469:3;;;;;;;17439:203;;;;17670:22;17674:11;17687:4;17670:3;:22::i;:::-;17656:36;;17711:9;17723:1;17711:13;;17706:97;17730:4;17726:1;:8;17706:97;;;17774:11;17786:1;17774:14;;;;;;;;;;;;;;;;;;17759:6;17766:1;17759:9;;;;;;;;;;;;;;;;;;17769:1;17759:12;;;;;;;;;;;;:29;;;;17736:3;;;;;;;17706:97;;;;17036:777;;17063:3;;;;;;;17036:777;;;;16353:1466;;;;;;;;:::o;954:95:3:-;1001:7;1041:1;110:77;1027:15;1020:22;;954:95;;;:::o;24891:236:5:-;24944:24;;:::i;:::-;24992:1;24980:6;24987:1;24980:9;;;;;;;;;;;;:13;;;;;25015:4;25003:6;25010:1;25003:9;;;;;;;;;;;;:16;;;;;25034:9;25046:1;25034:13;;25029:92;162:2;25049:1;:5;25029:92;;;25087:23;25105:4;25087:6;25098:1;25094;:5;25087:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;25075:6;25082:1;25075:9;;;;;;;;;;;;:35;;;;;25056:3;;;;;;;25029:92;;;;24891:236;;;:::o;1055:580:3:-;1123:14;1149:13;110:77;1149:27;;1224:4;1218:11;1252:4;1249:1;1242:15;1291:4;1284;1281:1;1277:12;1270:26;1330:4;1323;1320:1;1316:12;1309:26;1369:4;1362;1359:1;1355:12;1348:26;1408:8;1401:4;1398:1;1394:12;1387:30;1451:5;1444:4;1441:1;1437:12;1430:27;1514:4;1511:1;1505:4;1502:1;1496:4;1491:3;1480:39;1473:47;1470:2;;;1572:1;1569;1562:12;1470:2;1617:1;1611:8;1601:18;;1195:434;;;;;;:::o;367:116::-;425:7;110:77;451:25;;;;;;;461:1;458;451:25;444:32;;367:116;;;;:::o;24298:180:5:-;24363:14;24394:9;24406:1;24394:13;;24389:83;162:2;24409:1;:5;24389:83;;;24444:17;24455:2;24458:1;24455:5;;;;;;;;;;;;;24444:6;:10;;:17;;;;:::i;:::-;24435:26;;24416:3;;;;;;;24389:83;;;;24298:180;;;:::o;28116:181::-;28188:14;;:::i;:::-;28221:69;229:77;28264:5;28271:1;28247:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28247:26:5;;;28237:37;;;;;;28229:46;;;:60;;;;;;;;28221:7;:69::i;:::-;28214:76;;28116:181;;;;:::o;26548:::-;26602:14;;:::i;:::-;26635:47;;;;;;;;;26643:1;:3;;;26635:47;;;;229:77;26663:1;:3;;;:17;;;;;;;;229:77;26648:33;26635:47;;;26628:54;;26548:181;;;:::o;24071:221::-;24158:24;;:::i;:::-;24199:9;24211:1;24199:13;;24194:92;162:2;24214:1;:5;24194:92;;;24252:23;24256:2;24259:1;24256:5;;;;;;;;;;;;;;;;;;24263:11;:2;24266:1;24263:5;;;;;;;;;;;;;:9;:11::i;:::-;24252:3;:23::i;:::-;24240:6;24247:1;24240:9;;;;;;;;;;;;:35;;;;24221:3;;;;;;;24194:92;;;;24071:221;;;;:::o;25133:192::-;25203:24;;:::i;:::-;25244:9;25256:1;25244:13;;25239:80;162:2;25259:1;:5;25239:80;;;25297:11;25306:1;25297;25299;25297:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;25285:6;25292:1;25285:9;;;;;;;;;;;;:23;;;;;25266:3;;;;;;;25239:80;;;;25133:192;;;;:::o;23855:210::-;23940:24;;:::i;:::-;23981:9;23993:1;23981:13;;23976:83;162:2;23996:1;:5;23976:83;;;24034:14;24043:1;24045;24043:4;;;;;;;;;;;;;24034:1;24036;24034:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;24022:6;24029:1;24022:9;;;;;;;;;;;;:26;;;;;24003:3;;;;;;;23976:83;;;;23855:210;;;;:::o;24484:177::-;24547:18;;:::i;:::-;24582:9;24594:1;24582:13;;24577:78;162:2;24597:1;:5;24577:78;;;24629:15;24633:3;24638:2;24641:1;24638:5;;;;;;;;;;;;;;;;;;24629:3;:15::i;:::-;24623:21;;24604:3;;;;;;;24577:78;;;;24484:177;;;:::o;24667:218::-;24750:21;;:::i;:::-;24788:9;24800:1;24788:13;;24783:96;162:2;24803:1;:5;24783:96;;;24838:30;24842:6;24850:17;24854:2;24857:1;24854:5;;;;;;;;;;;;;24861:2;24864:1;24861:5;;;;;;;;;;;;;24850:3;:17::i;:::-;24838:3;:30::i;:::-;24829:39;;24810:3;;;;;;;24783:96;;;;24667:218;;;;:::o;611:103:3:-;658:7;684:23;688:1;705;110:77;691:15;684:3;:23::i;:::-;677:30;;611:103;;;:::o;15448:899:5:-;15574:23;15759:12;15790:8;15780:7;:18;15774:1;:25;15759:40;;15857:4;15843:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;15843:19:5;;;;15834:28;;15888:8;15877:7;:19;15873:94;;;15924:5;15912:6;15919:1;15912:9;;;;;;;;;;;;;;;;;:17;;;;;15950:6;15943:13;;;;;15873:94;15996:1;15986:7;:11;15976:21;;16008;16032:68;16053:8;16063:7;16072:24;16082:1;16084:7;16082:10;;;;;;;;;;;;;;;;;;16093:1;16082:13;;;;;;;;;;;;;16072:5;:9;;:24;;;;:::i;:::-;16098:1;16032:20;:68::i;:::-;16008:92;;16110:22;16135:68;16156:8;16166:7;16175:24;16185:1;16187:7;16185:10;;;;;;;;;;;;;;;;;;16196:1;16185:13;;;;;;;;;;;;;16175:5;:9;;:24;;;;:::i;:::-;16201:1;16135:20;:68::i;:::-;16110:93;;16218:9;16230:1;16218:13;;16213:128;16244:1;16237:4;:8;;;;;;;;16233:1;:12;16213:128;;;16278:4;16283:1;16278:7;;;;;;;;;;;;;;;;;;16266:6;16273:1;16266:9;;;;;;;;;;;;;;;;;:19;;;;;16322:5;16328:1;16322:8;;;;;;;;;;;;;;;;;;16299:6;16317:1;16310:4;:8;;;;;;;;16306:1;:12;16299:20;;;;;;;;;;;;;;;;;:31;;;;;16247:3;;;;;;;16213:128;;;;15448:899;;;;;;;;;;:::o;17825:997::-;17899:23;17934:12;17949:5;:12;17934:27;;17983:1;17975:4;:9;17971:52;;;18007:5;18000:12;;;;;17971:52;18052:1;18047;18040:4;:8;;;;;;;;:13;18032:57;;;;;;;;;;;;;;;;;;;;;;;;18100:13;18116:23;18134:4;18126:5;:12;;;;;;;;337:76;18116:9;;:23;;;;:::i;:::-;18100:39;;18149:20;18172:1;18149:24;;18187:7;18183:87;;;18218:11;:5;:9;:11::i;:::-;18210:19;;18258:1;18243:16;;18183:87;18294:18;:12;:16;:18::i;:::-;18279:33;;18322:21;18346:31;18350:17;18358:5;18365:1;18350:7;:17::i;:::-;18369:7;18346:3;:31::i;:::-;18322:55;;18387:20;18410:31;18414:17;18422:5;18429:1;18414:7;:17::i;:::-;18433:7;18410:3;:31::i;:::-;18387:54;;18451:17;18471:1;18451:21;;18505:4;18491:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18482:28;;18525:9;18537:1;18525:13;;18520:296;18551:1;18544:4;:8;;;;;;;;18540:1;:12;18520:296;;;18573:19;;:::i;:::-;18595:22;18599:3;18603:1;18599:6;;;;;;;;;;;;;;;;;;18607:9;18595:3;:22::i;:::-;18573:44;;18643:37;18647:18;18651:4;18656:1;18651:7;;;;;;;;;;;;;;;;;;18660:4;18647:3;:18::i;:::-;18667:12;18643:3;:37::i;:::-;18631:6;18638:1;18631:9;;;;;;;;;;;;;;;;;:49;;;;18717:42;18721:23;18725:4;18730:1;18725:7;;;;;;;;;;;;;;;;;;18734:9;18738:4;18734:3;:9::i;:::-;18721:3;:23::i;:::-;18746:12;18717:3;:42::i;:::-;18694:6;18712:1;18705:4;:8;;;;;;;;18701:1;:12;18694:20;;;;;;;;;;;;;;;;;:65;;;;18785:20;18799:5;18785:9;:13;;:20;;;;:::i;:::-;18773:32;;18520:296;18554:3;;;;;;;18520:296;;;;17825:997;;;;;;;;;;;:::o;19110:739::-;19170:23;19205:12;19220:5;:12;19205:27;;19254:1;19246:4;:9;19242:52;;;19278:5;19271:12;;;;;19242:52;19323:1;19318;19311:4;:8;;;;;;;;:13;19303:57;;;;;;;;;;;;;;;;;;;;;;;;19371:13;19387:23;19405:4;19397:5;:12;;;;;;;;337:76;19387:9;;:23;;;;:::i;:::-;19371:39;;19420:21;19444:22;19448:17;19456:5;19463:1;19448:7;:17::i;:::-;19444:3;:22::i;:::-;19420:46;;19476:20;19499:22;19503:17;19511:5;19518:1;19503:7;:17::i;:::-;19499:3;:22::i;:::-;19476:45;;19531:17;19551:1;19531:21;;19585:4;19571:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19571:19:5;;;;19562:28;;19605:9;19617:1;19605:13;;19600:243;19631:1;19624:4;:8;;;;;;;;19620:1;:12;19600:243;;;19653:12;19668:21;19679:9;19668:3;19672:1;19668:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;19653:36;;19715:17;19727:4;19715;19720:1;19715:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;19703:6;19710:1;19703:9;;;;;;;;;;;;;;;;;:29;;;;;19769:17;19781:4;19769;19774:1;19769:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;19746:6;19764:1;19757:4;:8;;;;;;;;19753:1;:12;19746:20;;;;;;;;;;;;;;;;;:40;;;;;19812:20;19826:5;19812:9;:13;;:20;;;;:::i;:::-;19800:32;;19600:243;19634:3;;;;;;;19600:243;;;;19110:739;;;;;;;;;:::o;27488:449::-;27542:14;;:::i;:::-;27568:9;27587:311;27594:4;27587:311;;;27614:16;27653:1;27633:17;27642:4;27648:1;27633:8;:17::i;:::-;:21;27614:40;;27740:41;27749:8;27779:1;27774;229:77;27760:15;27759:21;;;;;;;;27740:8;:41::i;:::-;27736:45;;27817:8;27799:14;27808:1;27811;27799:8;:14::i;:::-;:26;27795:70;;;27845:5;;;27795:70;27886:1;27878:9;;;;27587:311;;;;27914:16;;;;;;;;;27922:4;27914:16;;;;27928:1;27914:16;;;27907:23;;;27488:449;;;:::o;18828:276::-;18908:23;18981:1;18966:5;:12;:16;;;;;;;;18952:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18943:40;;18998:9;19010:1;18998:13;;18993:105;19032:1;19017:5;:12;:16;;;;;;;;19013:1;:20;18993:105;;;19066:5;19080:6;19076:1;19072;:5;:14;19066:21;;;;;;;;;;;;;;;;;;19054:6;19061:1;19054:9;;;;;;;;;;;;;;;;;:33;;;;19035:3;;;;;;;18993:105;;;;18828:276;;;;:::o;19855:::-;19935:23;20008:1;19993:5;:12;:16;;;;;;;;19979:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19979:31:5;;;;19970:40;;20025:9;20037:1;20025:13;;20020:105;20059:1;20044:5;:12;:16;;;;;;;;20040:1;:20;20020:105;;;20093:5;20107:6;20103:1;20099;:5;:14;20093:21;;;;;;;;;;;;;;;;;;20081:6;20088:1;20081:9;;;;;;;;;;;;;;;;;:33;;;;;20062:3;;;;;;;20020:105;;;;19855:276;;;;:::o;26872:610::-;26945:14;26996:13;229:77;26996:27;;27071:4;27065:11;27099:4;27096:1;27089:15;27138:4;27131;27128:1;27124:12;27117:26;27177:4;27170;27167:1;27163:12;27156:26;27216:4;27209;27206:1;27202:12;27195:26;27255:8;27248:4;27245:1;27241:12;27234:30;27298:5;27291:4;27288:1;27284:12;27277:27;27361:4;27358:1;27352:4;27349:1;27343:4;27338:3;27327:39;27320:47;27317:2;;;27419:1;27416;27409:12;27317:2;27464:1;27458:8;27448:18;;27042:434;;;;;;:::o;81:28218::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28218:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28218:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28218:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28218:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28218:5;;;;:::o;26:764:-1:-;;162:3;155:4;147:6;143:17;139:27;132:35;129:2;;;180:1;177;170:12;129:2;217:6;204:20;239:99;254:83;330:6;254:83;;;239:99;;;230:108;;355:5;380:6;373:5;366:21;410:4;402:6;398:17;388:27;;432:4;427:3;423:14;416:21;;485:6;532:3;524:4;516:6;512:17;507:3;503:27;500:36;497:2;;;549:1;546;539:12;497:2;574:1;559:225;584:6;581:1;578:13;559:225;;;642:3;664:56;716:3;704:10;664:56;;;659:3;652:69;744:4;739:3;735:14;728:21;;772:4;767:3;763:14;756:21;;616:168;606:1;603;599:9;594:14;;559:225;;;563:14;122:668;;;;;;;;817:607;;928:3;921:4;913:6;909:17;905:27;898:35;895:2;;;946:1;943;936:12;895:2;970:3;988:74;1003:58;1054:6;1003:58;;;988:74;;;979:83;;1079:5;1138:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:2;;;1202:1;1199;1192:12;1150:2;1227:1;1212:206;1237:6;1234:1;1231:13;1212:206;;;1295:3;1317:37;1350:3;1338:10;1317:37;;;1312:3;1305:50;1378:4;1373:3;1369:14;1362:21;;1406:4;1401:3;1397:14;1390:21;;1269:149;1259:1;1256;1252:9;1247:14;;1212:206;;;1216:14;888:536;;;;;;;;1451:615;;1566:3;1559:4;1551:6;1547:17;1543:27;1536:35;1533:2;;;1584:1;1581;1574:12;1533:2;1608:3;1626:78;1641:62;1696:6;1641:62;;;1626:78;;;1617:87;;1721:5;1780:6;1827:3;1819:4;1811:6;1807:17;1802:3;1798:27;1795:36;1792:2;;;1844:1;1841;1834:12;1792:2;1869:1;1854:206;1879:6;1876:1;1873:13;1854:206;;;1937:3;1959:37;1992:3;1980:10;1959:37;;;1954:3;1947:50;2020:4;2015:3;2011:14;2004:21;;2048:4;2043:3;2039:14;2032:21;;1911:149;1901:1;1898;1894:9;1889:14;;1854:206;;;1858:14;1526:540;;;;;;;;2074:118;;2141:46;2179:6;2166:20;2141:46;;;2132:55;;2126:66;;;;;2200:440;;2301:3;2294:4;2286:6;2282:17;2278:27;2271:35;2268:2;;;2319:1;2316;2309:12;2268:2;2356:6;2343:20;2378:64;2393:48;2434:6;2393:48;;;2378:64;;;2369:73;;2462:6;2455:5;2448:21;2498:4;2490:6;2486:17;2531:4;2524:5;2520:16;2566:3;2557:6;2552:3;2548:16;2545:25;2542:2;;;2583:1;2580;2573:12;2542:2;2593:41;2627:6;2622:3;2617;2593:41;;;2261:379;;;;;;;;2648:118;;2715:46;2753:6;2740:20;2715:46;;;2706:55;;2700:66;;;;;2773:2013;;;;;;;;;3227:3;3215:9;3206:7;3202:23;3198:33;3195:2;;;3244:1;3241;3234:12;3195:2;3307:1;3296:9;3292:17;3279:31;3330:18;3322:6;3319:30;3316:2;;;3362:1;3359;3352:12;3316:2;3382:97;3471:7;3462:6;3451:9;3447:22;3382:97;;;3372:107;;3258:227;3544:2;3533:9;3529:18;3516:32;3568:18;3560:6;3557:30;3554:2;;;3600:1;3597;3590:12;3554:2;3620:97;3709:7;3700:6;3689:9;3685:22;3620:97;;;3610:107;;3495:228;3782:2;3771:9;3767:18;3754:32;3806:18;3798:6;3795:30;3792:2;;;3838:1;3835;3828:12;3792:2;3858:97;3947:7;3938:6;3927:9;3923:22;3858:97;;;3848:107;;3733:228;3992:2;4010:76;4078:7;4069:6;4058:9;4054:22;4010:76;;;4000:86;;3971:121;4151:3;4140:9;4136:19;4123:33;4176:18;4168:6;4165:30;4162:2;;;4208:1;4205;4198:12;4162:2;4228:97;4317:7;4308:6;4297:9;4293:22;4228:97;;;4218:107;;4102:229;4362:3;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4341:99;4471:3;4490:76;4558:7;4549:6;4538:9;4534:22;4490:76;;;4480:86;;4450:122;4631:3;4620:9;4616:19;4603:33;4656:18;4648:6;4645:30;4642:2;;;4688:1;4685;4678:12;4642:2;4708:62;4762:7;4753:6;4742:9;4738:22;4708:62;;;4698:72;;4582:194;3189:1597;;;;;;;;;;;;4794:259;;4922:91;5009:3;5002:5;4922:91;;;5042:4;5037:3;5033:14;5019:28;;4915:138;;;;;5138:743;5309:69;5372:5;5309:69;;;5391:105;5489:6;5484:3;5391:105;;;5384:112;;5516:71;5581:5;5516:71;;;5608:1;5593:276;5618:6;5615:1;5612:13;5593:276;;;5665:105;5766:3;5757:6;5751:13;5665:105;;;5658:112;;5787:75;5855:6;5787:75;;;5777:85;;5640:1;5637;5633:9;5628:14;;5593:276;;;5597:14;5288:593;;;;;5964:773;;6147:71;6212:5;6147:71;;;6231:107;6331:6;6326:3;6231:107;;;6224:114;;6358:73;6425:5;6358:73;;;6452:1;6437:278;6462:6;6459:1;6456:13;6437:278;;;6509:105;6610:3;6601:6;6595:13;6509:105;;;6502:112;;6631:77;6701:6;6631:77;;;6621:87;;6484:1;6481;6477:9;6472:14;;6437:278;;;6441:14;6728:3;6721:10;;6126:611;;;;;;;6745:111;6822:28;6844:5;6822:28;;;6817:3;6810:41;6804:52;;;6863:360;;6993:39;7026:5;6993:39;;;7044:89;7126:6;7121:3;7044:89;;;7037:96;;7138:52;7183:6;7178:3;7171:4;7164:5;7160:16;7138:52;;;7211:6;7206:3;7202:16;7195:23;;6973:250;;;;;;7231:364;;7391:67;7455:2;7450:3;7391:67;;;7384:74;;7491:66;7487:1;7482:3;7478:11;7471:87;7586:2;7581:3;7577:12;7570:19;;7377:218;;;;7604:465;;7764:67;7828:2;7823:3;7764:67;;;7757:74;;7864:66;7860:1;7855:3;7851:11;7844:87;7965:66;7960:2;7955:3;7951:12;7944:88;8060:2;8055:3;8051:12;8044:19;;7750:319;;;;8078:364;;8238:67;8302:2;8297:3;8238:67;;;8231:74;;8338:66;8334:1;8329:3;8325:11;8318:87;8433:2;8428:3;8424:12;8417:19;;8224:218;;;;8451:364;;8611:67;8675:2;8670:3;8611:67;;;8604:74;;8711:66;8707:1;8702:3;8698:11;8691:87;8806:2;8801:3;8797:12;8790:19;;8597:218;;;;8824:364;;8984:67;9048:2;9043:3;8984:67;;;8977:74;;9084:66;9080:1;9075:3;9071:11;9064:87;9179:2;9174:3;9170:12;9163:19;;8970:218;;;;9197:465;;9357:67;9421:2;9416:3;9357:67;;;9350:74;;9457:66;9453:1;9448:3;9444:11;9437:87;9558:66;9553:2;9548:3;9544:12;9537:88;9653:2;9648:3;9644:12;9637:19;;9343:319;;;;9739:450;9868:4;9863:3;9859:14;9947:3;9940:5;9936:15;9930:22;9958:61;10014:3;10009;10005:13;9992:11;9958:61;;;9888:137;10094:4;10087:5;10083:16;10077:23;10106:62;10162:4;10157:3;10153:14;10140:11;10106:62;;;10035:139;9841:348;;;;10265:460;10404:4;10399:3;10395:14;10483:3;10476:5;10472:15;10466:22;10494:61;10550:3;10545;10541:13;10528:11;10494:61;;;10424:137;10630:4;10623:5;10619:16;10613:23;10642:62;10698:4;10693:3;10689:14;10676:11;10642:62;;;10571:139;10377:348;;;;10732:110;10805:31;10830:5;10805:31;;;10800:3;10793:44;10787:55;;;10849:120;10932:31;10957:5;10932:31;;;10927:3;10920:44;10914:55;;;10976:159;11077:52;11097:31;11122:5;11097:31;;;11077:52;;;11072:3;11065:65;11059:76;;;11142:405;;11316:95;11407:3;11398:6;11316:95;;;11309:102;;11422:75;11493:3;11484:6;11422:75;;;11519:2;11514:3;11510:12;11503:19;;11539:3;11532:10;;11297:250;;;;;;11554:1759;;12210:3;12199:9;12195:19;12187:27;;12261:9;12255:4;12251:20;12247:1;12236:9;12232:17;12225:47;12286:146;12427:4;12418:6;12286:146;;;12278:154;;12480:9;12474:4;12470:20;12465:2;12454:9;12450:18;12443:48;12505:146;12646:4;12637:6;12505:146;;;12497:154;;12699:9;12693:4;12689:20;12684:2;12673:9;12669:18;12662:48;12724:146;12865:4;12856:6;12724:146;;;12716:154;;12881:118;12995:2;12984:9;12980:18;12971:6;12881:118;;;13048:9;13042:4;13038:20;13032:3;13021:9;13017:19;13010:49;13073:146;13214:4;13205:6;13073:146;;;13065:154;;13230:73;13298:3;13287:9;13283:19;13274:6;13230:73;;;12181:1132;;;;;;;;;;13320:201;;13432:2;13421:9;13417:18;13409:26;;13446:65;13508:1;13497:9;13493:17;13484:6;13446:65;;;13403:118;;;;;13528:407;;13719:2;13708:9;13704:18;13696:26;;13769:9;13763:4;13759:20;13755:1;13744:9;13740:17;13733:47;13794:131;13920:4;13794:131;;;13786:139;;13690:245;;;;13942:407;;14133:2;14122:9;14118:18;14110:26;;14183:9;14177:4;14173:20;14169:1;14158:9;14154:17;14147:47;14208:131;14334:4;14208:131;;;14200:139;;14104:245;;;;14356:407;;14547:2;14536:9;14532:18;14524:26;;14597:9;14591:4;14587:20;14583:1;14572:9;14568:17;14561:47;14622:131;14748:4;14622:131;;;14614:139;;14518:245;;;;14770:407;;14961:2;14950:9;14946:18;14938:26;;15011:9;15005:4;15001:20;14997:1;14986:9;14982:17;14975:47;15036:131;15162:4;15036:131;;;15028:139;;14932:245;;;;15184:407;;15375:2;15364:9;15360:18;15352:26;;15425:9;15419:4;15415:20;15411:1;15400:9;15396:17;15389:47;15450:131;15576:4;15450:131;;;15442:139;;15346:245;;;;15598:407;;15789:2;15778:9;15774:18;15766:26;;15839:9;15833:4;15829:20;15825:1;15814:9;15810:17;15803:47;15864:131;15990:4;15864:131;;;15856:139;;15760:245;;;;16012:213;;16130:2;16119:9;16115:18;16107:26;;16144:71;16212:1;16201:9;16197:17;16188:6;16144:71;;;16101:124;;;;;16232:493;;16462:3;16451:9;16447:19;16439:27;;16477:71;16545:1;16534:9;16530:17;16521:6;16477:71;;;16559:156;16711:2;16700:9;16696:18;16687:6;16559:156;;;16433:292;;;;;;16732:2899;;17778:3;17767:9;17763:19;17755:27;;17793:71;17861:1;17850:9;17846:17;17837:6;17793:71;;;17912:9;17906:4;17902:20;17897:2;17886:9;17882:18;17875:48;17937:146;18078:4;18069:6;17937:146;;;17929:154;;18131:9;18125:4;18121:20;18116:2;18105:9;18101:18;18094:48;18156:146;18297:4;18288:6;18156:146;;;18148:154;;18350:9;18344:4;18340:20;18335:2;18324:9;18320:18;18313:48;18375:146;18516:4;18507:6;18375:146;;;18367:154;;18570:9;18564:4;18560:20;18554:3;18543:9;18539:19;18532:49;18595:146;18736:4;18727:6;18595:146;;;18587:154;;18790:9;18784:4;18780:20;18774:3;18763:9;18759:19;18752:49;18815:146;18956:4;18947:6;18815:146;;;18807:154;;19010:9;19004:4;19000:20;18994:3;18983:9;18979:19;18972:49;19035:146;19176:4;19167:6;19035:146;;;19027:154;;19230:9;19224:4;19220:20;19214:3;19203:9;19199:19;19192:49;19255:146;19396:4;19387:6;19255:146;;;19247:154;;19450:9;19444:4;19440:20;19434:3;19423:9;19419:19;19412:49;19475:146;19616:4;19607:6;19475:146;;;19467:154;;17749:1882;;;;;;;;;;;;;19638:620;;19904:3;19893:9;19889:19;19881:27;;19919:71;19987:1;19976:9;19972:17;19963:6;19919:71;;;20001:118;20115:2;20104:9;20100:18;20091:6;20001:118;;;20130;20244:2;20233:9;20229:18;20220:6;20130:118;;;19875:383;;;;;;;20265:1028;;20679:3;20668:9;20664:19;20656:27;;20694:71;20762:1;20751:9;20747:17;20738:6;20694:71;;;20776:118;20890:2;20879:9;20875:18;20866:6;20776:118;;;20905;21019:2;21008:9;21004:18;20995:6;20905:118;;;21034:119;21148:3;21137:9;21133:19;21124:6;21034:119;;;21164;21278:3;21267:9;21263:19;21254:6;21164:119;;;20650:643;;;;;;;;;21300:1844;;22010:3;21999:9;21995:19;21987:27;;22025:71;22093:1;22082:9;22078:17;22069:6;22025:71;;;22107:118;22221:2;22210:9;22206:18;22197:6;22107:118;;;22236;22350:2;22339:9;22335:18;22326:6;22236:118;;;22365:119;22479:3;22468:9;22464:19;22455:6;22365:119;;;22495;22609:3;22598:9;22594:19;22585:6;22495:119;;;22625;22739:3;22728:9;22724:19;22715:6;22625:119;;;22755;22869:3;22858:9;22854:19;22845:6;22755:119;;;22885;22999:3;22988:9;22984:19;22975:6;22885:119;;;23015;23129:3;23118:9;23114:19;23105:6;23015:119;;;21981:1163;;;;;;;;;;;;;23151:2048;;23935:3;23924:9;23920:19;23912:27;;23950:71;24018:1;24007:9;24003:17;23994:6;23950:71;;;24032:118;24146:2;24135:9;24131:18;24122:6;24032:118;;;24161;24275:2;24264:9;24260:18;24251:6;24161:118;;;24290:119;24404:3;24393:9;24389:19;24380:6;24290:119;;;24420;24534:3;24523:9;24519:19;24510:6;24420:119;;;24550;24664:3;24653:9;24649:19;24640:6;24550:119;;;24680;24794:3;24783:9;24779:19;24770:6;24680:119;;;24810;24924:3;24913:9;24909:19;24900:6;24810:119;;;24940;25054:3;25043:9;25039:19;25030:6;24940:119;;;25070;25184:3;25173:9;25169:19;25160:6;25070:119;;;23906:1293;;;;;;;;;;;;;;25206:256;;25268:2;25262:9;25252:19;;25306:4;25298:6;25294:17;25405:6;25393:10;25390:22;25369:18;25357:10;25354:34;25351:62;25348:2;;;25426:1;25423;25416:12;25348:2;25446:10;25442:2;25435:22;25246:216;;;;;25469:277;;25647:18;25639:6;25636:30;25633:2;;;25679:1;25676;25669:12;25633:2;25708:4;25700:6;25696:17;25688:25;;25736:4;25730;25726:15;25718:23;;25570:176;;;;25753:229;;25906:18;25898:6;25895:30;25892:2;;;25938:1;25935;25928:12;25892:2;25967:4;25959:6;25955:17;25947:25;;25829:153;;;;25989:233;;26146:18;26138:6;26135:30;26132:2;;;26178:1;26175;26168:12;26132:2;26207:4;26199:6;26195:17;26187:25;;26069:153;;;;26229:258;;26372:18;26364:6;26361:30;26358:2;;;26404:1;26401;26394:12;26358:2;26448:4;26444:9;26437:4;26429:6;26425:17;26421:33;26413:41;;26477:4;26471;26467:15;26459:23;;26295:192;;;;26496:125;;26608:6;26597:17;;26589:32;;;;26632:138;;26758:4;26750:6;26746:17;26735:28;;26727:43;;;;26779:113;;26884:3;26874:13;;26868:24;;;;26899:124;;27012:5;27006:12;26996:22;;26990:33;;;;27030:92;;27111:5;27105:12;27095:22;;27089:33;;;;27130:137;;27256:4;27248:6;27244:17;27233:28;;27226:41;;;;27276:139;;27404:4;27396:6;27392:17;27381:28;;27374:41;;;;27424:161;;27576:3;27561:18;;27554:31;;;;;27594:199;;27745:6;27740:3;27733:19;27782:4;27777:3;27773:14;27758:29;;27726:67;;;;;27802:163;;27917:6;27912:3;27905:19;27954:4;27949:3;27945:14;27930:29;;27898:67;;;;;27974:145;;28110:3;28095:18;;28088:31;;;;;28127:92;;28207:5;28200:13;28193:21;28182:32;;28176:43;;;;28226:79;;28295:5;28284:16;;28278:27;;;;28312:79;;28381:5;28370:16;;28364:27;;;;28398:79;;28467:5;28456:16;;28450:27;;;;28485:145;28566:6;28561:3;28556;28543:30;28622:1;28613:6;28608:3;28604:16;28597:27;28536:94;;;;28639:268;28704:1;28711:101;28725:6;28722:1;28719:13;28711:101;;;28801:1;28796:3;28792:11;28786:18;28782:1;28777:3;28773:11;28766:39;28747:2;28744:1;28740:10;28735:15;;28711:101;;;28827:6;28824:1;28821:13;28818:2;;;28892:1;28883:6;28878:3;28874:16;28867:27;28818:2;28688:219;;;;;28915:74;;28979:5;28968:16;;28962:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 64;\n    uint256 constant n = 6;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n    uint256 constant UNITY = 9334303377689037989442018753807510978357674015322511348041267794643984346845; // primitive 2^28th root of unity modulo GROUP_ORDER (not field!)\n\n    G1Point[] gs; // warning: this and the below are not statically sized anymore\n    G1Point[] hs; // need to push to these if large anonsets are used.\n    G1Point g;\n    G1Point h;\n\n    struct ZetherStatement {\n        G1Point[] CLn;\n        G1Point[] CRn;\n        G1Point[] C;\n        G1Point D;\n        G1Point[] y;\n        uint256 epoch; // or uint8?\n        G1Point u;\n    }\n\n    struct ZetherProof {\n        G1Point BA;\n        G1Point BS;\n        G1Point A;\n        G1Point B;\n        G1Point C;\n        G1Point D;\n        G1Point E;\n        G1Point F;\n\n        G1Point[] CLnG;\n        G1Point[] CRnG;\n        G1Point[] C_0G;\n        G1Point[] DG;\n        G1Point[] y_0G;\n        G1Point[] gG;\n        G1Point[] C_XG;\n        G1Point[] y_XG;\n\n        uint256[] f;\n        uint256 z_A;\n        uint256 z_C;\n        uint256 z_E;\n\n        G1Point CPrime;\n        G1Point DPrime;\n        G1Point CLnPrime;\n        G1Point CRnPrime;\n\n        G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 tauX;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_r;\n        uint256 s_vTransfer;\n        uint256 s_vDiff;\n        uint256 s_nuTransfer;\n        uint256 s_nuDiff;\n\n        InnerProductProof ipProof;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function verifyTransfer(bytes32[2][] memory CLn, bytes32[2][] memory CRn, bytes32[2][] memory C, bytes32[2] memory D, bytes32[2][] memory y, uint256 epoch, bytes32[2] memory u, bytes memory proof) view public returns (bool) {\n        ZetherStatement memory statement;\n        uint256 size = y.length;\n\n        statement.CLn = new G1Point[](size);\n        statement.CRn = new G1Point[](size);\n        statement.C = new G1Point[](size);\n        statement.y = new G1Point[](size);\n        for (uint256 i = 0; i < size; i++) {\n            statement.CLn[i] = G1Point(uint256(CLn[i][0]), uint256(CLn[i][1]));\n            statement.CRn[i] = G1Point(uint256(CRn[i][0]), uint256(CRn[i][1]));\n            statement.C[i] = G1Point(uint256(C[i][0]), uint256(C[i][1]));\n            statement.y[i] = G1Point(uint256(y[i][0]), uint256(y[i][1]));\n        }\n        statement.D = G1Point(uint256(D[0]), uint256(D[1]));\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[2] zs; // [z^2, z^3]\n        uint256[m] twoTimesZSquared;\n        uint256 zSum;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        G1Point A_y;\n        G1Point A_D;\n        G1Point gEpoch;\n        G1Point A_u;\n        G1Point A_B;\n        G1Point A_X;\n        G1Point c_commit;\n        G1Point A_t;\n        G1Point A_C0;\n        G1Point A_CLn;\n        G1Point A_CPrime;\n        G1Point A_CLnPrime;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 m;\n        uint256 N;\n        uint256 d;\n        uint256 w;\n        uint256 dPow;\n        uint256 wPow;\n        uint256[2][] f; // could just allocate extra space in the proof?\n        uint256[2][] r; // each poly is an array of length N. evaluations of prods\n        G1Point temp;\n        G1Point CLnR;\n        G1Point CRnR;\n        G1Point[2][] CR;\n        G1Point[2][] yR;\n        G1Point C_XR;\n        G1Point y_XR;\n        G1Point gR;\n        G1Point DR;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u_x;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 o;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) view internal returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.C, statement.D, statement.y, statement.epoch))).mod();\n\n        AnonAuxiliaries memory anonAuxiliaries;\n        anonAuxiliaries.d = uint256(keccak256(abi.encode(statementHash, proof.BA, proof.BS, proof.A, proof.B, proof.C, proof.D, proof.E, proof.F))).mod();\n        anonAuxiliaries.w = uint256(keccak256(abi.encode(anonAuxiliaries.d, proof.CLnG, proof.CRnG, proof.C_0G, proof.DG, proof.y_0G, proof.gG, proof.C_XG, proof.y_XG))).mod();\n        anonAuxiliaries.m = proof.f.length / 2;\n        anonAuxiliaries.N = 2 ** anonAuxiliaries.m;\n        anonAuxiliaries.f = new uint256[2][](2 * anonAuxiliaries.m);\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) {\n            anonAuxiliaries.f[k][1] = proof.f[k];\n            anonAuxiliaries.f[k][0] = anonAuxiliaries.w.sub(proof.f[k]);\n        }\n\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) {\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[k], anonAuxiliaries.f[k][1]));\n        }\n        require(eq(add(mul(proof.B, anonAuxiliaries.w), proof.A), add(anonAuxiliaries.temp, mul(h, proof.z_A))), \"Recovery failure for B^w * A.\");\n\n        anonAuxiliaries.temp = G1Point(0, 0);\n        for (uint256 k = 0; k < 2 * anonAuxiliaries.m; k++) { // danger... gs and hs need to be big enough.\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[k], anonAuxiliaries.f[k][1].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[k][1]))));\n        }\n        require(eq(add(mul(proof.C, anonAuxiliaries.w), proof.D), add(anonAuxiliaries.temp, mul(h, proof.z_C))), \"Recovery failure for C^w * D.\");\n\n        anonAuxiliaries.temp = add(mul(gs[0], anonAuxiliaries.f[0][1].mul(anonAuxiliaries.f[anonAuxiliaries.m][1])), mul(gs[1], anonAuxiliaries.f[0][0].mul(anonAuxiliaries.f[anonAuxiliaries.m][0])));\n        require(eq(add(mul(proof.F, anonAuxiliaries.w), proof.E), add(anonAuxiliaries.temp, mul(h, proof.z_E))), \"Recovery failure for F^w * E.\");\n\n        anonAuxiliaries.r = assemblePolynomials(anonAuxiliaries.f);\n\n        anonAuxiliaries.CR = assembleConvolutions(anonAuxiliaries.r, statement.C);\n        anonAuxiliaries.yR = assembleConvolutions(anonAuxiliaries.r, statement.y);\n        for (uint256 i = 0; i < anonAuxiliaries.N; i++) {\n            anonAuxiliaries.CLnR = add(anonAuxiliaries.CLnR, mul(statement.CLn[i], anonAuxiliaries.r[i][0]));\n            anonAuxiliaries.CRnR = add(anonAuxiliaries.CRnR, mul(statement.CRn[i], anonAuxiliaries.r[i][0]));\n        }\n        anonAuxiliaries.dPow = 1;\n        for (uint256 i = 0; i < anonAuxiliaries.N; i++) {\n            anonAuxiliaries.C_XR = add(anonAuxiliaries.C_XR, mul(anonAuxiliaries.CR[i / 2][i % 2], anonAuxiliaries.dPow));\n            anonAuxiliaries.y_XR = add(anonAuxiliaries.y_XR, mul(anonAuxiliaries.yR[i / 2][i % 2], anonAuxiliaries.dPow));\n            if (i > 0) {\n                anonAuxiliaries.dPow = anonAuxiliaries.dPow.mul(anonAuxiliaries.d);\n            }\n        }\n        anonAuxiliaries.wPow = 1;\n        for (uint256 k = 0; k < anonAuxiliaries.m; k++) {\n            anonAuxiliaries.CLnR = add(anonAuxiliaries.CLnR, mul(proof.CLnG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CRnR = add(anonAuxiliaries.CRnR, mul(proof.CRnG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CR[0][0] = add(anonAuxiliaries.CR[0][0], mul(proof.C_0G[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.DR = add(anonAuxiliaries.DR, mul(proof.DG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.yR[0][0] = add(anonAuxiliaries.yR[0][0], mul(proof.y_0G[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.gR = add(anonAuxiliaries.gR, mul(proof.gG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.C_XR = add(anonAuxiliaries.C_XR, mul(proof.C_XG[k], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.y_XR = add(anonAuxiliaries.y_XR, mul(proof.y_XG[k], anonAuxiliaries.wPow.neg()));\n\n            anonAuxiliaries.wPow = anonAuxiliaries.wPow.mul(anonAuxiliaries.w);\n        }\n        anonAuxiliaries.DR = add(anonAuxiliaries.DR, mul(statement.D, anonAuxiliaries.wPow));\n        anonAuxiliaries.gR = add(anonAuxiliaries.gR, mul(g, anonAuxiliaries.wPow));\n\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(anonAuxiliaries.w, proof.CPrime, proof.DPrime, proof.CLnPrime, proof.CRnPrime))).mod();\n        zetherAuxiliaries.ys = powers(zetherAuxiliaries.y);\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs = [zetherAuxiliaries.z.exp(2), zetherAuxiliaries.z.exp(3)];        \n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = sumScalars(zetherAuxiliaries.ys).mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** (m / 2)).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.t = proof.tHat.sub(zetherAuxiliaries.k);\n        for (uint256 i = 0; i < m / 2; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + m / 2] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.tCommits))).mod();\n        zetherAuxiliaries.tEval = add(mul(proof.tCommits[0], zetherAuxiliaries.x), mul(proof.tCommits[1], zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = add(mul(anonAuxiliaries.gR, proof.s_sk), mul(anonAuxiliaries.yR[0][0], proof.c.neg()));\n        sigmaAuxiliaries.A_D = add(mul(g, proof.s_r), mul(statement.D, proof.c.neg())); // add(mul(anonAuxiliaries.gR, proof.s_r), mul(anonAuxiliaries.DR, proof.c.neg()));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = add(mul(sigmaAuxiliaries.gEpoch, proof.s_sk), mul(statement.u, proof.c.neg()));\n        sigmaAuxiliaries.A_X = add(mul(anonAuxiliaries.y_XR, proof.s_r), mul(anonAuxiliaries.C_XR, proof.c.neg()));\n        sigmaAuxiliaries.c_commit = add(mul(add(mul(add(anonAuxiliaries.DR, proof.DPrime), proof.s_sk), mul(add(anonAuxiliaries.CR[0][0], proof.CPrime), proof.c.neg())), zetherAuxiliaries.zs[0]), mul(add(mul(add(anonAuxiliaries.CRnR, proof.CRnPrime), proof.s_sk), mul(add(anonAuxiliaries.CLnR, proof.CLnPrime), proof.c.neg())), zetherAuxiliaries.zs[1]));\n        sigmaAuxiliaries.A_t = add(mul(add(add(mul(g, zetherAuxiliaries.t), mul(h, proof.tauX)), neg(zetherAuxiliaries.tEval)), proof.c.mul(anonAuxiliaries.wPow)), sigmaAuxiliaries.c_commit);\n        sigmaAuxiliaries.A_C0 = add(mul(g, proof.s_vTransfer), add(mul(anonAuxiliaries.DR, proof.s_sk), mul(anonAuxiliaries.CR[0][0], proof.c.neg())));\n        sigmaAuxiliaries.A_CLn = add(mul(g, proof.s_vDiff), add(mul(anonAuxiliaries.CRnR, proof.s_sk), mul(anonAuxiliaries.CLnR, proof.c.neg())));\n        sigmaAuxiliaries.A_CPrime = add(mul(h, proof.s_nuTransfer), add(mul(proof.DPrime, proof.s_sk), mul(proof.CPrime, proof.c.neg())));\n        sigmaAuxiliaries.A_CLnPrime = add(mul(h, proof.s_nuDiff), add(mul(proof.CRnPrime, proof.s_sk), mul(proof.CLnPrime, proof.c.neg())));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(zetherAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_D, sigmaAuxiliaries.A_u, sigmaAuxiliaries.A_X, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_C0, sigmaAuxiliaries.A_CLn, sigmaAuxiliaries.A_CPrime, sigmaAuxiliaries.A_CLnPrime))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = mul(g, ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = hadamardInv(hs, zetherAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(zetherAuxiliaries.ys, zetherAuxiliaries.z), zetherAuxiliaries.twoTimesZSquared);\n        ipAuxiliaries.P = add(add(add(proof.BA, mul(proof.BS, zetherAuxiliaries.x)), mul(sumPoints(gs), zetherAuxiliaries.z.neg())), commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(h, proof.mu.neg()));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u_x, proof.tHat));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.o = uint256(keccak256(abi.encode(ipAuxiliaries.o, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.o; // overwrites value\n            uint256 xInv = ipAuxiliaries.o.inv();\n            ipAuxiliaries.P = add(ipAuxiliaries.P, add(mul(ipProof.ls[i], ipAuxiliaries.o.exp(2)), mul(ipProof.rs[i], xInv.exp(2))));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u_x, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function assemblePolynomials(uint256[2][] memory f) internal view returns (uint256[2][] memory result) {\n        uint256 m = f.length / 2;\n        uint256 N = 2 ** m;\n        result = new uint256[2][](N);\n        for (uint256 i = 0; i < 2; i++) {\n            uint256[] memory half = recursivePolynomials(i * m, (i + 1) * m, 1, f);\n            for (uint256 j = 0; j < N; j++) {\n                result[j][i] = half[j];\n            }\n        }\n    }\n\n    function recursivePolynomials(uint256 baseline, uint256 current, uint256 accum, uint256[2][] memory f) internal view returns (uint256[] memory result) {\n        // have to do a bunch of re-allocating because solidity won't let me have something which is internal and also modifies (internal) state. (?)\n        uint256 size = 2 ** (current - baseline); // size is at least 2...\n        result = new uint256[](size);\n\n        if (current == baseline) {\n            result[0] = accum;\n            return result;\n        }\n        current = current - 1;\n\n        uint256[] memory left = recursivePolynomials(baseline, current, accum.mul(f[current][0]), f);\n        uint256[] memory right = recursivePolynomials(baseline, current, accum.mul(f[current][1]), f);\n        for (uint256 i = 0; i < size / 2; i++) {\n            result[i] = left[i];\n            result[i + size / 2] = right[i];\n        }\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, G1Point[] memory base) internal view returns (G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            G1Point[] memory inverse_fft = new G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = mul(add(mul(base_fft[j], exponent_fft[j]), mul(base_fft[j + half], exponent_fft[j + half])), compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n    }\n\n    function fft(G1Point[] memory input, bool inverse) internal view returns (G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        G1Point[] memory even = fft(extract(input, 0), inverse);\n        G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            G1Point memory temp = mul(odd[i], omega_run);\n            result[i] = mul(add(even[i], temp), compensation);\n            result[i + size / 2] = mul(add(even[i], neg(temp)), compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(G1Point[] memory input, uint256 parity) internal pure returns (G1Point[] memory result) {\n        result = new G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.BA = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.BS = G1Point(slice(arr, 64), slice(arr, 96));\n        proof.A = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.B = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.C = G1Point(slice(arr, 256), slice(arr, 288));\n        proof.D = G1Point(slice(arr, 320), slice(arr, 352));\n        proof.E = G1Point(slice(arr, 384), slice(arr, 416));\n        proof.F = G1Point(slice(arr, 448), slice(arr, 480));\n\n        uint256 m = (arr.length - 2144) / 576;\n        proof.CLnG = new G1Point[](m);\n        proof.CRnG = new G1Point[](m);\n        proof.C_0G = new G1Point[](m);\n        proof.DG = new G1Point[](m);\n        proof.y_0G = new G1Point[](m);\n        proof.gG = new G1Point[](m);\n        proof.C_XG = new G1Point[](m);\n        proof.y_XG = new G1Point[](m);\n        proof.f = new uint256[](2 * m);\n        for (uint256 k = 0; k < m; k++) {\n            proof.CLnG[k] = G1Point(slice(arr, 512 + k * 64), slice(arr, 544 + k * 64));\n            proof.CRnG[k] = G1Point(slice(arr, 512 + (m + k) * 64), slice(arr, 544 + (m + k) * 64));\n            proof.C_0G[k] = G1Point(slice(arr, 512 + m * 128 + k * 64), slice(arr, 544 + m * 128 + k * 64));\n            proof.DG[k] = G1Point(slice(arr, 512 + m * 192 + k * 64), slice(arr, 544 + m * 192 + k * 64));\n            proof.y_0G[k] = G1Point(slice(arr, 512 + m * 256 + k * 64), slice(arr, 544 + m * 256 + k * 64));\n            proof.gG[k] = G1Point(slice(arr, 512 + m * 320 + k * 64), slice(arr, 544 + m * 320 + k * 64));\n            proof.C_XG[k] = G1Point(slice(arr, 512 + m * 384 + k * 64), slice(arr, 544 + m * 384 + k * 64));\n            proof.y_XG[k] = G1Point(slice(arr, 512 + m * 448 + k * 64), slice(arr, 544 + m * 448 + k * 64));\n            proof.f[k] = slice(arr, 512 + m * 512 + k * 32);\n            proof.f[k + m] = slice(arr, 512 + m * 544 + k * 32);\n        }\n        uint256 starting = m * 576;\n        proof.z_A = slice(arr, 512 + starting);\n        proof.z_C = slice(arr, 544 + starting);\n        proof.z_E = slice(arr, 576 + starting);\n\n        proof.CPrime = G1Point(slice(arr, 608 + starting), slice(arr, 640 + starting));\n        proof.DPrime = G1Point(slice(arr, 672 + starting), slice(arr, 704 + starting));\n        proof.CLnPrime = G1Point(slice(arr, 736 + starting), slice(arr, 768 + starting));\n        proof.CRnPrime = G1Point(slice(arr, 800 + starting), slice(arr, 832 + starting));\n\n        proof.tCommits = [G1Point(slice(arr, 864 + starting), slice(arr, 896 + starting)), G1Point(slice(arr, 928 + starting), slice(arr, 960 + starting))];\n        proof.tHat = slice(arr, 992 + starting);\n        proof.tauX = slice(arr, 1024 + starting);\n        proof.mu = slice(arr, 1056 + starting);\n\n        proof.c = slice(arr, 1088 + starting);\n        proof.s_sk = slice(arr, 1120 + starting);\n        proof.s_r = slice(arr, 1152 + starting);\n        proof.s_vTransfer = slice(arr, 1184 + starting);\n        proof.s_vDiff = slice(arr, 1216 + starting);\n        proof.s_nuTransfer = slice(arr, 1248 + starting);\n        proof.s_nuDiff = slice(arr, 1280 + starting);\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 1312 + starting + i * 64), slice(arr, 1344 + starting + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 1312 + starting + (n + i) * 64), slice(arr, 1344 + starting + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 1312 + starting + n * 128);\n        ipProof.b = slice(arr, 1344 + starting + n * 128);\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) {\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-12T19:10:52.550Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}