{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "baseSize",
      "outputs": [
        {
          "name": "size",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "size",
          "type": "uint256"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "extendBase",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "L",
          "type": "bytes32[2][]"
        },
        {
          "name": "R",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2][]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2][]\"},{\"name\":\"L\",\"type\":\"bytes32[2][]\"},{\"name\":\"R\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseSize\",\"outputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"extendBase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x0a8fcd9f60c29d4e0114dd2f632688845d0e505943b3bc514698fd91da377ee6\",\"urls\":[\"bzzr://84371071fa5f1d7eba148701bb8d49c9e2de726fd0feb8669bf4754da418e44b\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0xbffc126a1a0ed42b6c885febd2b2f6ee3fd7cfeba15062b524bd3d4f1586e21f\",\"urls\":[\"bzzr://3bc9d8f1f3b3079dcc2d5b4dc12ae4809f22a5eedf2cfac3966ae53812171aed\"]}},\"version\":1}",
  "bytecode": "0x60806040526200001f60026200025d640100000000026401000000009004565b6006906040620000319291906200059b565b503480156200003f57600080fd5b506200008f6040805190810160405280600181526020017f470000000000000000000000000000000000000000000000000000000000000081525062000312640100000000026401000000009004565b60026000820151816000015560208201518160010155905050620000f76040805190810160405280600181526020017f560000000000000000000000000000000000000000000000000000000000000081525062000312640100000000026401000000009004565b6004600082015181600001556020820151816001015590505060008090505b604081101562000256576000620001726040805190810160405280600181526020017f47000000000000000000000000000000000000000000000000000000000000008152508362000395640100000000026401000000009004565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506001620002066040805190810160405280600181526020017f48000000000000000000000000000000000000000000000000000000000000008152508362000395640100000000026401000000009004565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050808060010191505062000116565b506200073d565b62000267620005e0565b60018160006040811015156200027957fe5b602002018181525050818160016040811015156200029357fe5b6020020181815250506000600290505b60408110156200030c57620002e6838360018403604081101515620002c457fe5b60200201516200041b64010000000002620035f1179091906401000000009004565b8282604081101515620002f557fe5b6020020181815250508080600101915050620002a3565b50919050565b6200031c62000604565b6200038e7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478360405160200162000354919062000698565b60405160208183030381529060405280519060200120600190048115156200037857fe5b0662000453640100000000026401000000009004565b9050919050565b6200039f62000604565b620004137f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478484604051602001620003d9929190620006b1565b6040516020818303038152906040528051906020012060019004811515620003fd57fe5b0662000453640100000000026401000000009004565b905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018015156200044857fe5b828409905092915050565b6200045d62000604565b60005b600115620005105760006003620004888560036200052d640100000000026401000000009004565b019050620004d681600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515620004c057fe5b046200052d640100000000026401000000009004565b915080620004f58360026200052d640100000000026401000000009004565b141562000503575062000510565b6001840193505062000460565b604080519081016040528084815260200182815250915050919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa15156200058f57600080fd5b80519250505092915050565b8260408101928215620005cd579160200282015b82811115620005cc578251825591602001919060010190620005af565b5b509050620005dc91906200061e565b5090565b61080060405190810160405280604090602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b6200064391905b808211156200063f57600081600090555060010162000625565b5090565b90565b60006200065382620006dd565b6200065f8185620006e8565b935062000671818560208601620006fd565b80840191505092915050565b620006926200068c82620006f3565b62000733565b82525050565b6000620006a6828462000646565b915081905092915050565b6000620006bf828562000646565b9150620006cd82846200067d565b6020820191508190509392505050565b600081519050919050565b600081905092915050565b6000819050919050565b60005b838110156200071d57808201518184015260208101905062000700565b838111156200072d576000848401525b50505050565b6000819050919050565b615a3b806200074d6000396000f3fe608060405260043610610051576000357c0100000000000000000000000000000000000000000000000000000000900480631659e67d146100565780634e8ee0e214610093578063a00547ab146100be575b600080fd5b34801561006257600080fd5b5061007d60048036036100789190810190614d60565b6100da565b60405161008a9190615487565b60405180910390f35b34801561009f57600080fd5b506100a861056a565b6040516100b59190615582565b60405180910390f35b6100d860048036036100d39190810190614e8b565b610576565b005b60006100e4614493565b6000865190508060008054905010151515610134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012b906154e2565b60405180910390fd5b8060405190808252806020026020018201604052801561016e57816020015b61015b6144de565b8152602001906001900390816101535790505b508260000181905250806040519080825280602002602001820160405280156101b157816020015b61019e6144de565b8152602001906001900390816101965790505b508260200181905250806040519080825280602002602001820160405280156101f457816020015b6101e16144de565b8152602001906001900390816101d95790505b5082604001819052508060405190808252806020026020018201604052801561023757816020015b6102246144de565b81526020019060019003908161021c5790505b50826080018190525060008090505b8181101561049b5760408051908101604052808d8381518110151561026757fe5b90602001906020020151600060028110151561027f57fe5b60200201516001900481526020018d8381518110151561029b57fe5b9060200190602002015160016002811015156102b357fe5b6020020151600190048152508360000151828151811015156102d157fe5b9060200190602002018190525060408051908101604052808c838151811015156102f757fe5b90602001906020020151600060028110151561030f57fe5b60200201516001900481526020018c8381518110151561032b57fe5b90602001906020020151600160028110151561034357fe5b60200201516001900481525083602001518281518110151561036157fe5b9060200190602002018190525060408051908101604052808b8381518110151561038757fe5b90602001906020020151600060028110151561039f57fe5b60200201516001900481526020018b838151811015156103bb57fe5b9060200190602002015160016002811015156103d357fe5b6020020151600190048152508360400151828151811015156103f157fe5b906020019060200201819052506040805190810160405280898381518110151561041757fe5b90602001906020020151600060028110151561042f57fe5b6020020151600190048152602001898381518110151561044b57fe5b90602001906020020151600160028110151561046357fe5b60200201516001900481525083608001518281518110151561048157fe5b906020019060200201819052508080600101915050610246565b5060408051908101604052808960006002811015156104b657fe5b60200201516001900481526020018960016002811015156104d357fe5b6020020151600190048152508260600181905250858260a0018181525050604080519081016040528086600060028110151561050b57fe5b602002015160019004815260200186600160028110151561052857fe5b6020020151600190048152508260c001819052506105446144f8565b61054d8561069f565b90506105598382610f86565b935050505098975050505050505050565b60008080549050905090565b6000808054905090505b8181101561069b5760006105c96040805190810160405280600181526020017f470000000000000000000000000000000000000000000000000000000000000081525083613496565b908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050600161064c6040805190810160405280600181526020017f480000000000000000000000000000000000000000000000000000000000000081525083613496565b9080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050508080600101915050610580565b5050565b6106a76144f8565b60408051908101604052806106bd846000613506565b81526020016106cd846020613506565b815250816020018190525060408051908101604052806106ee846040613506565b81526020016106fe846060613506565b8152508160400181905250604080519081016040528061071f846080613506565b815260200161072f8460a0613506565b815250816060018190525060408051908101604052806107508460c0613506565b81526020016107608460e0613506565b81525081608001819052506040805190810160405280604080519081016040528061078d86610100613506565b815260200161079e86610120613506565b815250815260200160408051908101604052806107bd86610140613506565b81526020016107ce86610160613506565b8152508152508160a001819052506107e882610180613506565b816101000181815250506107fe826101a0613506565b8160c0018181525050610813826101c0613506565b8160e001818152505061082461458a565b610830836101e0613506565b81600001818152505061084583610200613506565b81602001818152505061085a83610220613506565b816040018181525050808261014001819052506108756145ac565b60008090505b60068110156109355760408051908101604052806108a0876040850261024001613506565b81526020016108b6876040850261026001613506565b8152508260000151826006811015156108cb57fe5b602002018190525060408051908101604052806108f2876040856006010261024001613506565b815260200161090b876040856006010261026001613506565b81525082602001518260068110151561092057fe5b6020020181905250808060010191505061087b565b5061094884608060060261024001613506565b81604001818152505061096384608060060261026001613506565b8160600181815250508083610160018190525061097e6145e2565b600060c06102a06105808851030381151561099557fe5b04905060408051908101604052806109af88610580613506565b81526020016109c0886105a0613506565b815250826000018190525060408051908101604052806109e2886105c0613506565b81526020016109f3886105e0613506565b81525082602001819052506040805190810160405280610a1588610600613506565b8152602001610a2688610620613506565b81525082604001819052506040805190810160405280610a4888610640613506565b8152602001610a5988610660613506565b81525082606001819052506040805190810160405280610a7b88610680613506565b8152602001610a8c886106a0613506565b8152508260a001819052506040805190810160405280610aae886106c0613506565b8152602001610abf886106e0613506565b8152508260c001819052506040805190810160405280610ae188610700613506565b8152602001610af288610720613506565b8152508260e001819052506040805190810160405280610b1488610740613506565b8152602001610b2588610760613506565b8152508261010001819052506040805190810160405280610b4888610780613506565b8152602001610b59886107a0613506565b8152508261014001819052506040805190810160405280610b7c886107c0613506565b8152602001610b8d886107e0613506565b81525082610160018190525060018103604051908082528060200260200182016040528015610bd657816020015b610bc361469c565b815260200190600190039081610bbb5790505b5082610180018190525060008090505b60018203811015610c8d57610c02878260200261080001613506565b83610180015182815181101515610c1557fe5b906020019060200201516000600281101515610c2d57fe5b602002018181525050610c4c8760208360018603010261080001613506565b83610180015182815181101515610c5f57fe5b906020019060200201516001600281101515610c7757fe5b6020020181815250508080600101915050610be6565b50600281811515610c9a57fe5b04604051908082528060200260200182016040528015610cd457816020015b610cc16146be565b815260200190600190039081610cb95790505b508260800181905250600281811515610ce957fe5b04604051908082528060200260200182016040528015610d2357816020015b610d106146be565b815260200190600190039081610d085790505b5082610120018190525060008090505b600282811515610d3f57fe5b04811015610f14576040805190810160405280610d65896040858701026107c001613506565b8152602001610d7d896040858701026107e001613506565b815250836080015182815181101515610d9257fe5b906020019060200201516000600281101515610daa57fe5b60200201819052506040805190810160405280610dd38960408502606087026107c00101613506565b8152602001610dee8960408502606087026107e00101613506565b815250836080015182815181101515610e0357fe5b906020019060200201516001600281101515610e1b57fe5b60200201819052506040805190810160405280610e448960408502608087026107c00101613506565b8152602001610e5f8960408502608087026107e00101613506565b81525083610120015182815181101515610e7557fe5b906020019060200201516000600281101515610e8d57fe5b60200201819052506040805190810160405280610eb6896040850260a087026107c00101613506565b8152602001610ed1896040850260a087026107e00101613506565b81525083610120015182815181101515610ee757fe5b906020019060200201516001600281101515610eff57fe5b60200201819052508080600101915050610d33565b5080856000018181525050610f308660c083026107c001613506565b826101a0018181525050610f4b8660c083026107e001613506565b826101c0018181525050610f668660c0830261080001613506565b826101e00181815250508185610120018190525084945050505050919050565b6000610f906146ec565b61102f610fe8856000015186602001518760400151886060015189608001518a60a00151604051602001610fc99695949392919061540a565b604051602081830303815290604052805190602001206001900461351f565b84602001518560400151866060015187608001516040516020016110109594939291906156c7565b604051602081830303815290604052805190602001206001900461351f565b8160000181815250506110458160000151613554565b816020018190525061108481600001516040516020016110659190615582565b604051602081830303815290604052805190602001206001900461351f565b8160400181815250506110a8816040015182604001516135f190919063ffffffff16565b816060015160006003811015156110bb57fe5b6020020181815250506000600190505b600381101561112c5761110482604001518360600151600184036003811015156110f157fe5b60200201516135f190919063ffffffff16565b82606001518260038110151561111657fe5b60200201818152505080806001019150506110cb565b5060008090505b6002604081151561114057fe5b048110156111f4576111758160020a8360600151600060038110151561116257fe5b60200201516135f190919063ffffffff16565b82608001518260408110151561118757fe5b6020020181815250506111bd8160020a836060015160016003811015156111aa57fe5b60200201516135f190919063ffffffff16565b8260800151600260408115156111cf57fe5b0483016040811015156111de57fe5b6020020181815250508080600101915050611133565b5061123281604001518460a00151604051602001611213929190615667565b604051602081830303815290604052805190602001206001900461351f565b8161012001818152505061129381604001516112858360600151600160038110151561125a57fe5b60200201518460600151600060038110151561127257fe5b602002015161362890919063ffffffff16565b6135f190919063ffffffff16565b8160a00181815250506113366112dc8260a001516112ce600260408115156112b757fe5b0460020a8560a001516135f190919063ffffffff16565b61365f90919063ffffffff16565b61132861130d846060015160006003811015156112f557fe5b6020020151856040015161365f90919063ffffffff16565b61131a856020015161369f565b6135f190919063ffffffff16565b61365f90919063ffffffff16565b8160c00181815250506113aa6113688460a00151600060028110151561135857fe5b60200201518361012001516136ea565b6113a58560a00151600160028110151561137e57fe5b60200201516113a08561012001518661012001516135f190919063ffffffff16565b6136ea565b613725565b8160e001819052506113ce8160c0015184610100015161365f90919063ffffffff16565b816101000181815250506113e06145e2565b83610120015190506113f0614758565b6113f86147d0565b604080519081016040528084610140015181526020018461016001518152509050611491846101200151846080015185610120015186600001518760200151886040015189606001518a60a001518b60c001518c60e001518d61010001518c6040516020016114729c9b9a9998979695949392919061559d565b604051602081830303815290604052805190602001206001900461351f565b82600001818152505085600001516040519080825280602002602001820160405280156114d857816020015b6114c561469c565b8152602001906001900390816114bd5790505b5082602001819052508160000151826020015160008151811015156114f957fe5b90602001906020020151600060028110151561151157fe5b60200201818152505081600001518260200151600081518110151561153257fe5b90602001906020020151600160028110151561154a57fe5b6020020181815250506000600190505b8660000151811015611787578361018001516001820381518110151561157c57fe5b90602001906020020151600060028110151561159457fe5b60200201518360200151828151811015156115ab57fe5b9060200190602002015160006002811015156115c357fe5b602002018181525050836101800151600182038151811015156115e257fe5b9060200190602002015160016002811015156115fa57fe5b602002015183602001518281518110151561161157fe5b90602001906020020151600160028110151561162957fe5b6020020181815250506116a283602001518281518110151561164757fe5b90602001906020020151600060028110151561165f57fe5b60200201518460200151600081518110151561167757fe5b90602001906020020151600060028110151561168f57fe5b602002015161365f90919063ffffffff16565b836020015160008151811015156116b557fe5b9060200190602002015160006002811015156116cd57fe5b6020020181815250506117468360200151828151811015156116eb57fe5b90602001906020020151600160028110151561170357fe5b60200201518460200151600081518110151561171b57fe5b90602001906020020151600160028110151561173357fe5b602002015161365f90919063ffffffff16565b8360200151600081518110151561175957fe5b90602001906020020151600160028110151561177157fe5b602002018181525050808060010191505061155a565b506117906147fe565b60008090505b87600001518110156118ab5761181e826118196000848154811015156117b857fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508760200151858151811015156117f757fe5b90602001906020020151600060028110151561180f57fe5b60200201516136ea565b613725565b915061189c8261189760018481548110151561183657fe5b90600052602060002090600202016040805190810160405290816000820154815260200160018201548152505087602001518581518110151561187557fe5b90602001906020020151600160028110151561188d57fe5b60200201516136ea565b613725565b91508080600101915050611796565b5061190b6118ce6118c4866020015186600001516136ea565b8660000151613725565b61190683611901600460408051908101604052908160008201548152602001600182015481525050896101a001516136ea565b613725565b61376b565b151561194c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194390615502565b60405180910390fd5b60008090505b8760000151811015611adb576119e36119a685602001518381518110151561197657fe5b90602001906020020151600060028110151561198e57fe5b6020020151866000015161365f90919063ffffffff16565b8560200151838151811015156119b857fe5b9060200190602002015160006002811015156119d057fe5b60200201516135f190919063ffffffff16565b8460200151828151811015156119f557fe5b906020019060200201516000600281101515611a0d57fe5b602002018181525050611a9b611a5e856020015183815181101515611a2e57fe5b906020019060200201516001600281101515611a4657fe5b6020020151866000015161365f90919063ffffffff16565b856020015183815181101515611a7057fe5b906020019060200201516001600281101515611a8857fe5b60200201516135f190919063ffffffff16565b846020015182815181101515611aad57fe5b906020019060200201516001600281101515611ac557fe5b6020020181815250508080600101915050611952565b506040805190810160405280600081526020016000815250905060008090505b8760000151811015611c1057611b8382611b7e600084815481101515611b1d57fe5b906000526020600020906002020160408051908101604052908160008201548152602001600182015481525050876020015185815181101515611b5c57fe5b906020019060200201516000600281101515611b7457fe5b60200201516136ea565b613725565b9150611c0182611bfc600184815481101515611b9b57fe5b906000526020600020906002020160408051908101604052908160008201548152602001600182015481525050876020015185815181101515611bda57fe5b906020019060200201516001600281101515611bf257fe5b60200201516136ea565b613725565b91508080600101915050611afb565b50611c70611c33611c29866040015186600001516136ea565b8660600151613725565b611c6b83611c66600460408051908101604052908160008201548152602001600182015481525050896101c001516136ea565b613725565b61376b565b1515611cb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ca890615542565b60405180910390fd5b826000015183602001516000815181101515611cc957fe5b906020019060200201516000600281101515611ce157fe5b602002018181525050826000015183602001516000815181101515611d0257fe5b906020019060200201516001600281101515611d1a57fe5b6020020181815250506000600190505b8760000151811015611f575784610180015160018203815181101515611d4c57fe5b906020019060200201516000600281101515611d6457fe5b6020020151846020015182815181101515611d7b57fe5b906020019060200201516000600281101515611d9357fe5b60200201818152505084610180015160018203815181101515611db257fe5b906020019060200201516001600281101515611dca57fe5b6020020151846020015182815181101515611de157fe5b906020019060200201516001600281101515611df957fe5b602002018181525050611e72846020015182815181101515611e1757fe5b906020019060200201516000600281101515611e2f57fe5b602002015185602001516000815181101515611e4757fe5b906020019060200201516000600281101515611e5f57fe5b602002015161365f90919063ffffffff16565b84602001516000815181101515611e8557fe5b906020019060200201516000600281101515611e9d57fe5b602002018181525050611f16846020015182815181101515611ebb57fe5b906020019060200201516001600281101515611ed357fe5b602002015185602001516000815181101515611eeb57fe5b906020019060200201516001600281101515611f0357fe5b602002015161365f90919063ffffffff16565b84602001516000815181101515611f2957fe5b906020019060200201516001600281101515611f4157fe5b6020020181815250508080600101915050611d2a565b50611f7f611f6d896060015185600001516136ea565b611f7a8660a00151613793565b613725565b8360400181905250611f998360200151896040015161380c565b8360c00181905250611fb38360200151896080015161380c565b8360e0018190525060008090505b60028860000151811515611fd157fe5b048110156121f55760008090505b60028110156121e75760008090505b600281101561209e57612064866020015182856002020181518110151561201157fe5b906020019060200201518360028110151561202857fe5b60200201518760a001518360028110151561203f57fe5b60200201518460028110151561205157fe5b602002015161362890919063ffffffff16565b8660a001518260028110151561207657fe5b60200201518360028110151561208857fe5b6020020181815250508080600101915050611fee565b5061210b8560c00151838151811015156120b457fe5b90602001906020020151826002811015156120cb57fe5b60200201516121068860800151858151811015156120e557fe5b90602001906020020151846002811015156120fc57fe5b6020020151613793565b613725565b8560c001518381518110151561211d57fe5b906020019060200201518260028110151561213457fe5b60200201819052506121a98560e001518381518110151561215157fe5b906020019060200201518260028110151561216857fe5b60200201516121a48861012001518581518110151561218357fe5b906020019060200201518460028110151561219a57fe5b6020020151613793565b613725565b8560e00151838151811015156121bb57fe5b90602001906020020151826002811015156121d257fe5b60200201819052508080600101915050611fdf565b508080600101915050611fc1565b5061225d8360a00151600060028110151561220c57fe5b6020020151600160028110151561221f57fe5b60200201518460a00151600060028110151561223757fe5b6020020151600060028110151561224a57fe5b60200201516135f190919063ffffffff16565b8360a00151600060028110151561227057fe5b6020020151600060028110151561228357fe5b6020020181815250506122f38360a0015160016002811015156122a257fe5b602002015160016002811015156122b557fe5b60200201518460a0015160016002811015156122cd57fe5b602002015160006002811015156122e057fe5b60200201516135f190919063ffffffff16565b8360a00151600160028110151561230657fe5b6020020151600060028110151561231957fe5b602002018181525050612440612354600460408051908101604052908160008201548152602001600182015481525050866101e001516136ea565b61243b6123c660008081548110151561236957fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508760a0015160006002811015156123a957fe5b602002015160006002811015156123bc57fe5b60200201516136ea565b612436600160008154811015156123d957fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508860a00151600160028110151561241957fe5b6020020151600060028110151561242c57fe5b60200201516136ea565b613725565b613725565b83610100018190525061247883610100015161247361246887610160015187600001516136ea565b876101400151613725565b61376b565b15156124b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b090615522565b60405180910390fd5b60008090505b87600001518110156125a85761252b84606001516125268b60000151848151811015156124e857fe5b9060200190602002015187602001518581518110151561250457fe5b90602001906020020151600060028110151561251c57fe5b60200201516136ea565b613725565b8460600181905250612593846080015161258e8b602001518481518110151561255057fe5b9060200190602002015187602001518581518110151561256c57fe5b90602001906020020151600060028110151561258457fe5b60200201516136ea565b613725565b846080018190525080806001019150506124bf565b506125c383606001516125be8660e00151613793565b613725565b83606001819052506125e683608001516125e1866101000151613793565b613725565b836080018190525061263161261f60026040805190810160405290816000820154815260200160018201548152505085600001516136ea565b61262c8660c00151613793565b613725565b83610120018190525061264261458a565b8761014001519050612652614818565b61265f8260000151613ac5565b816000018181525050600160028a6000015181151561267a57fe5b04036040519080825280602002602001820160405280156126b557816020015b6126a26146be565b81526020019060019003908161269a5790505b5081602001819052506000600190505b60028a600001518115156126d557fe5b048110156128545761275d61271c8760e00151838151811015156126f557fe5b90602001906020020151600060028110151561270d57fe5b602002015185604001516136ea565b6127588860c001518481518110151561273157fe5b90602001906020020151600060028110151561274957fe5b602002015185600001516136ea565b613725565b82602001516001830381518110151561277257fe5b90602001906020020151600060028110151561278a57fe5b60200201819052506128126127d18760e00151838151811015156127aa57fe5b9060200190602002015160016002811015156127c257fe5b602002015185604001516136ea565b61280d8860c00151848151811015156127e657fe5b9060200190602002015160016002811015156127fe57fe5b602002015185600001516136ea565b613725565b82602001516001830381518110151561282757fe5b90602001906020020151600160028110151561283f57fe5b602002018190525080806001019150506126c5565b5061288261286b86610120015184604001516136ea565b61287d876040015184600001516136ea565b613725565b81606001819052506128e26128a086610120015184602001516136ea565b6128dd8760e0015160008151811015156128b657fe5b9060200190602002015160006002811015156128ce57fe5b602002015184600001516136ea565b613725565b816040018190525061292d6040805190810160405280600681526020017f5a657468657200000000000000000000000000000000000000000000000000008152508b60a00151613496565b816080018190525061296161294a826080015184602001516136ea565b61295c8c60c0015184600001516136ea565b613725565b8160a00181905250612a5b6129e16129d78760e00151600081518110151561298557fe5b90602001906020020151600060028110151561299d57fe5b60200201518860e0015160008151811015156129b557fe5b9060200190602002015160016002811015156129cd57fe5b6020020151613725565b84604001516136ea565b612a56612a4c8860c0015160008151811015156129fa57fe5b906020019060200201516000600281101515612a1257fe5b60200201518960c001516000815181101515612a2a57fe5b906020019060200201516001600281101515612a4257fe5b6020020151613725565b84600001516136ea565b613725565b8160c00181905250612bb0612b41612ae8612acb612ab48960c001516000815181101515612a8557fe5b906020019060200201516000600281101515612a9d57fe5b6020020151612aaf8860000151613ac5565b6136ea565b612ac68a6040015188602001516136ea565b613725565b8a606001516000600381101515612ade57fe5b60200201516136ea565b612b3c612b1f612b008a6060015188600001516136ea565b612b1a8b60800151612b158a60200151613ac5565b6136ea565b613725565b8b606001516001600381101515612b3257fe5b60200201516136ea565b613725565b612bab612b78612b598d6060015187600001516136ea565b612b738e60800151612b6e8960200151613ac5565b6136ea565b613725565b612ba689600001518c606001516002600381101515612b9357fe5b60200201516135f190919063ffffffff16565b6136ea565b613725565b8160e00181905250612c6a612bc88260e00151613793565b612c65612c45612c12612c006002604080519081016040529081600082015481526020016001820154815250508d61010001516136ea565b612c0d8d60e00151613793565b613725565b612c406004604080519081016040529081600082015481526020016001820154815250508f60c001516136ea565b613725565b612c60896000015187600001516135f190919063ffffffff16565b6136ea565b613725565b8161010001819052506000612cd18660000151836040015184606001518560a001518660c001518761010001518860200151604051602001612cb2979695949392919061571b565b604051602081830303815290604052805190602001206001900461351f565b90508961014001516000015181141515612d20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d17906154c2565b60405180910390fd5b612d2861488f565b612d7284600001518c61010001518d60c001518e60e00151604051602001612d539493929190615794565b604051602081830303815290604052805190602001206001900461351f565b816080018181525050612da960026040805190810160405290816000820154815260200160018201548152505082608001516136ea565b8160000181905250612e2a6001805480602002602001604051908101604052809291908181526020016000905b82821015612e1c57838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612dd6565b505050508a60200151613af1565b8160200181905250612e51612e478a602001518b60400151613b6d565b8a60800151613bd4565b8160400181905250612f0a612e7c8c60200151612e778e604001518d61012001516136ea565b613725565b612f05612ef36000805480602002602001604051908101604052809291908181526020016000905b82821015612eea57838290600052602060002090600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190612ea4565b50505050613c4d565b612f008d60400151613ac5565b6136ea565b613725565b8160600181905250612f6f612f4b612f466004604080519081016040529081600082015481526020016001820154815250508e60e001516136ea565b613793565b612f6a8360600151612f6585602001518660400151613c9a565b613725565b613725565b8160600181905250612f978160600151612f9283600001518e61010001516136ea565b613725565b8160600181905250612fa76145ac565b8b6101600151905060008090505b60068110156130f4576130258360800151836000015183600681101515612fd857fe5b6020020151846020015184600681101515612fef57fe5b602002015160405160200161300693929190615690565b604051602081830303815290604052805190602001206001900461351f565b83608001818152505082608001518360a001518260068110151561304557fe5b602002018181525050600061305d8460800151613cfe565b90506130de61309984600001518460068110151561307757fe5b602002015161309460028860800151613d3490919063ffffffff16565b6136ea565b6130d96130cf8660200151866006811015156130b157fe5b60200201516130ca600287613d3490919063ffffffff16565b6136ea565b8760600151613725565b613725565b8460600181905250508080600101915050612fb5565b5060018260c00151600060408110151561310a57fe5b60200201818152505060008090505b600681101561318b576131628360a001518260068110151561313757fe5b60200201518460c00151600060408110151561314f57fe5b60200201516135f190919063ffffffff16565b8360c00151600060408110151561317557fe5b6020020181815250508080600101915050613119565b506131946148f2565b6131b48360c0015160006040811015156131aa57fe5b6020020151613cfe565b8360c0015160006040811015156131c757fe5b60200201818152505060008090505b600260408115156131e357fe5b048110156132f65760008090505b6040828260019060020a020110156132ea5760008160019060020a0283019050838160408110151561321f57fe5b602002015115156132de5760006132778760a001518460016006030360068110151561324757fe5b60200201518860a001518560016006030360068110151561326457fe5b60200201516135f190919063ffffffff16565b90506132a2818860c001518660408110151561328f57fe5b60200201516135f190919063ffffffff16565b8760c00151836040811015156132b457fe5b602002018181525050600185836040811015156132cd57fe5b602002019015159081151581525050505b508060010190506131f1565b508060010190506131d6565b506132ff6147fe565b6133076147fe565b60008090505b60408110156133d05761337a8361337560008481548110151561332c57fe5b9060005260206000209060020201604080519081016040529081600082015481526020016001820154815250508960c001518560408110151561336b57fe5b60200201516136ea565b613725565b92506133c1826133bc88602001518460408110151561339557fe5b60200201518960c00151856001604003036040811015156133b257fe5b60200201516136ea565b613725565b9150808060010191505061330d565b506133d96147fe565b61342d6134006133ed8588604001516136ea565b6133fb8589606001516136ea565b613725565b613428886000015161342389606001518a604001516135f190919063ffffffff16565b6136ea565b613725565b905061343d86606001518261376b565b151561347e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161347590615562565b60405180910390fd5b60019e50505050505050505050505050505092915050565b61349e6147fe565b6134fe7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784846040516020016134d59291906153e2565b60405160208183030381529060405280519060200120600190048115156134f857fe5b06613da1565b905092915050565b6000604051826020850101518152805191505092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018281151561354c57fe5b069050919050565b61355c614916565b600181600060408110151561356d57fe5b6020020181815250508181600160408110151561358657fe5b6020020181815250506000600290505b60408110156135eb576135c78383600184036040811015156135b457fe5b60200201516135f190919063ffffffff16565b82826040811015156135d557fe5b6020020181815250508080600101915050613596565b50919050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561361d57fe5b828409905092915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180151561365457fe5b828408905092915050565b6000818310156136935782827f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000010301613697565b8183035b905092915050565b600080600090505b60408110156136e4576136d583826040811015156136c157fe5b60200201518361362890919063ffffffff16565b915080806001019150506136a7565b50919050565b6136f26147fe565b604051835181526020840151602082015282604082015260408260608360075afa151561371e57600080fd5b5092915050565b61372d6147fe565b6040518351815260208401516020820152825160408201526020830151606082015260408260808360065afa151561376457600080fd5b5092915050565b60008160000151836000015114801561378b575081602001518360200151145b905092915050565b61379b6147fe565b6040805190810160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518115156137df57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47038152509050919050565b6060600083519050600060028281151561382257fe5b0490508060405190808252806020026020018201604052801561385f57816020015b61384c6146be565b8152602001906001900390816138445790505b509250606061386f856000613e41565b90506060836040519080825280602002602001820160405280156138a25781602001602082028038833980820191505090505b50905060008090505b6002811015613ab75760008090505b858110156139225788868288038115156138d057fe5b068151811015156138dd57fe5b90602001906020020151826002811015156138f457fe5b6020020151838281518110151561390757fe5b906020019060200201818152505080806001019150506138ba565b5061392c826140a2565b915060608460405190808252806020026020018201604052801561396a57816020015b6139576144de565b81526020019060019003908161394f5790505b50905060006002905061397c81613cfe565b905060008090505b86811015613a3957613a11613a0b6139ca88848151811015156139a357fe5b9060200190602002015188858151811015156139bb57fe5b906020019060200201516136ea565b613a06898b86018151811015156139dd57fe5b90602001906020020151898c87018151811015156139f757fe5b906020019060200201516136ea565b613725565b836136ea565b8382815181101515613a1f57fe5b906020019060200201819052508080600101915050613984565b50613a45826001613e41565b915060008090505b86811015613aa7578281815181101515613a6357fe5b906020019060200201518982815181101515613a7b57fe5b9060200190602002015185600281101515613a9257fe5b60200201819052508080600101915050613a4d565b50505080806001019150506138ab565b508494505050505092915050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b613af961493a565b60008090505b6040811015613b6657613b438482815181101515613b1957fe5b90602001906020020151613b3e8584604081101515613b3457fe5b6020020151613cfe565b6136ea565b8282604081101515613b5157fe5b60200201819052508080600101915050613aff565b5092915050565b613b75614916565b60008090505b6040811015613bcd57613ba9838583604081101515613b9657fe5b60200201516135f190919063ffffffff16565b8282604081101515613bb757fe5b6020020181815250508080600101915050613b7b565b5092915050565b613bdc614916565b60008090505b6040811015613c4657613c228382604081101515613bfc57fe5b60200201518583604081101515613c0f57fe5b602002015161362890919063ffffffff16565b8282604081101515613c3057fe5b6020020181815250508080600101915050613be2565b5092915050565b613c556147fe565b60008090505b6040811015613c9457613c85828483815181101515613c7657fe5b90602001906020020151613725565b91508080600101915050613c5b565b50919050565b613ca26147fe565b60008090505b6040811015613cf757613ce882613ce38684604081101515613cc657fe5b60200201518685604081101515613cd957fe5b60200201516136ea565b613725565b91508080600101915050613ca8565b5092915050565b6000613d2d8260027f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000103613d34565b9050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa1515613d9557600080fd5b80519250505092915050565b613da96147fe565b60005b600115613e245760006003613dc28560036142ca565b019050613dfe81600460017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4701811515613df857fe5b046142ca565b915080613e0c8360026142ca565b1415613e185750613e24565b60018401935050613dac565b604080519081016040528084815260200182815250915050919050565b60606000835190506001811415613e5b578391505061409c565b6000600282811515613e6957fe5b06141515613eac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613ea3906154a2565b60405180910390fd5b6000613ef0826310000000811515613ec057fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd613d3490919063ffffffff16565b90506000600190508415613f0e57613f0782613cfe565b9150600290505b613f1781613cfe565b90506060613f2f613f29886000614337565b87613e41565b90506060613f47613f41896001614337565b88613e41565b905060006001905085604051908082528060200260200182016040528015613f8957816020015b613f766144de565b815260200190600190039081613f6e5790505b50965060008090505b600287811515613f9e57fe5b0481101561409457613fae6147fe565b613fcf8483815181101515613fbf57fe5b90602001906020020151846136ea565b9050613ffb613ff58684815181101515613fe557fe5b9060200190602002015183613725565b876136ea565b898381518110151561400957fe5b90602001906020020181905250614048614042868481518110151561402a57fe5b9060200190602002015161403d84613793565b613725565b876136ea565b8960028a81151561405557fe5b04840181518110151561406457fe5b9060200190602002018190525061408487846135f190919063ffffffff16565b9250508080600101915050613f92565b505050505050505b92915050565b606060008251905060018114156140bc57829150506142c5565b60006002828115156140ca57fe5b0614151561410d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614104906154a2565b60405180910390fd5b600061415182631000000081151561412157fe5b047f14a3074b02521e3b1ed9852e5028452693e87be4e910500c7ba9bbddb2f46edd613d3490919063ffffffff16565b905060606141686141638660006143ea565b6140a2565b9050606061417f61417a8760016143ea565b6140a2565b9050600060019050846040519080825280602002602001820160405280156141b65781602001602082028038833980820191505090505b50955060008090505b6002868115156141cb57fe5b048110156142be5760006141ff8385848151811015156141e757fe5b906020019060200201516135f190919063ffffffff16565b905061422b81868481518110151561421357fe5b9060200190602002015161362890919063ffffffff16565b888381518110151561423957fe5b906020019060200201818152505061427181868481518110151561425957fe5b9060200190602002015161365f90919063ffffffff16565b8860028981151561427e57fe5b04840181518110151561428d57fe5b90602001906020020181815250506142ae86846135f190919063ffffffff16565b92505080806001019150506141bf565b5050505050505b919050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060405160208152602080820152602060408201528460608201528360808201528160a082015260208160c08360055afa151561432b57600080fd5b80519250505092915050565b60606002835181151561434657fe5b0460405190808252806020026020018201604052801561438057816020015b61436d6144de565b8152602001906001900390816143655790505b50905060008090505b6002845181151561439657fe5b048110156143e357838382600202018151811015156143b157fe5b9060200190602002015182828151811015156143c957fe5b906020019060200201819052508080600101915050614389565b5092915050565b6060600283518115156143f957fe5b046040519080825280602002602001820160405280156144285781602001602082028038833980820191505090505b50905060008090505b6002845181151561443e57fe5b0481101561448c578383826002020181518110151561445957fe5b90602001906020020151828281518110151561447157fe5b90602001906020020181815250508080600101915050614431565b5092915050565b610120604051908101604052806060815260200160608152602001606081526020016144bd6144de565b815260200160608152602001600081526020016144d86144de565b81525090565b604080519081016040528060008152602001600081525090565b6108e060405190810160405280600081526020016145146144de565b81526020016145216144de565b815260200161452e6144de565b815260200161453b6144de565b81526020016145486146be565b815260200160008152602001600081526020016000815260200161456a614969565b8152602001614577614a23565b8152602001614584614a45565b81525090565b6060604051908101604052806000815260200160008152602001600081525090565b610340604051908101604052806145c1614a7b565b81526020016145ce614a7b565b815260200160008152602001600081525090565b610340604051908101604052806145f76144de565b81526020016146046144de565b81526020016146116144de565b815260200161461e6144de565b8152602001606081526020016146326144de565b815260200161463f6144de565b815260200161464c6144de565b81526020016146596144de565b81526020016060815260200161466d6144de565b815260200161467a6144de565b8152602001606081526020016000815260200160008152602001600081525090565b6040805190810160405280600290602082028038833980820191505090505090565b6080604051908101604052806002905b6146d66144de565b8152602001906001900390816146ce5790505090565b6111606040519081016040528060008152602001614708614aaa565b81526020016000815260200161471c614ace565b8152602001614729614aaa565b815260200160008152602001600081526020016147446144de565b815260200160008152602001600081525090565b61024060405190810160405280600081526020016060815260200161477b6144de565b81526020016147886144de565b81526020016147956144de565b81526020016147a2614af1565b815260200160608152602001606081526020016147bd6144de565b81526020016147ca6144de565b81525090565b6080604051908101604052806002905b6147e86144de565b8152602001906001900390816147e05790505090565b604080519081016040528060008152602001600081525090565b61020060405190810160405280600081526020016060815260200161483b6144de565b81526020016148486144de565b81526020016148556144de565b81526020016148626144de565b815260200161486f6144de565b815260200161487c6144de565b81526020016148896144de565b81525090565b612160604051908101604052806148a46144de565b81526020016148b1614b1f565b81526020016148be614aaa565b81526020016148cb6144de565b8152602001600081526020016148df614b4e565b81526020016148ec614aaa565b81525090565b61080060405190810160405280604090602082028038833980820191505090505090565b61080060405190810160405280604090602082028038833980820191505090505090565b611000604051908101604052806040905b6149536144de565b81526020019060019003908161494b5790505090565b6103406040519081016040528061497e6144de565b815260200161498b6144de565b81526020016149986144de565b81526020016149a56144de565b8152602001606081526020016149b96144de565b81526020016149c66144de565b81526020016149d36144de565b81526020016149e06144de565b8152602001606081526020016149f46144de565b8152602001614a016144de565b8152602001606081526020016000815260200160008152602001600081525090565b6060604051908101604052806000815260200160008152602001600081525090565b61034060405190810160405280614a5a614a7b565b8152602001614a67614a7b565b815260200160008152602001600081525090565b610180604051908101604052806006905b614a946144de565b815260200190600190039081614a8c5790505090565b61080060405190810160405280604090602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b6080604051908101604052806002905b614b0961469c565b815260200190600190039081614b015790505090565b611000604051908101604052806040905b614b386144de565b815260200190600190039081614b305790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b600082601f8301121515614b8457600080fd5b8135614b97614b9282615806565b6157d9565b91508181835260208401935060208101905083856040840282011115614bbc57600080fd5b60005b83811015614bec5781614bd28882614bf6565b845260208401935060408301925050600181019050614bbf565b5050505092915050565b600082601f8301121515614c0957600080fd5b6002614c1c614c178261582e565b6157d9565b91508183856020840282011115614c3257600080fd5b60005b83811015614c625781614c488882614ce2565b845260208401935060208301925050600181019050614c35565b5050505092915050565b600082601f8301121515614c7f57600080fd5b6002614c92614c8d82615850565b6157d9565b91508183856020840282011115614ca857600080fd5b60005b83811015614cd85781614cbe8882614ce2565b845260208401935060208301925050600181019050614cab565b5050505092915050565b6000614cee82356159a1565b905092915050565b600082601f8301121515614d0957600080fd5b8135614d1c614d1782615872565b6157d9565b91508082526020830160208301858383011115614d3857600080fd5b614d438382846159b5565b50505092915050565b6000614d5882356159ab565b905092915050565b600080600080600080600080610140898b031215614d7d57600080fd5b600089013567ffffffffffffffff811115614d9757600080fd5b614da38b828c01614b71565b985050602089013567ffffffffffffffff811115614dc057600080fd5b614dcc8b828c01614b71565b975050604089013567ffffffffffffffff811115614de957600080fd5b614df58b828c01614b71565b9650506060614e068b828c01614c6c565b95505060a089013567ffffffffffffffff811115614e2357600080fd5b614e2f8b828c01614b71565b94505060c0614e408b828c01614d4c565b93505060e0614e518b828c01614c6c565b92505061012089013567ffffffffffffffff811115614e6f57600080fd5b614e7b8b828c01614cf6565b9150509295985092959890939650565b600060208284031215614e9d57600080fd5b6000614eab84828501614d4c565b91505092915050565b6000614ec08383614f91565b60808301905092915050565b6000614ed8838361534f565b60408301905092915050565b6000614eef826158cc565b614ef98185615937565b9350614f048361589e565b60005b82811015614f3257614f1a868351614eb4565b9550614f2582615903565b9150600181019050614f07565b50849250505092915050565b614f47816158e2565b614f518184615953565b9250614f5c826158b5565b60005b82811015614f8a57614f72858351614ecc565b9450614f7d8261591d565b9150600181019050614f5f565b5050505050565b614f9a816158d7565b614fa48184615948565b9250614faf826158ab565b60005b82811015614fdd57614fc5858351614ecc565b9450614fd082615910565b9150600181019050614fb2565b5050505050565b614fed816158d7565b614ff78184615953565b9250615002826158ab565b60005b8281101561503057615018858351614ecc565b945061502382615910565b9150600181019050615005565b5050505050565b6000615042826158ed565b61504c818561595e565b9350615057836158bf565b60005b828110156150855761506d868351614ecc565b95506150788261592a565b915060018101905061505a565b50849250505092915050565b61509a8161598b565b82525050565b60006150ab826158f8565b6150b58185615980565b93506150c58185602086016159c4565b80840191505092915050565b60006150de601f8361596f565b91507f496e7075742073697a65206973206e6f74206120706f776572206f66203221006000830152602082019050919050565b600061511e602a8361596f565b91507f5369676d612070726f746f636f6c206368616c6c656e676520657175616c697460008301527f79206661696c7572652e000000000000000000000000000000000000000000006020830152604082019050919050565b600061518460428361596f565b91507f496e61646571756174652073746f72656420766563746f72206261736521204360008301527f616c6c20657874656e644261736520616e64207468656e20747279206167616960208301527f6e2e0000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000615210601d8361596f565b91507f5265636f76657279206661696c75726520666f7220425e78202a20412e0000006000830152602082019050919050565b600061525060218361596f565b91507f496e646578206f70706f736974652070617269747920636865636b206661696c60008301527f2e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006152b6601d8361596f565b91507f5265636f76657279206661696c75726520666f7220435e78202a20442e0000006000830152602082019050919050565b60006152f660258361596f565b91507f496e6e65722070726f6475637420657175616c69747920636865636b2066616960008301527f6c7572652e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60408201600082015161536560008501826153ad565b50602082015161537860208501826153ad565b50505050565b60408201600082015161539460008501826153ad565b5060208201516153a760208501826153ad565b50505050565b6153b681615997565b82525050565b6153c581615997565b82525050565b6153dc6153d782615997565b6159f7565b82525050565b60006153ee82856150a0565b91506153fa82846153cb565b6020820191508190509392505050565b600060e08201905081810360008301526154248189615037565b905081810360208301526154388188615037565b9050818103604083015261544c8187615037565b905061545b606083018661537e565b81810360a083015261546d8185615037565b905061547c60c08301846153bc565b979650505050505050565b600060208201905061549c6000830184615091565b92915050565b600060208201905081810360008301526154bb816150d1565b9050919050565b600060208201905081810360008301526154db81615111565b9050919050565b600060208201905081810360008301526154fb81615177565b9050919050565b6000602082019050818103600083015261551b81615203565b9050919050565b6000602082019050818103600083015261553b81615243565b9050919050565b6000602082019050818103600083015261555b816152a9565b9050919050565b6000602082019050818103600083015261557b816152e9565b9050919050565b600060208201905061559760008301846153bc565b92915050565b60006102e0820190506155b3600083018f6153bc565b81810360208301526155c5818e614ee4565b905081810360408301526155d9818d614ee4565b90506155e8606083018c61537e565b6155f560a083018b61537e565b61560260e083018a61537e565b61561061012083018961537e565b61561e61016083018861537e565b61562c6101a083018761537e565b61563a6101e083018661537e565b61564861022083018561537e565b615656610260830184614f3e565b9d9c50505050505050505050505050565b600060a08201905061567c60008301856153bc565b6156896020830184614fe4565b9392505050565b600060a0820190506156a560008301866153bc565b6156b2602083018561537e565b6156bf606083018461537e565b949350505050565b6000610120820190506156dd60008301886153bc565b6156ea602083018761537e565b6156f7606083018661537e565b61570460a083018561537e565b61571160e083018461537e565b9695505050505050565b600061018082019050615731600083018a6153bc565b61573e602083018961537e565b61574b606083018861537e565b61575860a083018761537e565b61576560e083018661537e565b61577361012083018561537e565b8181036101608301526157868184614ee4565b905098975050505050505050565b60006080820190506157a960008301876153bc565b6157b660208301866153bc565b6157c360408301856153bc565b6157d060608301846153bc565b95945050505050565b6000604051905081810181811067ffffffffffffffff821117156157fc57600080fd5b8060405250919050565b600067ffffffffffffffff82111561581d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561584557600080fd5b602082029050919050565b600067ffffffffffffffff82111561586757600080fd5b602082029050919050565b600067ffffffffffffffff82111561588957600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000819050919050565b6000819050919050565b6000602082019050919050565b600081519050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156159e25780820151818401526020810190506159c7565b838111156159f1576000848401525b50505050565b600081905091905056fea265627a7a723058203111d611686066d13b6a2e6d42e7b3239805111c2185b1b48efed48e7eef2c566c6578706572696d656e74616cf50037",
  "deployedBytecode": "",
  "sourceMap": "81:28900:5:-;;;688:9;695:1;688:6;;;:9;;;:::i;:::-;670:27;;;;;;;;:::i;:::-;;2003:208;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:208:5;2038:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;2034:1;:16;;;;;;;;;;;;;;;;;;;2064:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;2060:1;:16;;;;;;;;;;;;;;;;;;;2091:9;2103:1;2091:13;;2086:119;162:2;2106:1;:5;2086:119;;;2132:2;2140:15;;;;;;;;;;;;;;;;;;;2153:1;2140:7;;;:15;;;:::i;:::-;2132:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2132:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:2;2178:15;;;;;;;;;;;;;;;;;;;2191:1;2178:7;;;:15;;;:::i;:::-;2170:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2170:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2113:3;;;;;;;2086:119;;;;81:28900;;25321:236;25374:24;;:::i;:::-;25422:1;25410:6;25417:1;25410:9;;;;;;;;;;;;:13;;;;;25445:4;25433:6;25440:1;25433:9;;;;;;;;;;;;:16;;;;;25464:9;25476:1;25464:13;;25459:92;162:2;25479:1;:5;25459:92;;;25517:23;25535:4;25517:6;25528:1;25524;:5;25517:13;;;;;;;;;;;;;:17;;;;;;:23;;;;;:::i;:::-;25505:6;25512:1;25505:9;;;;;;;;;;;;:35;;;;;25486:3;;;;;;;25459:92;;;;25321:236;;;:::o;28412:206::-;28473:14;;:::i;:::-;28545:66;229:77;28588:5;28571:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28571:23:5;;;28561:34;;;;;;28553:43;;;:57;;;;;;;;28545:7;;;:66;;;:::i;:::-;28538:73;;28412:206;;;:::o;28624:355::-;28696:14;;:::i;:::-;28768:69;229:77;28811:5;28818:1;28794:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28794:26:5;;;28784:37;;;;;;28776:46;;;:60;;;;;;;;28768:7;;;:69;;;:::i;:::-;28761:76;;28624:355;;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;27918:488:5:-;27972:14;;:::i;:::-;28037:9;28056:311;28063:4;28056:311;;;28083:16;28122:1;28102:17;28111:4;28117:1;28102:8;;;:17;;;:::i;:::-;:21;28083:40;;28209:41;28218:8;28248:1;28243;229:77;28229:15;28228:21;;;;;;;;28209:8;;;:41;;;:::i;:::-;28205:45;;28286:8;28268:14;28277:1;28280;28268:8;;;:14;;;:::i;:::-;:26;28264:70;;;28314:5;;;28264:70;28355:1;28347:9;;;;28056:311;;;;28383:16;;;;;;;;;28391:4;28383:16;;;;28397:1;28383:16;;;28376:23;;;27918:488;;;:::o;27302:610::-;27375:14;27426:13;229:77;27426:27;;27501:4;27495:11;27529:4;27526:1;27519:15;27568:4;27561;27558:1;27554:12;27547:26;27607:4;27600;27597:1;27593:12;27586:26;27646:4;27639;27636:1;27632:12;27625:26;27685:8;27678:4;27675:1;27671:12;27664:30;27728:5;27721:4;27718:1;27714:12;27707:27;27791:4;27788:1;27782:4;27779:1;27773:4;27768:3;27757:39;27750:47;27747:2;;;27849:1;27846;27839:12;27747:2;27894:1;27888:8;27878:18;;27472:434;;;;;;:::o;81:28900::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:28900:5;;;;;;;",
  "deployedSourceMap": "81:28900:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3094:1215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3094:1215:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2217:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2217:90:5;;;:::i;:::-;;;;;;;;;;;;;;;;2313:775;;;;;;;;;;;;;;;;:::i;:::-;;3094:1215;3312:4;3328:32;;:::i;:::-;3370:12;3385:1;:8;3370:23;;3424:4;3411:2;:9;;;;:17;;3403:96;;;;;;;;;;;;;;;;;;;;;;;;3540:4;3526:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3510:9;:13;;:35;;;;3585:4;3571:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3555:9;:13;;:35;;;;3628:4;3614:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3600:9;:11;;:33;;;;3671:4;3657:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3643:9;:11;;:33;;;;3691:9;3703:1;3691:13;;3686:354;3710:4;3706:1;:8;3686:354;;;3754:47;;;;;;;;;3770:3;3774:1;3770:6;;;;;;;;;;;;;;;;;;3777:1;3770:9;;;;;;;;;;;;;3762:18;;;3754:47;;;;3790:3;3794:1;3790:6;;;;;;;;;;;;;;;;;;3797:1;3790:9;;;;;;;;;;;;;3782:18;;;3754:47;;;3735:9;:13;;;3749:1;3735:16;;;;;;;;;;;;;;;;;:66;;;;3834:47;;;;;;;;;3850:3;3854:1;3850:6;;;;;;;;;;;;;;;;;;3857:1;3850:9;;;;;;;;;;;;;3842:18;;;3834:47;;;;3870:3;3874:1;3870:6;;;;;;;;;;;;;;;;;;3877:1;3870:9;;;;;;;;;;;;;3862:18;;;3834:47;;;3815:9;:13;;;3829:1;3815:16;;;;;;;;;;;;;;;;;:66;;;;3912:43;;;;;;;;;3928:1;3930;3928:4;;;;;;;;;;;;;;;;;;3933:1;3928:7;;;;;;;;;;;;;3920:16;;;3912:43;;;;3946:1;3948;3946:4;;;;;;;;;;;;;;;;;;3951:1;3946:7;;;;;;;;;;;;;3938:16;;;3912:43;;;3895:9;:11;;;3907:1;3895:14;;;;;;;;;;;;;;;;;:60;;;;3986:43;;;;;;;;;4002:1;4004;4002:4;;;;;;;;;;;;;;;;;;4007:1;4002:7;;;;;;;;;;;;;3994:16;;;3986:43;;;;4020:1;4022;4020:4;;;;;;;;;;;;;;;;;;4025:1;4020:7;;;;;;;;;;;;;4012:16;;;3986:43;;;3969:9;:11;;;3981:1;3969:14;;;;;;;;;;;;;;;;;:60;;;;3716:3;;;;;;;3686:354;;;;4063:37;;;;;;;;;4079:1;4081;4079:4;;;;;;;;;;;;;4071:13;;;4063:37;;;;4094:1;4096;4094:4;;;;;;;;;;;;;4086:13;;;4063:37;;;4049:9;:11;;:51;;;;4128:5;4110:9;:15;;:23;;;;;4157:37;;;;;;;;;4173:1;4175;4173:4;;;;;;;;;;;;;4165:13;;;4157:37;;;;4188:1;4190;4188:4;;;;;;;;;;;;;4180:13;;;4157:37;;;4143:9;:11;;:51;;;;4204:30;;:::i;:::-;4237:18;4249:5;4237:11;:18::i;:::-;4204:51;;4272:30;4279:9;4290:11;4272:6;:30::i;:::-;4265:37;;;;;3094:1215;;;;;;;;;;:::o;2217:90::-;2260:12;2291:2;:9;;;;2284:16;;2217:90;:::o;2313:775::-;2957:9;2969:2;:9;;;;2957:21;;2952:130;2984:4;2980:1;:8;2952:130;;;3009:2;3017:15;;;;;;;;;;;;;;;;;;;3030:1;3017:7;:15::i;:::-;3009:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3009:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:2;3055:15;;;;;;;;;;;;;;;;;;;3068:1;3055:7;:15::i;:::-;3047:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3047:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:3;;;;;;;2952:130;;;;2313:775;:::o;20943:3226::-;21005:24;;:::i;:::-;21051:38;;;;;;;;;21059:13;21065:3;21070:1;21059:5;:13::i;:::-;21051:38;;;;21074:14;21080:3;21085:2;21074:5;:14::i;:::-;21051:38;;;21041:5;:7;;:48;;;;21109:39;;;;;;;;;21117:14;21123:3;21128:2;21117:5;:14::i;:::-;21109:39;;;;21133:14;21139:3;21144:2;21133:5;:14::i;:::-;21109:39;;;21099:5;:7;;:49;;;;21169:41;;;;;;;;;21177:15;21183:3;21188;21177:5;:15::i;:::-;21169:41;;;;21194:15;21200:3;21205;21194:5;:15::i;:::-;21169:41;;;21158:5;:8;;:52;;;;21231:41;;;;;;;;;21239:15;21245:3;21250;21239:5;:15::i;:::-;21231:41;;;;21256:15;21262:3;21267;21256:5;:15::i;:::-;21231:41;;;21220:5;:8;;:52;;;;21282:102;;;;;;;;;21299:41;;;;;;;;;21307:15;21313:3;21318;21307:5;:15::i;:::-;21299:41;;;;21324:15;21330:3;21335;21324:5;:15::i;:::-;21299:41;;;21282:102;;;;21342:41;;;;;;;;;21350:15;21356:3;21361;21350:5;:15::i;:::-;21342:41;;;;21367:15;21373:3;21378;21367:5;:15::i;:::-;21342:41;;;21282:102;;;:5;:13;;:102;;;;21404:15;21410:3;21415;21404:5;:15::i;:::-;21394:5;:7;;:25;;;;;21442:15;21448:3;21453;21442:5;:15::i;:::-;21429:5;:10;;:28;;;;;21478:15;21484:3;21489;21478:5;:15::i;:::-;21467:5;:8;;:26;;;;;21504:28;;:::i;:::-;21557:15;21563:3;21568;21557:5;:15::i;:::-;21542:10;:12;;:30;;;;;21598:15;21604:3;21609;21598:5;:15::i;:::-;21582:10;:13;;:31;;;;;21639:15;21645:3;21650;21639:5;:15::i;:::-;21623:10;:13;;:31;;;;;21683:10;21664:5;:16;;:29;;;;21704:32;;:::i;:::-;21751:9;21763:1;21751:13;;21746:233;191:1;21766;:5;21746:233;;;21808:59;;;;;;;;;21816:24;21822:3;21837:2;21833:1;:6;21827:3;:12;21816:5;:24::i;:::-;21808:59;;;;21842:24;21848:3;21863:2;21859:1;:6;21853:3;:12;21842:5;:24::i;:::-;21808:59;;;21792:7;:10;;;21803:1;21792:13;;;;;;;;;;;;:75;;;;21897:71;;;;;;;;;21905:30;21911:3;21932:2;21927:1;191;21923:5;21922:12;21916:3;:18;21905:5;:30::i;:::-;21897:71;;;;21937:30;21943:3;21964:2;21959:1;191;21955:5;21954:12;21948:3;:18;21937:5;:30::i;:::-;21897:71;;;21881:7;:10;;;21892:1;21881:13;;;;;;;;;;;;:87;;;;21773:3;;;;;;;21746:233;;;;22000:25;22006:3;22021;191:1;22017:7;22011:3;:13;22000:5;:25::i;:::-;21988:7;:9;;:37;;;;;22047:25;22053:3;22068;191:1;22064:7;22058:3;:13;22047:5;:25::i;:::-;22035:7;:9;;:37;;;;;22098:7;22082:5;:13;;:23;;;;22116:26;;:::i;:::-;22152:12;22195:3;22188;22181:4;22168:3;:10;:17;:23;22167:31;;;;;;;;22152:46;;22275:43;;;;;;;;;22283:16;22289:3;22294:4;22283:5;:16::i;:::-;22275:43;;;;22301:16;22307:3;22312:4;22301:5;:16::i;:::-;22275:43;;;22261:9;:11;;:57;;;;22342:43;;;;;;;;;22350:16;22356:3;22361:4;22350:5;:16::i;:::-;22342:43;;;;22368:16;22374:3;22379:4;22368:5;:16::i;:::-;22342:43;;;22328:9;:11;;:57;;;;22409:43;;;;;;;;;22417:16;22423:3;22428:4;22417:5;:16::i;:::-;22409:43;;;;22435:16;22441:3;22446:4;22435:5;:16::i;:::-;22409:43;;;22395:9;:11;;:57;;;;22476:43;;;;;;;;;22484:16;22490:3;22495:4;22484:5;:16::i;:::-;22476:43;;;;22502:16;22508:3;22513:4;22502:5;:16::i;:::-;22476:43;;;22462:9;:11;;:57;;;;22549:43;;;;;;;;;22557:16;22563:3;22568:4;22557:5;:16::i;:::-;22549:43;;;;22575:16;22581:3;22586:4;22575:5;:16::i;:::-;22549:43;;;22529:9;:17;;:63;;;;22617:43;;;;;;;;;22625:16;22631:3;22636:4;22625:5;:16::i;:::-;22617:43;;;;22643:16;22649:3;22654:4;22643:5;:16::i;:::-;22617:43;;;22602:9;:12;;:58;;;;22701:43;;;;;;;;;22709:16;22715:3;22720:4;22709:5;:16::i;:::-;22701:43;;;;22727:16;22733:3;22738:4;22727:5;:16::i;:::-;22701:43;;;22670:9;:28;;:74;;;;22785:43;;;;;;;;;22793:16;22799:3;22804:4;22793:5;:16::i;:::-;22785:43;;;;22811:16;22817:3;22822:4;22811:5;:16::i;:::-;22785:43;;;22754:9;:28;;:74;;;;22852:43;;;;;;;;;22860:16;22866:3;22871:4;22860:5;:16::i;:::-;22852:43;;;;22878:16;22884:3;22889:4;22878:5;:16::i;:::-;22852:43;;;22838:9;:11;;:57;;;;22919:43;;;;;;;;;22927:16;22933:3;22938:4;22927:5;:16::i;:::-;22919:43;;;;22945:16;22951:3;22956:4;22945:5;:16::i;:::-;22919:43;;;22905:9;:11;;:57;;;;23011:1;23004:4;:8;22987:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22973:9;:11;;:40;;;;23028:9;23040:1;23028:13;;23023:181;23054:1;23047:4;:8;23043:1;:12;23023:181;;;23096:25;23102:3;23119:1;23114:2;:6;23107:4;:13;23096:5;:25::i;:::-;23076:9;:11;;;23088:1;23076:14;;;;;;;;;;;;;;;;;;23091:1;23076:17;;;;;;;;;;;;:45;;;;;23155:38;23161:3;23190:2;23185:1;23181;23174:4;:8;:12;23173:19;23166:4;:26;23155:5;:38::i;:::-;23135:9;:11;;;23147:1;23135:14;;;;;;;;;;;;;;;;;;23150:1;23135:17;;;;;;;;;;;;:58;;;;;23057:3;;;;;;;23023:181;;;;23253:1;23246:4;:8;;;;;;;;23229:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23214:9;:12;;:41;;;;23304:1;23297:4;:8;;;;;;;;23280:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;23265:9;:12;;:41;;;;23321:9;23333:1;23321:13;;23316:597;23347:1;23340:4;:8;;;;;;;;23336:1;:12;23316:597;;;23390:79;;;;;;;;;23398:34;23404:3;23429:2;23424:1;23417:4;:8;23416:15;23409:4;:22;23398:5;:34::i;:::-;23390:79;;;;23434:34;23440:3;23465:2;23460:1;23453:4;:8;23452:15;23445:4;:22;23434:5;:34::i;:::-;23390:79;;;23369:9;:12;;;23382:1;23369:15;;;;;;;;;;;;;;;;;;23385:1;23369:18;;;;;;;;;;;;:100;;;;23504:85;;;;;;;;;23512:37;23518:3;23546:2;23542:1;:6;23537:2;23530:4;:9;23523:4;:16;:25;23512:5;:37::i;:::-;23504:85;;;;23551:37;23557:3;23585:2;23581:1;:6;23576:2;23569:4;:9;23562:4;:16;:25;23551:5;:37::i;:::-;23504:85;;;23483:9;:12;;;23496:1;23483:15;;;;;;;;;;;;;;;;;;23499:1;23483:18;;;;;;;;;;;;:106;;;;23624:87;;;;;;;;;23632:38;23638:3;23667:2;23663:1;:6;23657:3;23650:4;:10;23643:4;:17;:26;23632:5;:38::i;:::-;23624:87;;;;23672:38;23678:3;23707:2;23703:1;:6;23697:3;23690:4;:10;23683:4;:17;:26;23672:5;:38::i;:::-;23624:87;;;23603:9;:12;;;23616:1;23603:15;;;;;;;;;;;;;;;;;;23619:1;23603:18;;;;;;;;;;;;:108;;;;23746:87;;;;;;;;;23754:38;23760:3;23789:2;23785:1;:6;23779:3;23772:4;:10;23765:4;:17;:26;23754:5;:38::i;:::-;23746:87;;;;23794:38;23800:3;23829:2;23825:1;:6;23819:3;23812:4;:10;23805:4;:17;:26;23794:5;:38::i;:::-;23746:87;;;23725:9;:12;;;23738:1;23725:15;;;;;;;;;;;;;;;;;;23741:1;23725:18;;;;;;;;;;;;:108;;;;23350:3;;;;;;;23316:597;;;;23935:4;23922:5;:10;;:17;;;;;23965:29;23971:3;23990;23983:4;:10;23976:4;:17;23965:5;:29::i;:::-;23950:9;:12;;:44;;;;;24019:29;24025:3;24044;24037:4;:10;24030:4;:17;24019:5;:29::i;:::-;24004:9;:12;;:44;;;;;24073:29;24079:3;24098;24091:4;:10;24084:4;:17;24073:5;:29::i;:::-;24058:9;:12;;:44;;;;;24131:9;24113:5;:15;;:27;;;;24157:5;24150:12;;;;;;20943:3226;;;:::o;5435:11695::-;5534:4;5550:42;;:::i;:::-;5624:198;5653:122;5682:9;:13;;;5697:9;:13;;;5712:9;:11;;;5725:9;:11;;;5738:9;:11;;;5751:9;:15;;;5671:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5671:96:5;;;5661:107;;;;;;5653:116;;;:120;:122::i;:::-;5777:5;:7;;;5786:5;:7;;;5795:5;:8;;;5805:5;:8;;;5642:172;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5642:172:5;;;5632:183;;;;;;5624:192;;;:196;:198::i;:::-;5602:17;:19;;:220;;;;;5874:27;5881:17;:19;;;5874:6;:27::i;:::-;5851:17;:20;;:50;;;;5933:57;5962:17;:19;;;5951:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5951:31:5;;;5941:42;;;;;;5933:51;;;:55;:57::i;:::-;5911:17;:19;;:79;;;;;6026:44;6050:17;:19;;;6026:17;:19;;;:23;;:44;;;;:::i;:::-;6000:17;:20;;;6021:1;6000:23;;;;;;;;;;;;:70;;;;;6085:9;6097:1;6085:13;;6080:135;6104:1;6100;:5;6080:135;;;6152:52;6184:17;:19;;;6152:17;:20;;;6177:1;6173;:5;6152:27;;;;;;;;;;;;;:31;;:52;;;;:::i;:::-;6126:17;:20;;;6147:1;6126:23;;;;;;;;;;;;:78;;;;;6107:3;;;;;;;6080:135;;;;6318:9;6330:1;6318:13;;6313:233;6341:1;162:2;6337:5;;;;;;;;6333:1;:9;6313:233;;;6403:35;6436:1;6431;:6;6403:17;:20;;;6424:1;6403:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;6363:17;:34;;;6398:1;6363:37;;;;;;;;;;;;:75;;;;;6500:35;6533:1;6528;:6;6500:17;:20;;;6521:1;6500:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;6452:17;:34;;;6495:1;162:2;6491:5;;;;;;;;6487:1;:9;6452:45;;;;;;;;;;;;:83;;;;;6344:3;;;;;;;6313:233;;;;6577:72;6606:17;:19;;;6627:5;:13;;;6595:46;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6595:46:5;;;6585:57;;;;;;6577:66;;;:70;:72::i;:::-;6555:17;:19;;:94;;;;;6685:77;6742:17;:19;;;6685:52;6713:17;:20;;;6734:1;6713:23;;;;;;;;;;;;;6685:17;:20;;;6706:1;6685:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;6660:17;:22;;:102;;;;;6794:160;6885:68;6930:17;:22;;;6885:40;6922:1;162:2;6918:5;;;;;;;;6912:1;:12;6885:17;:22;;;:26;;:40;;;;:::i;:::-;:44;;:68;;;;:::i;:::-;6794:86;6831:48;6855:17;:20;;;6876:1;6855:23;;;;;;;;;;;;;6831:17;:19;;;:23;;:48;;;;:::i;:::-;6794:32;6805:17;:20;;;6794:10;:32::i;:::-;:36;;:86;;;;:::i;:::-;:90;;:160;;;;:::i;:::-;6772:17;:19;;:182;;;;;6990:116;6994:42;6998:5;:13;;;7012:1;6998:16;;;;;;;;;;;;;7016:17;:19;;;6994:3;:42::i;:::-;7038:67;7042:5;:13;;;7056:1;7042:16;;;;;;;;;;;;;7060:44;7084:17;:19;;;7060:17;:19;;;:23;;:44;;;;:::i;:::-;7038:3;:67::i;:::-;6990:3;:116::i;:::-;6964:17;:23;;:142;;;;7164:32;7176:17;:19;;;7164:5;:7;;;:11;;:32;;;;:::i;:::-;7142:17;:19;;:54;;;;;7320:26;;:::i;:::-;7349:5;:15;;;7320:44;;7374:38;;:::i;:::-;7422:24;;:::i;:::-;:53;;;;;;;;;7450:9;:11;;;7422:53;;;;7463:9;:11;;;7422:53;;;;;7571:238;7600:17;:19;;;7621:9;:12;;;7635:9;:12;;;7649:9;:11;;;7662:9;:11;;;7675:9;:11;;;7688:9;:11;;;7701:9;:17;;;7720:9;:12;;;7734:9;:28;;;7764:9;:28;;;7794:6;7589:212;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7589:212:5;;;7579:223;;;;;;7571:232;;;:236;:238::i;:::-;7551:15;:17;;:258;;;;;7856:5;:10;;;7839:28;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7819:15;:17;;:48;;;;7903:15;:17;;;7877:15;:17;;;7895:1;7877:20;;;;;;;;;;;;;;;;;;7898:1;7877:23;;;;;;;;;;;;:43;;;;;7956:15;:17;;;7930:15;:17;;;7948:1;7930:20;;;;;;;;;;;;;;;;;;7951:1;7930:23;;;;;;;;;;;;:43;;;;;7988:6;7997:1;7988:10;;7983:355;8004:5;:10;;;8000:1;:14;7983:355;;;8061:9;:11;;;8077:1;8073;:5;8061:18;;;;;;;;;;;;;;;;;;8080:1;8061:21;;;;;;;;;;;;;8035:15;:17;;;8053:1;8035:20;;;;;;;;;;;;;;;;;;8056:1;8035:23;;;;;;;;;;;;:47;;;;;8122:9;:11;;;8138:1;8134;:5;8122:18;;;;;;;;;;;;;;;;;;8141:1;8122:21;;;;;;;;;;;;;8096:15;:17;;;8114:1;8096:20;;;;;;;;;;;;;;;;;;8117:1;8096:23;;;;;;;;;;;;:47;;;;;8183:52;8211:15;:17;;;8229:1;8211:20;;;;;;;;;;;;;;;;;;8232:1;8211:23;;;;;;;;;;;;;8183:15;:17;;;8201:1;8183:20;;;;;;;;;;;;;;;;;;8204:1;8183:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;8157:15;:17;;;8175:1;8157:20;;;;;;;;;;;;;;;;;;8178:1;8157:23;;;;;;;;;;;;:78;;;;;8275:52;8303:15;:17;;;8321:1;8303:20;;;;;;;;;;;;;;;;;;8324:1;8303:23;;;;;;;;;;;;;8275:15;:17;;;8293:1;8275:20;;;;;;;;;;;;;;;;;;8296:1;8275:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;8249:15;:17;;;8267:1;8249:20;;;;;;;;;;;;;;;;;;8270:1;8249:23;;;;;;;;;;;;:78;;;;;8016:3;;;;;;;7983:355;;;;8347:19;;:::i;:::-;8381:9;8393:1;8381:13;;8376:201;8400:5;:10;;;8396:1;:14;8376:201;;;8438:46;8442:4;8448:35;8452:2;8455:1;8452:5;;;;;;;;;;;;;;;;;;;;8448:35;;;;;;;;;;;;;;;;;;;;;;;;;;8459:15;:17;;;8477:1;8459:20;;;;;;;;;;;;;;;;;;8480:1;8459:23;;;;;;;;;;;;;8448:3;:35::i;:::-;8438:3;:46::i;:::-;8431:53;;8505:46;8509:4;8515:35;8519:2;8522:1;8519:5;;;;;;;;;;;;;;;;;;;;8515:35;;;;;;;;;;;;;;;;;;;;;;;;;;8526:15;:17;;;8544:1;8526:20;;;;;;;;;;;;;;;;;;8547:1;8526:23;;;;;;;;;;;;;8515:3;:35::i;:::-;8505:3;:46::i;:::-;8498:53;;8412:3;;;;;;;8376:201;;;;8595:90;8598:53;8602:35;8606:9;:11;;;8619:15;:17;;;8602:3;:35::i;:::-;8639:9;:11;;;8598:3;:53::i;:::-;8653:31;8657:4;8663:20;8667:1;8663:20;;;;;;;;;;;;;;;;;;;;;;;;;;8670:9;:12;;;8663:3;:20::i;:::-;8653:3;:31::i;:::-;8595:2;:90::i;:::-;8587:132;;;;;;;;;;;;;;;;;;;;;;;;8734:6;8743:1;8734:10;;8729:279;8750:5;:10;;;8746:1;:14;8729:279;;;8807:75;8835:46;8857:15;:17;;;8875:1;8857:20;;;;;;;;;;;;;;;;;;8878:1;8857:23;;;;;;;;;;;;;8835:15;:17;;;:21;;:46;;;;:::i;:::-;8807:15;:17;;;8825:1;8807:20;;;;;;;;;;;;;;;;;;8828:1;8807:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;8781:15;:17;;;8799:1;8781:20;;;;;;;;;;;;;;;;;;8802:1;8781:23;;;;;;;;;;;;:101;;;;;8922:75;8950:46;8972:15;:17;;;8990:1;8972:20;;;;;;;;;;;;;;;;;;8993:1;8972:23;;;;;;;;;;;;;8950:15;:17;;;:21;;:46;;;;:::i;:::-;8922:15;:17;;;8940:1;8922:20;;;;;;;;;;;;;;;;;;8943:1;8922:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;8896:15;:17;;;8914:1;8896:20;;;;;;;;;;;;;;;;;;8917:1;8896:23;;;;;;;;;;;;:101;;;;;8762:3;;;;;;;8729:279;;;;9024:13;;;;;;;;;9032:1;9024:13;;;;9035:1;9024:13;;;9017:20;;9052:9;9064:1;9052:13;;9047:247;9071:5;:10;;;9067:1;:14;9047:247;;;9155:46;9159:4;9165:35;9169:2;9172:1;9169:5;;;;;;;;;;;;;;;;;;;;9165:35;;;;;;;;;;;;;;;;;;;;;;;;;;9176:15;:17;;;9194:1;9176:20;;;;;;;;;;;;;;;;;;9197:1;9176:23;;;;;;;;;;;;;9165:3;:35::i;:::-;9155:3;:46::i;:::-;9148:53;;9222:46;9226:4;9232:35;9236:2;9239:1;9236:5;;;;;;;;;;;;;;;;;;;;9232:35;;;;;;;;;;;;;;;;;;;;;;;;;;9243:15;:17;;;9261:1;9243:20;;;;;;;;;;;;;;;;;;9264:1;9243:23;;;;;;;;;;;;;9232:3;:35::i;:::-;9222:3;:46::i;:::-;9215:53;;9083:3;;;;;;;9047:247;;;;9311:90;9314:53;9318:35;9322:9;:11;;;9335:15;:17;;;9318:3;:35::i;:::-;9355:9;:11;;;9314:3;:53::i;:::-;9369:31;9373:4;9379:20;9383:1;9379:20;;;;;;;;;;;;;;;;;;;;;;;;;;9386:9;:12;;;9379:3;:20::i;:::-;9369:3;:31::i;:::-;9311:2;:90::i;:::-;9303:132;;;;;;;;;;;;;;;;;;;;;;;;9472:15;:17;;;9446:15;:17;;;9464:1;9446:20;;;;;;;;;;;;;;;;;;9467:1;9446:23;;;;;;;;;;;;:43;;;;;9525:15;:17;;;9499:15;:17;;;9517:1;9499:20;;;;;;;;;;;;;;;;;;9520:1;9499:23;;;;;;;;;;;;:43;;;;;9557:6;9566:1;9557:10;;9552:426;9573:5;:10;;;9569:1;:14;9552:426;;;9701:9;:11;;;9717:1;9713;:5;9701:18;;;;;;;;;;;;;;;;;;9720:1;9701:21;;;;;;;;;;;;;9675:15;:17;;;9693:1;9675:20;;;;;;;;;;;;;;;;;;9696:1;9675:23;;;;;;;;;;;;:47;;;;;9762:9;:11;;;9778:1;9774;:5;9762:18;;;;;;;;;;;;;;;;;;9781:1;9762:21;;;;;;;;;;;;;9736:15;:17;;;9754:1;9736:20;;;;;;;;;;;;;;;;;;9757:1;9736:23;;;;;;;;;;;;:47;;;;;9823:52;9851:15;:17;;;9869:1;9851:20;;;;;;;;;;;;;;;;;;9872:1;9851:23;;;;;;;;;;;;;9823:15;:17;;;9841:1;9823:20;;;;;;;;;;;;;;;;;;9844:1;9823:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;9797:15;:17;;;9815:1;9797:20;;;;;;;;;;;;;;;;;;9818:1;9797:23;;;;;;;;;;;;:78;;;;;9915:52;9943:15;:17;;;9961:1;9943:20;;;;;;;;;;;;;;;;;;9964:1;9943:23;;;;;;;;;;;;;9915:15;:17;;;9933:1;9915:20;;;;;;;;;;;;;;;;;;9936:1;9915:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;9889:15;:17;;;9907:1;9889:20;;;;;;;;;;;;;;;;;;9910:1;9889:23;;;;;;;;;;;;:78;;;;;9585:3;;;;;;;9552:426;;;;10014:64;10018:35;10022:9;:11;;;10035:15;:17;;;10018:3;:35::i;:::-;10055:22;10059:9;:17;;;10055:3;:22::i;:::-;10014:3;:64::i;:::-;9988:15;:23;;:90;;;;10109:52;10130:15;:17;;;10149:9;:11;;;10109:20;:52::i;:::-;10088:15;:18;;:73;;;;10272:52;10293:15;:17;;;10312:9;:11;;;10272:20;:52::i;:::-;10251:15;:18;;:73;;;;10339:9;10351:1;10339:13;;10334:609;10371:1;10358:5;:10;;;:14;;;;;;;;10354:1;:18;10334:609;;;10507:9;10519:1;10507:13;;10502:431;10526:1;10522;:5;10502:431;;;10557:9;10569:1;10557:13;;10552:169;10576:1;10572;:5;10552:169;;;10637:65;10670:15;:17;;;10696:1;10692;10688;:5;:9;10670:28;;;;;;;;;;;;;;;;;;10699:1;10670:31;;;;;;;;;;;;;10637:15;:22;;;10660:1;10637:25;;;;;;;;;;;;;10663:1;10637:28;;;;;;;;;;;;;:32;;:65;;;;:::i;:::-;10606:15;:22;;;10629:1;10606:25;;;;;;;;;;;;;10632:1;10606:28;;;;;;;;;;;;:96;;;;;10579:3;;;;;;;10552:169;;;;10765:54;10769:15;:18;;;10788:1;10769:21;;;;;;;;;;;;;;;;;;10791:1;10769:24;;;;;;;;;;;;;10795:23;10799:9;:12;;;10812:1;10799:15;;;;;;;;;;;;;;;;;;10815:1;10799:18;;;;;;;;;;;;;10795:3;:23::i;:::-;10765:3;:54::i;:::-;10738:15;:18;;;10757:1;10738:21;;;;;;;;;;;;;;;;;;10760:1;10738:24;;;;;;;;;;;;:81;;;;10864:54;10868:15;:18;;;10887:1;10868:21;;;;;;;;;;;;;;;;;;10890:1;10868:24;;;;;;;;;;;;;10894:23;10898:9;:12;;;10911:1;10898:15;;;;;;;;;;;;;;;;;;10914:1;10898:18;;;;;;;;;;;;;10894:3;:23::i;:::-;10864:3;:54::i;:::-;10837:15;:18;;;10856:1;10837:21;;;;;;;;;;;;;;;;;;10859:1;10837:24;;;;;;;;;;;;:81;;;;10529:3;;;;;;;10502:431;;;;10374:3;;;;;;;10334:609;;;;11106:62;11139:15;:22;;;11162:1;11139:25;;;;;;;;;;;;;11165:1;11139:28;;;;;;;;;;;;;11106:15;:22;;;11129:1;11106:25;;;;;;;;;;;;;11132:1;11106:28;;;;;;;;;;;;;:32;;:62;;;;:::i;:::-;11075:15;:22;;;11098:1;11075:25;;;;;;;;;;;;;11101:1;11075:28;;;;;;;;;;;;:93;;;;;11209:62;11242:15;:22;;;11265:1;11242:25;;;;;;;;;;;;;11268:1;11242:28;;;;;;;;;;;;;11209:15;:22;;;11232:1;11209:25;;;;;;;;;;;;;11235:1;11209:28;;;;;;;;;;;;;:32;;:62;;;;:::i;:::-;11178:15;:22;;;11201:1;11178:25;;;;;;;;;;;;;11204:1;11178:28;;;;;;;;;;;;:93;;;;;11306:114;11310:20;11314:1;11310:20;;;;;;;;;;;;;;;;;;;;;;;;;;11317:9;:12;;;11310:3;:20::i;:::-;11332:87;11336:40;11340:2;11343:1;11340:5;;;;;;;;;;;;;;;;;;;;11336:40;;;;;;;;;;;;;;;;;;;;;;;;;;11347:15;:22;;;11370:1;11347:25;;;;;;;;;;;;;11373:1;11347:28;;;;;;;;;;;;;11336:3;:40::i;:::-;11378;11382:2;11385:1;11382:5;;;;;;;;;;;;;;;;;;;;11378:40;;;;;;;;;;;;;;;;;;;;;;;;;;11389:15;:22;;;11412:1;11389:25;;;;;;;;;;;;;11415:1;11389:28;;;;;;;;;;;;;11378:3;:40::i;:::-;11332:3;:87::i;:::-;11306:3;:114::i;:::-;11281:15;:22;;:139;;;;11439:81;11442:15;:22;;;11466:53;11470:35;11474:9;:11;;;11487:15;:17;;;11470:3;:35::i;:::-;11507:9;:11;;;11466:3;:53::i;:::-;11439:2;:81::i;:::-;11431:127;;;;;;;;;;;;;;;;;;;;;;;;11574:9;11586:1;11574:13;;11569:328;11593:5;:10;;;11589:1;:14;11569:328;;;11661:87;11665:15;:34;;;11701:46;11705:9;:13;;;11719:1;11705:16;;;;;;;;;;;;;;;;;;11723:15;:17;;;11741:1;11723:20;;;;;;;;;;;;;;;;;;11744:1;11723:23;;;;;;;;;;;;;11701:3;:46::i;:::-;11661:3;:87::i;:::-;11624:15;:34;;:124;;;;11799:87;11803:15;:34;;;11839:46;11843:9;:13;;;11857:1;11843:16;;;;;;;;;;;;;;;;;;11861:15;:17;;;11879:1;11861:20;;;;;;;;;;;;;;;;;;11882:1;11861:23;;;;;;;;;;;;;11839:3;:46::i;:::-;11799:3;:87::i;:::-;11762:15;:34;;:124;;;;11605:3;;;;;;;11569:328;;;;11943:74;11947:15;:34;;;11983:33;11987:9;:28;;;11983:3;:33::i;:::-;11943:3;:74::i;:::-;11906:15;:34;;:111;;;;12064:74;12068:15;:34;;;12104:33;12108:9;:28;;;12104:3;:33::i;:::-;12064:3;:74::i;:::-;12027:15;:34;;:111;;;;12174:49;12178:25;12182:1;12178:25;;;;;;;;;;;;;;;;;;;;;;;;;;12185:15;:17;;;12178:3;:25::i;:::-;12205:17;12209:9;:12;;;12205:3;:17::i;:::-;12174:3;:49::i;:::-;12149:15;:22;;:74;;;;12234:28;;:::i;:::-;12265:5;:16;;;12234:47;;12291:40;;:::i;:::-;12367:18;:10;:12;;;:16;:18::i;:::-;12341:16;:23;;:44;;;;;12451:1;12447;12434:5;:10;;;:14;;;;;;;;:18;12417:36;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12395:16;:19;;:58;;;;12468:9;12480:1;12468:13;;12463:358;12500:1;12487:5;:10;;;:14;;;;;;;;12483:1;:18;12463:358;;;12554:105;12558:44;12562:15;:18;;;12581:1;12562:21;;;;;;;;;;;;;;;;;;12584:1;12562:24;;;;;;;;;;;;;12588:10;:13;;;12558:3;:44::i;:::-;12604:54;12608:15;:18;;;12627:1;12608:21;;;;;;;;;;;;;;;;;;12630:1;12608:24;;;;;;;;;;;;;12634:16;:23;;;12604:3;:54::i;:::-;12554:3;:105::i;:::-;12522:16;:19;;;12546:1;12542;:5;12522:26;;;;;;;;;;;;;;;;;;12549:1;12522:29;;;;;;;;;;;;:137;;;;12705:105;12709:44;12713:15;:18;;;12732:1;12713:21;;;;;;;;;;;;;;;;;;12735:1;12713:24;;;;;;;;;;;;;12739:10;:13;;;12709:3;:44::i;:::-;12755:54;12759:15;:18;;;12778:1;12759:21;;;;;;;;;;;;;;;;;;12781:1;12759:24;;;;;;;;;;;;;12785:16;:23;;;12755:3;:54::i;:::-;12705:3;:105::i;:::-;12673:16;:19;;;12697:1;12693;:5;12673:26;;;;;;;;;;;;;;;;;;12700:1;12673:29;;;;;;;;;;;;:137;;;;12503:3;;;;;;;12463:358;;;;12852:102;12856:42;12860:15;:22;;;12884:10;:13;;;12856:3;:42::i;:::-;12900:53;12904:15;:23;;;12929:16;:23;;;12900:3;:53::i;:::-;12852:3;:102::i;:::-;12830:16;:19;;:124;;;;12986:103;12990:42;12994:15;:22;;;13018:10;:13;;;12990:3;:42::i;:::-;13034:54;13038:15;:18;;;13057:1;13038:21;;;;;;;;;;;;;;;;;;13060:1;13038:24;;;;;;;;;;;;;13064:16;:23;;;13034:3;:54::i;:::-;12986:3;:103::i;:::-;12964:16;:19;;:125;;;;13125:34;;;;;;;;;;;;;;;;;;;13143:9;:15;;;13125:7;:34::i;:::-;13099:16;:23;;:60;;;;13191:91;13195:43;13199:16;:23;;;13224:10;:13;;;13195:3;:43::i;:::-;13240:41;13244:9;:11;;;13257:16;:23;;;13240:3;:41::i;:::-;13191:3;:91::i;:::-;13169:16;:19;;:113;;;;13317:167;13321:75;13325:55;13329:15;:18;;;13348:1;13329:21;;;;;;;;;;;;;;;;;;13351:1;13329:24;;;;;;;;;;;;;13355:15;:18;;;13374:1;13355:21;;;;;;;;;;;;;;;;;;13377:1;13355:24;;;;;;;;;;;;;13325:3;:55::i;:::-;13382:10;:13;;;13321:3;:75::i;:::-;13398:85;13402:55;13406:15;:18;;;13425:1;13406:21;;;;;;;;;;;;;;;;;;13428:1;13406:24;;;;;;;;;;;;;13432:15;:18;;;13451:1;13432:21;;;;;;;;;;;;;;;;;;13454:1;13432:24;;;;;;;;;;;;;13402:3;:55::i;:::-;13459:16;:23;;;13398:3;:85::i;:::-;13317:3;:167::i;:::-;13292:16;:22;;:192;;;;13521:414;13525:286;13529:129;13533:99;13537:49;13541:15;:18;;;13560:1;13541:21;;;;;;;;;;;;;;;;;;13563:1;13541:24;;;;;;;;;;;;;13567:18;:10;:12;;;:16;:18::i;:::-;13537:3;:49::i;:::-;13588:43;13592:15;:23;;;13617:10;:13;;;13588:3;:43::i;:::-;13533:3;:99::i;:::-;13634:17;:20;;;13655:1;13634:23;;;;;;;;;;;;;13529:3;:129::i;:::-;13660:150;13664:120;13668:53;13672:15;:34;;;13708:10;:12;;;13668:3;:53::i;:::-;13723:60;13727:15;:34;;;13763:19;:10;:13;;;:17;:19::i;:::-;13723:3;:60::i;:::-;13664:3;:120::i;:::-;13786:17;:20;;;13807:1;13786:23;;;;;;;;;;;;;13660:3;:150::i;:::-;13525:3;:286::i;:::-;13813:121;13817:68;13821:27;13825:5;:8;;;13835:10;:12;;;13821:3;:27::i;:::-;13850:34;13854:5;:8;;;13864:19;:10;:13;;;:17;:19::i;:::-;13850:3;:34::i;:::-;13817:3;:68::i;:::-;13887:46;13915:15;:17;;;13887;:20;;;13908:1;13887:23;;;;;;;;;;;;;:27;;:46;;;;:::i;:::-;13813:3;:121::i;:::-;13521:3;:414::i;:::-;13494:16;:24;;:441;;;;13967:165;13971:29;13975:16;:24;;;13971:3;:29::i;:::-;14002:129;14006:87;14010:62;14014:27;14018:1;14014:27;;;;;;;;;;;;;;;;;;;;;;;;;;14021:17;:19;;;14014:3;:27::i;:::-;14043:28;14047:17;:23;;;14043:3;:28::i;:::-;14010:3;:62::i;:::-;14074:18;14078:1;14074:18;;;;;;;;;;;;;;;;;;;;;;;;;;14081:5;:10;;;14074:3;:18::i;:::-;14006:3;:87::i;:::-;14095:35;14112:15;:17;;;14095:10;:12;;;:16;;:35;;;;:::i;:::-;14002:3;:129::i;:::-;13967:3;:165::i;:::-;13945:16;:19;;:187;;;;14143:17;14163:184;14192:15;:17;;;14211:16;:19;;;14232:16;:19;;;14253:16;:19;;;14274:16;:22;;;14298:16;:19;;;14319:16;:19;;;14181:158;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14181:158:5;;;14171:169;;;;;;14163:178;;;:182;:184::i;:::-;14143:204;;14378:5;:16;;;:18;;;14365:9;:31;14357:86;;;;;;;;;;;;;;;;;;;;;;;;14454:34;;:::i;:::-;14525:81;14554:10;:12;;;14568:5;:7;;;14577:5;:10;;;14589:5;:8;;;14543:55;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14543:55:5;;;14533:66;;;;;;14525:75;;;:79;:81::i;:::-;14498:13;:24;;:108;;;;;14648:32;14652:1;14648:32;;;;;;;;;;;;;;;;;;;;;;;;;;14655:13;:24;;;14648:3;:32::i;:::-;14630:13;:15;;:50;;;;14714:38;14727:2;14714:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14731:17;:20;;;14714:12;:38::i;:::-;14690:13;:21;;:62;;;;14783:96;14794:48;14800:17;:20;;;14822:17;:19;;;14794:5;:48::i;:::-;14844:17;:34;;;14783:10;:96::i;:::-;14762:13;:18;;:117;;;;14908:99;14912:47;14916:5;:7;;;14925:33;14929:5;:7;;;14938:17;:19;;;14925:3;:33::i;:::-;14912:3;:47::i;:::-;14961:45;14965:13;14975:2;14965:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;14980:25;:17;:19;;;:23;:25::i;:::-;14961:3;:45::i;:::-;14908:3;:99::i;:::-;14890:13;:15;;:117;;;;15035:99;15039:21;15043:16;15047:1;15043:16;;;;;;;;;;;;;;;;;;;;;;;;;;15050:5;:8;;;15043:3;:16::i;:::-;15039:3;:21::i;:::-;15062:71;15066:13;:15;;;15083:49;15090:13;:21;;;15113:13;:18;;;15083:6;:49::i;:::-;15062:3;:71::i;:::-;15035:3;:99::i;:::-;15017:13;:15;;:117;;;;15162:51;15166:13;:15;;;15183:29;15187:13;:15;;;15204:5;:7;;;15183:3;:29::i;:::-;15162:3;:51::i;:::-;15144:13;:15;;:69;;;;15268:32;;:::i;:::-;15303:5;:13;;;15268:48;;15331:9;15343:1;15331:13;;15326:466;191:1;15346;:5;15326:466;;;15399:92;15428:13;:24;;;15454:7;:10;;;15465:1;15454:13;;;;;;;;;;;;;15469:7;:10;;;15480:1;15469:13;;;;;;;;;;;;;15417:66;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15417:66:5;;;15407:77;;;;;;15399:86;;;:90;:92::i;:::-;15372:13;:24;;:119;;;;;15535:13;:24;;;15505:13;:24;;;15530:1;15505:27;;;;;;;;;;;;:54;;;;;15593:12;15608:30;:13;:24;;;:28;:30::i;:::-;15593:45;;15670:111;15674:51;15678:7;:10;;;15689:1;15678:13;;;;;;;;;;;;;15693:31;15722:1;15693:13;:24;;;:28;;:31;;;;:::i;:::-;15674:3;:51::i;:::-;15727:53;15731:31;15735:7;:10;;;15746:1;15735:13;;;;;;;;;;;;;15750:11;15759:1;15750:4;:8;;:11;;;;:::i;:::-;15731:3;:31::i;:::-;15764:13;:15;;;15727:3;:53::i;:::-;15670:3;:111::i;:::-;15652:13;:15;;:129;;;;15326:466;15353:3;;;;;;;15326:466;;;;15836:1;15802:13;:28;;;15831:1;15802:31;;;;;;;;;;;;:35;;;;;15852:9;15864:1;15852:13;;15847:155;191:1;15867;:5;15847:155;;;15927:64;15963:13;:24;;;15988:1;15963:27;;;;;;;;;;;;;15927:13;:28;;;15956:1;15927:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;15893:13;:28;;;15922:1;15893:31;;;;;;;;;;;;:98;;;;;15874:3;;;;;;;15847:155;;;;16011:21;;:::i;:::-;16076:37;:13;:28;;;16105:1;16076:31;;;;;;;;;;;;;:35;:37::i;:::-;16042:13;:28;;;16071:1;16042:31;;;;;;;;;;;;:71;;;;;16128:9;16140:1;16128:13;;16123:462;16149:1;162:2;16147:3;;;;;;;;16143:1;:7;16123:462;;;16176:9;16188:1;16176:13;;16171:404;162:2;16202:1;16197;16192;:6;;;;16191:12;:16;16171:404;;;16232:10;16255:1;16250;:6;;;;16245:1;:12;16232:25;;16280:6;16287:2;16280:10;;;;;;;;;;;;;16279:11;16275:286;;;16314:12;16329:76;16369:13;:24;;;16402:1;16398;191;16394:5;:9;16369:35;;;;;;;;;;;;;16329:13;:24;;;16362:1;16358;191;16354:5;:9;16329:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;16314:91;;16462:41;16498:4;16462:13;:28;;;16491:1;16462:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;16427:13;:28;;;16456:2;16427:32;;;;;;;;;;;;:76;;;;;16538:4;16525:6;16532:2;16525:10;;;;;;;;;;;;:17;;;;;;;;;;;16275:286;;16171:404;16209:3;;;;;16171:404;;;;16152:3;;;;;16123:462;;;;16595:20;;:::i;:::-;16625;;:::i;:::-;16660:9;16672:1;16660:13;;16655:224;162:2;16675:1;:5;16655:224;;;16709:55;16713:5;16720:43;16724:2;16727:1;16724:5;;;;;;;;;;;;;;;;;;;;16720:43;;;;;;;;;;;;;;;;;;;;;;;;;;16731:13;:28;;;16760:1;16731:31;;;;;;;;;;;;;16720:3;:43::i;:::-;16709:3;:55::i;:::-;16701:63;;16786:82;16790:5;16797:70;16801:13;:21;;;16823:1;16801:24;;;;;;;;;;;;;16827:13;:28;;;16864:1;16860;162:2;16856:5;:9;16827:39;;;;;;;;;;;;;16797:3;:70::i;:::-;16786:3;:82::i;:::-;16778:90;;16682:3;;;;;;;16655:224;;;;16888:21;;:::i;:::-;16912:102;16916:49;16920:21;16924:5;16931:7;:9;;;16920:3;:21::i;:::-;16943;16947:5;16954:7;:9;;;16943:3;:21::i;:::-;16916:3;:49::i;:::-;16967:46;16971:13;:15;;;16988:24;17002:7;:9;;;16988:7;:9;;;:13;;:24;;;;:::i;:::-;16967:3;:46::i;:::-;16912:3;:102::i;:::-;16888:126;;17032:27;17035:13;:15;;;17052:6;17032:2;:27::i;:::-;17024:77;;;;;;;;;;;;;;;;;;;;;;;;17119:4;17112:11;;;;;;;;;;;;;;;;5435:11695;;;;:::o;28624:355::-;28696:14;;:::i;:::-;28768:69;229:77;28811:5;28818:1;28794:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28794:26:5;;;28784:37;;;;;;28776:46;;;:60;;;;;;;;28768:7;:69::i;:::-;28761:76;;28624:355;;;;:::o;25761:295::-;25834:14;25927:4;25921:11;25983:5;25976:4;25969:5;25965:16;25961:28;25955:35;25952:1;25945:46;26038:1;26032:8;26022:18;;25898:152;;;;;:::o;727:95:3:-;774:7;117:77;800:1;:15;;;;;;;;793:22;;727:95;;;:::o;25321:236:5:-;25374:24;;:::i;:::-;25422:1;25410:6;25417:1;25410:9;;;;;;;;;;;;:13;;;;;25445:4;25433:6;25440:1;25433:9;;;;;;;;;;;;:16;;;;;25464:9;25476:1;25464:13;;25459:92;162:2;25479:1;:5;25459:92;;;25517:23;25535:4;25517:6;25528:1;25524;:5;25517:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;25505:6;25512:1;25505:9;;;;;;;;;;;;:35;;;;;25486:3;;;;;;;25459:92;;;;25321:236;;;:::o;496:116:3:-;554:7;117:77;580:25;;;;;;;590:1;587;580:25;573:32;;496:116;;;;:::o;374:::-;432:7;117:77;458:25;;;;;;;468:1;465;458:25;451:32;;374:116;;;;:::o;828:127::-;886:7;917:1;912;:6;;:36;;947:1;943;117:77;929:15;:19;912:36;;;925:1;921;:5;912:36;905:43;;828:127;;;;:::o;24619:180:5:-;24684:14;24715:9;24727:1;24715:13;;24710:83;162:2;24730:1;:5;24710:83;;;24765:17;24776:2;24779:1;24776:5;;;;;;;;;;;;;24765:6;:10;;:17;;;;:::i;:::-;24756:26;;24737:3;;;;;;;24710:83;;;;24619:180;;;:::o;26590:382::-;26655:16;;:::i;:::-;26721:4;26715:11;26755:1;26749:8;26746:1;26739:19;26805:4;26802:1;26798:12;26792:19;26785:4;26782:1;26778:12;26771:41;26846:1;26839:4;26836:1;26832:12;26825:23;26905:4;26902:1;26896:4;26893:1;26887:4;26882:3;26871:39;26864:47;26861:2;;;26940:1;26937;26930:12;26861:2;26692:274;;;;;:::o;26128:456::-;26202:16;;:::i;:::-;26268:4;26262:11;26302:2;26296:9;26293:1;26286:20;26354:4;26350:2;26346:13;26340:20;26333:4;26330:1;26326:12;26319:42;26401:2;26395:9;26388:4;26385:1;26381:12;26374:31;26453:4;26449:2;26445:13;26439:20;26432:4;26429:1;26425:12;26418:42;26517:4;26514:1;26508:4;26505:1;26499:4;26494:3;26483:39;26476:47;26473:2;;;26552:1;26549;26542:12;26473:2;26239:339;;;;;:::o;27165:131::-;27238:4;27269:2;:4;;;27261:2;:4;;;:12;:28;;;;;27285:2;:4;;;27277:2;:4;;;:12;27261:28;27254:35;;27165:131;;;;:::o;26978:181::-;27032:14;;:::i;:::-;27065:47;;;;;;;;;27073:1;:3;;;27065:47;;;;229:77;27093:1;:3;;;:17;;;;;;;;229:77;27078:33;27065:47;;;27058:54;;26978:181;;;:::o;17136:1489::-;17242:26;17517:12;17532:8;:15;17517:30;;17557:12;17579:1;17572:4;:8;;;;;;;;17557:23;;17616:4;17599:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17590:31;;17703:25;17731:16;17735:4;17741:5;17731:3;:16::i;:::-;17703:44;;17758:29;17804:4;17790:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17790:19:5;;;;17758:51;;17824:9;17836:1;17824:13;;17819:777;17843:1;17839;:5;17819:777;;;17870:9;17882:1;17870:13;;17865:148;17889:4;17885:1;:8;17865:148;;;17936:8;17958:4;17953:1;17946:4;:8;17945:17;;;;;;;;17936:27;;;;;;;;;;;;;;;;;;17964:1;17936:30;;;;;;;;;;;;;17918:12;17931:1;17918:15;;;;;;;;;;;;;;;;;:48;;;;;17895:3;;;;;;;17865:148;;;;18042:17;18046:12;18042:3;:17::i;:::-;18027:32;;18073:28;18118:4;18104:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18073:50;;18137:20;18160:1;18137:24;;18190:18;:12;:16;:18::i;:::-;18175:33;;18227:9;18239:1;18227:13;;18222:203;18246:4;18242:1;:8;18222:203;;;18304:106;18308:87;18312:33;18316:8;18325:1;18316:11;;;;;;;;;;;;;;;;;;18329:12;18342:1;18329:15;;;;;;;;;;;;;;;;;;18312:3;:33::i;:::-;18347:47;18351:8;18364:4;18360:1;:8;18351:18;;;;;;;;;;;;;;;;;;18371:12;18388:4;18384:1;:8;18371:22;;;;;;;;;;;;;;;;;;18347:3;:47::i;:::-;18308:3;:87::i;:::-;18397:12;18304:3;:106::i;:::-;18287:11;18299:1;18287:14;;;;;;;;;;;;;;;;;:123;;;;18252:3;;;;;;;18222:203;;;;18453:22;18457:11;18470:4;18453:3;:22::i;:::-;18439:36;;18494:9;18506:1;18494:13;;18489:97;18513:4;18509:1;:8;18489:97;;;18557:11;18569:1;18557:14;;;;;;;;;;;;;;;;;;18542:6;18549:1;18542:9;;;;;;;;;;;;;;;;;;18552:1;18542:12;;;;;;;;;;;;:29;;;;18519:3;;;;;;;18489:97;;;;17819:777;;17846:3;;;;;;;17819:777;;;;18612:6;18605:13;;;;;;17136:1489;;;;:::o;961:95:3:-;1008:7;1048:1;117:77;1034:15;1027:22;;961:95;;;:::o;24391:222:5:-;24479:24;;:::i;:::-;24520:9;24532:1;24520:13;;24515:92;162:2;24535:1;:5;24515:92;;;24573:23;24577:2;24580:1;24577:5;;;;;;;;;;;;;;;;;;24584:11;:2;24587:1;24584:5;;;;;;;;;;;;;:9;:11::i;:::-;24573:3;:23::i;:::-;24561:6;24568:1;24561:9;;;;;;;;;;;;:35;;;;24542:3;;;;;;;24515:92;;;;24391:222;;;;:::o;25563:192::-;25633:24;;:::i;:::-;25674:9;25686:1;25674:13;;25669:80;162:2;25689:1;:5;25669:80;;;25727:11;25736:1;25727;25729;25727:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;25715:6;25722:1;25715:9;;;;;;;;;;;;:23;;;;;25696:3;;;;;;;25669:80;;;;25563:192;;;;:::o;24175:210::-;24260:24;;:::i;:::-;24301:9;24313:1;24301:13;;24296:83;162:2;24316:1;:5;24296:83;;;24354:14;24363:1;24365;24363:4;;;;;;;;;;;;;24354:1;24356;24354:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;24342:6;24349:1;24342:9;;;;;;;;;;;;:26;;;;;24323:3;;;;;;;24296:83;;;;24175:210;;;;:::o;24805:177::-;24868:18;;:::i;:::-;24903:9;24915:1;24903:13;;24898:78;162:2;24918:1;:5;24898:78;;;24950:15;24954:3;24959:2;24962:1;24959:5;;;;;;;;;;;;;;;;;;24950:3;:15::i;:::-;24944:21;;24925:3;;;;;;;24898:78;;;;24805:177;;;:::o;24988:327::-;25071:21;;:::i;:::-;25109:9;25121:1;25109:13;;25104:205;162:2;25124:1;:5;25104:205;;;25268:30;25272:6;25280:17;25284:2;25287:1;25284:5;;;;;;;;;;;;;25291:2;25294:1;25291:5;;;;;;;;;;;;;25280:3;:17::i;:::-;25268:3;:30::i;:::-;25259:39;;25131:3;;;;;;;25104:205;;;;24988:327;;;;:::o;618:103:3:-;665:7;691:23;695:1;712;117:77;698:15;691:3;:23::i;:::-;684:30;;618:103;;;:::o;1062:580::-;1130:14;1156:13;117:77;1156:27;;1231:4;1225:11;1259:4;1256:1;1249:15;1298:4;1291;1288:1;1284:12;1277:26;1337:4;1330;1327:1;1323:12;1316:26;1376:4;1369;1366:1;1362:12;1355:26;1415:8;1408:4;1405:1;1401:12;1394:30;1458:5;1451:4;1448:1;1444:12;1437:27;1521:4;1518:1;1512:4;1509:1;1503:4;1498:3;1487:39;1480:47;1477:2;;;1579:1;1576;1569:12;1477:2;1624:1;1618:8;1608:18;;1202:434;;;;;;:::o;27918:488:5:-;27972:14;;:::i;:::-;28037:9;28056:311;28063:4;28056:311;;;28083:16;28122:1;28102:17;28111:4;28117:1;28102:8;:17::i;:::-;:21;28083:40;;28209:41;28218:8;28248:1;28243;229:77;28229:15;28228:21;;;;;;;;28209:8;:41::i;:::-;28205:45;;28286:8;28268:14;28277:1;28280;28268:8;:14::i;:::-;:26;28264:70;;;28314:5;;;28264:70;28355:1;28347:9;;;;28056:311;;;;28383:16;;;;;;;;;28391:4;28383:16;;;;28397:1;28383:16;;;28376:23;;;27918:488;;;:::o;18631:997::-;18705:23;18740:12;18755:5;:12;18740:27;;18789:1;18781:4;:9;18777:52;;;18813:5;18806:12;;;;;18777:52;18858:1;18853;18846:4;:8;;;;;;;;:13;18838:57;;;;;;;;;;;;;;;;;;;;;;;;18906:13;18922:23;18940:4;18932:5;:12;;;;;;;;337:76;18922:9;;:23;;;;:::i;:::-;18906:39;;18955:20;18978:1;18955:24;;18993:7;18989:87;;;19024:11;:5;:9;:11::i;:::-;19016:19;;19064:1;19049:16;;18989:87;19100:18;:12;:16;:18::i;:::-;19085:33;;19128:21;19152:31;19156:17;19164:5;19171:1;19156:7;:17::i;:::-;19175:7;19152:3;:31::i;:::-;19128:55;;19193:20;19216:31;19220:17;19228:5;19235:1;19220:7;:17::i;:::-;19239:7;19216:3;:31::i;:::-;19193:54;;19257:17;19277:1;19257:21;;19311:4;19297:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19288:28;;19331:9;19343:1;19331:13;;19326:296;19357:1;19350:4;:8;;;;;;;;19346:1;:12;19326:296;;;19379:19;;:::i;:::-;19401:22;19405:3;19409:1;19405:6;;;;;;;;;;;;;;;;;;19413:9;19401:3;:22::i;:::-;19379:44;;19449:37;19453:18;19457:4;19462:1;19457:7;;;;;;;;;;;;;;;;;;19466:4;19453:3;:18::i;:::-;19473:12;19449:3;:37::i;:::-;19437:6;19444:1;19437:9;;;;;;;;;;;;;;;;;:49;;;;19523:42;19527:23;19531:4;19536:1;19531:7;;;;;;;;;;;;;;;;;;19540:9;19544:4;19540:3;:9::i;:::-;19527:3;:23::i;:::-;19552:12;19523:3;:42::i;:::-;19500:6;19518:1;19511:4;:8;;;;;;;;19507:1;:12;19500:20;;;;;;;;;;;;;;;;;:65;;;;19591:20;19605:5;19591:9;:13;;:20;;;;:::i;:::-;19579:32;;19326:296;19360:3;;;;;;;19326:296;;;;18631:997;;;;;;;;;;;:::o;19916:739::-;19976:23;20011:12;20026:5;:12;20011:27;;20060:1;20052:4;:9;20048:52;;;20084:5;20077:12;;;;;20048:52;20129:1;20124;20117:4;:8;;;;;;;;:13;20109:57;;;;;;;;;;;;;;;;;;;;;;;;20177:13;20193:23;20211:4;20203:5;:12;;;;;;;;337:76;20193:9;;:23;;;;:::i;:::-;20177:39;;20226:21;20250:22;20254:17;20262:5;20269:1;20254:7;:17::i;:::-;20250:3;:22::i;:::-;20226:46;;20282:20;20305:22;20309:17;20317:5;20324:1;20309:7;:17::i;:::-;20305:3;:22::i;:::-;20282:45;;20337:17;20357:1;20337:21;;20391:4;20377:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20377:19:5;;;;20368:28;;20411:9;20423:1;20411:13;;20406:243;20437:1;20430:4;:8;;;;;;;;20426:1;:12;20406:243;;;20459:12;20474:21;20485:9;20474:3;20478:1;20474:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;20459:36;;20521:17;20533:4;20521;20526:1;20521:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;20509:6;20516:1;20509:9;;;;;;;;;;;;;;;;;:29;;;;;20575:17;20587:4;20575;20580:1;20575:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;20552:6;20570:1;20563:4;:8;;;;;;;;20559:1;:12;20552:20;;;;;;;;;;;;;;;;;:40;;;;;20618:20;20632:5;20618:9;:13;;:20;;;;:::i;:::-;20606:32;;20406:243;20440:3;;;;;;;20406:243;;;;19916:739;;;;;;;;;:::o;27302:610::-;27375:14;27426:13;229:77;27426:27;;27501:4;27495:11;27529:4;27526:1;27519:15;27568:4;27561;27558:1;27554:12;27547:26;27607:4;27600;27597:1;27593:12;27586:26;27646:4;27639;27636:1;27632:12;27625:26;27685:8;27678:4;27675:1;27671:12;27664:30;27728:5;27721:4;27718:1;27714:12;27707:27;27791:4;27788:1;27782:4;27779:1;27773:4;27768:3;27757:39;27750:47;27747:2;;;27849:1;27846;27839:12;27747:2;27894:1;27888:8;27878:18;;27472:434;;;;;;:::o;19634:276::-;19714:23;19787:1;19772:5;:12;:16;;;;;;;;19758:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19749:40;;19804:9;19816:1;19804:13;;19799:105;19838:1;19823:5;:12;:16;;;;;;;;19819:1;:20;19799:105;;;19872:5;19886:6;19882:1;19878;:5;:14;19872:21;;;;;;;;;;;;;;;;;;19860:6;19867:1;19860:9;;;;;;;;;;;;;;;;;:33;;;;19841:3;;;;;;;19799:105;;;;19634:276;;;;:::o;20661:::-;20741:23;20814:1;20799:5;:12;:16;;;;;;;;20785:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20785:31:5;;;;20776:40;;20831:9;20843:1;20831:13;;20826:105;20865:1;20850:5;:12;:16;;;;;;;;20846:1;:20;20826:105;;;20899:5;20913:6;20909:1;20905;:5;:14;20899:21;;;;;;;;;;;;;;;;;;20887:6;20894:1;20887:9;;;;;;;;;;;;;;;;;:33;;;;;20868:3;;;;;;;20826:105;;;;20661:276;;;;:::o;81:28900::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28900:5;;;;:::o;26:764:-1:-;;162:3;155:4;147:6;143:17;139:27;132:35;129:2;;;180:1;177;170:12;129:2;217:6;204:20;239:99;254:83;330:6;254:83;;;239:99;;;230:108;;355:5;380:6;373:5;366:21;410:4;402:6;398:17;388:27;;432:4;427:3;423:14;416:21;;485:6;532:3;524:4;516:6;512:17;507:3;503:27;500:36;497:2;;;549:1;546;539:12;497:2;574:1;559:225;584:6;581:1;578:13;559:225;;;642:3;664:56;716:3;704:10;664:56;;;659:3;652:69;744:4;739:3;735:14;728:21;;772:4;767:3;763:14;756:21;;616:168;606:1;603;599:9;594:14;;559:225;;;563:14;122:668;;;;;;;;817:607;;928:3;921:4;913:6;909:17;905:27;898:35;895:2;;;946:1;943;936:12;895:2;970:3;988:74;1003:58;1054:6;1003:58;;;988:74;;;979:83;;1079:5;1138:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:2;;;1202:1;1199;1192:12;1150:2;1227:1;1212:206;1237:6;1234:1;1231:13;1212:206;;;1295:3;1317:37;1350:3;1338:10;1317:37;;;1312:3;1305:50;1378:4;1373:3;1369:14;1362:21;;1406:4;1401:3;1397:14;1390:21;;1269:149;1259:1;1256;1252:9;1247:14;;1212:206;;;1216:14;888:536;;;;;;;;1451:615;;1566:3;1559:4;1551:6;1547:17;1543:27;1536:35;1533:2;;;1584:1;1581;1574:12;1533:2;1608:3;1626:78;1641:62;1696:6;1641:62;;;1626:78;;;1617:87;;1721:5;1780:6;1827:3;1819:4;1811:6;1807:17;1802:3;1798:27;1795:36;1792:2;;;1844:1;1841;1834:12;1792:2;1869:1;1854:206;1879:6;1876:1;1873:13;1854:206;;;1937:3;1959:37;1992:3;1980:10;1959:37;;;1954:3;1947:50;2020:4;2015:3;2011:14;2004:21;;2048:4;2043:3;2039:14;2032:21;;1911:149;1901:1;1898;1894:9;1889:14;;1854:206;;;1858:14;1526:540;;;;;;;;2074:118;;2141:46;2179:6;2166:20;2141:46;;;2132:55;;2126:66;;;;;2200:440;;2301:3;2294:4;2286:6;2282:17;2278:27;2271:35;2268:2;;;2319:1;2316;2309:12;2268:2;2356:6;2343:20;2378:64;2393:48;2434:6;2393:48;;;2378:64;;;2369:73;;2462:6;2455:5;2448:21;2498:4;2490:6;2486:17;2531:4;2524:5;2520:16;2566:3;2557:6;2552:3;2548:16;2545:25;2542:2;;;2583:1;2580;2573:12;2542:2;2593:41;2627:6;2622:3;2617;2593:41;;;2261:379;;;;;;;;2648:118;;2715:46;2753:6;2740:20;2715:46;;;2706:55;;2700:66;;;;;2773:2013;;;;;;;;;3227:3;3215:9;3206:7;3202:23;3198:33;3195:2;;;3244:1;3241;3234:12;3195:2;3307:1;3296:9;3292:17;3279:31;3330:18;3322:6;3319:30;3316:2;;;3362:1;3359;3352:12;3316:2;3382:97;3471:7;3462:6;3451:9;3447:22;3382:97;;;3372:107;;3258:227;3544:2;3533:9;3529:18;3516:32;3568:18;3560:6;3557:30;3554:2;;;3600:1;3597;3590:12;3554:2;3620:97;3709:7;3700:6;3689:9;3685:22;3620:97;;;3610:107;;3495:228;3782:2;3771:9;3767:18;3754:32;3806:18;3798:6;3795:30;3792:2;;;3838:1;3835;3828:12;3792:2;3858:97;3947:7;3938:6;3927:9;3923:22;3858:97;;;3848:107;;3733:228;3992:2;4010:76;4078:7;4069:6;4058:9;4054:22;4010:76;;;4000:86;;3971:121;4151:3;4140:9;4136:19;4123:33;4176:18;4168:6;4165:30;4162:2;;;4208:1;4205;4198:12;4162:2;4228:97;4317:7;4308:6;4297:9;4293:22;4228:97;;;4218:107;;4102:229;4362:3;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4341:99;4471:3;4490:76;4558:7;4549:6;4538:9;4534:22;4490:76;;;4480:86;;4450:122;4631:3;4620:9;4616:19;4603:33;4656:18;4648:6;4645:30;4642:2;;;4688:1;4685;4678:12;4642:2;4708:62;4762:7;4753:6;4742:9;4738:22;4708:62;;;4698:72;;4582:194;3189:1597;;;;;;;;;;;;4793:241;;4897:2;4885:9;4876:7;4872:23;4868:32;4865:2;;;4913:1;4910;4903:12;4865:2;4948:1;4965:53;5010:7;5001:6;4990:9;4986:22;4965:53;;;4955:63;;4927:97;4859:175;;;;;5042:335;;5208:129;5333:3;5326:5;5208:129;;;5366:4;5361:3;5357:14;5343:28;;5201:176;;;;;5386:259;;5514:91;5601:3;5594:5;5514:91;;;5634:4;5629:3;5625:14;5611:28;;5507:138;;;;;5734:925;;5955:90;6039:5;5955:90;;;6058:126;6177:6;6172:3;6058:126;;;6051:133;;6204:92;6290:5;6204:92;;;6317:1;6302:335;6327:6;6324:1;6321:13;6302:335;;;6374:143;6513:3;6504:6;6498:13;6374:143;;;6367:150;;6534:96;6623:6;6534:96;;;6524:106;;6349:1;6346;6342:9;6337:14;;6302:335;;;6306:14;6650:3;6643:10;;5934:725;;;;;;;6744:759;6919:73;6986:5;6919:73;;;7005:105;7103:6;7098:3;7005:105;;;6998:112;;7130:75;7199:5;7130:75;;;7226:1;7211:280;7236:6;7233:1;7230:13;7211:280;;;7283:105;7384:3;7375:6;7369:13;7283:105;;;7276:112;;7405:79;7477:6;7405:79;;;7395:89;;7258:1;7255;7251:9;7246:14;;7211:280;;;7215:14;6898:605;;;;;7588:723;7749:69;7812:5;7749:69;;;7831:95;7919:6;7914:3;7831:95;;;7824:102;;7946:71;8011:5;7946:71;;;8038:1;8023:276;8048:6;8045:1;8042:13;8023:276;;;8095:105;8196:3;8187:6;8181:13;8095:105;;;8088:112;;8217:75;8285:6;8217:75;;;8207:85;;8070:1;8067;8063:9;8058:14;;8023:276;;;8027:14;7728:583;;;;;8396:743;8567:69;8630:5;8567:69;;;8649:105;8747:6;8742:3;8649:105;;;8642:112;;8774:71;8839:5;8774:71;;;8866:1;8851:276;8876:6;8873:1;8870:13;8851:276;;;8923:105;9024:3;9015:6;9009:13;8923:105;;;8916:112;;9045:75;9113:6;9045:75;;;9035:85;;8898:1;8895;8891:9;8886:14;;8851:276;;;8855:14;8546:593;;;;;9222:773;;9405:71;9470:5;9405:71;;;9489:107;9589:6;9584:3;9489:107;;;9482:114;;9616:73;9683:5;9616:73;;;9710:1;9695:278;9720:6;9717:1;9714:13;9695:278;;;9767:105;9868:3;9859:6;9853:13;9767:105;;;9760:112;;9889:77;9959:6;9889:77;;;9879:87;;9742:1;9739;9735:9;9730:14;;9695:278;;;9699:14;9986:3;9979:10;;9384:611;;;;;;;10003:111;10080:28;10102:5;10080:28;;;10075:3;10068:41;10062:52;;;10121:360;;10251:39;10284:5;10251:39;;;10302:89;10384:6;10379:3;10302:89;;;10295:96;;10396:52;10441:6;10436:3;10429:4;10422:5;10418:16;10396:52;;;10469:6;10464:3;10460:16;10453:23;;10231:250;;;;;;10489:364;;10649:67;10713:2;10708:3;10649:67;;;10642:74;;10749:66;10745:1;10740:3;10736:11;10729:87;10844:2;10839:3;10835:12;10828:19;;10635:218;;;;10862:465;;11022:67;11086:2;11081:3;11022:67;;;11015:74;;11122:66;11118:1;11113:3;11109:11;11102:87;11223:66;11218:2;11213:3;11209:12;11202:88;11318:2;11313:3;11309:12;11302:19;;11008:319;;;;11336:566;;11496:67;11560:2;11555:3;11496:67;;;11489:74;;11596:66;11592:1;11587:3;11583:11;11576:87;11697:66;11692:2;11687:3;11683:12;11676:88;11798:66;11793:2;11788:3;11784:12;11777:88;11893:2;11888:3;11884:12;11877:19;;11482:420;;;;11911:364;;12071:67;12135:2;12130:3;12071:67;;;12064:74;;12171:66;12167:1;12162:3;12158:11;12151:87;12266:2;12261:3;12257:12;12250:19;;12057:218;;;;12284:465;;12444:67;12508:2;12503:3;12444:67;;;12437:74;;12544:66;12540:1;12535:3;12531:11;12524:87;12645:66;12640:2;12635:3;12631:12;12624:88;12740:2;12735:3;12731:12;12724:19;;12430:319;;;;12758:364;;12918:67;12982:2;12977:3;12918:67;;;12911:74;;13018:66;13014:1;13009:3;13005:11;12998:87;13113:2;13108:3;13104:12;13097:19;;12904:218;;;;13131:465;;13291:67;13355:2;13350:3;13291:67;;;13284:74;;13391:66;13387:1;13382:3;13378:11;13371:87;13492:66;13487:2;13482:3;13478:12;13471:88;13587:2;13582:3;13578:12;13571:19;;13277:319;;;;13673:450;13802:4;13797:3;13793:14;13881:3;13874:5;13870:15;13864:22;13892:61;13948:3;13943;13939:13;13926:11;13892:61;;;13822:137;14028:4;14021:5;14017:16;14011:23;14040:62;14096:4;14091:3;14087:14;14074:11;14040:62;;;13969:139;13775:348;;;;14199:460;14338:4;14333:3;14329:14;14417:3;14410:5;14406:15;14400:22;14428:61;14484:3;14479;14475:13;14462:11;14428:61;;;14358:137;14564:4;14557:5;14553:16;14547:23;14576:62;14632:4;14627:3;14623:14;14610:11;14576:62;;;14505:139;14311:348;;;;14666:110;14739:31;14764:5;14739:31;;;14734:3;14727:44;14721:55;;;14783:120;14866:31;14891:5;14866:31;;;14861:3;14854:44;14848:55;;;14910:159;15011:52;15031:31;15056:5;15031:31;;;15011:52;;;15006:3;14999:65;14993:76;;;15076:405;;15250:95;15341:3;15332:6;15250:95;;;15243:102;;15356:75;15427:3;15418:6;15356:75;;;15453:2;15448:3;15444:12;15437:19;;15473:3;15466:10;;15231:250;;;;;;15488:1759;;16144:3;16133:9;16129:19;16121:27;;16195:9;16189:4;16185:20;16181:1;16170:9;16166:17;16159:47;16220:146;16361:4;16352:6;16220:146;;;16212:154;;16414:9;16408:4;16404:20;16399:2;16388:9;16384:18;16377:48;16439:146;16580:4;16571:6;16439:146;;;16431:154;;16633:9;16627:4;16623:20;16618:2;16607:9;16603:18;16596:48;16658:146;16799:4;16790:6;16658:146;;;16650:154;;16815:118;16929:2;16918:9;16914:18;16905:6;16815:118;;;16982:9;16976:4;16972:20;16966:3;16955:9;16951:19;16944:49;17007:146;17148:4;17139:6;17007:146;;;16999:154;;17164:73;17232:3;17221:9;17217:19;17208:6;17164:73;;;16115:1132;;;;;;;;;;17254:201;;17366:2;17355:9;17351:18;17343:26;;17380:65;17442:1;17431:9;17427:17;17418:6;17380:65;;;17337:118;;;;;17462:407;;17653:2;17642:9;17638:18;17630:26;;17703:9;17697:4;17693:20;17689:1;17678:9;17674:17;17667:47;17728:131;17854:4;17728:131;;;17720:139;;17624:245;;;;17876:407;;18067:2;18056:9;18052:18;18044:26;;18117:9;18111:4;18107:20;18103:1;18092:9;18088:17;18081:47;18142:131;18268:4;18142:131;;;18134:139;;18038:245;;;;18290:407;;18481:2;18470:9;18466:18;18458:26;;18531:9;18525:4;18521:20;18517:1;18506:9;18502:17;18495:47;18556:131;18682:4;18556:131;;;18548:139;;18452:245;;;;18704:407;;18895:2;18884:9;18880:18;18872:26;;18945:9;18939:4;18935:20;18931:1;18920:9;18916:17;18909:47;18970:131;19096:4;18970:131;;;18962:139;;18866:245;;;;19118:407;;19309:2;19298:9;19294:18;19286:26;;19359:9;19353:4;19349:20;19345:1;19334:9;19330:17;19323:47;19384:131;19510:4;19384:131;;;19376:139;;19280:245;;;;19532:407;;19723:2;19712:9;19708:18;19700:26;;19773:9;19767:4;19763:20;19759:1;19748:9;19744:17;19737:47;19798:131;19924:4;19798:131;;;19790:139;;19694:245;;;;19946:407;;20137:2;20126:9;20122:18;20114:26;;20187:9;20181:4;20177:20;20173:1;20162:9;20158:17;20151:47;20212:131;20338:4;20212:131;;;20204:139;;20108:245;;;;20360:213;;20478:2;20467:9;20463:18;20455:26;;20492:71;20560:1;20549:9;20545:17;20536:6;20492:71;;;20449:124;;;;;20580:2959;;21716:3;21705:9;21701:19;21693:27;;21731:71;21799:1;21788:9;21784:17;21775:6;21731:71;;;21850:9;21844:4;21840:20;21835:2;21824:9;21820:18;21813:48;21875:184;22054:4;22045:6;21875:184;;;21867:192;;22107:9;22101:4;22097:20;22092:2;22081:9;22077:18;22070:48;22132:184;22311:4;22302:6;22132:184;;;22124:192;;22327:118;22441:2;22430:9;22426:18;22417:6;22327:118;;;22456:119;22570:3;22559:9;22555:19;22546:6;22456:119;;;22586;22700:3;22689:9;22685:19;22676:6;22586:119;;;22716;22830:3;22819:9;22815:19;22806:6;22716:119;;;22846;22960:3;22949:9;22945:19;22936:6;22846:119;;;22976;23090:3;23079:9;23075:19;23066:6;22976:119;;;23106;23220:3;23209:9;23205:19;23196:6;23106:119;;;23236:120;23351:3;23340:9;23336:19;23326:7;23236:120;;;23367:162;23524:3;23513:9;23509:19;23499:7;23367:162;;;21687:1852;;;;;;;;;;;;;;;;23546:493;;23776:3;23765:9;23761:19;23753:27;;23791:71;23859:1;23848:9;23844:17;23835:6;23791:71;;;23873:156;24025:2;24014:9;24010:18;24001:6;23873:156;;;23747:292;;;;;;24046:620;;24312:3;24301:9;24297:19;24289:27;;24327:71;24395:1;24384:9;24380:17;24371:6;24327:71;;;24409:118;24523:2;24512:9;24508:18;24499:6;24409:118;;;24538;24652:2;24641:9;24637:18;24628:6;24538:118;;;24283:383;;;;;;;24673:1028;;25087:3;25076:9;25072:19;25064:27;;25102:71;25170:1;25159:9;25155:17;25146:6;25102:71;;;25184:118;25298:2;25287:9;25283:18;25274:6;25184:118;;;25313;25427:2;25416:9;25412:18;25403:6;25313:118;;;25442:119;25556:3;25545:9;25541:19;25532:6;25442:119;;;25572;25686:3;25675:9;25671:19;25662:6;25572:119;;;25058:643;;;;;;;;;25708:1644;;26350:3;26339:9;26335:19;26327:27;;26365:71;26433:1;26422:9;26418:17;26409:6;26365:71;;;26447:118;26561:2;26550:9;26546:18;26537:6;26447:118;;;26576;26690:2;26679:9;26675:18;26666:6;26576:118;;;26705:119;26819:3;26808:9;26804:19;26795:6;26705:119;;;26835;26949:3;26938:9;26934:19;26925:6;26835:119;;;26965;27079:3;27068:9;27064:19;27055:6;26965:119;;;27133:9;27127:4;27123:20;27117:3;27106:9;27102:19;27095:49;27158:184;27337:4;27328:6;27158:184;;;27150:192;;26321:1031;;;;;;;;;;;27359:547;;27561:3;27550:9;27546:19;27538:27;;27576:71;27644:1;27633:9;27629:17;27620:6;27576:71;;;27658:72;27726:2;27715:9;27711:18;27702:6;27658:72;;;27741;27809:2;27798:9;27794:18;27785:6;27741:72;;;27824;27892:2;27881:9;27877:18;27868:6;27824:72;;;27532:374;;;;;;;;27913:256;;27975:2;27969:9;27959:19;;28013:4;28005:6;28001:17;28112:6;28100:10;28097:22;28076:18;28064:10;28061:34;28058:62;28055:2;;;28133:1;28130;28123:12;28055:2;28153:10;28149:2;28142:22;27953:216;;;;;28176:277;;28354:18;28346:6;28343:30;28340:2;;;28386:1;28383;28376:12;28340:2;28415:4;28407:6;28403:17;28395:25;;28443:4;28437;28433:15;28425:23;;28277:176;;;;28460:229;;28613:18;28605:6;28602:30;28599:2;;;28645:1;28642;28635:12;28599:2;28674:4;28666:6;28662:17;28654:25;;28536:153;;;;28696:233;;28853:18;28845:6;28842:30;28839:2;;;28885:1;28882;28875:12;28839:2;28914:4;28906:6;28902:17;28894:25;;28776:153;;;;28936:258;;29079:18;29071:6;29068:30;29065:2;;;29111:1;29108;29101:12;29065:2;29155:4;29151:9;29144:4;29136:6;29132:17;29128:33;29120:41;;29184:4;29178;29174:15;29166:23;;29002:192;;;;29203:157;;29348:4;29340:6;29336:17;29325:28;;29317:43;;;;29371:125;;29483:6;29472:17;;29464:32;;;;29507:129;;29623:6;29612:17;;29604:32;;;;29647:138;;29773:4;29765:6;29761:17;29750:28;;29742:43;;;;29794:143;;29926:5;29920:12;29910:22;;29904:33;;;;29944:113;;30049:3;30039:13;;30033:24;;;;30064:117;;30173:3;30163:13;;30157:24;;;;30188:124;;30301:5;30295:12;30285:22;;30279:33;;;;30319:92;;30400:5;30394:12;30384:22;;30378:33;;;;30419:158;;30566:4;30558:6;30554:17;30543:28;;30536:41;;;;30586:137;;30712:4;30704:6;30700:17;30689:28;;30682:41;;;;30732:141;;30862:4;30854:6;30850:17;30839:28;;30832:41;;;;30882:139;;31010:4;31002:6;30998:17;30987:28;;30980:41;;;;31030:218;;31200:6;31195:3;31188:19;31237:4;31232:3;31228:14;31213:29;;31181:67;;;;;31257:151;;31399:3;31384:18;;31377:31;;;;;31417:161;;31569:3;31554:18;;31547:31;;;;;31587:199;;31738:6;31733:3;31726:19;31775:4;31770:3;31766:14;31751:29;;31719:67;;;;;31795:163;;31910:6;31905:3;31898:19;31947:4;31942:3;31938:14;31923:29;;31891:67;;;;;31967:145;;32103:3;32088:18;;32081:31;;;;;32120:92;;32200:5;32193:13;32186:21;32175:32;;32169:43;;;;32219:79;;32288:5;32277:16;;32271:27;;;;32305:79;;32374:5;32363:16;;32357:27;;;;32391:79;;32460:5;32449:16;;32443:27;;;;32478:145;32559:6;32554:3;32549;32536:30;32615:1;32606:6;32601:3;32597:16;32590:27;32529:94;;;;32632:268;32697:1;32704:101;32718:6;32715:1;32712:13;32704:101;;;32794:1;32789:3;32785:11;32779:18;32775:1;32770:3;32766:11;32759:39;32740:2;32737:1;32733:10;32728:15;;32704:101;;;32820:6;32817:1;32814:13;32811:2;;;32885:1;32876:6;32871:3;32867:16;32860:27;32811:2;32681:219;;;;;32908:74;;32972:5;32961:16;;32955:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 64;\n    uint256 constant n = 6;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n    uint256 constant UNITY = 9334303377689037989442018753807510978357674015322511348041267794643984346845; // primitive 2^28th root of unity modulo GROUP_ORDER (not field!)\n\n    G1Point[] gs; // warning: this and the below are not statically sized anymore\n    G1Point[] hs; // need to push to these if large anonsets are used.\n    G1Point g;\n    G1Point h;\n\n    uint256[m] twos = powers(2);\n\n    struct ZetherStatement {\n        G1Point[] CLn;\n        G1Point[] CRn;\n        G1Point[] L;\n        G1Point R;\n        G1Point[] y;\n        uint256 epoch; // or uint8?\n        G1Point u;\n    }\n\n    struct ZetherProof {\n        uint256 size; // not strictly necessary, but...?\n        G1Point A;\n        G1Point S;\n        G1Point XL;\n        G1Point XR;\n        G1Point[2] commits;\n        uint256 tauX;\n        uint256 mu;\n        uint256 t;\n        AnonProof anonProof;\n        SigmaProof sigmaProof;\n        InnerProductProof ipProof;\n    }\n\n    struct AnonProof {\n        G1Point A;\n        G1Point B;\n        G1Point C;\n        G1Point D;\n        G1Point[2][] LG; // flipping the indexing order on this, 'cause...\n        G1Point inOutRG;\n        G1Point gG;\n        G1Point balanceCommitNewLG;\n        G1Point balanceCommitNewRG;\n        G1Point[2][] yG; // assuming this one has the same size..., N / 2 by 2,\n        G1Point E;\n        G1Point F;\n        uint256[2][] f; // and that this has size N - 1 by 2.\n        uint256 zA;\n        uint256 zC;\n        uint256 zE;\n    }\n\n    struct SigmaProof {\n        uint256 c;\n        uint256 sX;\n        uint256 sR;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function baseSize() external view returns (uint256 size) {\n        return gs.length;\n    }\n\n    function extendBase(uint256 size) external payable {\n        // unfortunate, but necessary. essentially, we need vector bases of arbitrary (linear) length for large anonsets...\n        // could mitigate this by using the logarithmic tricks of Groth and Kohlweiss; see also BCC+15\n        // but this would cause problems elsewhere: N log N-sized proofs and N log^2(N) prove / verify time.\n        // the increase in proof size is paradoxical: while _f_ will become smaller (log N), you'll need more correction terms\n        // thus a linear persistent space overhead is not so bad in the grand scheme, and we deem this acceptable.\n        for (uint256 i = gs.length; i < size; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function verifyTransfer(bytes32[2][] memory CLn, bytes32[2][] memory CRn, bytes32[2][] memory L, bytes32[2] memory R, bytes32[2][] memory y, uint256 epoch, bytes32[2] memory u, bytes memory proof) view public returns (bool) {\n        ZetherStatement memory statement;\n        uint256 size = y.length;\n        require(gs.length >= size, \"Inadequate stored vector base! Call extendBase and then try again.\");\n\n        statement.CLn = new G1Point[](size);\n        statement.CRn = new G1Point[](size);\n        statement.L = new G1Point[](size);\n        statement.y = new G1Point[](size);\n        for (uint256 i = 0; i < size; i++) {\n            statement.CLn[i] = G1Point(uint256(CLn[i][0]), uint256(CLn[i][1]));\n            statement.CRn[i] = G1Point(uint256(CRn[i][0]), uint256(CRn[i][1]));\n            statement.L[i] = G1Point(uint256(L[i][0]), uint256(L[i][1]));\n            statement.y[i] = G1Point(uint256(y[i][0]), uint256(y[i][1]));\n        }\n        statement.R = G1Point(uint256(R[0]), uint256(R[1]));\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[3] zs; // [z^2, z^3, z^4]\n        uint256[m] twoTimesZSquared;\n        uint256 zSum;\n        uint256 k;\n        G1Point tEval;\n        uint256 t;\n        uint256 x;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 minusC;\n        G1Point[2][] AL;\n        G1Point Ay;\n        G1Point AD;\n        G1Point gEpoch;\n        G1Point Au;\n        G1Point ADiff;\n        G1Point cCommit;\n        G1Point At;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 x;\n        uint256[2][] f;\n        G1Point inOutR2;\n        G1Point balanceCommitNewL2;\n        G1Point balanceCommitNewR2;\n        uint256[2][2] cycler; // should need no inline declaration / initialization. should be pre-allocated\n        G1Point[2][] L2;\n        G1Point[2][] y2;\n        G1Point parity;\n        G1Point gPrime;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 uChallenge;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) view internal returns (bool) {\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.L, statement.R, statement.y, statement.epoch))).mod(), proof.A, proof.S, proof.XL, proof.XR))).mod(); // break this out?\n        zetherAuxiliaries.ys = powers(zetherAuxiliaries.y);\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs[0] = zetherAuxiliaries.z.mul(zetherAuxiliaries.z);\n        for (uint256 i = 1; i < 3; i++) {\n            zetherAuxiliaries.zs[i] = zetherAuxiliaries.zs[i - 1].mul(zetherAuxiliaries.z);\n        }\n        // zetherAuxiliaries.twoTimesZSquared = times(twos, zetherAuxiliaries.zSquared);\n        for (uint256 i = 0; i < m / 2; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + m / 2] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.commits))).mod();\n\n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = sumScalars(zetherAuxiliaries.ys).mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** (m / 2)).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.tEval = add(mul(proof.commits[0], zetherAuxiliaries.x), mul(proof.commits[1], zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n        zetherAuxiliaries.t = proof.t.sub(zetherAuxiliaries.k);\n\n        // begin anon proof.\n        // length equality checks for anonProof members? or during deserialization?\n        AnonProof memory anonProof = proof.anonProof;\n        AnonAuxiliaries memory anonAuxiliaries;\n        G1Point[2] memory parity = [anonProof.E, anonProof.F]; // breaking this out to avoid stacktoodeep. won't affect encoding\n        anonAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.x, anonProof.LG, anonProof.yG, anonProof.A, anonProof.B, anonProof.C, anonProof.D, anonProof.inOutRG, anonProof.gG, anonProof.balanceCommitNewLG, anonProof.balanceCommitNewRG, parity))).mod();\n        anonAuxiliaries.f = new uint256[2][](proof.size);\n        anonAuxiliaries.f[0][0] = anonAuxiliaries.x;\n        anonAuxiliaries.f[0][1] = anonAuxiliaries.x;\n        for (uint i = 1; i < proof.size; i++) {\n            anonAuxiliaries.f[i][0] = anonProof.f[i - 1][0];\n            anonAuxiliaries.f[i][1] = anonProof.f[i - 1][1];\n            anonAuxiliaries.f[0][0] = anonAuxiliaries.f[0][0].sub(anonAuxiliaries.f[i][0]);\n            anonAuxiliaries.f[0][1] = anonAuxiliaries.f[0][1].sub(anonAuxiliaries.f[i][1]);\n        }\n        G1Point memory temp;\n        for (uint256 i = 0; i < proof.size; i++) {\n            temp = add(temp, mul(gs[i], anonAuxiliaries.f[i][0]));\n            temp = add(temp, mul(hs[i], anonAuxiliaries.f[i][1])); // commutative\n        }\n\n        require(eq(add(mul(anonProof.B, anonAuxiliaries.x), anonProof.A), add(temp, mul(h, anonProof.zA))), \"Recovery failure for B^x * A.\");\n        for (uint i = 0; i < proof.size; i++) {\n            anonAuxiliaries.f[i][0] = anonAuxiliaries.f[i][0].mul(anonAuxiliaries.x.sub(anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.f[i][1] = anonAuxiliaries.f[i][1].mul(anonAuxiliaries.x.sub(anonAuxiliaries.f[i][1]));\n        }\n        temp = G1Point(0, 0);\n        for (uint256 i = 0; i < proof.size; i++) { // danger... gs and hs need to be big enough.\n            temp = add(temp, mul(gs[i], anonAuxiliaries.f[i][0]));\n            temp = add(temp, mul(hs[i], anonAuxiliaries.f[i][1])); // commutative\n        }\n        require(eq(add(mul(anonProof.C, anonAuxiliaries.x), anonProof.D), add(temp, mul(h, anonProof.zC))), \"Recovery failure for C^x * D.\");\n\n        anonAuxiliaries.f[0][0] = anonAuxiliaries.x;\n        anonAuxiliaries.f[0][1] = anonAuxiliaries.x;\n        for (uint i = 1; i < proof.size; i++) { // need to recompute these. contract too large if use another variable\n            anonAuxiliaries.f[i][0] = anonProof.f[i - 1][0];\n            anonAuxiliaries.f[i][1] = anonProof.f[i - 1][1];\n            anonAuxiliaries.f[0][0] = anonAuxiliaries.f[0][0].sub(anonAuxiliaries.f[i][0]);\n            anonAuxiliaries.f[0][1] = anonAuxiliaries.f[0][1].sub(anonAuxiliaries.f[i][1]);\n        }\n\n        anonAuxiliaries.inOutR2 = add(mul(statement.R, anonAuxiliaries.x), neg(anonProof.inOutRG));\n        anonAuxiliaries.L2 = assembleConvolutions(anonAuxiliaries.f, statement.L); // will internally include _two_ fourier transforms, and split even / odd, etc.\n        anonAuxiliaries.y2 = assembleConvolutions(anonAuxiliaries.f, statement.y);\n        for (uint256 i = 0; i < proof.size / 2; i++) { // order of loops can be switched...\n            // could use _two_ further nested loops inside this, but...\n            for (uint256 j = 0; j < 2; j++) {\n                for (uint256 k = 0; k < 2; k++) {\n                    anonAuxiliaries.cycler[k][j] = anonAuxiliaries.cycler[k][j].add(anonAuxiliaries.f[2 * i + k][j]);\n                }\n                anonAuxiliaries.L2[i][j] = add(anonAuxiliaries.L2[i][j], neg(anonProof.LG[i][j]));\n                anonAuxiliaries.y2[i][j] = add(anonAuxiliaries.y2[i][j], neg(anonProof.yG[i][j]));\n            }\n        }\n        // replace the leftmost column with the Hadamard of the left and right columns. just do the multiplication once...\n        anonAuxiliaries.cycler[0][0] = anonAuxiliaries.cycler[0][0].mul(anonAuxiliaries.cycler[0][1]);\n        anonAuxiliaries.cycler[1][0] = anonAuxiliaries.cycler[1][0].mul(anonAuxiliaries.cycler[1][1]);\n        anonAuxiliaries.parity = add(mul(h, anonProof.zE), add(mul(gs[0], anonAuxiliaries.cycler[0][0]), mul(hs[0], anonAuxiliaries.cycler[1][0])));\n\n        require(eq(anonAuxiliaries.parity, add(mul(anonProof.F, anonAuxiliaries.x), anonProof.E)), \"Index opposite parity check fail.\");\n\n        for (uint256 i = 0; i < proof.size; i++) {\n            anonAuxiliaries.balanceCommitNewL2 = add(anonAuxiliaries.balanceCommitNewL2, mul(statement.CLn[i], anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.balanceCommitNewR2 = add(anonAuxiliaries.balanceCommitNewR2, mul(statement.CRn[i], anonAuxiliaries.f[i][0]));\n        }\n        anonAuxiliaries.balanceCommitNewL2 = add(anonAuxiliaries.balanceCommitNewL2, neg(anonProof.balanceCommitNewLG));\n        anonAuxiliaries.balanceCommitNewR2 = add(anonAuxiliaries.balanceCommitNewR2, neg(anonProof.balanceCommitNewRG));\n\n        anonAuxiliaries.gPrime = add(mul(g, anonAuxiliaries.x), neg(anonProof.gG));\n\n        SigmaProof memory sigmaProof = proof.sigmaProof;\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.minusC = sigmaProof.c.neg();\n        sigmaAuxiliaries.AL = new G1Point[2][](proof.size / 2 - 1);\n        for (uint256 i = 1; i < proof.size / 2; i++) {\n            sigmaAuxiliaries.AL[i - 1][0] = add(mul(anonAuxiliaries.y2[i][0], sigmaProof.sR), mul(anonAuxiliaries.L2[i][0], sigmaAuxiliaries.minusC));\n            sigmaAuxiliaries.AL[i - 1][1] = add(mul(anonAuxiliaries.y2[i][1], sigmaProof.sR), mul(anonAuxiliaries.L2[i][1], sigmaAuxiliaries.minusC));\n        }\n        sigmaAuxiliaries.AD = add(mul(anonAuxiliaries.gPrime, sigmaProof.sR), mul(anonAuxiliaries.inOutR2, sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.Ay = add(mul(anonAuxiliaries.gPrime, sigmaProof.sX), mul(anonAuxiliaries.y2[0][0], sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.Au = add(mul(sigmaAuxiliaries.gEpoch, sigmaProof.sX), mul(statement.u, sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.ADiff = add(mul(add(anonAuxiliaries.y2[0][0], anonAuxiliaries.y2[0][1]), sigmaProof.sR), mul(add(anonAuxiliaries.L2[0][0], anonAuxiliaries.L2[0][1]), sigmaAuxiliaries.minusC));\n        sigmaAuxiliaries.cCommit = add(add(mul(add(mul(anonAuxiliaries.L2[0][0], sigmaProof.c.neg()), mul(anonAuxiliaries.inOutR2, sigmaProof.sX)), zetherAuxiliaries.zs[0]), mul(add(mul(anonAuxiliaries.balanceCommitNewL2, sigmaProof.c), mul(anonAuxiliaries.balanceCommitNewR2, sigmaProof.sX.neg())), zetherAuxiliaries.zs[1])), mul(add(mul(proof.XL, sigmaProof.c), mul(proof.XR, sigmaProof.sX.neg())), zetherAuxiliaries.zs[2].mul(anonAuxiliaries.x)));\n        sigmaAuxiliaries.At = add(neg(sigmaAuxiliaries.cCommit), mul(add(add(mul(g, zetherAuxiliaries.t), neg(zetherAuxiliaries.tEval)), mul(h, proof.tauX)), sigmaProof.c.mul(anonAuxiliaries.x)));\n\n        uint256 challenge = uint256(keccak256(abi.encode(anonAuxiliaries.x, sigmaAuxiliaries.Ay, sigmaAuxiliaries.AD, sigmaAuxiliaries.Au, sigmaAuxiliaries.ADiff, sigmaAuxiliaries.At, sigmaAuxiliaries.AL))).mod();\n        require(challenge == proof.sigmaProof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.uChallenge = uint256(keccak256(abi.encode(sigmaProof.c, proof.t, proof.tauX, proof.mu))).mod(); // uChallenge\n        ipAuxiliaries.u = mul(g, ipAuxiliaries.uChallenge);\n        ipAuxiliaries.hPrimes = hadamard_inv(hs, zetherAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(zetherAuxiliaries.ys, zetherAuxiliaries.z), zetherAuxiliaries.twoTimesZSquared);\n\n        ipAuxiliaries.P = add(add(proof.A, mul(proof.S, zetherAuxiliaries.x)), mul(sumPoints(gs), zetherAuxiliaries.z.neg()));\n        ipAuxiliaries.P = add(neg(mul(h, proof.mu)), add(ipAuxiliaries.P, commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp)));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u, proof.t));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.uChallenge = uint256(keccak256(abi.encode(ipAuxiliaries.uChallenge, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.uChallenge; // overwrites value\n            uint256 xInv = ipAuxiliaries.uChallenge.inv();\n            ipAuxiliaries.P = add(mul(ipProof.ls[i], ipAuxiliaries.uChallenge.exp(2)), add(mul(ipProof.rs[i], xInv.exp(2)), ipAuxiliaries.P));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, G1Point[] memory base) internal view returns (G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            G1Point[] memory inverse_fft = new G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = mul(add(mul(base_fft[j], exponent_fft[j]), mul(base_fft[j + half], exponent_fft[j + half])), compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n        return result;\n    }\n\n    function fft(G1Point[] memory input, bool inverse) internal view returns (G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        G1Point[] memory even = fft(extract(input, 0), inverse);\n        G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            G1Point memory temp = mul(odd[i], omega_run);\n            result[i] = mul(add(even[i], temp), compensation);\n            result[i + size / 2] = mul(add(even[i], neg(temp)), compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(G1Point[] memory input, uint256 parity) internal pure returns (G1Point[] memory result) {\n        result = new G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.A = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.S = G1Point(slice(arr, 64), slice(arr, 96));\n        proof.XL = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.XR = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.commits = [G1Point(slice(arr, 256), slice(arr, 288)), G1Point(slice(arr, 320), slice(arr, 352))];\n        proof.t = slice(arr, 384);\n        proof.tauX = slice(arr, 416);\n        proof.mu = slice(arr, 448);\n\n        SigmaProof memory sigmaProof;\n        sigmaProof.c = slice(arr, 480);\n        sigmaProof.sX = slice(arr, 512);\n        sigmaProof.sR = slice(arr, 544);\n        proof.sigmaProof = sigmaProof;\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 576 + i * 64), slice(arr, 608 + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 576 + (n + i) * 64), slice(arr, 608 + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 576 + n * 128);\n        ipProof.b = slice(arr, 608 + n * 128);\n        proof.ipProof = ipProof;\n\n        AnonProof memory anonProof;\n        uint256 size = (arr.length - 1408 - 672) / 192;  // warning: this and the below assume that n = 6!!!\n        anonProof.A = G1Point(slice(arr, 1408), slice(arr, 1440));\n        anonProof.B = G1Point(slice(arr, 1472), slice(arr, 1504));\n        anonProof.C = G1Point(slice(arr, 1536), slice(arr, 1568));\n        anonProof.D = G1Point(slice(arr, 1600), slice(arr, 1632));\n        anonProof.inOutRG = G1Point(slice(arr, 1664), slice(arr, 1696));\n        anonProof.gG = G1Point(slice(arr, 1728), slice(arr, 1760));\n        anonProof.balanceCommitNewLG = G1Point(slice(arr, 1792), slice(arr, 1824));\n        anonProof.balanceCommitNewRG = G1Point(slice(arr, 1856), slice(arr, 1888));\n        anonProof.E = G1Point(slice(arr, 1920), slice(arr, 1952));\n        anonProof.F = G1Point(slice(arr, 1984), slice(arr, 2016));\n\n        anonProof.f = new uint256[2][](size - 1);\n        for (uint256 i = 0; i < size - 1; i++) {\n            anonProof.f[i][0] = slice(arr, 2048 + 32 * i);\n            anonProof.f[i][1] = slice(arr, 2048 + (size - 1 + i) * 32);\n        }\n\n        anonProof.LG = new G1Point[2][](size / 2);\n        anonProof.yG = new G1Point[2][](size / 2);\n        for (uint256 i = 0; i < size / 2; i++) {\n            anonProof.LG[i][0] = G1Point(slice(arr, 1984 + (size + i) * 64), slice(arr, 2016 + (size + i) * 64));\n            anonProof.LG[i][1] = G1Point(slice(arr, 1984 + size * 96 + i * 64), slice(arr, 2016 + size * 96 + i * 64));\n            anonProof.yG[i][0] = G1Point(slice(arr, 1984 + size * 128 + i * 64), slice(arr, 2016 + size * 128 + i * 64));\n            anonProof.yG[i][1] = G1Point(slice(arr, 1984 + size * 160 + i * 64), slice(arr, 2016 + size * 160 + i * 64));\n            // these are tricky, and can maybe be optimized further?\n        }\n        proof.size = size;\n\n        anonProof.zA = slice(arr, 1984 + size * 192);\n        anonProof.zC = slice(arr, 2016 + size * 192);\n        anonProof.zE = slice(arr, 2048 + size * 192);\n\n        proof.anonProof = anonProof;\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamard_inv(G1Point[] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) { // killed a silly initialization with the 0th indexes. [0x00, 0x00] will be treated as the zero point anyway\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) { // warning: function totally untested!\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) { // warning: function totally untested!\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) { // warning: function totally untested!\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n        // ^^^ important: i haven't tested this, i.e. whether it agrees with ProofUtils.paddedHash(input, i) (cf. also the go version)\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "10": {
      "events": {},
      "links": {},
      "address": "0x244e29801A30e791f5338D5aAFFf67678d08f052",
      "transactionHash": "0xb2e1ae42248a5b5b95cb653dcbd87bafd2f012176cac30822645c40cc30b7d78"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1d870e77a8fAA172B1Dda8e3b72f295dBeb9Aef3",
      "transactionHash": "0xfeff4bb107b4a4f9d2a7187a2a5d2adb02b7d34967cbdf6f9cf534cfd3cf0dda"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-10-26T17:01:12.996Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}