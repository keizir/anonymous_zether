{
  "contractName": "ZetherVerifier",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "CLn",
          "type": "bytes32[2][]"
        },
        {
          "name": "CRn",
          "type": "bytes32[2][]"
        },
        {
          "name": "C",
          "type": "bytes32[2][]"
        },
        {
          "name": "D",
          "type": "bytes32[2]"
        },
        {
          "name": "y",
          "type": "bytes32[2][]"
        },
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "u",
          "type": "bytes32[2]"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "verifyTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"CLn\",\"type\":\"bytes32[2][]\"},{\"name\":\"CRn\",\"type\":\"bytes32[2][]\"},{\"name\":\"C\",\"type\":\"bytes32[2][]\"},{\"name\":\"D\",\"type\":\"bytes32[2]\"},{\"name\":\"y\",\"type\":\"bytes32[2][]\"},{\"name\":\"epoch\",\"type\":\"uint256\"},{\"name\":\"u\",\"type\":\"bytes32[2]\"},{\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"verifyTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":\"ZetherVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/Utils.sol\":{\"keccak256\":\"0x3b410db08d55d9540e8e795474410304be456ca3a36beb8c209019344593b267\",\"urls\":[\"bzzr://f5eaba23ec02eb7c30ce30f795aa0d7b1ae29d61d8111e2955a0f505bd1b328a\"]},\"/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol\":{\"keccak256\":\"0xfa69548141470ce53992f6b1546cea16fe982196c9526c63172a9eaa3a7dc81d\",\"urls\":[\"bzzr://f6e2db6405508638bd0ee66ebde53a9081700cd1729f9069da35a37aa29488fb\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "81:28550:5:-;;;1942:208;8:9:-1;5:2;;;30:1;27;20:12;5:2;1942:208:5;1977:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1973:1;:16;;;;;;;;;;;;;;;;;;;2003:12;;;;;;;;;;;;;;;;;;;:7;;;:12;;;:::i;:::-;1999:1;:16;;;;;;;;;;;;;;;;;;;2030:9;2042:1;2030:13;;2025:119;162:2;2045:1;:5;2025:119;;;2071:2;2079:15;;;;;;;;;;;;;;;;;;;2092:1;2079:7;;;:15;;;:::i;:::-;2071:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2071:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:2;2117:15;;;;;;;;;;;;;;;;;;;2130:1;2117:7;;;:15;;;:::i;:::-;2109:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2109:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:3;;;;;;;2025:119;;;;81:28550;;28275:167;28336:14;;:::i;:::-;28369:66;229:77;28412:5;28395:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28395:23:5;;;28385:34;;;;;;28377:43;;;:57;;;;;;;;28369:7;;;:66;;;:::i;:::-;28362:73;;28275:167;;;:::o;28448:181::-;28520:14;;:::i;:::-;28553:69;229:77;28596:5;28603:1;28579:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28579:26:5;;;28569:37;;;;;;28561:46;;;:60;;;;;;;;28553:7;;;:69;;;:::i;:::-;28546:76;;28448:181;;;;:::o;27820:449::-;27874:14;;:::i;:::-;27900:9;27919:311;27926:4;27919:311;;;27946:16;27985:1;27965:17;27974:4;27980:1;27965:8;;;:17;;;:::i;:::-;:21;27946:40;;28072:41;28081:8;28111:1;28106;229:77;28092:15;28091:21;;;;;;;;28072:8;;;:41;;;:::i;:::-;28068:45;;28149:8;28131:14;28140:1;28143;28131:8;;;:14;;;:::i;:::-;:26;28127:70;;;28177:5;;;28127:70;28218:1;28210:9;;;;27919:311;;;;28246:16;;;;;;;;;28254:4;28246:16;;;;28260:1;28246:16;;;28239:23;;;27820:449;;;:::o;27204:610::-;27277:14;27328:13;229:77;27328:27;;27403:4;27397:11;27431:4;27428:1;27421:15;27470:4;27463;27460:1;27456:12;27449:26;27509:4;27502;27499:1;27495:12;27488:26;27548:4;27541;27538:1;27534:12;27527:26;27587:8;27580:4;27577:1;27573:12;27566:30;27630:5;27623:4;27620:1;27616:12;27609:27;27693:4;27690:1;27684:4;27681:1;27675:4;27670:3;27659:39;27652:47;27649:2;;;27751:1;27748;27741:12;27649:2;27796:1;27790:8;27780:18;;27374:434;;;;;;:::o;81:28550::-;;;;;;;;;;;;;;;;;;;;:::o;5:360:-1:-;;135:39;168:5;135:39;;;186:89;268:6;263:3;186:89;;;179:96;;280:52;325:6;320:3;313:4;306:5;302:16;280:52;;;353:6;348:3;344:16;337:23;;115:250;;;;;;372:159;473:52;493:31;518:5;493:31;;;473:52;;;468:3;461:65;455:76;;;538:266;;684:95;775:3;766:6;684:95;;;677:102;;796:3;789:10;;665:139;;;;;811:405;;985:95;1076:3;1067:6;985:95;;;978:102;;1091:75;1162:3;1153:6;1091:75;;;1188:2;1183:3;1179:12;1172:19;;1208:3;1201:10;;966:250;;;;;;1223:92;;1304:5;1298:12;1288:22;;1282:33;;;;1323:145;;1459:3;1444:18;;1437:31;;;;;1476:79;;1545:5;1534:16;;1528:27;;;;1563:268;1628:1;1635:101;1649:6;1646:1;1643:13;1635:101;;;1725:1;1720:3;1716:11;1710:18;1706:1;1701:3;1697:11;1690:39;1671:2;1668:1;1664:10;1659:15;;1635:101;;;1751:6;1748:1;1745:13;1742:2;;;1816:1;1807:6;1802:3;1798:16;1791:27;1742:2;1612:219;;;;;1839:74;;1903:5;1892:16;;1886:27;;;;81:28550:5;;;;;;;",
  "deployedSourceMap": "81:28550:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:28550:5;;;;;;;;;;;;;;;;;;;;2156:1109;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2374:4;2390:32;;:::i;:::-;2432:12;2447:1;:8;2432:23;;2496:4;2482:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2466:9;:13;;:35;;;;2541:4;2527:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2511:9;:13;;:35;;;;2584:4;2570:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2556:9;:11;;:33;;;;2627:4;2613:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2599:9;:11;;:33;;;;2647:9;2659:1;2647:13;;2642:354;2666:4;2662:1;:8;2642:354;;;2710:47;;;;;;;;;2726:3;2730:1;2726:6;;;;;;;;;;;;;;;;;;2733:1;2726:9;;;;;;;;;;;;;2718:18;;;2710:47;;;;2746:3;2750:1;2746:6;;;;;;;;;;;;;;;;;;2753:1;2746:9;;;;;;;;;;;;;2738:18;;;2710:47;;;2691:9;:13;;;2705:1;2691:16;;;;;;;;;;;;;;;;;:66;;;;2790:47;;;;;;;;;2806:3;2810:1;2806:6;;;;;;;;;;;;;;;;;;2813:1;2806:9;;;;;;;;;;;;;2798:18;;;2790:47;;;;2826:3;2830:1;2826:6;;;;;;;;;;;;;;;;;;2833:1;2826:9;;;;;;;;;;;;;2818:18;;;2790:47;;;2771:9;:13;;;2785:1;2771:16;;;;;;;;;;;;;;;;;:66;;;;2868:43;;;;;;;;;2884:1;2886;2884:4;;;;;;;;;;;;;;;;;;2889:1;2884:7;;;;;;;;;;;;;2876:16;;;2868:43;;;;2902:1;2904;2902:4;;;;;;;;;;;;;;;;;;2907:1;2902:7;;;;;;;;;;;;;2894:16;;;2868:43;;;2851:9;:11;;;2863:1;2851:14;;;;;;;;;;;;;;;;;:60;;;;2942:43;;;;;;;;;2958:1;2960;2958:4;;;;;;;;;;;;;;;;;;2963:1;2958:7;;;;;;;;;;;;;2950:16;;;2942:43;;;;2976:1;2978;2976:4;;;;;;;;;;;;;;;;;;2981:1;2976:7;;;;;;;;;;;;;2968:16;;;2942:43;;;2925:9;:11;;;2937:1;2925:14;;;;;;;;;;;;;;;;;:60;;;;2672:3;;;;;;;2642:354;;;;3019:37;;;;;;;;;3035:1;3037;3035:4;;;;;;;;;;;;;3027:13;;;3019:37;;;;3050:1;3052;3050:4;;;;;;;;;;;;;3042:13;;;3019:37;;;3005:9;:11;;:51;;;;3084:5;3066:9;:15;;:23;;;;;3113:37;;;;;;;;;3129:1;3131;3129:4;;;;;;;;;;;;;3121:13;;;3113:37;;;;3144:1;3146;3144:4;;;;;;;;;;;;;3136:13;;;3113:37;;;3099:9;:11;;:51;;;;3160:30;;:::i;:::-;3193:18;3205:5;3193:11;:18::i;:::-;3160:51;;3228:30;3235:9;3246:11;3228:6;:30::i;:::-;3221:37;;;;;2156:1109;;;;;;;;;;:::o;20471:3710::-;20533:24;;:::i;:::-;20579:38;;;;;;;;;20587:13;20593:3;20598:1;20587:5;:13::i;:::-;20579:38;;;;20602:14;20608:3;20613:2;20602:5;:14::i;:::-;20579:38;;;20569:5;:7;;:48;;;;20637:39;;;;;;;;;20645:14;20651:3;20656:2;20645:5;:14::i;:::-;20637:39;;;;20661:14;20667:3;20672:2;20661:5;:14::i;:::-;20637:39;;;20627:5;:7;;:49;;;;20696:41;;;;;;;;;20704:15;20710:3;20715;20704:5;:15::i;:::-;20696:41;;;;20721:15;20727:3;20732;20721:5;:15::i;:::-;20696:41;;;20686:5;:7;;:51;;;;20757:41;;;;;;;;;20765:15;20771:3;20776;20765:5;:15::i;:::-;20757:41;;;;20782:15;20788:3;20793;20782:5;:15::i;:::-;20757:41;;;20747:5;:7;;:51;;;;20818:41;;;;;;;;;20826:15;20832:3;20837;20826:5;:15::i;:::-;20818:41;;;;20843:15;20849:3;20854;20843:5;:15::i;:::-;20818:41;;;20808:5;:7;;:51;;;;20879:41;;;;;;;;;20887:15;20893:3;20898;20887:5;:15::i;:::-;20879:41;;;;20904:15;20910:3;20915;20904:5;:15::i;:::-;20879:41;;;20869:5;:7;;:51;;;;20940:41;;;;;;;;;20948:15;20954:3;20959;20948:5;:15::i;:::-;20940:41;;;;20965:15;20971:3;20976;20965:5;:15::i;:::-;20940:41;;;20930:5;:7;;:51;;;;21001:41;;;;;;;;;21009:15;21015:3;21020;21009:5;:15::i;:::-;21001:41;;;;21026:15;21032:3;21037;21026:5;:15::i;:::-;21001:41;;;20991:5;:7;;:51;;;;21053:9;21087:3;21079:4;21066:3;:10;:17;21065:25;;;;;;;;21053:37;;21127:1;21113:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21100:5;:10;;:29;;;;21166:1;21152:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21139:5;:10;;:29;;;;21205:1;21191:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21178:5;:10;;:29;;;;21244:1;21230:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21217:5;:10;;:29;;;;21283:1;21269:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21256:5;:10;;:29;;;;21322:1;21308:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21295:5;:10;;:29;;;;21359:1;21345:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21334:5;:8;;:27;;;;21396:1;21382:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21371:5;:8;;:27;;;;21436:1;21432;:5;21418:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21418:20:5;;;;21408:5;:7;;:30;;;;21453:9;21465:1;21453:13;;21448:1009;21472:1;21468;:5;21448:1009;;;21510:59;;;;;;;;;21518:24;21524:3;21539:2;21535:1;:6;21529:3;:12;21518:5;:24::i;:::-;21510:59;;;;21544:24;21550:3;21565:2;21561:1;:6;21555:3;:12;21544:5;:24::i;:::-;21510:59;;;21494:5;:10;;;21505:1;21494:13;;;;;;;;;;;;;;;;;:75;;;;21599:71;;;;;;;;;21607:30;21613:3;21634:2;21629:1;21625;:5;21624:12;21618:3;:18;21607:5;:30::i;:::-;21599:71;;;;21639:30;21645:3;21666:2;21661:1;21657;:5;21656:12;21650:3;:18;21639:5;:30::i;:::-;21599:71;;;21583:5;:10;;;21594:1;21583:13;;;;;;;;;;;;;;;;;:87;;;;21700:79;;;;;;;;;21708:34;21714:3;21739:2;21735:1;:6;21729:3;21725:1;:7;21719:3;:13;:22;21708:5;:34::i;:::-;21700:79;;;;21744:34;21750:3;21775:2;21771:1;:6;21765:3;21761:1;:7;21755:3;:13;:22;21744:5;:34::i;:::-;21700:79;;;21684:5;:10;;;21695:1;21684:13;;;;;;;;;;;;;;;;;:95;;;;21809:79;;;;;;;;;21817:34;21823:3;21848:2;21844:1;:6;21838:3;21834:1;:7;21828:3;:13;:22;21817:5;:34::i;:::-;21809:79;;;;21853:34;21859:3;21884:2;21880:1;:6;21874:3;21870:1;:7;21864:3;:13;:22;21853:5;:34::i;:::-;21809:79;;;21793:5;:10;;;21804:1;21793:13;;;;;;;;;;;;;;;;;:95;;;;21918:79;;;;;;;;;21926:34;21932:3;21957:2;21953:1;:6;21947:3;21943:1;:7;21937:3;:13;:22;21926:5;:34::i;:::-;21918:79;;;;21962:34;21968:3;21993:2;21989:1;:6;21983:3;21979:1;:7;21973:3;:13;:22;21962:5;:34::i;:::-;21918:79;;;21902:5;:10;;;21913:1;21902:13;;;;;;;;;;;;;;;;;:95;;;;22027:79;;;;;;;;;22035:34;22041:3;22066:2;22062:1;:6;22056:3;22052:1;:7;22046:3;:13;:22;22035:5;:34::i;:::-;22027:79;;;;22071:34;22077:3;22102:2;22098:1;:6;22092:3;22088:1;:7;22082:3;:13;:22;22071:5;:34::i;:::-;22027:79;;;22011:5;:10;;;22022:1;22011:13;;;;;;;;;;;;;;;;;:95;;;;22134:79;;;;;;;;;22142:34;22148:3;22173:2;22169:1;:6;22163:3;22159:1;:7;22153:3;:13;:22;22142:5;:34::i;:::-;22134:79;;;;22178:34;22184:3;22209:2;22205:1;:6;22199:3;22195:1;:7;22189:3;:13;:22;22178:5;:34::i;:::-;22134:79;;;22120:5;:8;;;22129:1;22120:11;;;;;;;;;;;;;;;;;:93;;;;22241:79;;;;;;;;;22249:34;22255:3;22280:2;22276:1;:6;22270:3;22266:1;:7;22260:3;:13;:22;22249:5;:34::i;:::-;22241:79;;;;22285:34;22291:3;22316:2;22312:1;:6;22306:3;22302:1;:7;22296:3;:13;:22;22285:5;:34::i;:::-;22241:79;;;22227:5;:8;;;22236:1;22227:11;;;;;;;;;;;;;;;;;:93;;;;22347:34;22353:3;22378:2;22374:1;:6;22368:3;22364:1;:7;22358:3;:13;:22;22347:5;:34::i;:::-;22334:5;:7;;;22342:1;22334:10;;;;;;;;;;;;;;;;;:47;;;;;22412:34;22418:3;22443:2;22439:1;:6;22433:3;22429:1;:7;22423:3;:13;:22;22412:5;:34::i;:::-;22395:5;:7;;;22407:1;22403;:5;22395:14;;;;;;;;;;;;;;;;;:51;;;;;21475:3;;;;;;;21448:1009;;;;22466:16;22489:3;22485:1;:7;22466:26;;22514;22520:3;22531:8;22525:3;:14;22514:5;:26::i;:::-;22502:5;:9;;:38;;;;;22562:26;22568:3;22579:8;22573:3;:14;22562:5;:26::i;:::-;22550:5;:9;;:38;;;;;22610:26;22616:3;22627:8;22621:3;:14;22610:5;:26::i;:::-;22598:5;:9;;:38;;;;;22662:63;;;;;;;;;22670:26;22676:3;22687:8;22681:3;:14;22670:5;:26::i;:::-;22662:63;;;;22698:26;22704:3;22715:8;22709:3;:14;22698:5;:26::i;:::-;22662:63;;;22647:5;:12;;:78;;;;22750:63;;;;;;;;;22758:26;22764:3;22775:8;22769:3;:14;22758:5;:26::i;:::-;22750:63;;;;22786:26;22792:3;22803:8;22797:3;:14;22786:5;:26::i;:::-;22750:63;;;22735:5;:12;;:78;;;;22840:63;;;;;;;;;22848:26;22854:3;22865:8;22859:3;:14;22848:5;:26::i;:::-;22840:63;;;;22876:26;22882:3;22893:8;22887:3;:14;22876:5;:26::i;:::-;22840:63;;;22823:5;:14;;:80;;;;22930:63;;;;;;;;;22938:26;22944:3;22955:8;22949:3;:14;22938:5;:26::i;:::-;22930:63;;;;22966:26;22972:3;22983:8;22977:3;:14;22966:5;:26::i;:::-;22930:63;;;22913:5;:14;;:80;;;;23004:147;;;;;;;;;23022:63;;;;;;;;;23030:26;23036:3;23047:8;23041:3;:14;23030:5;:26::i;:::-;23022:63;;;;23058:26;23064:3;23075:8;23069:3;:14;23058:5;:26::i;:::-;23022:63;;;23004:147;;;;23087:63;;;;;;;;;23095:26;23101:3;23112:8;23106:3;:14;23095:5;:26::i;:::-;23087:63;;;;23123:26;23129:3;23140:8;23134:3;:14;23123:5;:26::i;:::-;23087:63;;;23004:147;;;:5;:14;;:147;;;;23174:26;23180:3;23191:8;23185:3;:14;23174:5;:26::i;:::-;23161:5;:10;;:39;;;;;23223:27;23229:3;23241:8;23234:4;:15;23223:5;:27::i;:::-;23210:5;:10;;:40;;;;;23271:27;23277:3;23289:8;23282:4;:15;23271:5;:27::i;:::-;23260:5;:8;;:38;;;;;23319:27;23325:3;23337:8;23330:4;:15;23319:5;:27::i;:::-;23309:5;:7;;:37;;;;;23369:27;23375:3;23387:8;23380:4;:15;23369:5;:27::i;:::-;23356:5;:10;;:40;;;;;23418:27;23424:3;23436:8;23429:4;:15;23418:5;:27::i;:::-;23406:5;:9;;:39;;;;;23475:27;23481:3;23493:8;23486:4;:15;23475:5;:27::i;:::-;23455:5;:17;;:47;;;;;23528:27;23534:3;23546:8;23539:4;:15;23528:5;:27::i;:::-;23512:5;:13;;:43;;;;;23586:27;23592:3;23604:8;23597:4;:15;23586:5;:27::i;:::-;23565:5;:18;;:48;;;;;23640:27;23646:3;23658:8;23651:4;:15;23640:5;:27::i;:::-;23623:5;:14;;:44;;;;;23678:32;;:::i;:::-;23725:9;23737:1;23725:13;;23720:281;191:1;23740;:5;23720:281;;;23782:83;;;;;;;;;23790:36;23796:3;23823:2;23819:1;:6;23808:8;23801:4;:15;:24;23790:5;:36::i;:::-;23782:83;;;;23828:36;23834:3;23861:2;23857:1;:6;23846:8;23839:4;:15;:24;23828:5;:36::i;:::-;23782:83;;;23766:7;:10;;;23777:1;23766:13;;;;;;;;;;;;:99;;;;23895:95;;;;;;;;;23903:42;23909:3;23942:2;23937:1;191;23933:5;23932:12;23921:8;23914:4;:15;:30;23903:5;:42::i;:::-;23895:95;;;;23947:42;23953:3;23986:2;23981:1;191;23977:5;23976:12;23965:8;23958:4;:15;:30;23947:5;:42::i;:::-;23895:95;;;23879:7;:10;;;23890:1;23879:13;;;;;;;;;;;;:111;;;;23747:3;;;;;;;23720:281;;;;24022:37;24028:3;24055;191:1;24051:7;24040:8;24033:4;:15;:25;24022:5;:37::i;:::-;24010:7;:9;;:49;;;;;24081:37;24087:3;24114;191:1;24110:7;24099:8;24092:4;:15;:25;24081:5;:37::i;:::-;24069:7;:9;;:49;;;;;24144:7;24128:5;:13;;:23;;;;24169:5;24162:12;;;;;20471:3710;;;:::o;4587:10737::-;4686:4;4702:21;4726:122;4755:9;:13;;;4770:9;:13;;;4785:9;:11;;;4798:9;:11;;;4811:9;:11;;;4824:9;:15;;;4744:96;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4744:96:5;;;4734:107;;;;;;4726:116;;;:120;:122::i;:::-;4702:146;;4859:38;;:::i;:::-;4927:123;4956:13;4971:5;:7;;;4980:5;:7;;;4989:5;:7;;;4998:5;:7;;;5007:5;:7;;;5016:5;:7;;;5025:5;:7;;;5034:5;:7;;;4945:97;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4945:97:5;;;4935:108;;;;;;4927:117;;;:121;:123::i;:::-;4907:15;:17;;:143;;;;;5080:147;5109:15;:17;;;5128:5;:10;;;5140:5;:10;;;5152:5;:10;;;5164:5;:10;;;5176:5;:10;;;5188:5;:10;;;5200:5;:8;;;5210:5;:8;;;5098:121;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5098:121:5;;;5088:132;;;;;;5080:141;;;:145;:147::i;:::-;5060:15;:17;;:167;;;;;5274:1;5257:5;:7;;;:14;:18;;;;;;;;5237:15;:17;;:38;;;;;5310:15;:17;;;5305:1;:22;5285:15;:17;;:42;;;;;5378:15;:17;;;5374:1;:21;5357:39;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5337:15;:17;;:59;;;;5411:9;5423:1;5411:13;;5406:186;5434:15;:17;;;5430:1;:21;5426:1;:25;5406:186;;;5498:5;:7;;;5506:1;5498:10;;;;;;;;;;;;;;;;;;5472:15;:17;;;5490:1;5472:20;;;;;;;;;;;;;;;;;;5493:1;5472:23;;;;;;;;;;;;:36;;;;;5548:33;5570:5;:7;;;5578:1;5570:10;;;;;;;;;;;;;;;;;;5548:15;:17;;;:21;;:33;;;;:::i;:::-;5522:15;:17;;;5540:1;5522:20;;;;;;;;;;;;;;;;;;5543:1;5522:23;;;;;;;;;;;;:59;;;;;5453:3;;;;;;;5406:186;;;;5607:9;5619:1;5607:13;;5602:261;5630:15;:17;;;5626:1;:21;5622:1;:25;5602:261;;;5691:62;5695:15;:20;;;5717:35;5721:2;5724:1;5721:5;;;;;;;;;;;;;;;;;;;;5717:35;;;;;;;;;;;;;;;;;;;;;;;;;;5728:15;:17;;;5746:1;5728:20;;;;;;;;;;;;;;;;;;5749:1;5728:23;;;;;;;;;;;;;5717:3;:35::i;:::-;5691:3;:62::i;:::-;5668:15;:20;;:85;;;;5790:62;5794:15;:20;;;5816:35;5820:2;5823:1;5820:5;;;;;;;;;;;;;;;;;;;;5816:35;;;;;;;;;;;;;;;;;;;;;;;;;;5827:15;:17;;;5845:1;5827:20;;;;;;;;;;;;;;;;;;5848:1;5827:23;;;;;;;;;;;;;5816:3;:35::i;:::-;5790:3;:62::i;:::-;5767:15;:20;;:85;;;;5649:3;;;;;;;5602:261;;;;5880:95;5883:45;5887:31;5891:5;:7;;;5900:15;:17;;;5887:3;:31::i;:::-;5920:5;:7;;;5883:3;:45::i;:::-;5930:44;5934:15;:20;;;5956:17;5960:1;5956:17;;;;;;;;;;;;;;;;;;;;;;;;;;5963:5;:9;;;5956:3;:17::i;:::-;5930:3;:44::i;:::-;5880:2;:95::i;:::-;5872:137;;;;;;;;;;;;;;;;;;;;;;;;6043:13;;;;;;;;;6051:1;6043:13;;;;6054:1;6043:13;;;6020:15;:20;;:36;;;;6071:9;6083:1;6071:13;;6066:411;6094:15;:17;;;6090:1;:21;6086:1;:25;6066:411;;;6201:114;6205:15;:20;;;6227:87;6231:2;6234:1;6231:5;;;;;;;;;;;;;;;;;;;;6227:87;;;;;;;;;;;;;;;;;;;;;;;;;;6238:75;6266:46;6288:15;:17;;;6306:1;6288:20;;;;;;;;;;;;;;;;;;6309:1;6288:23;;;;;;;;;;;;;6266:15;:17;;;:21;;:46;;;;:::i;:::-;6238:15;:17;;;6256:1;6238:20;;;;;;;;;;;;;;;;;;6259:1;6238:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;6227:3;:87::i;:::-;6201:3;:114::i;:::-;6178:15;:20;;:137;;;;6352:114;6356:15;:20;;;6378:87;6382:2;6385:1;6382:5;;;;;;;;;;;;;;;;;;;;6378:87;;;;;;;;;;;;;;;;;;;;;;;;;;6389:75;6417:46;6439:15;:17;;;6457:1;6439:20;;;;;;;;;;;;;;;;;;6460:1;6439:23;;;;;;;;;;;;;6417:15;:17;;;:21;;:46;;;;:::i;:::-;6389:15;:17;;;6407:1;6389:20;;;;;;;;;;;;;;;;;;6410:1;6389:23;;;;;;;;;;;;;:27;;:75;;;;:::i;:::-;6378:3;:87::i;:::-;6352:3;:114::i;:::-;6329:15;:20;;:137;;;;6113:3;;;;;;;6066:411;;;;6494:95;6497:45;6501:31;6505:5;:7;;;6514:15;:17;;;6501:3;:31::i;:::-;6534:5;:7;;;6497:3;:45::i;:::-;6544:44;6548:15;:20;;;6570:17;6574:1;6570:17;;;;;;;;;;;;;;;;;;;;;;;;;;6577:5;:9;;;6570:3;:17::i;:::-;6544:3;:44::i;:::-;6494:2;:95::i;:::-;6486:137;;;;;;;;;;;;;;;;;;;;;;;;6657:167;6661:80;6665:2;6668:1;6665:5;;;;;;;;;;;;;;;;;;;;6661:80;;;;;;;;;;;;;;;;;;;;;;;;;;6672:68;6700:15;:17;;;6718:15;:17;;;6700:36;;;;;;;;;;;;;;;;;;6737:1;6700:39;;;;;;;;;;;;;6672:15;:17;;;6690:1;6672:20;;;;;;;;;;;;;;;;;;6693:1;6672:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;6661:3;:80::i;:::-;6743;6747:2;6750:1;6747:5;;;;;;;;;;;;;;;;;;;;6743:80;;;;;;;;;;;;;;;;;;;;;;;;;;6754:68;6782:15;:17;;;6800:15;:17;;;6782:36;;;;;;;;;;;;;;;;;;6819:1;6782:39;;;;;;;;;;;;;6754:15;:17;;;6772:1;6754:20;;;;;;;;;;;;;;;;;;6775:1;6754:23;;;;;;;;;;;;;:27;;:68;;;;:::i;:::-;6743:3;:80::i;:::-;6657:3;:167::i;:::-;6634:15;:20;;:190;;;;6842:95;6845:45;6849:31;6853:5;:7;;;6862:15;:17;;;6849:3;:31::i;:::-;6882:5;:7;;;6845:3;:45::i;:::-;6892:44;6896:15;:20;;;6918:17;6922:1;6918:17;;;;;;;;;;;;;;;;;;;;;;;;;;6925:5;:9;;;6918:3;:17::i;:::-;6892:3;:44::i;:::-;6842:2;:95::i;:::-;6834:137;;;;;;;;;;;;;;;;;;;;;;;;7005:38;7025:15;:17;;;7005:19;:38::i;:::-;6982:15;:20;;:61;;;;7075:55;7096:15;:20;;;7118:9;:11;;;7075:20;:55::i;:::-;7054:15;:18;;:76;;;;7161:55;7182:15;:20;;;7204:9;:11;;;7161:20;:55::i;:::-;7140:15;:18;;:76;;;;7231:9;7243:1;7231:13;;7226:285;7250:15;:17;;;7246:1;:21;7226:285;;;7311:76;7315:15;:20;;;7337:49;7341:9;:13;;;7355:1;7341:16;;;;;;;;;;;;;;;;;;7359:15;:20;;;7380:1;7359:23;;;;;;;;;;;;;;;;;;7383:1;7359:26;;;;;;;;;;;;;7337:3;:49::i;:::-;7311:3;:76::i;:::-;7288:15;:20;;:99;;;;7424:76;7428:15;:20;;;7450:49;7454:9;:13;;;7468:1;7454:16;;;;;;;;;;;;;;;;;;7472:15;:20;;;7493:1;7472:23;;;;;;;;;;;;;;;;;;7496:1;7472:26;;;;;;;;;;;;;7450:3;:49::i;:::-;7424:3;:76::i;:::-;7401:15;:20;;:99;;;;7269:3;;;;;;;7226:285;;;;7543:1;7520:15;:20;;:24;;;;;7559:9;7571:1;7559:13;;7554:428;7578:15;:17;;;7574:1;:21;7554:428;;;7639:86;7643:15;:20;;;7665:59;7669:15;:18;;;7692:1;7688;:5;;;;;;;;7669:25;;;;;;;;;;;;;;;;;;7699:1;7695;:5;;;;;;;;7669:32;;;;;;;;;;;;;7703:15;:20;;;7665:3;:59::i;:::-;7639:3;:86::i;:::-;7616:15;:20;;:109;;;;7762:86;7766:15;:20;;;7788:59;7792:15;:18;;;7815:1;7811;:5;;;;;;;;7792:25;;;;;;;;;;;;;;;;;;7822:1;7818;:5;;;;;;;;7792:32;;;;;;;;;;;;;7826:15;:20;;;7788:3;:59::i;:::-;7762:3;:86::i;:::-;7739:15;:20;;:109;;;;7870:1;7866;:5;7862:110;;;7914:43;7939:15;:17;;;7914:15;:20;;;:24;;:43;;;;:::i;:::-;7891:15;:20;;:66;;;;;7862:110;7597:3;;;;;;;7554:428;;;;8014:1;7991:15;:20;;:24;;;;;8030:9;8042:1;8030:13;;8025:1023;8049:15;:17;;;8045:1;:21;8025:1023;;;8110:73;8114:15;:20;;;8136:46;8140:5;:10;;;8151:1;8140:13;;;;;;;;;;;;;;;;;;8155:26;:15;:20;;;:24;:26::i;:::-;8136:3;:46::i;:::-;8110:3;:73::i;:::-;8087:15;:20;;:96;;;;8220:73;8224:15;:20;;;8246:46;8250:5;:10;;;8261:1;8250:13;;;;;;;;;;;;;;;;;;8265:26;:15;:20;;;:24;:26::i;:::-;8246:3;:46::i;:::-;8220:3;:73::i;:::-;8197:15;:20;;:96;;;;8334:77;8338:15;:18;;;8357:1;8338:21;;;;;;;;;;;;;;;;;;8360:1;8338:24;;;;;;;;;;;;;8364:46;8368:5;:10;;;8379:1;8368:13;;;;;;;;;;;;;;;;;;8383:26;:15;:20;;;:24;:26::i;:::-;8364:3;:46::i;:::-;8334:3;:77::i;:::-;8307:15;:18;;;8326:1;8307:21;;;;;;;;;;;;;;;;;;8329:1;8307:24;;;;;;;;;;;;:104;;;;8452:77;8456:15;:18;;;8475:1;8456:21;;;;;;;;;;;;;;;;;;8478:1;8456:24;;;;;;;;;;;;;8482:46;8486:5;:10;;;8497:1;8486:13;;;;;;;;;;;;;;;;;;8501:26;:15;:20;;;:24;:26::i;:::-;8482:3;:46::i;:::-;8452:3;:77::i;:::-;8425:15;:18;;;8444:1;8425:21;;;;;;;;;;;;;;;;;;8447:1;8425:24;;;;;;;;;;;;:104;;;;8566:73;8570:15;:20;;;8592:46;8596:5;:10;;;8607:1;8596:13;;;;;;;;;;;;;;;;;;8611:26;:15;:20;;;:24;:26::i;:::-;8592:3;:46::i;:::-;8566:3;:73::i;:::-;8543:15;:20;;:96;;;;8676:73;8680:15;:20;;;8702:46;8706:5;:10;;;8717:1;8706:13;;;;;;;;;;;;;;;;;;8721:26;:15;:20;;;:24;:26::i;:::-;8702:3;:46::i;:::-;8676:3;:73::i;:::-;8653:15;:20;;:96;;;;8784:69;8788:15;:18;;;8808:44;8812:5;:8;;;8821:1;8812:11;;;;;;;;;;;;;;;;;;8825:26;:15;:20;;;:24;:26::i;:::-;8808:3;:44::i;:::-;8784:3;:69::i;:::-;8763:15;:18;;:90;;;;8888:69;8892:15;:18;;;8912:44;8916:5;:8;;;8925:1;8916:11;;;;;;;;;;;;;;;;;;8929:26;:15;:20;;;:24;:26::i;:::-;8912:3;:44::i;:::-;8888:3;:69::i;:::-;8867:15;:18;;:90;;;;8994:43;9019:15;:17;;;8994:15;:20;;;:24;;:43;;;;:::i;:::-;8971:15;:20;;:66;;;;;8068:3;;;;;;;8025:1023;;;;9078:53;9082:15;:18;;;9102:28;9106:1;9102:28;;;;;;;;;;;;;;;;;;;;;;;;;;9109:15;:20;;;9102:3;:28::i;:::-;9078:3;:53::i;:::-;9057:15;:18;;:74;;;;9162:63;9166:15;:18;;;9186:38;9190:9;:11;;;9203:15;:20;;;9186:3;:38::i;:::-;9162:3;:63::i;:::-;9141:15;:18;;:84;;;;9236:42;;:::i;:::-;9310:115;9339:15;:17;;;9358:5;:12;;;9372:5;:12;;;9386:5;:14;;;9402:5;:14;;;9328:89;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9328:89:5;;;9318:100;;;;;;9310:109;;;:113;:115::i;:::-;9288:17;:19;;:137;;;;;9458:27;9465:17;:19;;;9458:6;:27::i;:::-;9435:17;:20;;:50;;;;9517:57;9546:17;:19;;;9535:31;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9535:31:5;;;9525:42;;;;;;9517:51;;;:55;:57::i;:::-;9495:17;:19;;:79;;;;;9584;;;;;;;;;9608:26;9632:1;9608:17;:19;;;:23;;:26;;;;:::i;:::-;9584:79;;;;9636:26;9660:1;9636:17;:19;;;:23;;:26;;;;:::i;:::-;9584:79;;;:17;:20;;:79;;;;9706:77;9763:17;:19;;;9706:52;9734:17;:20;;;9755:1;9734:23;;;;;;;;;;;;;9706:17;:20;;;9727:1;9706:23;;;;;;;;;;;;;:27;;:52;;;;:::i;:::-;:56;;:77;;;;:::i;:::-;9681:17;:22;;:102;;;;;9815:160;9906:68;9951:17;:22;;;9906:40;9943:1;162:2;9939:5;;;;;;;;9933:1;:12;9906:17;:22;;;:26;;:40;;;;:::i;:::-;:44;;:68;;;;:::i;:::-;9815:86;9852:48;9876:17;:20;;;9897:1;9876:23;;;;;;;;;;;;;9852:17;:19;;;:23;;:48;;;;:::i;:::-;9815:32;9826:17;:20;;;9815:10;:32::i;:::-;:36;;:86;;;;:::i;:::-;:90;;:160;;;;:::i;:::-;9793:17;:19;;:182;;;;;10007:35;10022:17;:19;;;10007:5;:10;;;:14;;:35;;;;:::i;:::-;9985:17;:19;;:57;;;;;10057:9;10069:1;10057:13;;10052:233;10080:1;162:2;10076:5;;;;;;;;10072:1;:9;10052:233;;;10142:35;10175:1;10170;:6;10142:17;:20;;;10163:1;10142:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;10102:17;:34;;;10137:1;10102:37;;;;;;;;;;;;:75;;;;;10239:35;10272:1;10267;:6;10239:17;:20;;;10260:1;10239:23;;;;;;;;;;;;;:27;;:35;;;;:::i;:::-;10191:17;:34;;;10234:1;162:2;10230:5;;;;;;;;10226:1;:9;10191:45;;;;;;;;;;;;:83;;;;;10083:3;;;;;;;10052:233;;;;10317:73;10346:17;:19;;;10367:5;:14;;;10335:47;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10335:47:5;;;10325:58;;;;;;10317:67;;;:71;:73::i;:::-;10295:17;:19;;:95;;;;;10426:118;10430:43;10434:5;:14;;;10449:1;10434:17;;;;;;;;;;;;;10453;:19;;;10430:3;:43::i;:::-;10475:68;10479:5;:14;;;10494:1;10479:17;;;;;;;;;;;;;10498:44;10522:17;:19;;;10498:17;:19;;;:23;;:44;;;;:::i;:::-;10475:3;:68::i;:::-;10426:3;:118::i;:::-;10400:17;:23;;:144;;;;10581:40;;:::i;:::-;10654:86;10658:35;10662:15;:18;;;10682:5;:10;;;10658:3;:35::i;:::-;10695:44;10699:15;:18;;;10718:1;10699:21;;;;;;;;;;;;;;;;;;10721:1;10699:24;;;;;;;;;;;;;10725:13;:5;:7;;;:11;:13::i;:::-;10695:3;:44::i;:::-;10654:3;:86::i;:::-;10631:16;:20;;:109;;;;10773:55;10777:17;10781:1;10777:17;;;;;;;;;;;;;;;;;;;;;;;;;;10784:5;:9;;;10777:3;:17::i;:::-;10796:31;10800:9;:11;;;10813:13;:5;:7;;;:11;:13::i;:::-;10796:3;:31::i;:::-;10773:3;:55::i;:::-;10750:16;:20;;:78;;;;10948:34;;;;;;;;;;;;;;;;;;;10966:9;:15;;;10948:7;:34::i;:::-;10922:16;:23;;:60;;;;11015:78;11019:40;11023:16;:23;;;11048:5;:10;;;11019:3;:40::i;:::-;11061:31;11065:9;:11;;;11078:13;:5;:7;;;:11;:13::i;:::-;11061:3;:31::i;:::-;11015:3;:78::i;:::-;10992:16;:20;;:101;;;;11126:83;11130:36;11134:15;:20;;;11156:5;:9;;;11130:3;:36::i;:::-;11168:40;11172:15;:20;;;11194:13;:5;:7;;;:11;:13::i;:::-;11168:3;:40::i;:::-;11126:3;:83::i;:::-;11103:16;:20;;:106;;;;11247:317;11251:154;11255:124;11259:54;11263:37;11267:15;:18;;;11287:5;:12;;;11263:3;:37::i;:::-;11302:5;:10;;;11259:3;:54::i;:::-;11315:63;11319:43;11323:15;:18;;;11342:1;11323:21;;;;;;;;;;;;;;;;;;11345:1;11323:24;;;;;;;;;;;;;11349:5;:12;;;11319:3;:43::i;:::-;11364:13;:5;:7;;;:11;:13::i;:::-;11315:3;:63::i;:::-;11255:3;:124::i;:::-;11381:17;:20;;;11402:1;11381:23;;;;;;;;;;;;;11251:3;:154::i;:::-;11407:156;11411:126;11415:58;11419:41;11423:15;:20;;;11445:5;:14;;;11419:3;:41::i;:::-;11462:5;:10;;;11415:3;:58::i;:::-;11475:61;11479:41;11483:15;:20;;;11505:5;:14;;;11479:3;:41::i;:::-;11522:13;:5;:7;;;:11;:13::i;:::-;11475:3;:61::i;:::-;11411:3;:126::i;:::-;11539:17;:20;;;11560:1;11539:23;;;;;;;;;;;;;11407:3;:156::i;:::-;11247:3;:317::i;:::-;11219:16;:25;;:345;;;;11597:159;11601:127;11605:87;11609:52;11613:27;11617:1;11613:27;;;;;;;;;;;;;;;;;;;;;;;;;;11620:17;:19;;;11613:3;:27::i;:::-;11642:18;11646:1;11642:18;;;;;;;;;;;;;;;;;;;;;;;;;;11649:5;:10;;;11642:3;:18::i;:::-;11609:3;:52::i;:::-;11663:28;11667:17;:23;;;11663:3;:28::i;:::-;11605:3;:87::i;:::-;11694:33;11706:15;:20;;;11694:5;:7;;;:11;;:33;;;;:::i;:::-;11601:3;:127::i;:::-;11730:16;:25;;;11597:3;:159::i;:::-;11574:16;:20;;:182;;;;11790:118;11794:25;11798:1;11794:25;;;;;;;;;;;;;;;;;;;;;;;;;;11801:5;:17;;;11794:3;:25::i;:::-;11821:86;11825:35;11829:15;:18;;;11849:5;:10;;;11825:3;:35::i;:::-;11862:44;11866:15;:18;;;11885:1;11866:21;;;;;;;;;;;;;;;;;;11888:1;11866:24;;;;;;;;;;;;;11892:13;:5;:7;;;:11;:13::i;:::-;11862:3;:44::i;:::-;11821:3;:86::i;:::-;11790:3;:118::i;:::-;11766:16;:21;;:142;;;;11943:112;11947:21;11951:1;11947:21;;;;;;;;;;;;;;;;;;;;;;;;;;11954:5;:13;;;11947:3;:21::i;:::-;11970:84;11974:37;11978:15;:20;;;12000:5;:10;;;11974:3;:37::i;:::-;12013:40;12017:15;:20;;;12039:13;:5;:7;;;:11;:13::i;:::-;12013:3;:40::i;:::-;11970:3;:84::i;:::-;11943:3;:112::i;:::-;11918:16;:22;;:137;;;;12093:101;12097:26;12101:1;12097:26;;;;;;;;;;;;;;;;;;;;;;;;;;12104:5;:18;;;12097:3;:26::i;:::-;12125:68;12129:29;12133:5;:12;;;12147:5;:10;;;12129:3;:29::i;:::-;12160:32;12164:5;:12;;;12178:13;:5;:7;;;:11;:13::i;:::-;12160:3;:32::i;:::-;12125:3;:68::i;:::-;12093:3;:101::i;:::-;12065:16;:25;;:129;;;;12234:101;12238:22;12242:1;12238:22;;;;;;;;;;;;;;;;;;;;;;;;;;12245:5;:14;;;12238:3;:22::i;:::-;12262:72;12266:31;12270:5;:14;;;12286:5;:10;;;12266:3;:31::i;:::-;12299:34;12303:5;:14;;;12319:13;:5;:7;;;:11;:13::i;:::-;12299:3;:34::i;:::-;12262:3;:72::i;:::-;12234:3;:101::i;:::-;12204:16;:27;;:131;;;;12367:270;12396:17;:19;;;12417:16;:20;;;12439:16;:20;;;12461:16;:20;;;12483:16;:20;;;12505:16;:20;;;12527:16;:21;;;12550:16;:22;;;12574:16;:25;;;12601:16;:27;;;12385:244;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12385:244:5;;;12375:255;;;;;;12367:264;;;:268;:270::i;:::-;12346:16;:18;;:291;;;;;12677:5;:7;;;12655:16;:18;;;:29;12647:84;;;;;;;;;;;;;;;;;;;;;;;;12742:34;;:::i;:::-;12804:56;12833:16;:18;;;12822:30;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12822:30:5;;;12812:41;;;;;;12804:50;;;:54;:56::i;:::-;12786:13;:15;;:74;;;;;12890:23;12894:1;12890:23;;;;;;;;;;;;;;;;;;;;;;;;;;12897:13;:15;;;12890:3;:23::i;:::-;12870:13;:17;;:43;;;;12947:37;12959:2;12947:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12963:17;:20;;;12947:11;:37::i;:::-;12923:13;:21;;:61;;;;13015:96;13026:48;13032:17;:20;;;13054:17;:19;;;13026:5;:48::i;:::-;13076:17;:34;;;13015:10;:96::i;:::-;12994:13;:18;;:117;;;;13139:155;13143:99;13147:47;13151:5;:7;;;13160:33;13164:5;:7;;;13173:17;:19;;;13160:3;:33::i;:::-;13147:3;:47::i;:::-;13196:45;13200:13;13210:2;13200:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:13::i;:::-;13215:25;:17;:19;;;:23;:25::i;:::-;13196:3;:45::i;:::-;13143:3;:99::i;:::-;13244:49;13251:13;:21;;;13274:13;:18;;;13244:6;:49::i;:::-;13139:3;:155::i;:::-;13121:13;:15;;:173;;;;13322:44;13326:13;:15;;;13343:22;13347:1;13343:22;;;;;;;;;;;;;;;;;;;;;;;;;;13350:14;:5;:8;;;:12;:14::i;:::-;13343:3;:22::i;:::-;13322:3;:44::i;:::-;13304:13;:15;;:62;;;;13394:56;13398:13;:15;;;13415:34;13419:13;:17;;;13438:5;:10;;;13415:3;:34::i;:::-;13394:3;:56::i;:::-;13376:13;:15;;:74;;;;13505:32;;:::i;:::-;13540:5;:13;;;13505:48;;13568:9;13580:1;13568:13;;13563:421;191:1;13583;:5;13563:421;;;13627:83;13656:13;:15;;;13673:7;:10;;;13684:1;13673:13;;;;;;;;;;;;;13688:7;:10;;;13699:1;13688:13;;;;;;;;;;;;;13645:57;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;13645:57:5;;;13635:68;;;;;;13627:77;;;:81;:83::i;:::-;13609:13;:15;;:101;;;;;13754:13;:15;;;13724:13;:24;;;13749:1;13724:27;;;;;;;;;;;;:45;;;;;13803:12;13818:21;:13;:15;;;:19;:21::i;:::-;13803:36;;13871:102;13875:13;:15;;;13892:80;13896:42;13900:7;:10;;;13911:1;13900:13;;;;;;;;;;;;;13915:22;13935:1;13915:13;:15;;;:19;;:22;;;;:::i;:::-;13896:3;:42::i;:::-;13940:31;13944:7;:10;;;13955:1;13944:13;;;;;;;;;;;;;13959:11;13968:1;13959:4;:8;;:11;;;;:::i;:::-;13940:3;:31::i;:::-;13892:3;:80::i;:::-;13871:3;:102::i;:::-;13853:13;:15;;:120;;;;13563:421;13590:3;;;;;;;13563:421;;;;14028:1;13994:13;:28;;;14023:1;13994:31;;;;;;;;;;;;:35;;;;;14044:9;14056:1;14044:13;;14039:155;191:1;14059;:5;14039:155;;;14119:64;14155:13;:24;;;14180:1;14155:27;;;;;;;;;;;;;14119:13;:28;;;14148:1;14119:31;;;;;;;;;;;;;:35;;:64;;;;:::i;:::-;14085:13;:28;;;14114:1;14085:31;;;;;;;;;;;;:98;;;;;14066:3;;;;;;;14039:155;;;;14203:21;;:::i;:::-;14268:37;:13;:28;;;14297:1;14268:31;;;;;;;;;;;;;:35;:37::i;:::-;14234:13;:28;;;14263:1;14234:31;;;;;;;;;;;;:71;;;;;14320:9;14332:1;14320:13;;14315:462;14341:1;162:2;14339:3;;;;;;;;14335:1;:7;14315:462;;;14368:9;14380:1;14368:13;;14363:404;162:2;14394:1;14389;14384;:6;;;;14383:12;:16;14363:404;;;14424:10;14447:1;14442;:6;;;;14437:1;:12;14424:25;;14472:6;14479:2;14472:10;;;;;;;;;;;;;14471:11;14467:286;;;14506:12;14521:76;14561:13;:24;;;14594:1;14590;191;14586:5;:9;14561:35;;;;;;;;;;;;;14521:13;:24;;;14554:1;14550;191;14546:5;:9;14521:35;;;;;;;;;;;;;:39;;:76;;;;:::i;:::-;14506:91;;14654:41;14690:4;14654:13;:28;;;14683:1;14654:31;;;;;;;;;;;;;:35;;:41;;;;:::i;:::-;14619:13;:28;;;14648:2;14619:32;;;;;;;;;;;;:76;;;;;14730:4;14717:6;14724:2;14717:10;;;;;;;;;;;;:17;;;;;;;;;;;14467:286;;14363:404;14401:3;;;;;14363:404;;;;14344:3;;;;;14315:462;;;;14787:20;;:::i;:::-;14817;;:::i;:::-;14852:9;14864:1;14852:13;;14847:224;162:2;14867:1;:5;14847:224;;;14901:55;14905:5;14912:43;14916:2;14919:1;14916:5;;;;;;;;;;;;;;;;;;;;14912:43;;;;;;;;;;;;;;;;;;;;;;;;;;14923:13;:28;;;14952:1;14923:31;;;;;;;;;;;;;14912:3;:43::i;:::-;14901:3;:55::i;:::-;14893:63;;14978:82;14982:5;14989:70;14993:13;:21;;;15015:1;14993:24;;;;;;;;;;;;;15019:13;:28;;;15056:1;15052;162:2;15048:5;:9;15019:39;;;;;;;;;;;;;14989:3;:70::i;:::-;14978:3;:82::i;:::-;14970:90;;14874:3;;;;;;;14847:224;;;;15080:21;;:::i;:::-;15104:104;15108:49;15112:21;15116:5;15123:7;:9;;;15112:3;:21::i;:::-;15135;15139:5;15146:7;:9;;;15135:3;:21::i;:::-;15108:3;:49::i;:::-;15159:48;15163:13;:17;;;15182:24;15196:7;:9;;;15182:7;:9;;;:13;;:24;;;;:::i;:::-;15159:3;:48::i;:::-;15104:3;:104::i;:::-;15080:128;;15226:27;15229:13;:15;;;15246:6;15226:2;:27::i;:::-;15218:77;;;;;;;;;;;;;;;;;;;;;;;;15313:4;15306:11;;;;;;;;;;;;4587:10737;;;;:::o;25663:295::-;25736:14;25829:4;25823:11;25885:5;25878:4;25871:5;25867:16;25863:28;25857:35;25854:1;25847:46;25940:1;25934:8;25924:18;;25800:152;;;;;:::o;720:95:3:-;767:7;110:77;793:1;:15;;;;;;;;786:22;;720:95;;;:::o;821:127::-;879:7;910:1;905;:6;;:36;;940:1;936;110:77;922:15;:19;905:36;;;918:1;914;:5;905:36;898:43;;821:127;;;;:::o;26492:382:5:-;26557:16;;:::i;:::-;26623:4;26617:11;26657:1;26651:8;26648:1;26641:19;26707:4;26704:1;26700:12;26694:19;26687:4;26684:1;26680:12;26673:41;26748:1;26741:4;26738:1;26734:12;26727:23;26807:4;26804:1;26798:4;26795:1;26789:4;26784:3;26773:39;26766:47;26763:2;;;26842:1;26839;26832:12;26763:2;26594:274;;;;;:::o;26030:456::-;26104:16;;:::i;:::-;26170:4;26164:11;26204:2;26198:9;26195:1;26188:20;26256:4;26252:2;26248:13;26242:20;26235:4;26232:1;26228:12;26221:42;26303:2;26297:9;26290:4;26287:1;26283:12;26276:31;26355:4;26351:2;26347:13;26341:20;26334:4;26331:1;26327:12;26320:42;26419:4;26416:1;26410:4;26407:1;26401:4;26396:3;26385:39;26378:47;26375:2;;;26454:1;26451;26444:12;26375:2;26141:339;;;;;:::o;27067:131::-;27140:4;27171:2;:4;;;27163:2;:4;;;:12;:28;;;;;27187:2;:4;;;27179:2;:4;;;:12;27163:28;27156:35;;27067:131;;;;:::o;489:116:3:-;547:7;110:77;573:25;;;;;;;583:1;580;573:25;566:32;;489:116;;;;:::o;15330:446:5:-;15405:26;15443:9;15466:1;15455;:8;:12;;;;;;;;15443:24;;15477:9;15494:1;15489;:6;15477:18;;15531:1;15514:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15505:28;;15548:9;15560:1;15548:13;;15543:227;15567:1;15563;:5;15543:227;;;15589:21;15613:46;15638:1;15634;:5;15651:1;15646;15642;:5;15641:11;15654:1;15657;15613:20;:46::i;:::-;15589:70;;15678:9;15690:1;15678:13;;15673:87;15697:1;15693;:5;15673:87;;;15738:4;15743:1;15738:7;;;;;;;;;;;;;;;;;;15723:6;15730:1;15723:9;;;;;;;;;;;;;;;;;;15733:1;15723:12;;;;;;;;;;;;:22;;;;;15700:3;;;;;;;15673:87;;;;15543:227;15570:3;;;;;;;15543:227;;;;15330:446;;;;;:::o;16687:1466::-;16793:26;17068:12;17083:8;:15;17068:30;;17108:12;17130:1;17123:4;:8;;;;;;;;17108:23;;17167:4;17150:22;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17141:31;;17254:25;17282:16;17286:4;17292:5;17282:3;:16::i;:::-;17254:44;;17309:29;17355:4;17341:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;17341:19:5;;;;17309:51;;17375:9;17387:1;17375:13;;17370:777;17394:1;17390;:5;17370:777;;;17421:9;17433:1;17421:13;;17416:148;17440:4;17436:1;:8;17416:148;;;17487:8;17509:4;17504:1;17497:4;:8;17496:17;;;;;;;;17487:27;;;;;;;;;;;;;;;;;;17515:1;17487:30;;;;;;;;;;;;;17469:12;17482:1;17469:15;;;;;;;;;;;;;;;;;:48;;;;;17446:3;;;;;;;17416:148;;;;17593:17;17597:12;17593:3;:17::i;:::-;17578:32;;17624:28;17669:4;17655:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17624:50;;17688:20;17711:1;17688:24;;17741:18;:12;:16;:18::i;:::-;17726:33;;17778:9;17790:1;17778:13;;17773:203;17797:4;17793:1;:8;17773:203;;;17855:106;17859:87;17863:33;17867:8;17876:1;17867:11;;;;;;;;;;;;;;;;;;17880:12;17893:1;17880:15;;;;;;;;;;;;;;;;;;17863:3;:33::i;:::-;17898:47;17902:8;17915:4;17911:1;:8;17902:18;;;;;;;;;;;;;;;;;;17922:12;17939:4;17935:1;:8;17922:22;;;;;;;;;;;;;;;;;;17898:3;:47::i;:::-;17859:3;:87::i;:::-;17948:12;17855:3;:106::i;:::-;17838:11;17850:1;17838:14;;;;;;;;;;;;;;;;;:123;;;;17803:3;;;;;;;17773:203;;;;18004:22;18008:11;18021:4;18004:3;:22::i;:::-;17990:36;;18045:9;18057:1;18045:13;;18040:97;18064:4;18060:1;:8;18040:97;;;18108:11;18120:1;18108:14;;;;;;;;;;;;;;;;;;18093:6;18100:1;18093:9;;;;;;;;;;;;;;;;;;18103:1;18093:12;;;;;;;;;;;;:29;;;;18070:3;;;;;;;18040:97;;;;17370:777;;17397:3;;;;;;;17370:777;;;;16687:1466;;;;;;;;:::o;954:95:3:-;1001:7;1041:1;110:77;1027:15;1020:22;;954:95;;;:::o;25223:236:5:-;25276:24;;:::i;:::-;25324:1;25312:6;25319:1;25312:9;;;;;;;;;;;;:13;;;;;25347:4;25335:6;25342:1;25335:9;;;;;;;;;;;;:16;;;;;25366:9;25378:1;25366:13;;25361:92;162:2;25381:1;:5;25361:92;;;25419:23;25437:4;25419:6;25430:1;25426;:5;25419:13;;;;;;;;;;;;;:17;;:23;;;;:::i;:::-;25407:6;25414:1;25407:9;;;;;;;;;;;;:35;;;;;25388:3;;;;;;;25361:92;;;;25223:236;;;:::o;1055:580:3:-;1123:14;1149:13;110:77;1149:27;;1224:4;1218:11;1252:4;1249:1;1242:15;1291:4;1284;1281:1;1277:12;1270:26;1330:4;1323;1320:1;1316:12;1309:26;1369:4;1362;1359:1;1355:12;1348:26;1408:8;1401:4;1398:1;1394:12;1387:30;1451:5;1444:4;1441:1;1437:12;1430:27;1514:4;1511:1;1505:4;1502:1;1496:4;1491:3;1480:39;1473:47;1470:2;;;1572:1;1569;1562:12;1470:2;1617:1;1611:8;1601:18;;1195:434;;;;;;:::o;367:116::-;425:7;110:77;451:25;;;;;;;461:1;458;451:25;444:32;;367:116;;;;:::o;24630:180:5:-;24695:14;24726:9;24738:1;24726:13;;24721:83;162:2;24741:1;:5;24721:83;;;24776:17;24787:2;24790:1;24787:5;;;;;;;;;;;;;24776:6;:10;;:17;;;;:::i;:::-;24767:26;;24748:3;;;;;;;24721:83;;;;24630:180;;;:::o;28448:181::-;28520:14;;:::i;:::-;28553:69;229:77;28596:5;28603:1;28579:26;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;28579:26:5;;;28569:37;;;;;;28561:46;;;:60;;;;;;;;28553:7;:69::i;:::-;28546:76;;28448:181;;;;:::o;26880:::-;26934:14;;:::i;:::-;26967:47;;;;;;;;;26975:1;:3;;;26967:47;;;;229:77;26995:1;:3;;;:17;;;;;;;;229:77;26980:33;26967:47;;;26960:54;;26880:181;;;:::o;24403:221::-;24490:24;;:::i;:::-;24531:9;24543:1;24531:13;;24526:92;162:2;24546:1;:5;24526:92;;;24584:23;24588:2;24591:1;24588:5;;;;;;;;;;;;;;;;;;24595:11;:2;24598:1;24595:5;;;;;;;;;;;;;:9;:11::i;:::-;24584:3;:23::i;:::-;24572:6;24579:1;24572:9;;;;;;;;;;;;:35;;;;24553:3;;;;;;;24526:92;;;;24403:221;;;;:::o;25465:192::-;25535:24;;:::i;:::-;25576:9;25588:1;25576:13;;25571:80;162:2;25591:1;:5;25571:80;;;25629:11;25638:1;25629;25631;25629:4;;;;;;;;;;;;;:8;;:11;;;;:::i;:::-;25617:6;25624:1;25617:9;;;;;;;;;;;;:23;;;;;25598:3;;;;;;;25571:80;;;;25465:192;;;;:::o;24187:210::-;24272:24;;:::i;:::-;24313:9;24325:1;24313:13;;24308:83;162:2;24328:1;:5;24308:83;;;24366:14;24375:1;24377;24375:4;;;;;;;;;;;;;24366:1;24368;24366:4;;;;;;;;;;;;;:8;;:14;;;;:::i;:::-;24354:6;24361:1;24354:9;;;;;;;;;;;;:26;;;;;24335:3;;;;;;;24308:83;;;;24187:210;;;;:::o;24816:177::-;24879:18;;:::i;:::-;24914:9;24926:1;24914:13;;24909:78;162:2;24929:1;:5;24909:78;;;24961:15;24965:3;24970:2;24973:1;24970:5;;;;;;;;;;;;;;;;;;24961:3;:15::i;:::-;24955:21;;24936:3;;;;;;;24909:78;;;;24816:177;;;:::o;24999:218::-;25082:21;;:::i;:::-;25120:9;25132:1;25120:13;;25115:96;162:2;25135:1;:5;25115:96;;;25170:30;25174:6;25182:17;25186:2;25189:1;25186:5;;;;;;;;;;;;;25193:2;25196:1;25193:5;;;;;;;;;;;;;25182:3;:17::i;:::-;25170:3;:30::i;:::-;25161:39;;25142:3;;;;;;;25115:96;;;;24999:218;;;;:::o;611:103:3:-;658:7;684:23;688:1;705;110:77;691:15;684:3;:23::i;:::-;677:30;;611:103;;;:::o;15782:899:5:-;15908:23;16093:12;16124:8;16114:7;:18;16108:1;:25;16093:40;;16191:4;16177:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;16177:19:5;;;;16168:28;;16222:8;16211:7;:19;16207:94;;;16258:5;16246:6;16253:1;16246:9;;;;;;;;;;;;;;;;;:17;;;;;16284:6;16277:13;;;;;16207:94;16330:1;16320:7;:11;16310:21;;16342;16366:68;16387:8;16397:7;16406:24;16416:1;16418:7;16416:10;;;;;;;;;;;;;;;;;;16427:1;16416:13;;;;;;;;;;;;;16406:5;:9;;:24;;;;:::i;:::-;16432:1;16366:20;:68::i;:::-;16342:92;;16444:22;16469:68;16490:8;16500:7;16509:24;16519:1;16521:7;16519:10;;;;;;;;;;;;;;;;;;16530:1;16519:13;;;;;;;;;;;;;16509:5;:9;;:24;;;;:::i;:::-;16535:1;16469:20;:68::i;:::-;16444:93;;16552:9;16564:1;16552:13;;16547:128;16578:1;16571:4;:8;;;;;;;;16567:1;:12;16547:128;;;16612:4;16617:1;16612:7;;;;;;;;;;;;;;;;;;16600:6;16607:1;16600:9;;;;;;;;;;;;;;;;;:19;;;;;16656:5;16662:1;16656:8;;;;;;;;;;;;;;;;;;16633:6;16651:1;16644:4;:8;;;;;;;;16640:1;:12;16633:20;;;;;;;;;;;;;;;;;:31;;;;;16581:3;;;;;;;16547:128;;;;15782:899;;;;;;;;;;:::o;18159:997::-;18233:23;18268:12;18283:5;:12;18268:27;;18317:1;18309:4;:9;18305:52;;;18341:5;18334:12;;;;;18305:52;18386:1;18381;18374:4;:8;;;;;;;;:13;18366:57;;;;;;;;;;;;;;;;;;;;;;;;18434:13;18450:23;18468:4;18460:5;:12;;;;;;;;337:76;18450:9;;:23;;;;:::i;:::-;18434:39;;18483:20;18506:1;18483:24;;18521:7;18517:87;;;18552:11;:5;:9;:11::i;:::-;18544:19;;18592:1;18577:16;;18517:87;18628:18;:12;:16;:18::i;:::-;18613:33;;18656:21;18680:31;18684:17;18692:5;18699:1;18684:7;:17::i;:::-;18703:7;18680:3;:31::i;:::-;18656:55;;18721:20;18744:31;18748:17;18756:5;18763:1;18748:7;:17::i;:::-;18767:7;18744:3;:31::i;:::-;18721:54;;18785:17;18805:1;18785:21;;18839:4;18825:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18816:28;;18859:9;18871:1;18859:13;;18854:296;18885:1;18878:4;:8;;;;;;;;18874:1;:12;18854:296;;;18907:19;;:::i;:::-;18929:22;18933:3;18937:1;18933:6;;;;;;;;;;;;;;;;;;18941:9;18929:3;:22::i;:::-;18907:44;;18977:37;18981:18;18985:4;18990:1;18985:7;;;;;;;;;;;;;;;;;;18994:4;18981:3;:18::i;:::-;19001:12;18977:3;:37::i;:::-;18965:6;18972:1;18965:9;;;;;;;;;;;;;;;;;:49;;;;19051:42;19055:23;19059:4;19064:1;19059:7;;;;;;;;;;;;;;;;;;19068:9;19072:4;19068:3;:9::i;:::-;19055:3;:23::i;:::-;19080:12;19051:3;:42::i;:::-;19028:6;19046:1;19039:4;:8;;;;;;;;19035:1;:12;19028:20;;;;;;;;;;;;;;;;;:65;;;;19119:20;19133:5;19119:9;:13;;:20;;;;:::i;:::-;19107:32;;18854:296;18888:3;;;;;;;18854:296;;;;18159:997;;;;;;;;;;;:::o;19444:739::-;19504:23;19539:12;19554:5;:12;19539:27;;19588:1;19580:4;:9;19576:52;;;19612:5;19605:12;;;;;19576:52;19657:1;19652;19645:4;:8;;;;;;;;:13;19637:57;;;;;;;;;;;;;;;;;;;;;;;;19705:13;19721:23;19739:4;19731:5;:12;;;;;;;;337:76;19721:9;;:23;;;;:::i;:::-;19705:39;;19754:21;19778:22;19782:17;19790:5;19797:1;19782:7;:17::i;:::-;19778:3;:22::i;:::-;19754:46;;19810:20;19833:22;19837:17;19845:5;19852:1;19837:7;:17::i;:::-;19833:3;:22::i;:::-;19810:45;;19865:17;19885:1;19865:21;;19919:4;19905:19;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19905:19:5;;;;19896:28;;19939:9;19951:1;19939:13;;19934:243;19965:1;19958:4;:8;;;;;;;;19954:1;:12;19934:243;;;19987:12;20002:21;20013:9;20002:3;20006:1;20002:6;;;;;;;;;;;;;;;;;;:10;;:21;;;;:::i;:::-;19987:36;;20049:17;20061:4;20049;20054:1;20049:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;20037:6;20044:1;20037:9;;;;;;;;;;;;;;;;;:29;;;;;20103:17;20115:4;20103;20108:1;20103:7;;;;;;;;;;;;;;;;;;:11;;:17;;;;:::i;:::-;20080:6;20098:1;20091:4;:8;;;;;;;;20087:1;:12;20080:20;;;;;;;;;;;;;;;;;:40;;;;;20146:20;20160:5;20146:9;:13;;:20;;;;:::i;:::-;20134:32;;19934:243;19968:3;;;;;;;19934:243;;;;19444:739;;;;;;;;;:::o;27820:449::-;27874:14;;:::i;:::-;27900:9;27919:311;27926:4;27919:311;;;27946:16;27985:1;27965:17;27974:4;27980:1;27965:8;:17::i;:::-;:21;27946:40;;28072:41;28081:8;28111:1;28106;229:77;28092:15;28091:21;;;;;;;;28072:8;:41::i;:::-;28068:45;;28149:8;28131:14;28140:1;28143;28131:8;:14::i;:::-;:26;28127:70;;;28177:5;;;28127:70;28218:1;28210:9;;;;27919:311;;;;28246:16;;;;;;;;;28254:4;28246:16;;;;28260:1;28246:16;;;28239:23;;;27820:449;;;:::o;19162:276::-;19242:23;19315:1;19300:5;:12;:16;;;;;;;;19286:31;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;19277:40;;19332:9;19344:1;19332:13;;19327:105;19366:1;19351:5;:12;:16;;;;;;;;19347:1;:20;19327:105;;;19400:5;19414:6;19410:1;19406;:5;:14;19400:21;;;;;;;;;;;;;;;;;;19388:6;19395:1;19388:9;;;;;;;;;;;;;;;;;:33;;;;19369:3;;;;;;;19327:105;;;;19162:276;;;;:::o;20189:::-;20269:23;20342:1;20327:5;:12;:16;;;;;;;;20313:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;20313:31:5;;;;20304:40;;20359:9;20371:1;20359:13;;20354:105;20393:1;20378:5;:12;:16;;;;;;;;20374:1;:20;20354:105;;;20427:5;20441:6;20437:1;20433;:5;:14;20427:21;;;;;;;;;;;;;;;;;;20415:6;20422:1;20415:9;;;;;;;;;;;;;;;;;:33;;;;;20396:3;;;;;;;20354:105;;;;20189:276;;;;:::o;27204:610::-;27277:14;27328:13;229:77;27328:27;;27403:4;27397:11;27431:4;27428:1;27421:15;27470:4;27463;27460:1;27456:12;27449:26;27509:4;27502;27499:1;27495:12;27488:26;27548:4;27541;27538:1;27534:12;27527:26;27587:8;27580:4;27577:1;27573:12;27566:30;27630:5;27623:4;27620:1;27616:12;27609:27;27693:4;27690:1;27684:4;27681:1;27675:4;27670:3;27659:39;27652:47;27649:2;;;27751:1;27748;27741:12;27649:2;27796:1;27790:8;27780:18;;27374:434;;;;;;:::o;81:28550::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28550:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28550:5;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28550:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28550:5;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;81:28550:5;;;;:::o;26:764:-1:-;;162:3;155:4;147:6;143:17;139:27;132:35;129:2;;;180:1;177;170:12;129:2;217:6;204:20;239:99;254:83;330:6;254:83;;;239:99;;;230:108;;355:5;380:6;373:5;366:21;410:4;402:6;398:17;388:27;;432:4;427:3;423:14;416:21;;485:6;532:3;524:4;516:6;512:17;507:3;503:27;500:36;497:2;;;549:1;546;539:12;497:2;574:1;559:225;584:6;581:1;578:13;559:225;;;642:3;664:56;716:3;704:10;664:56;;;659:3;652:69;744:4;739:3;735:14;728:21;;772:4;767:3;763:14;756:21;;616:168;606:1;603;599:9;594:14;;559:225;;;563:14;122:668;;;;;;;;817:607;;928:3;921:4;913:6;909:17;905:27;898:35;895:2;;;946:1;943;936:12;895:2;970:3;988:74;1003:58;1054:6;1003:58;;;988:74;;;979:83;;1079:5;1138:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:2;;;1202:1;1199;1192:12;1150:2;1227:1;1212:206;1237:6;1234:1;1231:13;1212:206;;;1295:3;1317:37;1350:3;1338:10;1317:37;;;1312:3;1305:50;1378:4;1373:3;1369:14;1362:21;;1406:4;1401:3;1397:14;1390:21;;1269:149;1259:1;1256;1252:9;1247:14;;1212:206;;;1216:14;888:536;;;;;;;;1451:615;;1566:3;1559:4;1551:6;1547:17;1543:27;1536:35;1533:2;;;1584:1;1581;1574:12;1533:2;1608:3;1626:78;1641:62;1696:6;1641:62;;;1626:78;;;1617:87;;1721:5;1780:6;1827:3;1819:4;1811:6;1807:17;1802:3;1798:27;1795:36;1792:2;;;1844:1;1841;1834:12;1792:2;1869:1;1854:206;1879:6;1876:1;1873:13;1854:206;;;1937:3;1959:37;1992:3;1980:10;1959:37;;;1954:3;1947:50;2020:4;2015:3;2011:14;2004:21;;2048:4;2043:3;2039:14;2032:21;;1911:149;1901:1;1898;1894:9;1889:14;;1854:206;;;1858:14;1526:540;;;;;;;;2074:118;;2141:46;2179:6;2166:20;2141:46;;;2132:55;;2126:66;;;;;2200:440;;2301:3;2294:4;2286:6;2282:17;2278:27;2271:35;2268:2;;;2319:1;2316;2309:12;2268:2;2356:6;2343:20;2378:64;2393:48;2434:6;2393:48;;;2378:64;;;2369:73;;2462:6;2455:5;2448:21;2498:4;2490:6;2486:17;2531:4;2524:5;2520:16;2566:3;2557:6;2552:3;2548:16;2545:25;2542:2;;;2583:1;2580;2573:12;2542:2;2593:41;2627:6;2622:3;2617;2593:41;;;2261:379;;;;;;;;2648:118;;2715:46;2753:6;2740:20;2715:46;;;2706:55;;2700:66;;;;;2773:2013;;;;;;;;;3227:3;3215:9;3206:7;3202:23;3198:33;3195:2;;;3244:1;3241;3234:12;3195:2;3307:1;3296:9;3292:17;3279:31;3330:18;3322:6;3319:30;3316:2;;;3362:1;3359;3352:12;3316:2;3382:97;3471:7;3462:6;3451:9;3447:22;3382:97;;;3372:107;;3258:227;3544:2;3533:9;3529:18;3516:32;3568:18;3560:6;3557:30;3554:2;;;3600:1;3597;3590:12;3554:2;3620:97;3709:7;3700:6;3689:9;3685:22;3620:97;;;3610:107;;3495:228;3782:2;3771:9;3767:18;3754:32;3806:18;3798:6;3795:30;3792:2;;;3838:1;3835;3828:12;3792:2;3858:97;3947:7;3938:6;3927:9;3923:22;3858:97;;;3848:107;;3733:228;3992:2;4010:76;4078:7;4069:6;4058:9;4054:22;4010:76;;;4000:86;;3971:121;4151:3;4140:9;4136:19;4123:33;4176:18;4168:6;4165:30;4162:2;;;4208:1;4205;4198:12;4162:2;4228:97;4317:7;4308:6;4297:9;4293:22;4228:97;;;4218:107;;4102:229;4362:3;4381:53;4426:7;4417:6;4406:9;4402:22;4381:53;;;4371:63;;4341:99;4471:3;4490:76;4558:7;4549:6;4538:9;4534:22;4490:76;;;4480:86;;4450:122;4631:3;4620:9;4616:19;4603:33;4656:18;4648:6;4645:30;4642:2;;;4688:1;4685;4678:12;4642:2;4708:62;4762:7;4753:6;4742:9;4738:22;4708:62;;;4698:72;;4582:194;3189:1597;;;;;;;;;;;;4794:259;;4922:91;5009:3;5002:5;4922:91;;;5042:4;5037:3;5033:14;5019:28;;4915:138;;;;;5138:743;5309:69;5372:5;5309:69;;;5391:105;5489:6;5484:3;5391:105;;;5384:112;;5516:71;5581:5;5516:71;;;5608:1;5593:276;5618:6;5615:1;5612:13;5593:276;;;5665:105;5766:3;5757:6;5751:13;5665:105;;;5658:112;;5787:75;5855:6;5787:75;;;5777:85;;5640:1;5637;5633:9;5628:14;;5593:276;;;5597:14;5288:593;;;;;5964:773;;6147:71;6212:5;6147:71;;;6231:107;6331:6;6326:3;6231:107;;;6224:114;;6358:73;6425:5;6358:73;;;6452:1;6437:278;6462:6;6459:1;6456:13;6437:278;;;6509:105;6610:3;6601:6;6595:13;6509:105;;;6502:112;;6631:77;6701:6;6631:77;;;6621:87;;6484:1;6481;6477:9;6472:14;;6437:278;;;6441:14;6728:3;6721:10;;6126:611;;;;;;;6745:111;6822:28;6844:5;6822:28;;;6817:3;6810:41;6804:52;;;6863:360;;6993:39;7026:5;6993:39;;;7044:89;7126:6;7121:3;7044:89;;;7037:96;;7138:52;7183:6;7178:3;7171:4;7164:5;7160:16;7138:52;;;7211:6;7206:3;7202:16;7195:23;;6973:250;;;;;;7231:364;;7391:67;7455:2;7450:3;7391:67;;;7384:74;;7491:66;7487:1;7482:3;7478:11;7471:87;7586:2;7581:3;7577:12;7570:19;;7377:218;;;;7604:465;;7764:67;7828:2;7823:3;7764:67;;;7757:74;;7864:66;7860:1;7855:3;7851:11;7844:87;7965:66;7960:2;7955:3;7951:12;7944:88;8060:2;8055:3;8051:12;8044:19;;7750:319;;;;8078:364;;8238:67;8302:2;8297:3;8238:67;;;8231:74;;8338:66;8334:1;8329:3;8325:11;8318:87;8433:2;8428:3;8424:12;8417:19;;8224:218;;;;8451:364;;8611:67;8675:2;8670:3;8611:67;;;8604:74;;8711:66;8707:1;8702:3;8698:11;8691:87;8806:2;8801:3;8797:12;8790:19;;8597:218;;;;8824:364;;8984:67;9048:2;9043:3;8984:67;;;8977:74;;9084:66;9080:1;9075:3;9071:11;9064:87;9179:2;9174:3;9170:12;9163:19;;8970:218;;;;9197:465;;9357:67;9421:2;9416:3;9357:67;;;9350:74;;9457:66;9453:1;9448:3;9444:11;9437:87;9558:66;9553:2;9548:3;9544:12;9537:88;9653:2;9648:3;9644:12;9637:19;;9343:319;;;;9739:450;9868:4;9863:3;9859:14;9947:3;9940:5;9936:15;9930:22;9958:61;10014:3;10009;10005:13;9992:11;9958:61;;;9888:137;10094:4;10087:5;10083:16;10077:23;10106:62;10162:4;10157:3;10153:14;10140:11;10106:62;;;10035:139;9841:348;;;;10265:460;10404:4;10399:3;10395:14;10483:3;10476:5;10472:15;10466:22;10494:61;10550:3;10545;10541:13;10528:11;10494:61;;;10424:137;10630:4;10623:5;10619:16;10613:23;10642:62;10698:4;10693:3;10689:14;10676:11;10642:62;;;10571:139;10377:348;;;;10732:110;10805:31;10830:5;10805:31;;;10800:3;10793:44;10787:55;;;10849:120;10932:31;10957:5;10932:31;;;10927:3;10920:44;10914:55;;;10976:159;11077:52;11097:31;11122:5;11097:31;;;11077:52;;;11072:3;11065:65;11059:76;;;11142:405;;11316:95;11407:3;11398:6;11316:95;;;11309:102;;11422:75;11493:3;11484:6;11422:75;;;11519:2;11514:3;11510:12;11503:19;;11539:3;11532:10;;11297:250;;;;;;11554:1759;;12210:3;12199:9;12195:19;12187:27;;12261:9;12255:4;12251:20;12247:1;12236:9;12232:17;12225:47;12286:146;12427:4;12418:6;12286:146;;;12278:154;;12480:9;12474:4;12470:20;12465:2;12454:9;12450:18;12443:48;12505:146;12646:4;12637:6;12505:146;;;12497:154;;12699:9;12693:4;12689:20;12684:2;12673:9;12669:18;12662:48;12724:146;12865:4;12856:6;12724:146;;;12716:154;;12881:118;12995:2;12984:9;12980:18;12971:6;12881:118;;;13048:9;13042:4;13038:20;13032:3;13021:9;13017:19;13010:49;13073:146;13214:4;13205:6;13073:146;;;13065:154;;13230:73;13298:3;13287:9;13283:19;13274:6;13230:73;;;12181:1132;;;;;;;;;;13320:201;;13432:2;13421:9;13417:18;13409:26;;13446:65;13508:1;13497:9;13493:17;13484:6;13446:65;;;13403:118;;;;;13528:407;;13719:2;13708:9;13704:18;13696:26;;13769:9;13763:4;13759:20;13755:1;13744:9;13740:17;13733:47;13794:131;13920:4;13794:131;;;13786:139;;13690:245;;;;13942:407;;14133:2;14122:9;14118:18;14110:26;;14183:9;14177:4;14173:20;14169:1;14158:9;14154:17;14147:47;14208:131;14334:4;14208:131;;;14200:139;;14104:245;;;;14356:407;;14547:2;14536:9;14532:18;14524:26;;14597:9;14591:4;14587:20;14583:1;14572:9;14568:17;14561:47;14622:131;14748:4;14622:131;;;14614:139;;14518:245;;;;14770:407;;14961:2;14950:9;14946:18;14938:26;;15011:9;15005:4;15001:20;14997:1;14986:9;14982:17;14975:47;15036:131;15162:4;15036:131;;;15028:139;;14932:245;;;;15184:407;;15375:2;15364:9;15360:18;15352:26;;15425:9;15419:4;15415:20;15411:1;15400:9;15396:17;15389:47;15450:131;15576:4;15450:131;;;15442:139;;15346:245;;;;15598:407;;15789:2;15778:9;15774:18;15766:26;;15839:9;15833:4;15829:20;15825:1;15814:9;15810:17;15803:47;15864:131;15990:4;15864:131;;;15856:139;;15760:245;;;;16012:213;;16130:2;16119:9;16115:18;16107:26;;16144:71;16212:1;16201:9;16197:17;16188:6;16144:71;;;16101:124;;;;;16232:493;;16462:3;16451:9;16447:19;16439:27;;16477:71;16545:1;16534:9;16530:17;16521:6;16477:71;;;16559:156;16711:2;16700:9;16696:18;16687:6;16559:156;;;16433:292;;;;;;16732:2899;;17778:3;17767:9;17763:19;17755:27;;17793:71;17861:1;17850:9;17846:17;17837:6;17793:71;;;17912:9;17906:4;17902:20;17897:2;17886:9;17882:18;17875:48;17937:146;18078:4;18069:6;17937:146;;;17929:154;;18131:9;18125:4;18121:20;18116:2;18105:9;18101:18;18094:48;18156:146;18297:4;18288:6;18156:146;;;18148:154;;18350:9;18344:4;18340:20;18335:2;18324:9;18320:18;18313:48;18375:146;18516:4;18507:6;18375:146;;;18367:154;;18570:9;18564:4;18560:20;18554:3;18543:9;18539:19;18532:49;18595:146;18736:4;18727:6;18595:146;;;18587:154;;18790:9;18784:4;18780:20;18774:3;18763:9;18759:19;18752:49;18815:146;18956:4;18947:6;18815:146;;;18807:154;;19010:9;19004:4;19000:20;18994:3;18983:9;18979:19;18972:49;19035:146;19176:4;19167:6;19035:146;;;19027:154;;19230:9;19224:4;19220:20;19214:3;19203:9;19199:19;19192:49;19255:146;19396:4;19387:6;19255:146;;;19247:154;;19450:9;19444:4;19440:20;19434:3;19423:9;19419:19;19412:49;19475:146;19616:4;19607:6;19475:146;;;19467:154;;17749:1882;;;;;;;;;;;;;19638:620;;19904:3;19893:9;19889:19;19881:27;;19919:71;19987:1;19976:9;19972:17;19963:6;19919:71;;;20001:118;20115:2;20104:9;20100:18;20091:6;20001:118;;;20130;20244:2;20233:9;20229:18;20220:6;20130:118;;;19875:383;;;;;;;20265:1028;;20679:3;20668:9;20664:19;20656:27;;20694:71;20762:1;20751:9;20747:17;20738:6;20694:71;;;20776:118;20890:2;20879:9;20875:18;20866:6;20776:118;;;20905;21019:2;21008:9;21004:18;20995:6;20905:118;;;21034:119;21148:3;21137:9;21133:19;21124:6;21034:119;;;21164;21278:3;21267:9;21263:19;21254:6;21164:119;;;20650:643;;;;;;;;;21300:1844;;22010:3;21999:9;21995:19;21987:27;;22025:71;22093:1;22082:9;22078:17;22069:6;22025:71;;;22107:118;22221:2;22210:9;22206:18;22197:6;22107:118;;;22236;22350:2;22339:9;22335:18;22326:6;22236:118;;;22365:119;22479:3;22468:9;22464:19;22455:6;22365:119;;;22495;22609:3;22598:9;22594:19;22585:6;22495:119;;;22625;22739:3;22728:9;22724:19;22715:6;22625:119;;;22755;22869:3;22858:9;22854:19;22845:6;22755:119;;;22885;22999:3;22988:9;22984:19;22975:6;22885:119;;;23015;23129:3;23118:9;23114:19;23105:6;23015:119;;;21981:1163;;;;;;;;;;;;;23151:2048;;23935:3;23924:9;23920:19;23912:27;;23950:71;24018:1;24007:9;24003:17;23994:6;23950:71;;;24032:118;24146:2;24135:9;24131:18;24122:6;24032:118;;;24161;24275:2;24264:9;24260:18;24251:6;24161:118;;;24290:119;24404:3;24393:9;24389:19;24380:6;24290:119;;;24420;24534:3;24523:9;24519:19;24510:6;24420:119;;;24550;24664:3;24653:9;24649:19;24640:6;24550:119;;;24680;24794:3;24783:9;24779:19;24770:6;24680:119;;;24810;24924:3;24913:9;24909:19;24900:6;24810:119;;;24940;25054:3;25043:9;25039:19;25030:6;24940:119;;;25070;25184:3;25173:9;25169:19;25160:6;25070:119;;;23906:1293;;;;;;;;;;;;;;25206:256;;25268:2;25262:9;25252:19;;25306:4;25298:6;25294:17;25405:6;25393:10;25390:22;25369:18;25357:10;25354:34;25351:62;25348:2;;;25426:1;25423;25416:12;25348:2;25446:10;25442:2;25435:22;25246:216;;;;;25469:277;;25647:18;25639:6;25636:30;25633:2;;;25679:1;25676;25669:12;25633:2;25708:4;25700:6;25696:17;25688:25;;25736:4;25730;25726:15;25718:23;;25570:176;;;;25753:229;;25906:18;25898:6;25895:30;25892:2;;;25938:1;25935;25928:12;25892:2;25967:4;25959:6;25955:17;25947:25;;25829:153;;;;25989:233;;26146:18;26138:6;26135:30;26132:2;;;26178:1;26175;26168:12;26132:2;26207:4;26199:6;26195:17;26187:25;;26069:153;;;;26229:258;;26372:18;26364:6;26361:30;26358:2;;;26404:1;26401;26394:12;26358:2;26448:4;26444:9;26437:4;26429:6;26425:17;26421:33;26413:41;;26477:4;26471;26467:15;26459:23;;26295:192;;;;26496:125;;26608:6;26597:17;;26589:32;;;;26632:138;;26758:4;26750:6;26746:17;26735:28;;26727:43;;;;26779:113;;26884:3;26874:13;;26868:24;;;;26899:124;;27012:5;27006:12;26996:22;;26990:33;;;;27030:92;;27111:5;27105:12;27095:22;;27089:33;;;;27130:137;;27256:4;27248:6;27244:17;27233:28;;27226:41;;;;27276:139;;27404:4;27396:6;27392:17;27381:28;;27374:41;;;;27424:161;;27576:3;27561:18;;27554:31;;;;;27594:199;;27745:6;27740:3;27733:19;27782:4;27777:3;27773:14;27758:29;;27726:67;;;;;27802:163;;27917:6;27912:3;27905:19;27954:4;27949:3;27945:14;27930:29;;27898:67;;;;;27974:145;;28110:3;28095:18;;28088:31;;;;;28127:92;;28207:5;28200:13;28193:21;28182:32;;28176:43;;;;28226:79;;28295:5;28284:16;;28278:27;;;;28312:79;;28381:5;28370:16;;28364:27;;;;28398:79;;28467:5;28456:16;;28450:27;;;;28485:145;28566:6;28561:3;28556;28543:30;28622:1;28613:6;28608:3;28604:16;28597:27;28536:94;;;;28639:268;28704:1;28711:101;28725:6;28722:1;28719:13;28711:101;;;28801:1;28796:3;28792:11;28786:18;28782:1;28777:3;28773:11;28766:39;28747:2;28744:1;28740:10;28735:15;;28711:101;;;28827:6;28824:1;28821:13;28818:2;;;28892:1;28883:6;28878:3;28874:16;28867:27;28818:2;28688:219;;;;;28915:74;;28979:5;28968:16;;28962:27;;;",
  "source": "pragma solidity 0.5.4;\npragma experimental ABIEncoderV2;\n\nimport \"./Utils.sol\";\n\ncontract ZetherVerifier {\n    using Utils for uint256;\n\n    uint256 constant m = 64;\n    uint256 constant n = 6;\n    uint256 constant FIELD_ORDER = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\n    uint256 constant UNITY = 9334303377689037989442018753807510978357674015322511348041267794643984346845; // primitive 2^28th root of unity modulo GROUP_ORDER (not field!)\n\n    G1Point[] gs; // warning: this and the below are not statically sized anymore\n    G1Point[] hs; // need to push to these if large anonsets are used.\n    G1Point g;\n    G1Point h;\n\n    struct ZetherStatement {\n        G1Point[] CLn;\n        G1Point[] CRn;\n        G1Point[] C;\n        G1Point D;\n        G1Point[] y;\n        uint256 epoch; // or uint8?\n        G1Point u;\n    }\n\n    struct ZetherProof {\n        G1Point A;\n        G1Point S;\n        G1Point P;\n        G1Point Q;\n        G1Point U;\n        G1Point V;\n        G1Point X;\n        G1Point Y;\n\n        G1Point[] CLnG;\n        G1Point[] CRnG;\n        G1Point[] C_0G;\n        G1Point[] y_0G;\n        G1Point[] C_XG;\n        G1Point[] y_XG;\n        G1Point[] DG;\n        G1Point[] gG;\n\n        uint256[] f;\n        uint256 z_P;\n        uint256 z_U;\n        uint256 z_X;\n\n        G1Point CPrime;\n        G1Point DPrime;\n        G1Point CLnPrime;\n        G1Point CRnPrime;\n\n        G1Point[2] tCommits;\n        uint256 tHat;\n        uint256 tauX;\n        uint256 mu;\n\n        uint256 c;\n        uint256 s_sk;\n        uint256 s_r;\n        uint256 s_vTransfer;\n        uint256 s_vDiff;\n        uint256 s_nuTransfer;\n        uint256 s_nuDiff;\n\n        InnerProductProof ipProof;\n    }\n\n    struct SigmaProof {\n        uint256 c;\n        uint256 sX;\n        uint256 sR;\n    }\n\n    struct InnerProductProof {\n        G1Point[n] ls;\n        G1Point[n] rs;\n        uint256 a;\n        uint256 b;\n    }\n\n    constructor() public {\n        g = mapInto(\"G\");\n        h = mapInto(\"V\");\n        for (uint256 i = 0; i < m; i++) {\n            gs.push(mapInto(\"G\", i));\n            hs.push(mapInto(\"H\", i));\n        }\n    }\n\n    function verifyTransfer(bytes32[2][] memory CLn, bytes32[2][] memory CRn, bytes32[2][] memory C, bytes32[2] memory D, bytes32[2][] memory y, uint256 epoch, bytes32[2] memory u, bytes memory proof) view public returns (bool) {\n        ZetherStatement memory statement;\n        uint256 size = y.length;\n\n        statement.CLn = new G1Point[](size);\n        statement.CRn = new G1Point[](size);\n        statement.C = new G1Point[](size);\n        statement.y = new G1Point[](size);\n        for (uint256 i = 0; i < size; i++) {\n            statement.CLn[i] = G1Point(uint256(CLn[i][0]), uint256(CLn[i][1]));\n            statement.CRn[i] = G1Point(uint256(CRn[i][0]), uint256(CRn[i][1]));\n            statement.C[i] = G1Point(uint256(C[i][0]), uint256(C[i][1]));\n            statement.y[i] = G1Point(uint256(y[i][0]), uint256(y[i][1]));\n        }\n        statement.D = G1Point(uint256(D[0]), uint256(D[1]));\n        statement.epoch = epoch;\n        statement.u = G1Point(uint256(u[0]), uint256(u[1]));\n        ZetherProof memory zetherProof = unserialize(proof);\n        return verify(statement, zetherProof);\n    }\n\n    struct ZetherAuxiliaries {\n        uint256 y;\n        uint256[m] ys;\n        uint256 z;\n        uint256[2] zs; // [z^2, z^3]\n        uint256[m] twoTimesZSquared;\n        uint256 zSum;\n        uint256 x;\n        uint256 t;\n        uint256 k;\n        G1Point tEval;\n    }\n\n    struct SigmaAuxiliaries {\n        uint256 c;\n        G1Point A_y;\n        G1Point A_D;\n        G1Point gEpoch;\n        G1Point A_u;\n        G1Point A_B;\n        G1Point A_X;\n        G1Point c_commit;\n        G1Point A_t;\n        G1Point A_C0;\n        G1Point A_CLn;\n        G1Point A_CPrime;\n        G1Point A_CLnPrime;\n    }\n\n    struct AnonAuxiliaries {\n        uint256 m;\n        uint256 N;\n        uint256 d;\n        uint256 w;\n        uint256 dPow;\n        uint256 wPow;\n        uint256[2][] f; // could just allocate extra space in the proof?\n        uint256[2][] poly; // each poly is an array of length N * 2.\n        G1Point temp;\n        G1Point CLnR;\n        G1Point CRnR;\n        G1Point[2][] CR;\n        G1Point[2][] yR;\n        G1Point C_XR;\n        G1Point y_XR;\n        G1Point gR;\n        G1Point DR;\n    }\n\n    struct IPAuxiliaries {\n        G1Point u_x;\n        G1Point[m] hPrimes;\n        uint256[m] hExp;\n        G1Point P;\n        uint256 o;\n        uint256[n] challenges;\n        uint256[m] otherExponents;\n    }\n\n    function verify(ZetherStatement memory statement, ZetherProof memory proof) view internal returns (bool) {\n        uint256 statementHash = uint256(keccak256(abi.encode(statement.CLn, statement.CRn, statement.C, statement.D, statement.y, statement.epoch))).mod();\n\n        AnonAuxiliaries memory anonAuxiliaries;\n        anonAuxiliaries.d = uint256(keccak256(abi.encode(statementHash, proof.A, proof.S, proof.P, proof.Q, proof.U, proof.V, proof.X, proof.Y))).mod();\n        anonAuxiliaries.w = uint256(keccak256(abi.encode(anonAuxiliaries.d, proof.CLnG, proof.CRnG, proof.C_0G, proof.y_0G, proof.C_XG, proof.y_XG, proof.DG, proof.gG))).mod();\n        anonAuxiliaries.m = proof.f.length / 2;\n        anonAuxiliaries.N = 2 ** anonAuxiliaries.m;\n        anonAuxiliaries.f = new uint256[2][](2 * anonAuxiliaries.m);\n        for (uint256 i = 0; i < 2 * anonAuxiliaries.m; i++) {\n            anonAuxiliaries.f[i][1] = proof.f[i];\n            anonAuxiliaries.f[i][0] = anonAuxiliaries.w.sub(proof.f[i]);\n        }\n\n        for (uint256 i = 0; i < 2 * anonAuxiliaries.m; i++) {\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[i], anonAuxiliaries.f[i][0]));\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(hs[i], anonAuxiliaries.f[i][1]));\n        }\n        require(eq(add(mul(proof.Q, anonAuxiliaries.w), proof.P), add(anonAuxiliaries.temp, mul(h, proof.z_P))), \"Recovery failure for Q^w * P.\");\n\n        anonAuxiliaries.temp = G1Point(0, 0);\n        for (uint256 i = 0; i < 2 * anonAuxiliaries.m; i++) { // danger... gs and hs need to be big enough.\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(gs[i], anonAuxiliaries.f[i][0].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[i][0]))));\n            anonAuxiliaries.temp = add(anonAuxiliaries.temp, mul(hs[i], anonAuxiliaries.f[i][1].mul(anonAuxiliaries.w.sub(anonAuxiliaries.f[i][1]))));\n        }\n        require(eq(add(mul(proof.U, anonAuxiliaries.w), proof.V), add(anonAuxiliaries.temp, mul(h, proof.z_U))), \"Recovery failure for U^w * V.\");\n\n        anonAuxiliaries.temp = add(mul(gs[0], anonAuxiliaries.f[0][0].mul(anonAuxiliaries.f[anonAuxiliaries.m][0])), mul(hs[0], anonAuxiliaries.f[0][1].mul(anonAuxiliaries.f[anonAuxiliaries.m][1])));\n        require(eq(add(mul(proof.Y, anonAuxiliaries.w), proof.X), add(anonAuxiliaries.temp, mul(h, proof.z_X))), \"Recovery failure for Y^w * X.\");\n\n        anonAuxiliaries.poly = assemblePolynomials(anonAuxiliaries.f);\n\n        anonAuxiliaries.CR = assembleConvolutions(anonAuxiliaries.poly, statement.C);\n        anonAuxiliaries.yR = assembleConvolutions(anonAuxiliaries.poly, statement.y);\n        for (uint256 j = 0; j < anonAuxiliaries.N; j++) {\n            anonAuxiliaries.CLnR = add(anonAuxiliaries.CLnR, mul(statement.CLn[j], anonAuxiliaries.poly[j][0]));\n            anonAuxiliaries.CRnR = add(anonAuxiliaries.CRnR, mul(statement.CRn[j], anonAuxiliaries.poly[j][0]));\n        }\n        anonAuxiliaries.dPow = 1;\n        for (uint256 j = 0; j < anonAuxiliaries.N; j++) {\n            anonAuxiliaries.C_XR = add(anonAuxiliaries.C_XR, mul(anonAuxiliaries.CR[j / 2][j % 2], anonAuxiliaries.dPow));\n            anonAuxiliaries.y_XR = add(anonAuxiliaries.y_XR, mul(anonAuxiliaries.yR[j / 2][j % 2], anonAuxiliaries.dPow));\n            if (j > 0) {\n                anonAuxiliaries.dPow = anonAuxiliaries.dPow.mul(anonAuxiliaries.d);\n            }\n        }\n        anonAuxiliaries.wPow = 1;\n        for (uint256 i = 0; i < anonAuxiliaries.m; i++) {\n            anonAuxiliaries.CLnR = add(anonAuxiliaries.CLnR, mul(proof.CLnG[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CRnR = add(anonAuxiliaries.CRnR, mul(proof.CRnG[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.CR[0][0] = add(anonAuxiliaries.CR[0][0], mul(proof.C_0G[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.yR[0][0] = add(anonAuxiliaries.yR[0][0], mul(proof.y_0G[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.C_XR = add(anonAuxiliaries.C_XR, mul(proof.C_XG[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.y_XR = add(anonAuxiliaries.y_XR, mul(proof.y_XG[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.DR = add(anonAuxiliaries.DR, mul(proof.DG[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.gR = add(anonAuxiliaries.gR, mul(proof.gG[i], anonAuxiliaries.wPow.neg()));\n            anonAuxiliaries.wPow = anonAuxiliaries.wPow.mul(anonAuxiliaries.w);\n        }\n        anonAuxiliaries.gR = add(anonAuxiliaries.gR, mul(g, anonAuxiliaries.wPow));\n        anonAuxiliaries.DR = add(anonAuxiliaries.DR, mul(statement.D, anonAuxiliaries.wPow));\n\n        ZetherAuxiliaries memory zetherAuxiliaries;\n        zetherAuxiliaries.y = uint256(keccak256(abi.encode(anonAuxiliaries.w, proof.CPrime, proof.DPrime, proof.CLnPrime, proof.CRnPrime))).mod();\n        zetherAuxiliaries.ys = powers(zetherAuxiliaries.y);\n        zetherAuxiliaries.z = uint256(keccak256(abi.encode(zetherAuxiliaries.y))).mod();\n        zetherAuxiliaries.zs = [zetherAuxiliaries.z.exp(2), zetherAuxiliaries.z.exp(3)];        \n        zetherAuxiliaries.zSum = zetherAuxiliaries.zs[0].add(zetherAuxiliaries.zs[1]).mul(zetherAuxiliaries.z);\n        zetherAuxiliaries.k = sumScalars(zetherAuxiliaries.ys).mul(zetherAuxiliaries.z.sub(zetherAuxiliaries.zs[0])).sub(zetherAuxiliaries.zSum.mul(2 ** (m / 2)).sub(zetherAuxiliaries.zSum));\n        zetherAuxiliaries.t = proof.tHat.sub(zetherAuxiliaries.k);\n        for (uint256 i = 0; i < m / 2; i++) {\n            zetherAuxiliaries.twoTimesZSquared[i] = zetherAuxiliaries.zs[0].mul(2 ** i);\n            zetherAuxiliaries.twoTimesZSquared[i + m / 2] = zetherAuxiliaries.zs[1].mul(2 ** i);\n        }\n\n        zetherAuxiliaries.x = uint256(keccak256(abi.encode(zetherAuxiliaries.z, proof.tCommits))).mod();\n        zetherAuxiliaries.tEval = add(mul(proof.tCommits[0], zetherAuxiliaries.x), mul(proof.tCommits[1], zetherAuxiliaries.x.mul(zetherAuxiliaries.x))); // replace with \"commit\"?\n\n        SigmaAuxiliaries memory sigmaAuxiliaries;\n        sigmaAuxiliaries.A_y = add(mul(anonAuxiliaries.gR, proof.s_sk), mul(anonAuxiliaries.yR[0][0], proof.c.neg()));\n        sigmaAuxiliaries.A_D = add(mul(g, proof.s_r), mul(statement.D, proof.c.neg())); // add(mul(anonAuxiliaries.gR, proof.s_r), mul(anonAuxiliaries.DR, proof.c.neg()));\n        sigmaAuxiliaries.gEpoch = mapInto(\"Zether\", statement.epoch);\n        sigmaAuxiliaries.A_u = add(mul(sigmaAuxiliaries.gEpoch, proof.s_sk), mul(statement.u, proof.c.neg()));\n        sigmaAuxiliaries.A_X = add(mul(anonAuxiliaries.y_XR, proof.s_r), mul(anonAuxiliaries.C_XR, proof.c.neg()));\n        sigmaAuxiliaries.c_commit = add(mul(add(mul(add(anonAuxiliaries.DR, proof.DPrime), proof.s_sk), mul(add(anonAuxiliaries.CR[0][0], proof.CPrime), proof.c.neg())), zetherAuxiliaries.zs[0]), mul(add(mul(add(anonAuxiliaries.CRnR, proof.CRnPrime), proof.s_sk), mul(add(anonAuxiliaries.CLnR, proof.CLnPrime), proof.c.neg())), zetherAuxiliaries.zs[1]));\n        sigmaAuxiliaries.A_t = add(mul(add(add(mul(g, zetherAuxiliaries.t), mul(h, proof.tauX)), neg(zetherAuxiliaries.tEval)), proof.c.mul(anonAuxiliaries.wPow)), sigmaAuxiliaries.c_commit);\n        sigmaAuxiliaries.A_C0 = add(mul(g, proof.s_vTransfer), add(mul(anonAuxiliaries.DR, proof.s_sk), mul(anonAuxiliaries.CR[0][0], proof.c.neg())));\n        sigmaAuxiliaries.A_CLn = add(mul(g, proof.s_vDiff), add(mul(anonAuxiliaries.CRnR, proof.s_sk), mul(anonAuxiliaries.CLnR, proof.c.neg())));\n        sigmaAuxiliaries.A_CPrime = add(mul(h, proof.s_nuTransfer), add(mul(proof.DPrime, proof.s_sk), mul(proof.CPrime, proof.c.neg())));\n        sigmaAuxiliaries.A_CLnPrime = add(mul(h, proof.s_nuDiff), add(mul(proof.CRnPrime, proof.s_sk), mul(proof.CLnPrime, proof.c.neg())));\n\n        sigmaAuxiliaries.c = uint256(keccak256(abi.encode(zetherAuxiliaries.x, sigmaAuxiliaries.A_y, sigmaAuxiliaries.A_D, sigmaAuxiliaries.A_u, sigmaAuxiliaries.A_X, sigmaAuxiliaries.A_t, sigmaAuxiliaries.A_C0, sigmaAuxiliaries.A_CLn, sigmaAuxiliaries.A_CPrime, sigmaAuxiliaries.A_CLnPrime))).mod();\n        require(sigmaAuxiliaries.c == proof.c, \"Sigma protocol challenge equality failure.\");\n\n        IPAuxiliaries memory ipAuxiliaries;\n        ipAuxiliaries.o = uint256(keccak256(abi.encode(sigmaAuxiliaries.c))).mod();\n        ipAuxiliaries.u_x = mul(g, ipAuxiliaries.o);\n        ipAuxiliaries.hPrimes = hadamardInv(hs, zetherAuxiliaries.ys);\n        ipAuxiliaries.hExp = addVectors(times(zetherAuxiliaries.ys, zetherAuxiliaries.z), zetherAuxiliaries.twoTimesZSquared);\n        ipAuxiliaries.P = add(add(add(proof.A, mul(proof.S, zetherAuxiliaries.x)), mul(sumPoints(gs), zetherAuxiliaries.z.neg())), commit(ipAuxiliaries.hPrimes, ipAuxiliaries.hExp));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(h, proof.mu.neg()));\n        ipAuxiliaries.P = add(ipAuxiliaries.P, mul(ipAuxiliaries.u_x, proof.tHat));\n\n        // begin inner product verification\n        InnerProductProof memory ipProof = proof.ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.o = uint256(keccak256(abi.encode(ipAuxiliaries.o, ipProof.ls[i], ipProof.rs[i]))).mod();\n            ipAuxiliaries.challenges[i] = ipAuxiliaries.o; // overwrites value\n            uint256 xInv = ipAuxiliaries.o.inv();\n            ipAuxiliaries.P = add(ipAuxiliaries.P, add(mul(ipProof.ls[i], ipAuxiliaries.o.exp(2)), mul(ipProof.rs[i], xInv.exp(2))));\n        }\n\n        ipAuxiliaries.otherExponents[0] = 1;\n        for (uint256 i = 0; i < n; i++) {\n            ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].mul(ipAuxiliaries.challenges[i]);\n        }\n        bool[m] memory bitSet;\n        ipAuxiliaries.otherExponents[0] = ipAuxiliaries.otherExponents[0].inv();\n        for (uint256 i = 0; i < m/2; ++i) {\n            for (uint256 j = 0; (1 << j) + i < m; ++j) {\n                uint256 i1 = i + (1 << j);\n                if (!bitSet[i1]) {\n                    uint256 temp = ipAuxiliaries.challenges[n - 1 - j].mul(ipAuxiliaries.challenges[n - 1 - j]);\n                    ipAuxiliaries.otherExponents[i1] = ipAuxiliaries.otherExponents[i].mul(temp);\n                    bitSet[i1] = true;\n                }\n            }\n        }\n\n        G1Point memory gTemp;\n        G1Point memory hTemp;\n        for (uint256 i = 0; i < m; i++) {\n            gTemp = add(gTemp, mul(gs[i], ipAuxiliaries.otherExponents[i]));\n            hTemp = add(hTemp, mul(ipAuxiliaries.hPrimes[i], ipAuxiliaries.otherExponents[m - 1 - i]));\n        }\n        G1Point memory cProof = add(add(mul(gTemp, ipProof.a), mul(hTemp, ipProof.b)), mul(ipAuxiliaries.u_x, ipProof.a.mul(ipProof.b)));\n        require(eq(ipAuxiliaries.P, cProof), \"Inner product equality check failure.\");\n\n        return true;\n    }\n\n    function assemblePolynomials(uint256[2][] memory f) internal view returns (uint256[2][] memory result) {\n        uint256 m = f.length / 2;\n        uint256 N = 2 ** m;\n        result = new uint256[2][](N);\n        for (uint256 i = 0; i < 2; i++) {\n            uint256[] memory half = recursivePolynomials(i * m, (i + 1) * m, 1, f);\n            for (uint256 j = 0; j < N; j++) {\n                result[j][i] = half[j];\n            }\n        }\n    }\n\n    function recursivePolynomials(uint256 baseline, uint256 current, uint256 accum, uint256[2][] memory f) internal view returns (uint256[] memory result) {\n        // have to do a bunch of re-allocating because solidity won't let me have something which is internal and also modifies (internal) state. (?)\n        uint256 size = 2 ** (current - baseline); // size is at least 2...\n        result = new uint256[](size);\n\n        if (current == baseline) {\n            result[0] = accum;\n            return result;\n        }\n        current = current - 1;\n\n        uint256[] memory left = recursivePolynomials(baseline, current, accum.mul(f[current][0]), f);\n        uint256[] memory right = recursivePolynomials(baseline, current, accum.mul(f[current][1]), f);\n        for (uint256 i = 0; i < size / 2; i++) {\n            result[i] = left[i];\n            result[i + size / 2] = right[i];\n        }\n    }\n\n    function assembleConvolutions(uint256[2][] memory exponent, G1Point[] memory base) internal view returns (G1Point[2][] memory result) {\n        // exponent is two \"rows\" (actually columns).\n        // will return two rows, each of half the length of the exponents;\n        // namely, we will return the Hadamards of \"base\" by the even circular shifts of \"exponent\"'s rows.\n        uint256 size = exponent.length;\n        uint256 half = size / 2;\n        result = new G1Point[2][](half); // assuming that this is necessary even when return is declared up top\n\n        G1Point[] memory base_fft = fft(base, false);\n\n        uint256[] memory exponent_fft = new uint256[](size);\n        for (uint256 i = 0; i < 2; i++) {\n            for (uint256 j = 0; j < size; j++) {\n                exponent_fft[j] = exponent[(size - j) % size][i]; // convolutional flip plus copy\n            }\n\n            exponent_fft = fft(exponent_fft);\n            G1Point[] memory inverse_fft = new G1Point[](half);\n            uint256 compensation = 2;\n            compensation = compensation.inv();\n            for (uint256 j = 0; j < half; j++) { // Hadamard\n                inverse_fft[j] = mul(add(mul(base_fft[j], exponent_fft[j]), mul(base_fft[j + half], exponent_fft[j + half])), compensation);\n            }\n\n            inverse_fft = fft(inverse_fft, true);\n            for (uint256 j = 0; j < half; j++) {\n                result[j][i] = inverse_fft[j];\n            }\n        }\n    }\n\n    function fft(G1Point[] memory input, bool inverse) internal view returns (G1Point[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256 compensation = 1;\n        if (inverse) {\n            omega = omega.inv();\n            compensation = 2;\n        }\n        compensation = compensation.inv();\n        G1Point[] memory even = fft(extract(input, 0), inverse);\n        G1Point[] memory odd = fft(extract(input, 1), inverse);\n        uint256 omega_run = 1;\n        result = new G1Point[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            G1Point memory temp = mul(odd[i], omega_run);\n            result[i] = mul(add(even[i], temp), compensation);\n            result[i + size / 2] = mul(add(even[i], neg(temp)), compensation);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(G1Point[] memory input, uint256 parity) internal pure returns (G1Point[] memory result) {\n        result = new G1Point[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function fft(uint256[] memory input) internal view returns (uint256[] memory result) {\n        uint256 size = input.length;\n        if (size == 1) {\n            return input;\n        }\n        require(size % 2 == 0, \"Input size is not a power of 2!\");\n\n        uint256 omega = UNITY.exp(2**28 / size);\n        uint256[] memory even = fft(extract(input, 0));\n        uint256[] memory odd = fft(extract(input, 1));\n        uint256 omega_run = 1;\n        result = new uint256[](size);\n        for (uint256 i = 0; i < size / 2; i++) {\n            uint256 temp = odd[i].mul(omega_run);\n            result[i] = even[i].add(temp);\n            result[i + size / 2] = even[i].sub(temp);\n            omega_run = omega_run.mul(omega);\n        }\n    }\n\n    function extract(uint256[] memory input, uint256 parity) internal pure returns (uint256[] memory result) {\n        result = new uint256[](input.length / 2);\n        for (uint256 i = 0; i < input.length / 2; i++) {\n            result[i] = input[2 * i + parity];\n        }\n    }\n\n    function unserialize(bytes memory arr) internal pure returns (ZetherProof memory proof) {\n        proof.A = G1Point(slice(arr, 0), slice(arr, 32));\n        proof.S = G1Point(slice(arr, 64), slice(arr, 96));\n        proof.P = G1Point(slice(arr, 128), slice(arr, 160));\n        proof.Q = G1Point(slice(arr, 192), slice(arr, 224));\n        proof.U = G1Point(slice(arr, 256), slice(arr, 288));\n        proof.V = G1Point(slice(arr, 320), slice(arr, 352));\n        proof.X = G1Point(slice(arr, 384), slice(arr, 416));\n        proof.Y = G1Point(slice(arr, 448), slice(arr, 480));\n\n        uint256 m = (arr.length - 2144) / 576;\n        proof.CLnG = new G1Point[](m);\n        proof.CRnG = new G1Point[](m);\n        proof.C_0G = new G1Point[](m);\n        proof.y_0G = new G1Point[](m);\n        proof.C_XG = new G1Point[](m);\n        proof.y_XG = new G1Point[](m);\n        proof.DG = new G1Point[](m);\n        proof.gG = new G1Point[](m);\n        proof.f = new uint256[](2 * m);\n        for (uint256 i = 0; i < m; i++) {\n            proof.CLnG[i] = G1Point(slice(arr, 512 + i * 64), slice(arr, 544 + i * 64));\n            proof.CRnG[i] = G1Point(slice(arr, 512 + (m + i) * 64), slice(arr, 544 + (m + i) * 64));\n            proof.C_0G[i] = G1Point(slice(arr, 512 + m * 128 + i * 64), slice(arr, 544 + m * 128 + i * 64));\n            proof.y_0G[i] = G1Point(slice(arr, 512 + m * 192 + i * 64), slice(arr, 544 + m * 192 + i * 64));\n            proof.C_XG[i] = G1Point(slice(arr, 512 + m * 256 + i * 64), slice(arr, 544 + m * 256 + i * 64));\n            proof.y_XG[i] = G1Point(slice(arr, 512 + m * 320 + i * 64), slice(arr, 544 + m * 320 + i * 64));\n            proof.DG[i] = G1Point(slice(arr, 512 + m * 384 + i * 64), slice(arr, 544 + m * 384 + i * 64));\n            proof.gG[i] = G1Point(slice(arr, 512 + m * 448 + i * 64), slice(arr, 544 + m * 448 + i * 64));\n            proof.f[i] = slice(arr, 512 + m * 512 + i * 32);\n            proof.f[i + m] = slice(arr, 512 + m * 544 + i * 32);\n        }\n        uint256 starting = m * 576;\n        proof.z_P = slice(arr, 512 + starting);\n        proof.z_U = slice(arr, 544 + starting);\n        proof.z_X = slice(arr, 576 + starting);\n\n        proof.CPrime = G1Point(slice(arr, 608 + starting), slice(arr, 640 + starting));\n        proof.DPrime = G1Point(slice(arr, 672 + starting), slice(arr, 704 + starting));\n        proof.CLnPrime = G1Point(slice(arr, 736 + starting), slice(arr, 768 + starting));\n        proof.CRnPrime = G1Point(slice(arr, 800 + starting), slice(arr, 832 + starting));\n\n        proof.tCommits = [G1Point(slice(arr, 864 + starting), slice(arr, 896 + starting)), G1Point(slice(arr, 928 + starting), slice(arr, 960 + starting))];\n        proof.tHat = slice(arr, 992 + starting);\n        proof.tauX = slice(arr, 1024 + starting);\n        proof.mu = slice(arr, 1056 + starting);\n\n        proof.c = slice(arr, 1088 + starting);\n        proof.s_sk = slice(arr, 1120 + starting);\n        proof.s_r = slice(arr, 1152 + starting);\n        proof.s_vTransfer = slice(arr, 1184 + starting);\n        proof.s_vDiff = slice(arr, 1216 + starting);\n        proof.s_nuTransfer = slice(arr, 1248 + starting);\n        proof.s_nuDiff = slice(arr, 1280 + starting);\n\n        InnerProductProof memory ipProof;\n        for (uint256 i = 0; i < n; i++) {\n            ipProof.ls[i] = G1Point(slice(arr, 1312 + starting + i * 64), slice(arr, 1344 + starting + i * 64));\n            ipProof.rs[i] = G1Point(slice(arr, 1312 + starting + (n + i) * 64), slice(arr, 1344 + starting + (n + i) * 64));\n        }\n        ipProof.a = slice(arr, 1312 + starting + n * 128);\n        ipProof.b = slice(arr, 1344 + starting + n * 128);\n        proof.ipProof = ipProof;\n\n        return proof;\n    }\n\n    function addVectors(uint256[m] memory a, uint256[m] memory b) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = a[i].add(b[i]);\n        }\n    }\n\n    function hadamardInv(G1Point[] memory ps, uint256[m] memory ss) internal view returns (G1Point[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = mul(ps[i], ss[i].inv());\n        }\n    }\n\n    function sumScalars(uint256[m] memory ys) internal pure returns (uint256 result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = result.add(ys[i]);\n        }\n    }\n\n    function sumPoints(G1Point[] memory ps) internal view returns (G1Point memory sum) {\n        for (uint256 i = 0; i < m; i++) {\n            sum = add(sum, ps[i]);\n        }\n    }\n\n    function commit(G1Point[m] memory ps, uint256[m] memory ss) internal view returns (G1Point memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result = add(result, mul(ps[i], ss[i]));\n        }\n    }\n\n    function powers(uint256 base) internal pure returns (uint256[m] memory powers) {\n        powers[0] = 1;\n        powers[1] = base;\n        for (uint256 i = 2; i < m; i++) {\n            powers[i] = powers[i - 1].mul(base);\n        }\n    }\n\n    function times(uint256[m] memory v, uint256 x) internal pure returns (uint256[m] memory result) {\n        for (uint256 i = 0; i < m; i++) {\n            result[i] = v[i].mul(x);\n        }\n    }\n\n    function slice(bytes memory input, uint256 start) internal pure returns (uint256 result) { // extracts exactly 32 bytes\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(add(add(input, 0x20), start))) // why only 0x20?\n            result := mload(m)\n        }\n    }\n\n    struct G1Point {\n        uint256 x;\n        uint256 y;\n    }\n\n    function add(G1Point memory p1, G1Point memory p2) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p1))\n            mstore(add(m, 0x20), mload(add(p1, 0x20)))\n            mstore(add(m, 0x40), mload(p2))\n            mstore(add(m, 0x60), mload(add(p2, 0x20)))\n            if iszero(staticcall(gas, 0x06, m, 0x80, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function mul(G1Point memory p, uint256 s) internal view returns (G1Point memory r) {\n        assembly {\n            let m := mload(0x40)\n            mstore(m, mload(p))\n            mstore(add(m, 0x20), mload(add(p, 0x20)))\n            mstore(add(m, 0x40), s)\n            if iszero(staticcall(gas, 0x07, m, 0x60, r, 0x40)) {\n                revert(0, 0)\n            }\n        }\n    }\n\n    function neg(G1Point memory p) internal pure returns (G1Point memory) {\n        return G1Point(p.x, FIELD_ORDER - (p.y % FIELD_ORDER)); // p.y should already be reduced mod P?\n    }\n\n    function eq(G1Point memory p1, G1Point memory p2) internal pure returns (bool) {\n        return p1.x == p2.x && p1.y == p2.y;\n    }\n\n    function fieldExp(uint256 base, uint256 exponent) internal view returns (uint256 output) { // warning: mod p, not q\n        uint256 order = FIELD_ORDER;\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x20)\n            mstore(add(m, 0x20), 0x20)\n            mstore(add(m, 0x40), 0x20)\n            mstore(add(m, 0x60), base)\n            mstore(add(m, 0x80), exponent)\n            mstore(add(m, 0xa0), order)\n            if iszero(staticcall(gas, 0x05, m, 0xc0, m, 0x20)) { // staticcall or call?\n                revert(0, 0)\n            }\n            output := mload(m)\n        }\n    }\n\n    function mapInto(uint256 seed) internal view returns (G1Point memory) {\n        uint256 y;\n        while (true) {\n            uint256 ySquared = fieldExp(seed, 3) + 3; // addmod instead of add: waste of gas, plus function overhead cost\n            y = fieldExp(ySquared, (FIELD_ORDER + 1) / 4);\n            if (fieldExp(y, 2) == ySquared) {\n                break;\n            }\n            seed += 1;\n        }\n        return G1Point(seed, y);\n    }\n\n    function mapInto(string memory input) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input))) % FIELD_ORDER);\n    }\n\n    function mapInto(string memory input, uint256 i) internal view returns (G1Point memory) {\n        return mapInto(uint256(keccak256(abi.encodePacked(input, i))) % FIELD_ORDER);\n    }\n}\n",
  "sourcePath": "/Users/benediamond/anonymous-zether/packages/protocol/contracts/ZetherVerifier.sol",
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-11-19T15:52:06.598Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}